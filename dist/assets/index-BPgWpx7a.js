(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const i of s)if(i.type==="childList")for(const a of i.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&r(a)}).observe(document,{childList:!0,subtree:!0});function t(s){const i={};return s.integrity&&(i.integrity=s.integrity),s.referrerPolicy&&(i.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?i.credentials="include":s.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function r(s){if(s.ep)return;s.ep=!0;const i=t(s);fetch(s.href,i)}})();var sw={exports:{}},Ip={},iw={exports:{}},Vt={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var fN;function fV(){if(fN)return Vt;fN=1;var n=Symbol.for("react.element"),e=Symbol.for("react.portal"),t=Symbol.for("react.fragment"),r=Symbol.for("react.strict_mode"),s=Symbol.for("react.profiler"),i=Symbol.for("react.provider"),a=Symbol.for("react.context"),o=Symbol.for("react.forward_ref"),l=Symbol.for("react.suspense"),u=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),h=Symbol.iterator;function f(A){return A===null||typeof A!="object"?null:(A=h&&A[h]||A["@@iterator"],typeof A=="function"?A:null)}var m={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},x=Object.assign,g={};function y(A,K,$){this.props=A,this.context=K,this.refs=g,this.updater=$||m}y.prototype.isReactComponent={},y.prototype.setState=function(A,K){if(typeof A!="object"&&typeof A!="function"&&A!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,A,K,"setState")},y.prototype.forceUpdate=function(A){this.updater.enqueueForceUpdate(this,A,"forceUpdate")};function v(){}v.prototype=y.prototype;function w(A,K,$){this.props=A,this.context=K,this.refs=g,this.updater=$||m}var I=w.prototype=new v;I.constructor=w,x(I,y.prototype),I.isPureReactComponent=!0;var T=Array.isArray,C=Object.prototype.hasOwnProperty,E={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};function M(A,K,$){var re,oe={},Y=null,ge=null;if(K!=null)for(re in K.ref!==void 0&&(ge=K.ref),K.key!==void 0&&(Y=""+K.key),K)C.call(K,re)&&!L.hasOwnProperty(re)&&(oe[re]=K[re]);var ye=arguments.length-2;if(ye===1)oe.children=$;else if(1<ye){for(var ve=Array(ye),Ce=0;Ce<ye;Ce++)ve[Ce]=arguments[Ce+2];oe.children=ve}if(A&&A.defaultProps)for(re in ye=A.defaultProps,ye)oe[re]===void 0&&(oe[re]=ye[re]);return{$$typeof:n,type:A,key:Y,ref:ge,props:oe,_owner:E.current}}function R(A,K){return{$$typeof:n,type:A.type,key:K,ref:A.ref,props:A.props,_owner:A._owner}}function z(A){return typeof A=="object"&&A!==null&&A.$$typeof===n}function X(A){var K={"=":"=0",":":"=2"};return"$"+A.replace(/[=:]/g,function($){return K[$]})}var U=/\/+/g;function G(A,K){return typeof A=="object"&&A!==null&&A.key!=null?X(""+A.key):K.toString(36)}function V(A,K,$,re,oe){var Y=typeof A;(Y==="undefined"||Y==="boolean")&&(A=null);var ge=!1;if(A===null)ge=!0;else switch(Y){case"string":case"number":ge=!0;break;case"object":switch(A.$$typeof){case n:case e:ge=!0}}if(ge)return ge=A,oe=oe(ge),A=re===""?"."+G(ge,0):re,T(oe)?($="",A!=null&&($=A.replace(U,"$&/")+"/"),V(oe,K,$,"",function(Ce){return Ce})):oe!=null&&(z(oe)&&(oe=R(oe,$+(!oe.key||ge&&ge.key===oe.key?"":(""+oe.key).replace(U,"$&/")+"/")+A)),K.push(oe)),1;if(ge=0,re=re===""?".":re+":",T(A))for(var ye=0;ye<A.length;ye++){Y=A[ye];var ve=re+G(Y,ye);ge+=V(Y,K,$,ve,oe)}else if(ve=f(A),typeof ve=="function")for(A=ve.call(A),ye=0;!(Y=A.next()).done;)Y=Y.value,ve=re+G(Y,ye++),ge+=V(Y,K,$,ve,oe);else if(Y==="object")throw K=String(A),Error("Objects are not valid as a React child (found: "+(K==="[object Object]"?"object with keys {"+Object.keys(A).join(", ")+"}":K)+"). If you meant to render a collection of children, use an array instead.");return ge}function Z(A,K,$){if(A==null)return A;var re=[],oe=0;return V(A,re,"","",function(Y){return K.call($,Y,oe++)}),re}function J(A){if(A._status===-1){var K=A._result;K=K(),K.then(function($){(A._status===0||A._status===-1)&&(A._status=1,A._result=$)},function($){(A._status===0||A._status===-1)&&(A._status=2,A._result=$)}),A._status===-1&&(A._status=0,A._result=K)}if(A._status===1)return A._result.default;throw A._result}var te={current:null},O={transition:null},Q={ReactCurrentDispatcher:te,ReactCurrentBatchConfig:O,ReactCurrentOwner:E};return Vt.Children={map:Z,forEach:function(A,K,$){Z(A,function(){K.apply(this,arguments)},$)},count:function(A){var K=0;return Z(A,function(){K++}),K},toArray:function(A){return Z(A,function(K){return K})||[]},only:function(A){if(!z(A))throw Error("React.Children.only expected to receive a single React element child.");return A}},Vt.Component=y,Vt.Fragment=t,Vt.Profiler=s,Vt.PureComponent=w,Vt.StrictMode=r,Vt.Suspense=l,Vt.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Q,Vt.cloneElement=function(A,K,$){if(A==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+A+".");var re=x({},A.props),oe=A.key,Y=A.ref,ge=A._owner;if(K!=null){if(K.ref!==void 0&&(Y=K.ref,ge=E.current),K.key!==void 0&&(oe=""+K.key),A.type&&A.type.defaultProps)var ye=A.type.defaultProps;for(ve in K)C.call(K,ve)&&!L.hasOwnProperty(ve)&&(re[ve]=K[ve]===void 0&&ye!==void 0?ye[ve]:K[ve])}var ve=arguments.length-2;if(ve===1)re.children=$;else if(1<ve){ye=Array(ve);for(var Ce=0;Ce<ve;Ce++)ye[Ce]=arguments[Ce+2];re.children=ye}return{$$typeof:n,type:A.type,key:oe,ref:Y,props:re,_owner:ge}},Vt.createContext=function(A){return A={$$typeof:a,_currentValue:A,_currentValue2:A,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},A.Provider={$$typeof:i,_context:A},A.Consumer=A},Vt.createElement=M,Vt.createFactory=function(A){var K=M.bind(null,A);return K.type=A,K},Vt.createRef=function(){return{current:null}},Vt.forwardRef=function(A){return{$$typeof:o,render:A}},Vt.isValidElement=z,Vt.lazy=function(A){return{$$typeof:d,_payload:{_status:-1,_result:A},_init:J}},Vt.memo=function(A,K){return{$$typeof:u,type:A,compare:K===void 0?null:K}},Vt.startTransition=function(A){var K=O.transition;O.transition={};try{A()}finally{O.transition=K}},Vt.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},Vt.useCallback=function(A,K){return te.current.useCallback(A,K)},Vt.useContext=function(A){return te.current.useContext(A)},Vt.useDebugValue=function(){},Vt.useDeferredValue=function(A){return te.current.useDeferredValue(A)},Vt.useEffect=function(A,K){return te.current.useEffect(A,K)},Vt.useId=function(){return te.current.useId()},Vt.useImperativeHandle=function(A,K,$){return te.current.useImperativeHandle(A,K,$)},Vt.useInsertionEffect=function(A,K){return te.current.useInsertionEffect(A,K)},Vt.useLayoutEffect=function(A,K){return te.current.useLayoutEffect(A,K)},Vt.useMemo=function(A,K){return te.current.useMemo(A,K)},Vt.useReducer=function(A,K,$){return te.current.useReducer(A,K,$)},Vt.useRef=function(A){return te.current.useRef(A)},Vt.useState=function(A){return te.current.useState(A)},Vt.useSyncExternalStore=function(A,K,$){return te.current.useSyncExternalStore(A,K,$)},Vt.useTransition=function(){return te.current.useTransition()},Vt.version="18.2.0",Vt}var mN;function M2(){return mN||(mN=1,iw.exports=fV()),iw.exports}/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var gN;function mV(){if(gN)return Ip;gN=1;var n=M2(),e=Symbol.for("react.element"),t=Symbol.for("react.fragment"),r=Object.prototype.hasOwnProperty,s=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,i={key:!0,ref:!0,__self:!0,__source:!0};function a(o,l,u){var d,h={},f=null,m=null;u!==void 0&&(f=""+u),l.key!==void 0&&(f=""+l.key),l.ref!==void 0&&(m=l.ref);for(d in l)r.call(l,d)&&!i.hasOwnProperty(d)&&(h[d]=l[d]);if(o&&o.defaultProps)for(d in l=o.defaultProps,l)h[d]===void 0&&(h[d]=l[d]);return{$$typeof:e,type:o,key:f,ref:m,props:h,_owner:s.current}}return Ip.Fragment=t,Ip.jsx=a,Ip.jsxs=a,Ip}var yN;function gV(){return yN||(yN=1,sw.exports=mV()),sw.exports}var Qp=gV(),xy={},aw={exports:{}},Cs={},ow={exports:{}},lw={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var bN;function yV(){return bN||(bN=1,(function(n){function e(O,Q){var A=O.length;O.push(Q);e:for(;0<A;){var K=A-1>>>1,$=O[K];if(0<s($,Q))O[K]=Q,O[A]=$,A=K;else break e}}function t(O){return O.length===0?null:O[0]}function r(O){if(O.length===0)return null;var Q=O[0],A=O.pop();if(A!==Q){O[0]=A;e:for(var K=0,$=O.length,re=$>>>1;K<re;){var oe=2*(K+1)-1,Y=O[oe],ge=oe+1,ye=O[ge];if(0>s(Y,A))ge<$&&0>s(ye,Y)?(O[K]=ye,O[ge]=A,K=ge):(O[K]=Y,O[oe]=A,K=oe);else if(ge<$&&0>s(ye,A))O[K]=ye,O[ge]=A,K=ge;else break e}}return Q}function s(O,Q){var A=O.sortIndex-Q.sortIndex;return A!==0?A:O.id-Q.id}if(typeof performance=="object"&&typeof performance.now=="function"){var i=performance;n.unstable_now=function(){return i.now()}}else{var a=Date,o=a.now();n.unstable_now=function(){return a.now()-o}}var l=[],u=[],d=1,h=null,f=3,m=!1,x=!1,g=!1,y=typeof setTimeout=="function"?setTimeout:null,v=typeof clearTimeout=="function"?clearTimeout:null,w=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function I(O){for(var Q=t(u);Q!==null;){if(Q.callback===null)r(u);else if(Q.startTime<=O)r(u),Q.sortIndex=Q.expirationTime,e(l,Q);else break;Q=t(u)}}function T(O){if(g=!1,I(O),!x)if(t(l)!==null)x=!0,J(C);else{var Q=t(u);Q!==null&&te(T,Q.startTime-O)}}function C(O,Q){x=!1,g&&(g=!1,v(M),M=-1),m=!0;var A=f;try{for(I(Q),h=t(l);h!==null&&(!(h.expirationTime>Q)||O&&!X());){var K=h.callback;if(typeof K=="function"){h.callback=null,f=h.priorityLevel;var $=K(h.expirationTime<=Q);Q=n.unstable_now(),typeof $=="function"?h.callback=$:h===t(l)&&r(l),I(Q)}else r(l);h=t(l)}if(h!==null)var re=!0;else{var oe=t(u);oe!==null&&te(T,oe.startTime-Q),re=!1}return re}finally{h=null,f=A,m=!1}}var E=!1,L=null,M=-1,R=5,z=-1;function X(){return!(n.unstable_now()-z<R)}function U(){if(L!==null){var O=n.unstable_now();z=O;var Q=!0;try{Q=L(!0,O)}finally{Q?G():(E=!1,L=null)}}else E=!1}var G;if(typeof w=="function")G=function(){w(U)};else if(typeof MessageChannel<"u"){var V=new MessageChannel,Z=V.port2;V.port1.onmessage=U,G=function(){Z.postMessage(null)}}else G=function(){y(U,0)};function J(O){L=O,E||(E=!0,G())}function te(O,Q){M=y(function(){O(n.unstable_now())},Q)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(O){O.callback=null},n.unstable_continueExecution=function(){x||m||(x=!0,J(C))},n.unstable_forceFrameRate=function(O){0>O||125<O?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):R=0<O?Math.floor(1e3/O):5},n.unstable_getCurrentPriorityLevel=function(){return f},n.unstable_getFirstCallbackNode=function(){return t(l)},n.unstable_next=function(O){switch(f){case 1:case 2:case 3:var Q=3;break;default:Q=f}var A=f;f=Q;try{return O()}finally{f=A}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(O,Q){switch(O){case 1:case 2:case 3:case 4:case 5:break;default:O=3}var A=f;f=O;try{return Q()}finally{f=A}},n.unstable_scheduleCallback=function(O,Q,A){var K=n.unstable_now();switch(typeof A=="object"&&A!==null?(A=A.delay,A=typeof A=="number"&&0<A?K+A:K):A=K,O){case 1:var $=-1;break;case 2:$=250;break;case 5:$=1073741823;break;case 4:$=1e4;break;default:$=5e3}return $=A+$,O={id:d++,callback:Q,priorityLevel:O,startTime:A,expirationTime:$,sortIndex:-1},A>K?(O.sortIndex=A,e(u,O),t(l)===null&&O===t(u)&&(g?(v(M),M=-1):g=!0,te(T,A-K))):(O.sortIndex=$,e(l,O),x||m||(x=!0,J(C))),O},n.unstable_shouldYield=X,n.unstable_wrapCallback=function(O){var Q=f;return function(){var A=f;f=Q;try{return O.apply(this,arguments)}finally{f=A}}}})(lw)),lw}var xN;function bV(){return xN||(xN=1,ow.exports=yV()),ow.exports}/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var vN;function xV(){if(vN)return Cs;vN=1;var n=M2(),e=bV();function t(c){for(var p="https://reactjs.org/docs/error-decoder.html?invariant="+c,b=1;b<arguments.length;b++)p+="&args[]="+encodeURIComponent(arguments[b]);return"Minified React error #"+c+"; visit "+p+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var r=new Set,s={};function i(c,p){a(c,p),a(c+"Capture",p)}function a(c,p){for(s[c]=p,c=0;c<p.length;c++)r.add(p[c])}var o=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),l=Object.prototype.hasOwnProperty,u=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,d={},h={};function f(c){return l.call(h,c)?!0:l.call(d,c)?!1:u.test(c)?h[c]=!0:(d[c]=!0,!1)}function m(c,p,b,S){if(b!==null&&b.type===0)return!1;switch(typeof p){case"function":case"symbol":return!0;case"boolean":return S?!1:b!==null?!b.acceptsBooleans:(c=c.toLowerCase().slice(0,5),c!=="data-"&&c!=="aria-");default:return!1}}function x(c,p,b,S){if(p===null||typeof p>"u"||m(c,p,b,S))return!0;if(S)return!1;if(b!==null)switch(b.type){case 3:return!p;case 4:return p===!1;case 5:return isNaN(p);case 6:return isNaN(p)||1>p}return!1}function g(c,p,b,S,k,_,D){this.acceptsBooleans=p===2||p===3||p===4,this.attributeName=S,this.attributeNamespace=k,this.mustUseProperty=b,this.propertyName=c,this.type=p,this.sanitizeURL=_,this.removeEmptyString=D}var y={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(c){y[c]=new g(c,0,!1,c,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(c){var p=c[0];y[p]=new g(p,1,!1,c[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(c){y[c]=new g(c,2,!1,c.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(c){y[c]=new g(c,2,!1,c,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(c){y[c]=new g(c,3,!1,c.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(c){y[c]=new g(c,3,!0,c,null,!1,!1)}),["capture","download"].forEach(function(c){y[c]=new g(c,4,!1,c,null,!1,!1)}),["cols","rows","size","span"].forEach(function(c){y[c]=new g(c,6,!1,c,null,!1,!1)}),["rowSpan","start"].forEach(function(c){y[c]=new g(c,5,!1,c.toLowerCase(),null,!1,!1)});var v=/[\-:]([a-z])/g;function w(c){return c[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(c){var p=c.replace(v,w);y[p]=new g(p,1,!1,c,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(c){var p=c.replace(v,w);y[p]=new g(p,1,!1,c,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(c){var p=c.replace(v,w);y[p]=new g(p,1,!1,c,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(c){y[c]=new g(c,1,!1,c.toLowerCase(),null,!1,!1)}),y.xlinkHref=new g("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(c){y[c]=new g(c,1,!1,c.toLowerCase(),null,!0,!0)});function I(c,p,b,S){var k=y.hasOwnProperty(p)?y[p]:null;(k!==null?k.type!==0:S||!(2<p.length)||p[0]!=="o"&&p[0]!=="O"||p[1]!=="n"&&p[1]!=="N")&&(x(p,b,k,S)&&(b=null),S||k===null?f(p)&&(b===null?c.removeAttribute(p):c.setAttribute(p,""+b)):k.mustUseProperty?c[k.propertyName]=b===null?k.type===3?!1:"":b:(p=k.attributeName,S=k.attributeNamespace,b===null?c.removeAttribute(p):(k=k.type,b=k===3||k===4&&b===!0?"":""+b,S?c.setAttributeNS(S,p,b):c.setAttribute(p,b))))}var T=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,C=Symbol.for("react.element"),E=Symbol.for("react.portal"),L=Symbol.for("react.fragment"),M=Symbol.for("react.strict_mode"),R=Symbol.for("react.profiler"),z=Symbol.for("react.provider"),X=Symbol.for("react.context"),U=Symbol.for("react.forward_ref"),G=Symbol.for("react.suspense"),V=Symbol.for("react.suspense_list"),Z=Symbol.for("react.memo"),J=Symbol.for("react.lazy"),te=Symbol.for("react.offscreen"),O=Symbol.iterator;function Q(c){return c===null||typeof c!="object"?null:(c=O&&c[O]||c["@@iterator"],typeof c=="function"?c:null)}var A=Object.assign,K;function $(c){if(K===void 0)try{throw Error()}catch(b){var p=b.stack.trim().match(/\n( *(at )?)/);K=p&&p[1]||""}return`
`+K+c}var re=!1;function oe(c,p){if(!c||re)return"";re=!0;var b=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(p)if(p=function(){throw Error()},Object.defineProperty(p.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(p,[])}catch(xe){var S=xe}Reflect.construct(c,[],p)}else{try{p.call()}catch(xe){S=xe}c.call(p.prototype)}else{try{throw Error()}catch(xe){S=xe}c()}}catch(xe){if(xe&&S&&typeof xe.stack=="string"){for(var k=xe.stack.split(`
`),_=S.stack.split(`
`),D=k.length-1,j=_.length-1;1<=D&&0<=j&&k[D]!==_[j];)j--;for(;1<=D&&0<=j;D--,j--)if(k[D]!==_[j]){if(D!==1||j!==1)do if(D--,j--,0>j||k[D]!==_[j]){var ie=`
`+k[D].replace(" at new "," at ");return c.displayName&&ie.includes("<anonymous>")&&(ie=ie.replace("<anonymous>",c.displayName)),ie}while(1<=D&&0<=j);break}}}finally{re=!1,Error.prepareStackTrace=b}return(c=c?c.displayName||c.name:"")?$(c):""}function Y(c){switch(c.tag){case 5:return $(c.type);case 16:return $("Lazy");case 13:return $("Suspense");case 19:return $("SuspenseList");case 0:case 2:case 15:return c=oe(c.type,!1),c;case 11:return c=oe(c.type.render,!1),c;case 1:return c=oe(c.type,!0),c;default:return""}}function ge(c){if(c==null)return null;if(typeof c=="function")return c.displayName||c.name||null;if(typeof c=="string")return c;switch(c){case L:return"Fragment";case E:return"Portal";case R:return"Profiler";case M:return"StrictMode";case G:return"Suspense";case V:return"SuspenseList"}if(typeof c=="object")switch(c.$$typeof){case X:return(c.displayName||"Context")+".Consumer";case z:return(c._context.displayName||"Context")+".Provider";case U:var p=c.render;return c=c.displayName,c||(c=p.displayName||p.name||"",c=c!==""?"ForwardRef("+c+")":"ForwardRef"),c;case Z:return p=c.displayName||null,p!==null?p:ge(c.type)||"Memo";case J:p=c._payload,c=c._init;try{return ge(c(p))}catch{}}return null}function ye(c){var p=c.type;switch(c.tag){case 24:return"Cache";case 9:return(p.displayName||"Context")+".Consumer";case 10:return(p._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return c=p.render,c=c.displayName||c.name||"",p.displayName||(c!==""?"ForwardRef("+c+")":"ForwardRef");case 7:return"Fragment";case 5:return p;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return ge(p);case 8:return p===M?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof p=="function")return p.displayName||p.name||null;if(typeof p=="string")return p}return null}function ve(c){switch(typeof c){case"boolean":case"number":case"string":case"undefined":return c;case"object":return c;default:return""}}function Ce(c){var p=c.type;return(c=c.nodeName)&&c.toLowerCase()==="input"&&(p==="checkbox"||p==="radio")}function De(c){var p=Ce(c)?"checked":"value",b=Object.getOwnPropertyDescriptor(c.constructor.prototype,p),S=""+c[p];if(!c.hasOwnProperty(p)&&typeof b<"u"&&typeof b.get=="function"&&typeof b.set=="function"){var k=b.get,_=b.set;return Object.defineProperty(c,p,{configurable:!0,get:function(){return k.call(this)},set:function(D){S=""+D,_.call(this,D)}}),Object.defineProperty(c,p,{enumerable:b.enumerable}),{getValue:function(){return S},setValue:function(D){S=""+D},stopTracking:function(){c._valueTracker=null,delete c[p]}}}}function We(c){c._valueTracker||(c._valueTracker=De(c))}function Ze(c){if(!c)return!1;var p=c._valueTracker;if(!p)return!0;var b=p.getValue(),S="";return c&&(S=Ce(c)?c.checked?"true":"false":c.value),c=S,c!==b?(p.setValue(c),!0):!1}function ot(c){if(c=c||(typeof document<"u"?document:void 0),typeof c>"u")return null;try{return c.activeElement||c.body}catch{return c.body}}function St(c,p){var b=p.checked;return A({},p,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:b??c._wrapperState.initialChecked})}function Rt(c,p){var b=p.defaultValue==null?"":p.defaultValue,S=p.checked!=null?p.checked:p.defaultChecked;b=ve(p.value!=null?p.value:b),c._wrapperState={initialChecked:S,initialValue:b,controlled:p.type==="checkbox"||p.type==="radio"?p.checked!=null:p.value!=null}}function _t(c,p){p=p.checked,p!=null&&I(c,"checked",p,!1)}function Tt(c,p){_t(c,p);var b=ve(p.value),S=p.type;if(b!=null)S==="number"?(b===0&&c.value===""||c.value!=b)&&(c.value=""+b):c.value!==""+b&&(c.value=""+b);else if(S==="submit"||S==="reset"){c.removeAttribute("value");return}p.hasOwnProperty("value")?Ot(c,p.type,b):p.hasOwnProperty("defaultValue")&&Ot(c,p.type,ve(p.defaultValue)),p.checked==null&&p.defaultChecked!=null&&(c.defaultChecked=!!p.defaultChecked)}function vt(c,p,b){if(p.hasOwnProperty("value")||p.hasOwnProperty("defaultValue")){var S=p.type;if(!(S!=="submit"&&S!=="reset"||p.value!==void 0&&p.value!==null))return;p=""+c._wrapperState.initialValue,b||p===c.value||(c.value=p),c.defaultValue=p}b=c.name,b!==""&&(c.name=""),c.defaultChecked=!!c._wrapperState.initialChecked,b!==""&&(c.name=b)}function Ot(c,p,b){(p!=="number"||ot(c.ownerDocument)!==c)&&(b==null?c.defaultValue=""+c._wrapperState.initialValue:c.defaultValue!==""+b&&(c.defaultValue=""+b))}var jt=Array.isArray;function sn(c,p,b,S){if(c=c.options,p){p={};for(var k=0;k<b.length;k++)p["$"+b[k]]=!0;for(b=0;b<c.length;b++)k=p.hasOwnProperty("$"+c[b].value),c[b].selected!==k&&(c[b].selected=k),k&&S&&(c[b].defaultSelected=!0)}else{for(b=""+ve(b),p=null,k=0;k<c.length;k++){if(c[k].value===b){c[k].selected=!0,S&&(c[k].defaultSelected=!0);return}p!==null||c[k].disabled||(p=c[k])}p!==null&&(p.selected=!0)}}function H(c,p){if(p.dangerouslySetInnerHTML!=null)throw Error(t(91));return A({},p,{value:void 0,defaultValue:void 0,children:""+c._wrapperState.initialValue})}function W(c,p){var b=p.value;if(b==null){if(b=p.children,p=p.defaultValue,b!=null){if(p!=null)throw Error(t(92));if(jt(b)){if(1<b.length)throw Error(t(93));b=b[0]}p=b}p==null&&(p=""),b=p}c._wrapperState={initialValue:ve(b)}}function Te(c,p){var b=ve(p.value),S=ve(p.defaultValue);b!=null&&(b=""+b,b!==c.value&&(c.value=b),p.defaultValue==null&&c.defaultValue!==b&&(c.defaultValue=b)),S!=null&&(c.defaultValue=""+S)}function Pe(c){var p=c.textContent;p===c._wrapperState.initialValue&&p!==""&&p!==null&&(c.value=p)}function Fe(c){switch(c){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function $e(c,p){return c==null||c==="http://www.w3.org/1999/xhtml"?Fe(p):c==="http://www.w3.org/2000/svg"&&p==="foreignObject"?"http://www.w3.org/1999/xhtml":c}var rt,Ke=(function(c){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(p,b,S,k){MSApp.execUnsafeLocalFunction(function(){return c(p,b,S,k)})}:c})(function(c,p){if(c.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in c)c.innerHTML=p;else{for(rt=rt||document.createElement("div"),rt.innerHTML="<svg>"+p.valueOf().toString()+"</svg>",p=rt.firstChild;c.firstChild;)c.removeChild(c.firstChild);for(;p.firstChild;)c.appendChild(p.firstChild)}});function Me(c,p){if(p){var b=c.firstChild;if(b&&b===c.lastChild&&b.nodeType===3){b.nodeValue=p;return}}c.textContent=p}var pt={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},st=["Webkit","ms","Moz","O"];Object.keys(pt).forEach(function(c){st.forEach(function(p){p=p+c.charAt(0).toUpperCase()+c.substring(1),pt[p]=pt[c]})});function ft(c,p,b){return p==null||typeof p=="boolean"||p===""?"":b||typeof p!="number"||p===0||pt.hasOwnProperty(c)&&pt[c]?(""+p).trim():p+"px"}function mt(c,p){c=c.style;for(var b in p)if(p.hasOwnProperty(b)){var S=b.indexOf("--")===0,k=ft(b,p[b],S);b==="float"&&(b="cssFloat"),S?c.setProperty(b,k):c[b]=k}}var dt=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Xt(c,p){if(p){if(dt[c]&&(p.children!=null||p.dangerouslySetInnerHTML!=null))throw Error(t(137,c));if(p.dangerouslySetInnerHTML!=null){if(p.children!=null)throw Error(t(60));if(typeof p.dangerouslySetInnerHTML!="object"||!("__html"in p.dangerouslySetInnerHTML))throw Error(t(61))}if(p.style!=null&&typeof p.style!="object")throw Error(t(62))}}function un(c,p){if(c.indexOf("-")===-1)return typeof p.is=="string";switch(c){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Gn=null;function ce(c){return c=c.target||c.srcElement||window,c.correspondingUseElement&&(c=c.correspondingUseElement),c.nodeType===3?c.parentNode:c}var ke=null,Ae=null,He=null;function nt(c){if(c=up(c)){if(typeof ke!="function")throw Error(t(280));var p=c.stateNode;p&&(p=zg(p),ke(c.stateNode,c.type,p))}}function an(c){Ae?He?He.push(c):He=[c]:Ae=c}function Hn(){if(Ae){var c=Ae,p=He;if(He=Ae=null,nt(c),p)for(c=0;c<p.length;c++)nt(p[c])}}function xr(c,p){return c(p)}function Os(){}var yn=!1;function rs(c,p,b){if(yn)return c(p,b);yn=!0;try{return xr(c,p,b)}finally{yn=!1,(Ae!==null||He!==null)&&(Os(),Hn())}}function $r(c,p){var b=c.stateNode;if(b===null)return null;var S=zg(b);if(S===null)return null;b=S[p];e:switch(p){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(S=!S.disabled)||(c=c.type,S=!(c==="button"||c==="input"||c==="select"||c==="textarea")),c=!S;break e;default:c=!1}if(c)return null;if(b&&typeof b!="function")throw Error(t(231,p,typeof b));return b}var Vh=!1;if(o)try{var kl={};Object.defineProperty(kl,"passive",{get:function(){Vh=!0}}),window.addEventListener("test",kl,kl),window.removeEventListener("test",kl,kl)}catch{Vh=!1}function Tv(c,p,b,S,k,_,D,j,ie){var xe=Array.prototype.slice.call(arguments,3);try{p.apply(b,xe)}catch(Le){this.onError(Le)}}var B=!1,me=null,Ie=!1,pe=null,_e={onError:function(c){B=!0,me=c}};function gt(c,p,b,S,k,_,D,j,ie){B=!1,me=null,Tv.apply(_e,arguments)}function Mt(c,p,b,S,k,_,D,j,ie){if(gt.apply(this,arguments),B){if(B){var xe=me;B=!1,me=null}else throw Error(t(198));Ie||(Ie=!0,pe=xe)}}function It(c){var p=c,b=c;if(c.alternate)for(;p.return;)p=p.return;else{c=p;do p=c,(p.flags&4098)!==0&&(b=p.return),c=p.return;while(c)}return p.tag===3?b:null}function Dt(c){if(c.tag===13){var p=c.memoizedState;if(p===null&&(c=c.alternate,c!==null&&(p=c.memoizedState)),p!==null)return p.dehydrated}return null}function Zt(c){if(It(c)!==c)throw Error(t(188))}function Ut(c){var p=c.alternate;if(!p){if(p=It(c),p===null)throw Error(t(188));return p!==c?null:c}for(var b=c,S=p;;){var k=b.return;if(k===null)break;var _=k.alternate;if(_===null){if(S=k.return,S!==null){b=S;continue}break}if(k.child===_.child){for(_=k.child;_;){if(_===b)return Zt(k),c;if(_===S)return Zt(k),p;_=_.sibling}throw Error(t(188))}if(b.return!==S.return)b=k,S=_;else{for(var D=!1,j=k.child;j;){if(j===b){D=!0,b=k,S=_;break}if(j===S){D=!0,S=k,b=_;break}j=j.sibling}if(!D){for(j=_.child;j;){if(j===b){D=!0,b=_,S=k;break}if(j===S){D=!0,S=_,b=k;break}j=j.sibling}if(!D)throw Error(t(189))}}if(b.alternate!==S)throw Error(t(190))}if(b.tag!==3)throw Error(t(188));return b.stateNode.current===b?c:p}function Wt(c){return c=Ut(c),c!==null?Ln(c):null}function Ln(c){if(c.tag===5||c.tag===6)return c;for(c=c.child;c!==null;){var p=Ln(c);if(p!==null)return p;c=c.sibling}return null}var Br=e.unstable_scheduleCallback,ai=e.unstable_cancelCallback,Ea=e.unstable_shouldYield,On=e.unstable_requestPaint,ht=e.unstable_now,$h=e.unstable_getCurrentPriorityLevel,Wn=e.unstable_ImmediatePriority,ea=e.unstable_UserBlockingPriority,Cl=e.unstable_NormalPriority,_l=e.unstable_LowPriority,rc=e.unstable_IdlePriority,er=null,vr=null;function Bh(c){if(vr&&typeof vr.onCommitFiberRoot=="function")try{vr.onCommitFiberRoot(er,c,void 0,(c.current.flags&128)===128)}catch{}}var bn=Math.clz32?Math.clz32:mg,Xh=Math.log,Iv=Math.LN2;function mg(c){return c>>>=0,c===0?32:31-(Xh(c)/Iv|0)|0}var gg=64,yg=4194304;function Uh(c){switch(c&-c){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return c&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return c&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return c}}function bg(c,p){var b=c.pendingLanes;if(b===0)return 0;var S=0,k=c.suspendedLanes,_=c.pingedLanes,D=b&268435455;if(D!==0){var j=D&~k;j!==0?S=Uh(j):(_&=D,_!==0&&(S=Uh(_)))}else D=b&~k,D!==0?S=Uh(D):_!==0&&(S=Uh(_));if(S===0)return 0;if(p!==0&&p!==S&&(p&k)===0&&(k=S&-S,_=p&-p,k>=_||k===16&&(_&4194240)!==0))return p;if((S&4)!==0&&(S|=b&16),p=c.entangledLanes,p!==0)for(c=c.entanglements,p&=S;0<p;)b=31-bn(p),k=1<<b,S|=c[b],p&=~k;return S}function AO(c,p){switch(c){case 1:case 2:case 4:return p+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return p+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function zO(c,p){for(var b=c.suspendedLanes,S=c.pingedLanes,k=c.expirationTimes,_=c.pendingLanes;0<_;){var D=31-bn(_),j=1<<D,ie=k[D];ie===-1?((j&b)===0||(j&S)!==0)&&(k[D]=AO(j,p)):ie<=p&&(c.expiredLanes|=j),_&=~j}}function kv(c){return c=c.pendingLanes&-1073741825,c!==0?c:c&1073741824?1073741824:0}function XC(){var c=gg;return gg<<=1,(gg&4194240)===0&&(gg=64),c}function Cv(c){for(var p=[],b=0;31>b;b++)p.push(c);return p}function Zh(c,p,b){c.pendingLanes|=p,p!==536870912&&(c.suspendedLanes=0,c.pingedLanes=0),c=c.eventTimes,p=31-bn(p),c[p]=b}function DO(c,p){var b=c.pendingLanes&~p;c.pendingLanes=p,c.suspendedLanes=0,c.pingedLanes=0,c.expiredLanes&=p,c.mutableReadLanes&=p,c.entangledLanes&=p,p=c.entanglements;var S=c.eventTimes;for(c=c.expirationTimes;0<b;){var k=31-bn(b),_=1<<k;p[k]=0,S[k]=-1,c[k]=-1,b&=~_}}function _v(c,p){var b=c.entangledLanes|=p;for(c=c.entanglements;b;){var S=31-bn(b),k=1<<S;k&p|c[S]&p&&(c[S]|=p),b&=~k}}var tn=0;function UC(c){return c&=-c,1<c?4<c?(c&268435455)!==0?16:536870912:4:1}var ZC,Mv,HC,KC,YC,Nv=!1,xg=[],bo=null,xo=null,vo=null,Hh=new Map,Kh=new Map,wo=[],PO="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function jC(c,p){switch(c){case"focusin":case"focusout":bo=null;break;case"dragenter":case"dragleave":xo=null;break;case"mouseover":case"mouseout":vo=null;break;case"pointerover":case"pointerout":Hh.delete(p.pointerId);break;case"gotpointercapture":case"lostpointercapture":Kh.delete(p.pointerId)}}function Yh(c,p,b,S,k,_){return c===null||c.nativeEvent!==_?(c={blockedOn:p,domEventName:b,eventSystemFlags:S,nativeEvent:_,targetContainers:[k]},p!==null&&(p=up(p),p!==null&&Mv(p)),c):(c.eventSystemFlags|=S,p=c.targetContainers,k!==null&&p.indexOf(k)===-1&&p.push(k),c)}function FO(c,p,b,S,k){switch(p){case"focusin":return bo=Yh(bo,c,p,b,S,k),!0;case"dragenter":return xo=Yh(xo,c,p,b,S,k),!0;case"mouseover":return vo=Yh(vo,c,p,b,S,k),!0;case"pointerover":var _=k.pointerId;return Hh.set(_,Yh(Hh.get(_)||null,c,p,b,S,k)),!0;case"gotpointercapture":return _=k.pointerId,Kh.set(_,Yh(Kh.get(_)||null,c,p,b,S,k)),!0}return!1}function QC(c){var p=Ml(c.target);if(p!==null){var b=It(p);if(b!==null){if(p=b.tag,p===13){if(p=Dt(b),p!==null){c.blockedOn=p,YC(c.priority,function(){HC(b)});return}}else if(p===3&&b.stateNode.current.memoizedState.isDehydrated){c.blockedOn=b.tag===3?b.stateNode.containerInfo:null;return}}}c.blockedOn=null}function vg(c){if(c.blockedOn!==null)return!1;for(var p=c.targetContainers;0<p.length;){var b=Rv(c.domEventName,c.eventSystemFlags,p[0],c.nativeEvent);if(b===null){b=c.nativeEvent;var S=new b.constructor(b.type,b);Gn=S,b.target.dispatchEvent(S),Gn=null}else return p=up(b),p!==null&&Mv(p),c.blockedOn=b,!1;p.shift()}return!0}function JC(c,p,b){vg(c)&&b.delete(p)}function GO(){Nv=!1,bo!==null&&vg(bo)&&(bo=null),xo!==null&&vg(xo)&&(xo=null),vo!==null&&vg(vo)&&(vo=null),Hh.forEach(JC),Kh.forEach(JC)}function jh(c,p){c.blockedOn===p&&(c.blockedOn=null,Nv||(Nv=!0,e.unstable_scheduleCallback(e.unstable_NormalPriority,GO)))}function Qh(c){function p(k){return jh(k,c)}if(0<xg.length){jh(xg[0],c);for(var b=1;b<xg.length;b++){var S=xg[b];S.blockedOn===c&&(S.blockedOn=null)}}for(bo!==null&&jh(bo,c),xo!==null&&jh(xo,c),vo!==null&&jh(vo,c),Hh.forEach(p),Kh.forEach(p),b=0;b<wo.length;b++)S=wo[b],S.blockedOn===c&&(S.blockedOn=null);for(;0<wo.length&&(b=wo[0],b.blockedOn===null);)QC(b),b.blockedOn===null&&wo.shift()}var sc=T.ReactCurrentBatchConfig,wg=!0;function OO(c,p,b,S){var k=tn,_=sc.transition;sc.transition=null;try{tn=1,Ev(c,p,b,S)}finally{tn=k,sc.transition=_}}function WO(c,p,b,S){var k=tn,_=sc.transition;sc.transition=null;try{tn=4,Ev(c,p,b,S)}finally{tn=k,sc.transition=_}}function Ev(c,p,b,S){if(wg){var k=Rv(c,p,b,S);if(k===null)Kv(c,p,S,Sg,b),jC(c,S);else if(FO(k,c,p,b,S))S.stopPropagation();else if(jC(c,S),p&4&&-1<PO.indexOf(c)){for(;k!==null;){var _=up(k);if(_!==null&&ZC(_),_=Rv(c,p,b,S),_===null&&Kv(c,p,S,Sg,b),_===k)break;k=_}k!==null&&S.stopPropagation()}else Kv(c,p,S,null,b)}}var Sg=null;function Rv(c,p,b,S){if(Sg=null,c=ce(S),c=Ml(c),c!==null)if(p=It(c),p===null)c=null;else if(b=p.tag,b===13){if(c=Dt(p),c!==null)return c;c=null}else if(b===3){if(p.stateNode.current.memoizedState.isDehydrated)return p.tag===3?p.stateNode.containerInfo:null;c=null}else p!==c&&(c=null);return Sg=c,null}function qC(c){switch(c){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch($h()){case Wn:return 1;case ea:return 4;case Cl:case _l:return 16;case rc:return 536870912;default:return 16}default:return 16}}var So=null,Lv=null,Tg=null;function e_(){if(Tg)return Tg;var c,p=Lv,b=p.length,S,k="value"in So?So.value:So.textContent,_=k.length;for(c=0;c<b&&p[c]===k[c];c++);var D=b-c;for(S=1;S<=D&&p[b-S]===k[_-S];S++);return Tg=k.slice(c,1<S?1-S:void 0)}function Ig(c){var p=c.keyCode;return"charCode"in c?(c=c.charCode,c===0&&p===13&&(c=13)):c=p,c===10&&(c=13),32<=c||c===13?c:0}function kg(){return!0}function t_(){return!1}function Ws(c){function p(b,S,k,_,D){this._reactName=b,this._targetInst=k,this.type=S,this.nativeEvent=_,this.target=D,this.currentTarget=null;for(var j in c)c.hasOwnProperty(j)&&(b=c[j],this[j]=b?b(_):_[j]);return this.isDefaultPrevented=(_.defaultPrevented!=null?_.defaultPrevented:_.returnValue===!1)?kg:t_,this.isPropagationStopped=t_,this}return A(p.prototype,{preventDefault:function(){this.defaultPrevented=!0;var b=this.nativeEvent;b&&(b.preventDefault?b.preventDefault():typeof b.returnValue!="unknown"&&(b.returnValue=!1),this.isDefaultPrevented=kg)},stopPropagation:function(){var b=this.nativeEvent;b&&(b.stopPropagation?b.stopPropagation():typeof b.cancelBubble!="unknown"&&(b.cancelBubble=!0),this.isPropagationStopped=kg)},persist:function(){},isPersistent:kg}),p}var ic={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(c){return c.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},Av=Ws(ic),Jh=A({},ic,{view:0,detail:0}),VO=Ws(Jh),zv,Dv,qh,Cg=A({},Jh,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Fv,button:0,buttons:0,relatedTarget:function(c){return c.relatedTarget===void 0?c.fromElement===c.srcElement?c.toElement:c.fromElement:c.relatedTarget},movementX:function(c){return"movementX"in c?c.movementX:(c!==qh&&(qh&&c.type==="mousemove"?(zv=c.screenX-qh.screenX,Dv=c.screenY-qh.screenY):Dv=zv=0,qh=c),zv)},movementY:function(c){return"movementY"in c?c.movementY:Dv}}),n_=Ws(Cg),$O=A({},Cg,{dataTransfer:0}),BO=Ws($O),XO=A({},Jh,{relatedTarget:0}),Pv=Ws(XO),UO=A({},ic,{animationName:0,elapsedTime:0,pseudoElement:0}),ZO=Ws(UO),HO=A({},ic,{clipboardData:function(c){return"clipboardData"in c?c.clipboardData:window.clipboardData}}),KO=Ws(HO),YO=A({},ic,{data:0}),r_=Ws(YO),jO={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},QO={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},JO={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function qO(c){var p=this.nativeEvent;return p.getModifierState?p.getModifierState(c):(c=JO[c])?!!p[c]:!1}function Fv(){return qO}var eW=A({},Jh,{key:function(c){if(c.key){var p=jO[c.key]||c.key;if(p!=="Unidentified")return p}return c.type==="keypress"?(c=Ig(c),c===13?"Enter":String.fromCharCode(c)):c.type==="keydown"||c.type==="keyup"?QO[c.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Fv,charCode:function(c){return c.type==="keypress"?Ig(c):0},keyCode:function(c){return c.type==="keydown"||c.type==="keyup"?c.keyCode:0},which:function(c){return c.type==="keypress"?Ig(c):c.type==="keydown"||c.type==="keyup"?c.keyCode:0}}),tW=Ws(eW),nW=A({},Cg,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),s_=Ws(nW),rW=A({},Jh,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Fv}),sW=Ws(rW),iW=A({},ic,{propertyName:0,elapsedTime:0,pseudoElement:0}),aW=Ws(iW),oW=A({},Cg,{deltaX:function(c){return"deltaX"in c?c.deltaX:"wheelDeltaX"in c?-c.wheelDeltaX:0},deltaY:function(c){return"deltaY"in c?c.deltaY:"wheelDeltaY"in c?-c.wheelDeltaY:"wheelDelta"in c?-c.wheelDelta:0},deltaZ:0,deltaMode:0}),lW=Ws(oW),uW=[9,13,27,32],Gv=o&&"CompositionEvent"in window,ep=null;o&&"documentMode"in document&&(ep=document.documentMode);var cW=o&&"TextEvent"in window&&!ep,i_=o&&(!Gv||ep&&8<ep&&11>=ep),a_=" ",o_=!1;function l_(c,p){switch(c){case"keyup":return uW.indexOf(p.keyCode)!==-1;case"keydown":return p.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function u_(c){return c=c.detail,typeof c=="object"&&"data"in c?c.data:null}var ac=!1;function dW(c,p){switch(c){case"compositionend":return u_(p);case"keypress":return p.which!==32?null:(o_=!0,a_);case"textInput":return c=p.data,c===a_&&o_?null:c;default:return null}}function hW(c,p){if(ac)return c==="compositionend"||!Gv&&l_(c,p)?(c=e_(),Tg=Lv=So=null,ac=!1,c):null;switch(c){case"paste":return null;case"keypress":if(!(p.ctrlKey||p.altKey||p.metaKey)||p.ctrlKey&&p.altKey){if(p.char&&1<p.char.length)return p.char;if(p.which)return String.fromCharCode(p.which)}return null;case"compositionend":return i_&&p.locale!=="ko"?null:p.data;default:return null}}var pW={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function c_(c){var p=c&&c.nodeName&&c.nodeName.toLowerCase();return p==="input"?!!pW[c.type]:p==="textarea"}function d_(c,p,b,S){an(S),p=Rg(p,"onChange"),0<p.length&&(b=new Av("onChange","change",null,b,S),c.push({event:b,listeners:p}))}var tp=null,np=null;function fW(c){N_(c,0)}function _g(c){var p=dc(c);if(Ze(p))return c}function mW(c,p){if(c==="change")return p}var h_=!1;if(o){var Ov;if(o){var Wv="oninput"in document;if(!Wv){var p_=document.createElement("div");p_.setAttribute("oninput","return;"),Wv=typeof p_.oninput=="function"}Ov=Wv}else Ov=!1;h_=Ov&&(!document.documentMode||9<document.documentMode)}function f_(){tp&&(tp.detachEvent("onpropertychange",m_),np=tp=null)}function m_(c){if(c.propertyName==="value"&&_g(np)){var p=[];d_(p,np,c,ce(c)),rs(fW,p)}}function gW(c,p,b){c==="focusin"?(f_(),tp=p,np=b,tp.attachEvent("onpropertychange",m_)):c==="focusout"&&f_()}function yW(c){if(c==="selectionchange"||c==="keyup"||c==="keydown")return _g(np)}function bW(c,p){if(c==="click")return _g(p)}function xW(c,p){if(c==="input"||c==="change")return _g(p)}function vW(c,p){return c===p&&(c!==0||1/c===1/p)||c!==c&&p!==p}var _i=typeof Object.is=="function"?Object.is:vW;function rp(c,p){if(_i(c,p))return!0;if(typeof c!="object"||c===null||typeof p!="object"||p===null)return!1;var b=Object.keys(c),S=Object.keys(p);if(b.length!==S.length)return!1;for(S=0;S<b.length;S++){var k=b[S];if(!l.call(p,k)||!_i(c[k],p[k]))return!1}return!0}function g_(c){for(;c&&c.firstChild;)c=c.firstChild;return c}function y_(c,p){var b=g_(c);c=0;for(var S;b;){if(b.nodeType===3){if(S=c+b.textContent.length,c<=p&&S>=p)return{node:b,offset:p-c};c=S}e:{for(;b;){if(b.nextSibling){b=b.nextSibling;break e}b=b.parentNode}b=void 0}b=g_(b)}}function b_(c,p){return c&&p?c===p?!0:c&&c.nodeType===3?!1:p&&p.nodeType===3?b_(c,p.parentNode):"contains"in c?c.contains(p):c.compareDocumentPosition?!!(c.compareDocumentPosition(p)&16):!1:!1}function x_(){for(var c=window,p=ot();p instanceof c.HTMLIFrameElement;){try{var b=typeof p.contentWindow.location.href=="string"}catch{b=!1}if(b)c=p.contentWindow;else break;p=ot(c.document)}return p}function Vv(c){var p=c&&c.nodeName&&c.nodeName.toLowerCase();return p&&(p==="input"&&(c.type==="text"||c.type==="search"||c.type==="tel"||c.type==="url"||c.type==="password")||p==="textarea"||c.contentEditable==="true")}function wW(c){var p=x_(),b=c.focusedElem,S=c.selectionRange;if(p!==b&&b&&b.ownerDocument&&b_(b.ownerDocument.documentElement,b)){if(S!==null&&Vv(b)){if(p=S.start,c=S.end,c===void 0&&(c=p),"selectionStart"in b)b.selectionStart=p,b.selectionEnd=Math.min(c,b.value.length);else if(c=(p=b.ownerDocument||document)&&p.defaultView||window,c.getSelection){c=c.getSelection();var k=b.textContent.length,_=Math.min(S.start,k);S=S.end===void 0?_:Math.min(S.end,k),!c.extend&&_>S&&(k=S,S=_,_=k),k=y_(b,_);var D=y_(b,S);k&&D&&(c.rangeCount!==1||c.anchorNode!==k.node||c.anchorOffset!==k.offset||c.focusNode!==D.node||c.focusOffset!==D.offset)&&(p=p.createRange(),p.setStart(k.node,k.offset),c.removeAllRanges(),_>S?(c.addRange(p),c.extend(D.node,D.offset)):(p.setEnd(D.node,D.offset),c.addRange(p)))}}for(p=[],c=b;c=c.parentNode;)c.nodeType===1&&p.push({element:c,left:c.scrollLeft,top:c.scrollTop});for(typeof b.focus=="function"&&b.focus(),b=0;b<p.length;b++)c=p[b],c.element.scrollLeft=c.left,c.element.scrollTop=c.top}}var SW=o&&"documentMode"in document&&11>=document.documentMode,oc=null,$v=null,sp=null,Bv=!1;function v_(c,p,b){var S=b.window===b?b.document:b.nodeType===9?b:b.ownerDocument;Bv||oc==null||oc!==ot(S)||(S=oc,"selectionStart"in S&&Vv(S)?S={start:S.selectionStart,end:S.selectionEnd}:(S=(S.ownerDocument&&S.ownerDocument.defaultView||window).getSelection(),S={anchorNode:S.anchorNode,anchorOffset:S.anchorOffset,focusNode:S.focusNode,focusOffset:S.focusOffset}),sp&&rp(sp,S)||(sp=S,S=Rg($v,"onSelect"),0<S.length&&(p=new Av("onSelect","select",null,p,b),c.push({event:p,listeners:S}),p.target=oc)))}function Mg(c,p){var b={};return b[c.toLowerCase()]=p.toLowerCase(),b["Webkit"+c]="webkit"+p,b["Moz"+c]="moz"+p,b}var lc={animationend:Mg("Animation","AnimationEnd"),animationiteration:Mg("Animation","AnimationIteration"),animationstart:Mg("Animation","AnimationStart"),transitionend:Mg("Transition","TransitionEnd")},Xv={},w_={};o&&(w_=document.createElement("div").style,"AnimationEvent"in window||(delete lc.animationend.animation,delete lc.animationiteration.animation,delete lc.animationstart.animation),"TransitionEvent"in window||delete lc.transitionend.transition);function Ng(c){if(Xv[c])return Xv[c];if(!lc[c])return c;var p=lc[c],b;for(b in p)if(p.hasOwnProperty(b)&&b in w_)return Xv[c]=p[b];return c}var S_=Ng("animationend"),T_=Ng("animationiteration"),I_=Ng("animationstart"),k_=Ng("transitionend"),C_=new Map,__="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function To(c,p){C_.set(c,p),i(p,[c])}for(var Uv=0;Uv<__.length;Uv++){var Zv=__[Uv],TW=Zv.toLowerCase(),IW=Zv[0].toUpperCase()+Zv.slice(1);To(TW,"on"+IW)}To(S_,"onAnimationEnd"),To(T_,"onAnimationIteration"),To(I_,"onAnimationStart"),To("dblclick","onDoubleClick"),To("focusin","onFocus"),To("focusout","onBlur"),To(k_,"onTransitionEnd"),a("onMouseEnter",["mouseout","mouseover"]),a("onMouseLeave",["mouseout","mouseover"]),a("onPointerEnter",["pointerout","pointerover"]),a("onPointerLeave",["pointerout","pointerover"]),i("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),i("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),i("onBeforeInput",["compositionend","keypress","textInput","paste"]),i("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),i("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),i("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var ip="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),kW=new Set("cancel close invalid load scroll toggle".split(" ").concat(ip));function M_(c,p,b){var S=c.type||"unknown-event";c.currentTarget=b,Mt(S,p,void 0,c),c.currentTarget=null}function N_(c,p){p=(p&4)!==0;for(var b=0;b<c.length;b++){var S=c[b],k=S.event;S=S.listeners;e:{var _=void 0;if(p)for(var D=S.length-1;0<=D;D--){var j=S[D],ie=j.instance,xe=j.currentTarget;if(j=j.listener,ie!==_&&k.isPropagationStopped())break e;M_(k,j,xe),_=ie}else for(D=0;D<S.length;D++){if(j=S[D],ie=j.instance,xe=j.currentTarget,j=j.listener,ie!==_&&k.isPropagationStopped())break e;M_(k,j,xe),_=ie}}}if(Ie)throw c=pe,Ie=!1,pe=null,c}function xn(c,p){var b=p[e1];b===void 0&&(b=p[e1]=new Set);var S=c+"__bubble";b.has(S)||(E_(p,c,2,!1),b.add(S))}function Hv(c,p,b){var S=0;p&&(S|=4),E_(b,c,S,p)}var Eg="_reactListening"+Math.random().toString(36).slice(2);function ap(c){if(!c[Eg]){c[Eg]=!0,r.forEach(function(b){b!=="selectionchange"&&(kW.has(b)||Hv(b,!1,c),Hv(b,!0,c))});var p=c.nodeType===9?c:c.ownerDocument;p===null||p[Eg]||(p[Eg]=!0,Hv("selectionchange",!1,p))}}function E_(c,p,b,S){switch(qC(p)){case 1:var k=OO;break;case 4:k=WO;break;default:k=Ev}b=k.bind(null,p,b,c),k=void 0,!Vh||p!=="touchstart"&&p!=="touchmove"&&p!=="wheel"||(k=!0),S?k!==void 0?c.addEventListener(p,b,{capture:!0,passive:k}):c.addEventListener(p,b,!0):k!==void 0?c.addEventListener(p,b,{passive:k}):c.addEventListener(p,b,!1)}function Kv(c,p,b,S,k){var _=S;if((p&1)===0&&(p&2)===0&&S!==null)e:for(;;){if(S===null)return;var D=S.tag;if(D===3||D===4){var j=S.stateNode.containerInfo;if(j===k||j.nodeType===8&&j.parentNode===k)break;if(D===4)for(D=S.return;D!==null;){var ie=D.tag;if((ie===3||ie===4)&&(ie=D.stateNode.containerInfo,ie===k||ie.nodeType===8&&ie.parentNode===k))return;D=D.return}for(;j!==null;){if(D=Ml(j),D===null)return;if(ie=D.tag,ie===5||ie===6){S=_=D;continue e}j=j.parentNode}}S=S.return}rs(function(){var xe=_,Le=ce(b),ze=[];e:{var Re=C_.get(c);if(Re!==void 0){var je=Av,et=c;switch(c){case"keypress":if(Ig(b)===0)break e;case"keydown":case"keyup":je=tW;break;case"focusin":et="focus",je=Pv;break;case"focusout":et="blur",je=Pv;break;case"beforeblur":case"afterblur":je=Pv;break;case"click":if(b.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":je=n_;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":je=BO;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":je=sW;break;case S_:case T_:case I_:je=ZO;break;case k_:je=aW;break;case"scroll":je=VO;break;case"wheel":je=lW;break;case"copy":case"cut":case"paste":je=KO;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":je=s_}var it=(p&4)!==0,Kn=!it&&c==="scroll",he=it?Re!==null?Re+"Capture":null:Re;it=[];for(var ue=xe,fe;ue!==null;){fe=ue;var Ge=fe.stateNode;if(fe.tag===5&&Ge!==null&&(fe=Ge,he!==null&&(Ge=$r(ue,he),Ge!=null&&it.push(op(ue,Ge,fe)))),Kn)break;ue=ue.return}0<it.length&&(Re=new je(Re,et,null,b,Le),ze.push({event:Re,listeners:it}))}}if((p&7)===0){e:{if(Re=c==="mouseover"||c==="pointerover",je=c==="mouseout"||c==="pointerout",Re&&b!==Gn&&(et=b.relatedTarget||b.fromElement)&&(Ml(et)||et[Ra]))break e;if((je||Re)&&(Re=Le.window===Le?Le:(Re=Le.ownerDocument)?Re.defaultView||Re.parentWindow:window,je?(et=b.relatedTarget||b.toElement,je=xe,et=et?Ml(et):null,et!==null&&(Kn=It(et),et!==Kn||et.tag!==5&&et.tag!==6)&&(et=null)):(je=null,et=xe),je!==et)){if(it=n_,Ge="onMouseLeave",he="onMouseEnter",ue="mouse",(c==="pointerout"||c==="pointerover")&&(it=s_,Ge="onPointerLeave",he="onPointerEnter",ue="pointer"),Kn=je==null?Re:dc(je),fe=et==null?Re:dc(et),Re=new it(Ge,ue+"leave",je,b,Le),Re.target=Kn,Re.relatedTarget=fe,Ge=null,Ml(Le)===xe&&(it=new it(he,ue+"enter",et,b,Le),it.target=fe,it.relatedTarget=Kn,Ge=it),Kn=Ge,je&&et)t:{for(it=je,he=et,ue=0,fe=it;fe;fe=uc(fe))ue++;for(fe=0,Ge=he;Ge;Ge=uc(Ge))fe++;for(;0<ue-fe;)it=uc(it),ue--;for(;0<fe-ue;)he=uc(he),fe--;for(;ue--;){if(it===he||he!==null&&it===he.alternate)break t;it=uc(it),he=uc(he)}it=null}else it=null;je!==null&&R_(ze,Re,je,it,!1),et!==null&&Kn!==null&&R_(ze,Kn,et,it,!0)}}e:{if(Re=xe?dc(xe):window,je=Re.nodeName&&Re.nodeName.toLowerCase(),je==="select"||je==="input"&&Re.type==="file")var lt=mW;else if(c_(Re))if(h_)lt=xW;else{lt=yW;var yt=gW}else(je=Re.nodeName)&&je.toLowerCase()==="input"&&(Re.type==="checkbox"||Re.type==="radio")&&(lt=bW);if(lt&&(lt=lt(c,xe))){d_(ze,lt,b,Le);break e}yt&&yt(c,Re,xe),c==="focusout"&&(yt=Re._wrapperState)&&yt.controlled&&Re.type==="number"&&Ot(Re,"number",Re.value)}switch(yt=xe?dc(xe):window,c){case"focusin":(c_(yt)||yt.contentEditable==="true")&&(oc=yt,$v=xe,sp=null);break;case"focusout":sp=$v=oc=null;break;case"mousedown":Bv=!0;break;case"contextmenu":case"mouseup":case"dragend":Bv=!1,v_(ze,b,Le);break;case"selectionchange":if(SW)break;case"keydown":case"keyup":v_(ze,b,Le)}var bt;if(Gv)e:{switch(c){case"compositionstart":var wt="onCompositionStart";break e;case"compositionend":wt="onCompositionEnd";break e;case"compositionupdate":wt="onCompositionUpdate";break e}wt=void 0}else ac?l_(c,b)&&(wt="onCompositionEnd"):c==="keydown"&&b.keyCode===229&&(wt="onCompositionStart");wt&&(i_&&b.locale!=="ko"&&(ac||wt!=="onCompositionStart"?wt==="onCompositionEnd"&&ac&&(bt=e_()):(So=Le,Lv="value"in So?So.value:So.textContent,ac=!0)),yt=Rg(xe,wt),0<yt.length&&(wt=new r_(wt,c,null,b,Le),ze.push({event:wt,listeners:yt}),bt?wt.data=bt:(bt=u_(b),bt!==null&&(wt.data=bt)))),(bt=cW?dW(c,b):hW(c,b))&&(xe=Rg(xe,"onBeforeInput"),0<xe.length&&(Le=new r_("onBeforeInput","beforeinput",null,b,Le),ze.push({event:Le,listeners:xe}),Le.data=bt))}N_(ze,p)})}function op(c,p,b){return{instance:c,listener:p,currentTarget:b}}function Rg(c,p){for(var b=p+"Capture",S=[];c!==null;){var k=c,_=k.stateNode;k.tag===5&&_!==null&&(k=_,_=$r(c,b),_!=null&&S.unshift(op(c,_,k)),_=$r(c,p),_!=null&&S.push(op(c,_,k))),c=c.return}return S}function uc(c){if(c===null)return null;do c=c.return;while(c&&c.tag!==5);return c||null}function R_(c,p,b,S,k){for(var _=p._reactName,D=[];b!==null&&b!==S;){var j=b,ie=j.alternate,xe=j.stateNode;if(ie!==null&&ie===S)break;j.tag===5&&xe!==null&&(j=xe,k?(ie=$r(b,_),ie!=null&&D.unshift(op(b,ie,j))):k||(ie=$r(b,_),ie!=null&&D.push(op(b,ie,j)))),b=b.return}D.length!==0&&c.push({event:p,listeners:D})}var CW=/\r\n?/g,_W=/\u0000|\uFFFD/g;function L_(c){return(typeof c=="string"?c:""+c).replace(CW,`
`).replace(_W,"")}function Lg(c,p,b){if(p=L_(p),L_(c)!==p&&b)throw Error(t(425))}function Ag(){}var Yv=null,jv=null;function Qv(c,p){return c==="textarea"||c==="noscript"||typeof p.children=="string"||typeof p.children=="number"||typeof p.dangerouslySetInnerHTML=="object"&&p.dangerouslySetInnerHTML!==null&&p.dangerouslySetInnerHTML.__html!=null}var Jv=typeof setTimeout=="function"?setTimeout:void 0,MW=typeof clearTimeout=="function"?clearTimeout:void 0,A_=typeof Promise=="function"?Promise:void 0,NW=typeof queueMicrotask=="function"?queueMicrotask:typeof A_<"u"?function(c){return A_.resolve(null).then(c).catch(EW)}:Jv;function EW(c){setTimeout(function(){throw c})}function qv(c,p){var b=p,S=0;do{var k=b.nextSibling;if(c.removeChild(b),k&&k.nodeType===8)if(b=k.data,b==="/$"){if(S===0){c.removeChild(k),Qh(p);return}S--}else b!=="$"&&b!=="$?"&&b!=="$!"||S++;b=k}while(b);Qh(p)}function Io(c){for(;c!=null;c=c.nextSibling){var p=c.nodeType;if(p===1||p===3)break;if(p===8){if(p=c.data,p==="$"||p==="$!"||p==="$?")break;if(p==="/$")return null}}return c}function z_(c){c=c.previousSibling;for(var p=0;c;){if(c.nodeType===8){var b=c.data;if(b==="$"||b==="$!"||b==="$?"){if(p===0)return c;p--}else b==="/$"&&p++}c=c.previousSibling}return null}var cc=Math.random().toString(36).slice(2),ta="__reactFiber$"+cc,lp="__reactProps$"+cc,Ra="__reactContainer$"+cc,e1="__reactEvents$"+cc,RW="__reactListeners$"+cc,LW="__reactHandles$"+cc;function Ml(c){var p=c[ta];if(p)return p;for(var b=c.parentNode;b;){if(p=b[Ra]||b[ta]){if(b=p.alternate,p.child!==null||b!==null&&b.child!==null)for(c=z_(c);c!==null;){if(b=c[ta])return b;c=z_(c)}return p}c=b,b=c.parentNode}return null}function up(c){return c=c[ta]||c[Ra],!c||c.tag!==5&&c.tag!==6&&c.tag!==13&&c.tag!==3?null:c}function dc(c){if(c.tag===5||c.tag===6)return c.stateNode;throw Error(t(33))}function zg(c){return c[lp]||null}var t1=[],hc=-1;function ko(c){return{current:c}}function vn(c){0>hc||(c.current=t1[hc],t1[hc]=null,hc--)}function pn(c,p){hc++,t1[hc]=c.current,c.current=p}var Co={},Xr=ko(Co),ws=ko(!1),Nl=Co;function pc(c,p){var b=c.type.contextTypes;if(!b)return Co;var S=c.stateNode;if(S&&S.__reactInternalMemoizedUnmaskedChildContext===p)return S.__reactInternalMemoizedMaskedChildContext;var k={},_;for(_ in b)k[_]=p[_];return S&&(c=c.stateNode,c.__reactInternalMemoizedUnmaskedChildContext=p,c.__reactInternalMemoizedMaskedChildContext=k),k}function Ss(c){return c=c.childContextTypes,c!=null}function Dg(){vn(ws),vn(Xr)}function D_(c,p,b){if(Xr.current!==Co)throw Error(t(168));pn(Xr,p),pn(ws,b)}function P_(c,p,b){var S=c.stateNode;if(p=p.childContextTypes,typeof S.getChildContext!="function")return b;S=S.getChildContext();for(var k in S)if(!(k in p))throw Error(t(108,ye(c)||"Unknown",k));return A({},b,S)}function Pg(c){return c=(c=c.stateNode)&&c.__reactInternalMemoizedMergedChildContext||Co,Nl=Xr.current,pn(Xr,c),pn(ws,ws.current),!0}function F_(c,p,b){var S=c.stateNode;if(!S)throw Error(t(169));b?(c=P_(c,p,Nl),S.__reactInternalMemoizedMergedChildContext=c,vn(ws),vn(Xr),pn(Xr,c)):vn(ws),pn(ws,b)}var La=null,Fg=!1,n1=!1;function G_(c){La===null?La=[c]:La.push(c)}function AW(c){Fg=!0,G_(c)}function _o(){if(!n1&&La!==null){n1=!0;var c=0,p=tn;try{var b=La;for(tn=1;c<b.length;c++){var S=b[c];do S=S(!0);while(S!==null)}La=null,Fg=!1}catch(k){throw La!==null&&(La=La.slice(c+1)),Br(Wn,_o),k}finally{tn=p,n1=!1}}return null}var fc=[],mc=0,Gg=null,Og=0,oi=[],li=0,El=null,Aa=1,za="";function Rl(c,p){fc[mc++]=Og,fc[mc++]=Gg,Gg=c,Og=p}function O_(c,p,b){oi[li++]=Aa,oi[li++]=za,oi[li++]=El,El=c;var S=Aa;c=za;var k=32-bn(S)-1;S&=~(1<<k),b+=1;var _=32-bn(p)+k;if(30<_){var D=k-k%5;_=(S&(1<<D)-1).toString(32),S>>=D,k-=D,Aa=1<<32-bn(p)+k|b<<k|S,za=_+c}else Aa=1<<_|b<<k|S,za=c}function r1(c){c.return!==null&&(Rl(c,1),O_(c,1,0))}function s1(c){for(;c===Gg;)Gg=fc[--mc],fc[mc]=null,Og=fc[--mc],fc[mc]=null;for(;c===El;)El=oi[--li],oi[li]=null,za=oi[--li],oi[li]=null,Aa=oi[--li],oi[li]=null}var Vs=null,$s=null,kn=!1,Mi=null;function W_(c,p){var b=hi(5,null,null,0);b.elementType="DELETED",b.stateNode=p,b.return=c,p=c.deletions,p===null?(c.deletions=[b],c.flags|=16):p.push(b)}function V_(c,p){switch(c.tag){case 5:var b=c.type;return p=p.nodeType!==1||b.toLowerCase()!==p.nodeName.toLowerCase()?null:p,p!==null?(c.stateNode=p,Vs=c,$s=Io(p.firstChild),!0):!1;case 6:return p=c.pendingProps===""||p.nodeType!==3?null:p,p!==null?(c.stateNode=p,Vs=c,$s=null,!0):!1;case 13:return p=p.nodeType!==8?null:p,p!==null?(b=El!==null?{id:Aa,overflow:za}:null,c.memoizedState={dehydrated:p,treeContext:b,retryLane:1073741824},b=hi(18,null,null,0),b.stateNode=p,b.return=c,c.child=b,Vs=c,$s=null,!0):!1;default:return!1}}function i1(c){return(c.mode&1)!==0&&(c.flags&128)===0}function a1(c){if(kn){var p=$s;if(p){var b=p;if(!V_(c,p)){if(i1(c))throw Error(t(418));p=Io(b.nextSibling);var S=Vs;p&&V_(c,p)?W_(S,b):(c.flags=c.flags&-4097|2,kn=!1,Vs=c)}}else{if(i1(c))throw Error(t(418));c.flags=c.flags&-4097|2,kn=!1,Vs=c}}}function $_(c){for(c=c.return;c!==null&&c.tag!==5&&c.tag!==3&&c.tag!==13;)c=c.return;Vs=c}function Wg(c){if(c!==Vs)return!1;if(!kn)return $_(c),kn=!0,!1;var p;if((p=c.tag!==3)&&!(p=c.tag!==5)&&(p=c.type,p=p!=="head"&&p!=="body"&&!Qv(c.type,c.memoizedProps)),p&&(p=$s)){if(i1(c))throw B_(),Error(t(418));for(;p;)W_(c,p),p=Io(p.nextSibling)}if($_(c),c.tag===13){if(c=c.memoizedState,c=c!==null?c.dehydrated:null,!c)throw Error(t(317));e:{for(c=c.nextSibling,p=0;c;){if(c.nodeType===8){var b=c.data;if(b==="/$"){if(p===0){$s=Io(c.nextSibling);break e}p--}else b!=="$"&&b!=="$!"&&b!=="$?"||p++}c=c.nextSibling}$s=null}}else $s=Vs?Io(c.stateNode.nextSibling):null;return!0}function B_(){for(var c=$s;c;)c=Io(c.nextSibling)}function gc(){$s=Vs=null,kn=!1}function o1(c){Mi===null?Mi=[c]:Mi.push(c)}var zW=T.ReactCurrentBatchConfig;function Ni(c,p){if(c&&c.defaultProps){p=A({},p),c=c.defaultProps;for(var b in c)p[b]===void 0&&(p[b]=c[b]);return p}return p}var Vg=ko(null),$g=null,yc=null,l1=null;function u1(){l1=yc=$g=null}function c1(c){var p=Vg.current;vn(Vg),c._currentValue=p}function d1(c,p,b){for(;c!==null;){var S=c.alternate;if((c.childLanes&p)!==p?(c.childLanes|=p,S!==null&&(S.childLanes|=p)):S!==null&&(S.childLanes&p)!==p&&(S.childLanes|=p),c===b)break;c=c.return}}function bc(c,p){$g=c,l1=yc=null,c=c.dependencies,c!==null&&c.firstContext!==null&&((c.lanes&p)!==0&&(Ts=!0),c.firstContext=null)}function ui(c){var p=c._currentValue;if(l1!==c)if(c={context:c,memoizedValue:p,next:null},yc===null){if($g===null)throw Error(t(308));yc=c,$g.dependencies={lanes:0,firstContext:c}}else yc=yc.next=c;return p}var Ll=null;function h1(c){Ll===null?Ll=[c]:Ll.push(c)}function X_(c,p,b,S){var k=p.interleaved;return k===null?(b.next=b,h1(p)):(b.next=k.next,k.next=b),p.interleaved=b,Da(c,S)}function Da(c,p){c.lanes|=p;var b=c.alternate;for(b!==null&&(b.lanes|=p),b=c,c=c.return;c!==null;)c.childLanes|=p,b=c.alternate,b!==null&&(b.childLanes|=p),b=c,c=c.return;return b.tag===3?b.stateNode:null}var Mo=!1;function p1(c){c.updateQueue={baseState:c.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function U_(c,p){c=c.updateQueue,p.updateQueue===c&&(p.updateQueue={baseState:c.baseState,firstBaseUpdate:c.firstBaseUpdate,lastBaseUpdate:c.lastBaseUpdate,shared:c.shared,effects:c.effects})}function Pa(c,p){return{eventTime:c,lane:p,tag:0,payload:null,callback:null,next:null}}function No(c,p,b){var S=c.updateQueue;if(S===null)return null;if(S=S.shared,(Qt&2)!==0){var k=S.pending;return k===null?p.next=p:(p.next=k.next,k.next=p),S.pending=p,Da(c,b)}return k=S.interleaved,k===null?(p.next=p,h1(S)):(p.next=k.next,k.next=p),S.interleaved=p,Da(c,b)}function Bg(c,p,b){if(p=p.updateQueue,p!==null&&(p=p.shared,(b&4194240)!==0)){var S=p.lanes;S&=c.pendingLanes,b|=S,p.lanes=b,_v(c,b)}}function Z_(c,p){var b=c.updateQueue,S=c.alternate;if(S!==null&&(S=S.updateQueue,b===S)){var k=null,_=null;if(b=b.firstBaseUpdate,b!==null){do{var D={eventTime:b.eventTime,lane:b.lane,tag:b.tag,payload:b.payload,callback:b.callback,next:null};_===null?k=_=D:_=_.next=D,b=b.next}while(b!==null);_===null?k=_=p:_=_.next=p}else k=_=p;b={baseState:S.baseState,firstBaseUpdate:k,lastBaseUpdate:_,shared:S.shared,effects:S.effects},c.updateQueue=b;return}c=b.lastBaseUpdate,c===null?b.firstBaseUpdate=p:c.next=p,b.lastBaseUpdate=p}function Xg(c,p,b,S){var k=c.updateQueue;Mo=!1;var _=k.firstBaseUpdate,D=k.lastBaseUpdate,j=k.shared.pending;if(j!==null){k.shared.pending=null;var ie=j,xe=ie.next;ie.next=null,D===null?_=xe:D.next=xe,D=ie;var Le=c.alternate;Le!==null&&(Le=Le.updateQueue,j=Le.lastBaseUpdate,j!==D&&(j===null?Le.firstBaseUpdate=xe:j.next=xe,Le.lastBaseUpdate=ie))}if(_!==null){var ze=k.baseState;D=0,Le=xe=ie=null,j=_;do{var Re=j.lane,je=j.eventTime;if((S&Re)===Re){Le!==null&&(Le=Le.next={eventTime:je,lane:0,tag:j.tag,payload:j.payload,callback:j.callback,next:null});e:{var et=c,it=j;switch(Re=p,je=b,it.tag){case 1:if(et=it.payload,typeof et=="function"){ze=et.call(je,ze,Re);break e}ze=et;break e;case 3:et.flags=et.flags&-65537|128;case 0:if(et=it.payload,Re=typeof et=="function"?et.call(je,ze,Re):et,Re==null)break e;ze=A({},ze,Re);break e;case 2:Mo=!0}}j.callback!==null&&j.lane!==0&&(c.flags|=64,Re=k.effects,Re===null?k.effects=[j]:Re.push(j))}else je={eventTime:je,lane:Re,tag:j.tag,payload:j.payload,callback:j.callback,next:null},Le===null?(xe=Le=je,ie=ze):Le=Le.next=je,D|=Re;if(j=j.next,j===null){if(j=k.shared.pending,j===null)break;Re=j,j=Re.next,Re.next=null,k.lastBaseUpdate=Re,k.shared.pending=null}}while(!0);if(Le===null&&(ie=ze),k.baseState=ie,k.firstBaseUpdate=xe,k.lastBaseUpdate=Le,p=k.shared.interleaved,p!==null){k=p;do D|=k.lane,k=k.next;while(k!==p)}else _===null&&(k.shared.lanes=0);Dl|=D,c.lanes=D,c.memoizedState=ze}}function H_(c,p,b){if(c=p.effects,p.effects=null,c!==null)for(p=0;p<c.length;p++){var S=c[p],k=S.callback;if(k!==null){if(S.callback=null,S=b,typeof k!="function")throw Error(t(191,k));k.call(S)}}}var K_=new n.Component().refs;function f1(c,p,b,S){p=c.memoizedState,b=b(S,p),b=b==null?p:A({},p,b),c.memoizedState=b,c.lanes===0&&(c.updateQueue.baseState=b)}var Ug={isMounted:function(c){return(c=c._reactInternals)?It(c)===c:!1},enqueueSetState:function(c,p,b){c=c._reactInternals;var S=is(),k=Ao(c),_=Pa(S,k);_.payload=p,b!=null&&(_.callback=b),p=No(c,_,k),p!==null&&(Li(p,c,k,S),Bg(p,c,k))},enqueueReplaceState:function(c,p,b){c=c._reactInternals;var S=is(),k=Ao(c),_=Pa(S,k);_.tag=1,_.payload=p,b!=null&&(_.callback=b),p=No(c,_,k),p!==null&&(Li(p,c,k,S),Bg(p,c,k))},enqueueForceUpdate:function(c,p){c=c._reactInternals;var b=is(),S=Ao(c),k=Pa(b,S);k.tag=2,p!=null&&(k.callback=p),p=No(c,k,S),p!==null&&(Li(p,c,S,b),Bg(p,c,S))}};function Y_(c,p,b,S,k,_,D){return c=c.stateNode,typeof c.shouldComponentUpdate=="function"?c.shouldComponentUpdate(S,_,D):p.prototype&&p.prototype.isPureReactComponent?!rp(b,S)||!rp(k,_):!0}function j_(c,p,b){var S=!1,k=Co,_=p.contextType;return typeof _=="object"&&_!==null?_=ui(_):(k=Ss(p)?Nl:Xr.current,S=p.contextTypes,_=(S=S!=null)?pc(c,k):Co),p=new p(b,_),c.memoizedState=p.state!==null&&p.state!==void 0?p.state:null,p.updater=Ug,c.stateNode=p,p._reactInternals=c,S&&(c=c.stateNode,c.__reactInternalMemoizedUnmaskedChildContext=k,c.__reactInternalMemoizedMaskedChildContext=_),p}function Q_(c,p,b,S){c=p.state,typeof p.componentWillReceiveProps=="function"&&p.componentWillReceiveProps(b,S),typeof p.UNSAFE_componentWillReceiveProps=="function"&&p.UNSAFE_componentWillReceiveProps(b,S),p.state!==c&&Ug.enqueueReplaceState(p,p.state,null)}function m1(c,p,b,S){var k=c.stateNode;k.props=b,k.state=c.memoizedState,k.refs=K_,p1(c);var _=p.contextType;typeof _=="object"&&_!==null?k.context=ui(_):(_=Ss(p)?Nl:Xr.current,k.context=pc(c,_)),k.state=c.memoizedState,_=p.getDerivedStateFromProps,typeof _=="function"&&(f1(c,p,_,b),k.state=c.memoizedState),typeof p.getDerivedStateFromProps=="function"||typeof k.getSnapshotBeforeUpdate=="function"||typeof k.UNSAFE_componentWillMount!="function"&&typeof k.componentWillMount!="function"||(p=k.state,typeof k.componentWillMount=="function"&&k.componentWillMount(),typeof k.UNSAFE_componentWillMount=="function"&&k.UNSAFE_componentWillMount(),p!==k.state&&Ug.enqueueReplaceState(k,k.state,null),Xg(c,b,k,S),k.state=c.memoizedState),typeof k.componentDidMount=="function"&&(c.flags|=4194308)}function cp(c,p,b){if(c=b.ref,c!==null&&typeof c!="function"&&typeof c!="object"){if(b._owner){if(b=b._owner,b){if(b.tag!==1)throw Error(t(309));var S=b.stateNode}if(!S)throw Error(t(147,c));var k=S,_=""+c;return p!==null&&p.ref!==null&&typeof p.ref=="function"&&p.ref._stringRef===_?p.ref:(p=function(D){var j=k.refs;j===K_&&(j=k.refs={}),D===null?delete j[_]:j[_]=D},p._stringRef=_,p)}if(typeof c!="string")throw Error(t(284));if(!b._owner)throw Error(t(290,c))}return c}function Zg(c,p){throw c=Object.prototype.toString.call(p),Error(t(31,c==="[object Object]"?"object with keys {"+Object.keys(p).join(", ")+"}":c))}function J_(c){var p=c._init;return p(c._payload)}function q_(c){function p(he,ue){if(c){var fe=he.deletions;fe===null?(he.deletions=[ue],he.flags|=16):fe.push(ue)}}function b(he,ue){if(!c)return null;for(;ue!==null;)p(he,ue),ue=ue.sibling;return null}function S(he,ue){for(he=new Map;ue!==null;)ue.key!==null?he.set(ue.key,ue):he.set(ue.index,ue),ue=ue.sibling;return he}function k(he,ue){return he=Do(he,ue),he.index=0,he.sibling=null,he}function _(he,ue,fe){return he.index=fe,c?(fe=he.alternate,fe!==null?(fe=fe.index,fe<ue?(he.flags|=2,ue):fe):(he.flags|=2,ue)):(he.flags|=1048576,ue)}function D(he){return c&&he.alternate===null&&(he.flags|=2),he}function j(he,ue,fe,Ge){return ue===null||ue.tag!==6?(ue=J1(fe,he.mode,Ge),ue.return=he,ue):(ue=k(ue,fe),ue.return=he,ue)}function ie(he,ue,fe,Ge){var lt=fe.type;return lt===L?Le(he,ue,fe.props.children,Ge,fe.key):ue!==null&&(ue.elementType===lt||typeof lt=="object"&&lt!==null&&lt.$$typeof===J&&J_(lt)===ue.type)?(Ge=k(ue,fe.props),Ge.ref=cp(he,ue,fe),Ge.return=he,Ge):(Ge=dy(fe.type,fe.key,fe.props,null,he.mode,Ge),Ge.ref=cp(he,ue,fe),Ge.return=he,Ge)}function xe(he,ue,fe,Ge){return ue===null||ue.tag!==4||ue.stateNode.containerInfo!==fe.containerInfo||ue.stateNode.implementation!==fe.implementation?(ue=q1(fe,he.mode,Ge),ue.return=he,ue):(ue=k(ue,fe.children||[]),ue.return=he,ue)}function Le(he,ue,fe,Ge,lt){return ue===null||ue.tag!==7?(ue=Ol(fe,he.mode,Ge,lt),ue.return=he,ue):(ue=k(ue,fe),ue.return=he,ue)}function ze(he,ue,fe){if(typeof ue=="string"&&ue!==""||typeof ue=="number")return ue=J1(""+ue,he.mode,fe),ue.return=he,ue;if(typeof ue=="object"&&ue!==null){switch(ue.$$typeof){case C:return fe=dy(ue.type,ue.key,ue.props,null,he.mode,fe),fe.ref=cp(he,null,ue),fe.return=he,fe;case E:return ue=q1(ue,he.mode,fe),ue.return=he,ue;case J:var Ge=ue._init;return ze(he,Ge(ue._payload),fe)}if(jt(ue)||Q(ue))return ue=Ol(ue,he.mode,fe,null),ue.return=he,ue;Zg(he,ue)}return null}function Re(he,ue,fe,Ge){var lt=ue!==null?ue.key:null;if(typeof fe=="string"&&fe!==""||typeof fe=="number")return lt!==null?null:j(he,ue,""+fe,Ge);if(typeof fe=="object"&&fe!==null){switch(fe.$$typeof){case C:return fe.key===lt?ie(he,ue,fe,Ge):null;case E:return fe.key===lt?xe(he,ue,fe,Ge):null;case J:return lt=fe._init,Re(he,ue,lt(fe._payload),Ge)}if(jt(fe)||Q(fe))return lt!==null?null:Le(he,ue,fe,Ge,null);Zg(he,fe)}return null}function je(he,ue,fe,Ge,lt){if(typeof Ge=="string"&&Ge!==""||typeof Ge=="number")return he=he.get(fe)||null,j(ue,he,""+Ge,lt);if(typeof Ge=="object"&&Ge!==null){switch(Ge.$$typeof){case C:return he=he.get(Ge.key===null?fe:Ge.key)||null,ie(ue,he,Ge,lt);case E:return he=he.get(Ge.key===null?fe:Ge.key)||null,xe(ue,he,Ge,lt);case J:var yt=Ge._init;return je(he,ue,fe,yt(Ge._payload),lt)}if(jt(Ge)||Q(Ge))return he=he.get(fe)||null,Le(ue,he,Ge,lt,null);Zg(ue,Ge)}return null}function et(he,ue,fe,Ge){for(var lt=null,yt=null,bt=ue,wt=ue=0,Tr=null;bt!==null&&wt<fe.length;wt++){bt.index>wt?(Tr=bt,bt=null):Tr=bt.sibling;var Jt=Re(he,bt,fe[wt],Ge);if(Jt===null){bt===null&&(bt=Tr);break}c&&bt&&Jt.alternate===null&&p(he,bt),ue=_(Jt,ue,wt),yt===null?lt=Jt:yt.sibling=Jt,yt=Jt,bt=Tr}if(wt===fe.length)return b(he,bt),kn&&Rl(he,wt),lt;if(bt===null){for(;wt<fe.length;wt++)bt=ze(he,fe[wt],Ge),bt!==null&&(ue=_(bt,ue,wt),yt===null?lt=bt:yt.sibling=bt,yt=bt);return kn&&Rl(he,wt),lt}for(bt=S(he,bt);wt<fe.length;wt++)Tr=je(bt,he,wt,fe[wt],Ge),Tr!==null&&(c&&Tr.alternate!==null&&bt.delete(Tr.key===null?wt:Tr.key),ue=_(Tr,ue,wt),yt===null?lt=Tr:yt.sibling=Tr,yt=Tr);return c&&bt.forEach(function(Po){return p(he,Po)}),kn&&Rl(he,wt),lt}function it(he,ue,fe,Ge){var lt=Q(fe);if(typeof lt!="function")throw Error(t(150));if(fe=lt.call(fe),fe==null)throw Error(t(151));for(var yt=lt=null,bt=ue,wt=ue=0,Tr=null,Jt=fe.next();bt!==null&&!Jt.done;wt++,Jt=fe.next()){bt.index>wt?(Tr=bt,bt=null):Tr=bt.sibling;var Po=Re(he,bt,Jt.value,Ge);if(Po===null){bt===null&&(bt=Tr);break}c&&bt&&Po.alternate===null&&p(he,bt),ue=_(Po,ue,wt),yt===null?lt=Po:yt.sibling=Po,yt=Po,bt=Tr}if(Jt.done)return b(he,bt),kn&&Rl(he,wt),lt;if(bt===null){for(;!Jt.done;wt++,Jt=fe.next())Jt=ze(he,Jt.value,Ge),Jt!==null&&(ue=_(Jt,ue,wt),yt===null?lt=Jt:yt.sibling=Jt,yt=Jt);return kn&&Rl(he,wt),lt}for(bt=S(he,bt);!Jt.done;wt++,Jt=fe.next())Jt=je(bt,he,wt,Jt.value,Ge),Jt!==null&&(c&&Jt.alternate!==null&&bt.delete(Jt.key===null?wt:Jt.key),ue=_(Jt,ue,wt),yt===null?lt=Jt:yt.sibling=Jt,yt=Jt);return c&&bt.forEach(function(pV){return p(he,pV)}),kn&&Rl(he,wt),lt}function Kn(he,ue,fe,Ge){if(typeof fe=="object"&&fe!==null&&fe.type===L&&fe.key===null&&(fe=fe.props.children),typeof fe=="object"&&fe!==null){switch(fe.$$typeof){case C:e:{for(var lt=fe.key,yt=ue;yt!==null;){if(yt.key===lt){if(lt=fe.type,lt===L){if(yt.tag===7){b(he,yt.sibling),ue=k(yt,fe.props.children),ue.return=he,he=ue;break e}}else if(yt.elementType===lt||typeof lt=="object"&&lt!==null&&lt.$$typeof===J&&J_(lt)===yt.type){b(he,yt.sibling),ue=k(yt,fe.props),ue.ref=cp(he,yt,fe),ue.return=he,he=ue;break e}b(he,yt);break}else p(he,yt);yt=yt.sibling}fe.type===L?(ue=Ol(fe.props.children,he.mode,Ge,fe.key),ue.return=he,he=ue):(Ge=dy(fe.type,fe.key,fe.props,null,he.mode,Ge),Ge.ref=cp(he,ue,fe),Ge.return=he,he=Ge)}return D(he);case E:e:{for(yt=fe.key;ue!==null;){if(ue.key===yt)if(ue.tag===4&&ue.stateNode.containerInfo===fe.containerInfo&&ue.stateNode.implementation===fe.implementation){b(he,ue.sibling),ue=k(ue,fe.children||[]),ue.return=he,he=ue;break e}else{b(he,ue);break}else p(he,ue);ue=ue.sibling}ue=q1(fe,he.mode,Ge),ue.return=he,he=ue}return D(he);case J:return yt=fe._init,Kn(he,ue,yt(fe._payload),Ge)}if(jt(fe))return et(he,ue,fe,Ge);if(Q(fe))return it(he,ue,fe,Ge);Zg(he,fe)}return typeof fe=="string"&&fe!==""||typeof fe=="number"?(fe=""+fe,ue!==null&&ue.tag===6?(b(he,ue.sibling),ue=k(ue,fe),ue.return=he,he=ue):(b(he,ue),ue=J1(fe,he.mode,Ge),ue.return=he,he=ue),D(he)):b(he,ue)}return Kn}var xc=q_(!0),eM=q_(!1),dp={},na=ko(dp),hp=ko(dp),pp=ko(dp);function Al(c){if(c===dp)throw Error(t(174));return c}function g1(c,p){switch(pn(pp,p),pn(hp,c),pn(na,dp),c=p.nodeType,c){case 9:case 11:p=(p=p.documentElement)?p.namespaceURI:$e(null,"");break;default:c=c===8?p.parentNode:p,p=c.namespaceURI||null,c=c.tagName,p=$e(p,c)}vn(na),pn(na,p)}function vc(){vn(na),vn(hp),vn(pp)}function tM(c){Al(pp.current);var p=Al(na.current),b=$e(p,c.type);p!==b&&(pn(hp,c),pn(na,b))}function y1(c){hp.current===c&&(vn(na),vn(hp))}var An=ko(0);function Hg(c){for(var p=c;p!==null;){if(p.tag===13){var b=p.memoizedState;if(b!==null&&(b=b.dehydrated,b===null||b.data==="$?"||b.data==="$!"))return p}else if(p.tag===19&&p.memoizedProps.revealOrder!==void 0){if((p.flags&128)!==0)return p}else if(p.child!==null){p.child.return=p,p=p.child;continue}if(p===c)break;for(;p.sibling===null;){if(p.return===null||p.return===c)return null;p=p.return}p.sibling.return=p.return,p=p.sibling}return null}var b1=[];function x1(){for(var c=0;c<b1.length;c++)b1[c]._workInProgressVersionPrimary=null;b1.length=0}var Kg=T.ReactCurrentDispatcher,v1=T.ReactCurrentBatchConfig,zl=0,zn=null,lr=null,wr=null,Yg=!1,fp=!1,mp=0,DW=0;function Ur(){throw Error(t(321))}function w1(c,p){if(p===null)return!1;for(var b=0;b<p.length&&b<c.length;b++)if(!_i(c[b],p[b]))return!1;return!0}function S1(c,p,b,S,k,_){if(zl=_,zn=p,p.memoizedState=null,p.updateQueue=null,p.lanes=0,Kg.current=c===null||c.memoizedState===null?OW:WW,c=b(S,k),fp){_=0;do{if(fp=!1,mp=0,25<=_)throw Error(t(301));_+=1,wr=lr=null,p.updateQueue=null,Kg.current=VW,c=b(S,k)}while(fp)}if(Kg.current=Jg,p=lr!==null&&lr.next!==null,zl=0,wr=lr=zn=null,Yg=!1,p)throw Error(t(300));return c}function T1(){var c=mp!==0;return mp=0,c}function ra(){var c={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return wr===null?zn.memoizedState=wr=c:wr=wr.next=c,wr}function ci(){if(lr===null){var c=zn.alternate;c=c!==null?c.memoizedState:null}else c=lr.next;var p=wr===null?zn.memoizedState:wr.next;if(p!==null)wr=p,lr=c;else{if(c===null)throw Error(t(310));lr=c,c={memoizedState:lr.memoizedState,baseState:lr.baseState,baseQueue:lr.baseQueue,queue:lr.queue,next:null},wr===null?zn.memoizedState=wr=c:wr=wr.next=c}return wr}function gp(c,p){return typeof p=="function"?p(c):p}function I1(c){var p=ci(),b=p.queue;if(b===null)throw Error(t(311));b.lastRenderedReducer=c;var S=lr,k=S.baseQueue,_=b.pending;if(_!==null){if(k!==null){var D=k.next;k.next=_.next,_.next=D}S.baseQueue=k=_,b.pending=null}if(k!==null){_=k.next,S=S.baseState;var j=D=null,ie=null,xe=_;do{var Le=xe.lane;if((zl&Le)===Le)ie!==null&&(ie=ie.next={lane:0,action:xe.action,hasEagerState:xe.hasEagerState,eagerState:xe.eagerState,next:null}),S=xe.hasEagerState?xe.eagerState:c(S,xe.action);else{var ze={lane:Le,action:xe.action,hasEagerState:xe.hasEagerState,eagerState:xe.eagerState,next:null};ie===null?(j=ie=ze,D=S):ie=ie.next=ze,zn.lanes|=Le,Dl|=Le}xe=xe.next}while(xe!==null&&xe!==_);ie===null?D=S:ie.next=j,_i(S,p.memoizedState)||(Ts=!0),p.memoizedState=S,p.baseState=D,p.baseQueue=ie,b.lastRenderedState=S}if(c=b.interleaved,c!==null){k=c;do _=k.lane,zn.lanes|=_,Dl|=_,k=k.next;while(k!==c)}else k===null&&(b.lanes=0);return[p.memoizedState,b.dispatch]}function k1(c){var p=ci(),b=p.queue;if(b===null)throw Error(t(311));b.lastRenderedReducer=c;var S=b.dispatch,k=b.pending,_=p.memoizedState;if(k!==null){b.pending=null;var D=k=k.next;do _=c(_,D.action),D=D.next;while(D!==k);_i(_,p.memoizedState)||(Ts=!0),p.memoizedState=_,p.baseQueue===null&&(p.baseState=_),b.lastRenderedState=_}return[_,S]}function nM(){}function rM(c,p){var b=zn,S=ci(),k=p(),_=!_i(S.memoizedState,k);if(_&&(S.memoizedState=k,Ts=!0),S=S.queue,C1(aM.bind(null,b,S,c),[c]),S.getSnapshot!==p||_||wr!==null&&wr.memoizedState.tag&1){if(b.flags|=2048,yp(9,iM.bind(null,b,S,k,p),void 0,null),Sr===null)throw Error(t(349));(zl&30)!==0||sM(b,p,k)}return k}function sM(c,p,b){c.flags|=16384,c={getSnapshot:p,value:b},p=zn.updateQueue,p===null?(p={lastEffect:null,stores:null},zn.updateQueue=p,p.stores=[c]):(b=p.stores,b===null?p.stores=[c]:b.push(c))}function iM(c,p,b,S){p.value=b,p.getSnapshot=S,oM(p)&&lM(c)}function aM(c,p,b){return b(function(){oM(p)&&lM(c)})}function oM(c){var p=c.getSnapshot;c=c.value;try{var b=p();return!_i(c,b)}catch{return!0}}function lM(c){var p=Da(c,1);p!==null&&Li(p,c,1,-1)}function uM(c){var p=ra();return typeof c=="function"&&(c=c()),p.memoizedState=p.baseState=c,c={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:gp,lastRenderedState:c},p.queue=c,c=c.dispatch=GW.bind(null,zn,c),[p.memoizedState,c]}function yp(c,p,b,S){return c={tag:c,create:p,destroy:b,deps:S,next:null},p=zn.updateQueue,p===null?(p={lastEffect:null,stores:null},zn.updateQueue=p,p.lastEffect=c.next=c):(b=p.lastEffect,b===null?p.lastEffect=c.next=c:(S=b.next,b.next=c,c.next=S,p.lastEffect=c)),c}function cM(){return ci().memoizedState}function jg(c,p,b,S){var k=ra();zn.flags|=c,k.memoizedState=yp(1|p,b,void 0,S===void 0?null:S)}function Qg(c,p,b,S){var k=ci();S=S===void 0?null:S;var _=void 0;if(lr!==null){var D=lr.memoizedState;if(_=D.destroy,S!==null&&w1(S,D.deps)){k.memoizedState=yp(p,b,_,S);return}}zn.flags|=c,k.memoizedState=yp(1|p,b,_,S)}function dM(c,p){return jg(8390656,8,c,p)}function C1(c,p){return Qg(2048,8,c,p)}function hM(c,p){return Qg(4,2,c,p)}function pM(c,p){return Qg(4,4,c,p)}function fM(c,p){if(typeof p=="function")return c=c(),p(c),function(){p(null)};if(p!=null)return c=c(),p.current=c,function(){p.current=null}}function mM(c,p,b){return b=b!=null?b.concat([c]):null,Qg(4,4,fM.bind(null,p,c),b)}function _1(){}function gM(c,p){var b=ci();p=p===void 0?null:p;var S=b.memoizedState;return S!==null&&p!==null&&w1(p,S[1])?S[0]:(b.memoizedState=[c,p],c)}function yM(c,p){var b=ci();p=p===void 0?null:p;var S=b.memoizedState;return S!==null&&p!==null&&w1(p,S[1])?S[0]:(c=c(),b.memoizedState=[c,p],c)}function bM(c,p,b){return(zl&21)===0?(c.baseState&&(c.baseState=!1,Ts=!0),c.memoizedState=b):(_i(b,p)||(b=XC(),zn.lanes|=b,Dl|=b,c.baseState=!0),p)}function PW(c,p){var b=tn;tn=b!==0&&4>b?b:4,c(!0);var S=v1.transition;v1.transition={};try{c(!1),p()}finally{tn=b,v1.transition=S}}function xM(){return ci().memoizedState}function FW(c,p,b){var S=Ao(c);if(b={lane:S,action:b,hasEagerState:!1,eagerState:null,next:null},vM(c))wM(p,b);else if(b=X_(c,p,b,S),b!==null){var k=is();Li(b,c,S,k),SM(b,p,S)}}function GW(c,p,b){var S=Ao(c),k={lane:S,action:b,hasEagerState:!1,eagerState:null,next:null};if(vM(c))wM(p,k);else{var _=c.alternate;if(c.lanes===0&&(_===null||_.lanes===0)&&(_=p.lastRenderedReducer,_!==null))try{var D=p.lastRenderedState,j=_(D,b);if(k.hasEagerState=!0,k.eagerState=j,_i(j,D)){var ie=p.interleaved;ie===null?(k.next=k,h1(p)):(k.next=ie.next,ie.next=k),p.interleaved=k;return}}catch{}finally{}b=X_(c,p,k,S),b!==null&&(k=is(),Li(b,c,S,k),SM(b,p,S))}}function vM(c){var p=c.alternate;return c===zn||p!==null&&p===zn}function wM(c,p){fp=Yg=!0;var b=c.pending;b===null?p.next=p:(p.next=b.next,b.next=p),c.pending=p}function SM(c,p,b){if((b&4194240)!==0){var S=p.lanes;S&=c.pendingLanes,b|=S,p.lanes=b,_v(c,b)}}var Jg={readContext:ui,useCallback:Ur,useContext:Ur,useEffect:Ur,useImperativeHandle:Ur,useInsertionEffect:Ur,useLayoutEffect:Ur,useMemo:Ur,useReducer:Ur,useRef:Ur,useState:Ur,useDebugValue:Ur,useDeferredValue:Ur,useTransition:Ur,useMutableSource:Ur,useSyncExternalStore:Ur,useId:Ur,unstable_isNewReconciler:!1},OW={readContext:ui,useCallback:function(c,p){return ra().memoizedState=[c,p===void 0?null:p],c},useContext:ui,useEffect:dM,useImperativeHandle:function(c,p,b){return b=b!=null?b.concat([c]):null,jg(4194308,4,fM.bind(null,p,c),b)},useLayoutEffect:function(c,p){return jg(4194308,4,c,p)},useInsertionEffect:function(c,p){return jg(4,2,c,p)},useMemo:function(c,p){var b=ra();return p=p===void 0?null:p,c=c(),b.memoizedState=[c,p],c},useReducer:function(c,p,b){var S=ra();return p=b!==void 0?b(p):p,S.memoizedState=S.baseState=p,c={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:c,lastRenderedState:p},S.queue=c,c=c.dispatch=FW.bind(null,zn,c),[S.memoizedState,c]},useRef:function(c){var p=ra();return c={current:c},p.memoizedState=c},useState:uM,useDebugValue:_1,useDeferredValue:function(c){return ra().memoizedState=c},useTransition:function(){var c=uM(!1),p=c[0];return c=PW.bind(null,c[1]),ra().memoizedState=c,[p,c]},useMutableSource:function(){},useSyncExternalStore:function(c,p,b){var S=zn,k=ra();if(kn){if(b===void 0)throw Error(t(407));b=b()}else{if(b=p(),Sr===null)throw Error(t(349));(zl&30)!==0||sM(S,p,b)}k.memoizedState=b;var _={value:b,getSnapshot:p};return k.queue=_,dM(aM.bind(null,S,_,c),[c]),S.flags|=2048,yp(9,iM.bind(null,S,_,b,p),void 0,null),b},useId:function(){var c=ra(),p=Sr.identifierPrefix;if(kn){var b=za,S=Aa;b=(S&~(1<<32-bn(S)-1)).toString(32)+b,p=":"+p+"R"+b,b=mp++,0<b&&(p+="H"+b.toString(32)),p+=":"}else b=DW++,p=":"+p+"r"+b.toString(32)+":";return c.memoizedState=p},unstable_isNewReconciler:!1},WW={readContext:ui,useCallback:gM,useContext:ui,useEffect:C1,useImperativeHandle:mM,useInsertionEffect:hM,useLayoutEffect:pM,useMemo:yM,useReducer:I1,useRef:cM,useState:function(){return I1(gp)},useDebugValue:_1,useDeferredValue:function(c){var p=ci();return bM(p,lr.memoizedState,c)},useTransition:function(){var c=I1(gp)[0],p=ci().memoizedState;return[c,p]},useMutableSource:nM,useSyncExternalStore:rM,useId:xM,unstable_isNewReconciler:!1},VW={readContext:ui,useCallback:gM,useContext:ui,useEffect:C1,useImperativeHandle:mM,useInsertionEffect:hM,useLayoutEffect:pM,useMemo:yM,useReducer:k1,useRef:cM,useState:function(){return k1(gp)},useDebugValue:_1,useDeferredValue:function(c){var p=ci();return lr===null?p.memoizedState=c:bM(p,lr.memoizedState,c)},useTransition:function(){var c=k1(gp)[0],p=ci().memoizedState;return[c,p]},useMutableSource:nM,useSyncExternalStore:rM,useId:xM,unstable_isNewReconciler:!1};function wc(c,p){try{var b="",S=p;do b+=Y(S),S=S.return;while(S);var k=b}catch(_){k=`
Error generating stack: `+_.message+`
`+_.stack}return{value:c,source:p,stack:k,digest:null}}function M1(c,p,b){return{value:c,source:null,stack:b??null,digest:p??null}}function N1(c,p){try{console.error(p.value)}catch(b){setTimeout(function(){throw b})}}var $W=typeof WeakMap=="function"?WeakMap:Map;function TM(c,p,b){b=Pa(-1,b),b.tag=3,b.payload={element:null};var S=p.value;return b.callback=function(){iy||(iy=!0,X1=S),N1(c,p)},b}function IM(c,p,b){b=Pa(-1,b),b.tag=3;var S=c.type.getDerivedStateFromError;if(typeof S=="function"){var k=p.value;b.payload=function(){return S(k)},b.callback=function(){N1(c,p)}}var _=c.stateNode;return _!==null&&typeof _.componentDidCatch=="function"&&(b.callback=function(){N1(c,p),typeof S!="function"&&(Ro===null?Ro=new Set([this]):Ro.add(this));var D=p.stack;this.componentDidCatch(p.value,{componentStack:D!==null?D:""})}),b}function kM(c,p,b){var S=c.pingCache;if(S===null){S=c.pingCache=new $W;var k=new Set;S.set(p,k)}else k=S.get(p),k===void 0&&(k=new Set,S.set(p,k));k.has(b)||(k.add(b),c=nV.bind(null,c,p,b),p.then(c,c))}function CM(c){do{var p;if((p=c.tag===13)&&(p=c.memoizedState,p=p!==null?p.dehydrated!==null:!0),p)return c;c=c.return}while(c!==null);return null}function _M(c,p,b,S,k){return(c.mode&1)===0?(c===p?c.flags|=65536:(c.flags|=128,b.flags|=131072,b.flags&=-52805,b.tag===1&&(b.alternate===null?b.tag=17:(p=Pa(-1,1),p.tag=2,No(b,p,1))),b.lanes|=1),c):(c.flags|=65536,c.lanes=k,c)}var BW=T.ReactCurrentOwner,Ts=!1;function ss(c,p,b,S){p.child=c===null?eM(p,null,b,S):xc(p,c.child,b,S)}function MM(c,p,b,S,k){b=b.render;var _=p.ref;return bc(p,k),S=S1(c,p,b,S,_,k),b=T1(),c!==null&&!Ts?(p.updateQueue=c.updateQueue,p.flags&=-2053,c.lanes&=~k,Fa(c,p,k)):(kn&&b&&r1(p),p.flags|=1,ss(c,p,S,k),p.child)}function NM(c,p,b,S,k){if(c===null){var _=b.type;return typeof _=="function"&&!Q1(_)&&_.defaultProps===void 0&&b.compare===null&&b.defaultProps===void 0?(p.tag=15,p.type=_,EM(c,p,_,S,k)):(c=dy(b.type,null,S,p,p.mode,k),c.ref=p.ref,c.return=p,p.child=c)}if(_=c.child,(c.lanes&k)===0){var D=_.memoizedProps;if(b=b.compare,b=b!==null?b:rp,b(D,S)&&c.ref===p.ref)return Fa(c,p,k)}return p.flags|=1,c=Do(_,S),c.ref=p.ref,c.return=p,p.child=c}function EM(c,p,b,S,k){if(c!==null){var _=c.memoizedProps;if(rp(_,S)&&c.ref===p.ref)if(Ts=!1,p.pendingProps=S=_,(c.lanes&k)!==0)(c.flags&131072)!==0&&(Ts=!0);else return p.lanes=c.lanes,Fa(c,p,k)}return E1(c,p,b,S,k)}function RM(c,p,b){var S=p.pendingProps,k=S.children,_=c!==null?c.memoizedState:null;if(S.mode==="hidden")if((p.mode&1)===0)p.memoizedState={baseLanes:0,cachePool:null,transitions:null},pn(Tc,Bs),Bs|=b;else{if((b&1073741824)===0)return c=_!==null?_.baseLanes|b:b,p.lanes=p.childLanes=1073741824,p.memoizedState={baseLanes:c,cachePool:null,transitions:null},p.updateQueue=null,pn(Tc,Bs),Bs|=c,null;p.memoizedState={baseLanes:0,cachePool:null,transitions:null},S=_!==null?_.baseLanes:b,pn(Tc,Bs),Bs|=S}else _!==null?(S=_.baseLanes|b,p.memoizedState=null):S=b,pn(Tc,Bs),Bs|=S;return ss(c,p,k,b),p.child}function LM(c,p){var b=p.ref;(c===null&&b!==null||c!==null&&c.ref!==b)&&(p.flags|=512,p.flags|=2097152)}function E1(c,p,b,S,k){var _=Ss(b)?Nl:Xr.current;return _=pc(p,_),bc(p,k),b=S1(c,p,b,S,_,k),S=T1(),c!==null&&!Ts?(p.updateQueue=c.updateQueue,p.flags&=-2053,c.lanes&=~k,Fa(c,p,k)):(kn&&S&&r1(p),p.flags|=1,ss(c,p,b,k),p.child)}function AM(c,p,b,S,k){if(Ss(b)){var _=!0;Pg(p)}else _=!1;if(bc(p,k),p.stateNode===null)ey(c,p),j_(p,b,S),m1(p,b,S,k),S=!0;else if(c===null){var D=p.stateNode,j=p.memoizedProps;D.props=j;var ie=D.context,xe=b.contextType;typeof xe=="object"&&xe!==null?xe=ui(xe):(xe=Ss(b)?Nl:Xr.current,xe=pc(p,xe));var Le=b.getDerivedStateFromProps,ze=typeof Le=="function"||typeof D.getSnapshotBeforeUpdate=="function";ze||typeof D.UNSAFE_componentWillReceiveProps!="function"&&typeof D.componentWillReceiveProps!="function"||(j!==S||ie!==xe)&&Q_(p,D,S,xe),Mo=!1;var Re=p.memoizedState;D.state=Re,Xg(p,S,D,k),ie=p.memoizedState,j!==S||Re!==ie||ws.current||Mo?(typeof Le=="function"&&(f1(p,b,Le,S),ie=p.memoizedState),(j=Mo||Y_(p,b,j,S,Re,ie,xe))?(ze||typeof D.UNSAFE_componentWillMount!="function"&&typeof D.componentWillMount!="function"||(typeof D.componentWillMount=="function"&&D.componentWillMount(),typeof D.UNSAFE_componentWillMount=="function"&&D.UNSAFE_componentWillMount()),typeof D.componentDidMount=="function"&&(p.flags|=4194308)):(typeof D.componentDidMount=="function"&&(p.flags|=4194308),p.memoizedProps=S,p.memoizedState=ie),D.props=S,D.state=ie,D.context=xe,S=j):(typeof D.componentDidMount=="function"&&(p.flags|=4194308),S=!1)}else{D=p.stateNode,U_(c,p),j=p.memoizedProps,xe=p.type===p.elementType?j:Ni(p.type,j),D.props=xe,ze=p.pendingProps,Re=D.context,ie=b.contextType,typeof ie=="object"&&ie!==null?ie=ui(ie):(ie=Ss(b)?Nl:Xr.current,ie=pc(p,ie));var je=b.getDerivedStateFromProps;(Le=typeof je=="function"||typeof D.getSnapshotBeforeUpdate=="function")||typeof D.UNSAFE_componentWillReceiveProps!="function"&&typeof D.componentWillReceiveProps!="function"||(j!==ze||Re!==ie)&&Q_(p,D,S,ie),Mo=!1,Re=p.memoizedState,D.state=Re,Xg(p,S,D,k);var et=p.memoizedState;j!==ze||Re!==et||ws.current||Mo?(typeof je=="function"&&(f1(p,b,je,S),et=p.memoizedState),(xe=Mo||Y_(p,b,xe,S,Re,et,ie)||!1)?(Le||typeof D.UNSAFE_componentWillUpdate!="function"&&typeof D.componentWillUpdate!="function"||(typeof D.componentWillUpdate=="function"&&D.componentWillUpdate(S,et,ie),typeof D.UNSAFE_componentWillUpdate=="function"&&D.UNSAFE_componentWillUpdate(S,et,ie)),typeof D.componentDidUpdate=="function"&&(p.flags|=4),typeof D.getSnapshotBeforeUpdate=="function"&&(p.flags|=1024)):(typeof D.componentDidUpdate!="function"||j===c.memoizedProps&&Re===c.memoizedState||(p.flags|=4),typeof D.getSnapshotBeforeUpdate!="function"||j===c.memoizedProps&&Re===c.memoizedState||(p.flags|=1024),p.memoizedProps=S,p.memoizedState=et),D.props=S,D.state=et,D.context=ie,S=xe):(typeof D.componentDidUpdate!="function"||j===c.memoizedProps&&Re===c.memoizedState||(p.flags|=4),typeof D.getSnapshotBeforeUpdate!="function"||j===c.memoizedProps&&Re===c.memoizedState||(p.flags|=1024),S=!1)}return R1(c,p,b,S,_,k)}function R1(c,p,b,S,k,_){LM(c,p);var D=(p.flags&128)!==0;if(!S&&!D)return k&&F_(p,b,!1),Fa(c,p,_);S=p.stateNode,BW.current=p;var j=D&&typeof b.getDerivedStateFromError!="function"?null:S.render();return p.flags|=1,c!==null&&D?(p.child=xc(p,c.child,null,_),p.child=xc(p,null,j,_)):ss(c,p,j,_),p.memoizedState=S.state,k&&F_(p,b,!0),p.child}function zM(c){var p=c.stateNode;p.pendingContext?D_(c,p.pendingContext,p.pendingContext!==p.context):p.context&&D_(c,p.context,!1),g1(c,p.containerInfo)}function DM(c,p,b,S,k){return gc(),o1(k),p.flags|=256,ss(c,p,b,S),p.child}var L1={dehydrated:null,treeContext:null,retryLane:0};function A1(c){return{baseLanes:c,cachePool:null,transitions:null}}function PM(c,p,b){var S=p.pendingProps,k=An.current,_=!1,D=(p.flags&128)!==0,j;if((j=D)||(j=c!==null&&c.memoizedState===null?!1:(k&2)!==0),j?(_=!0,p.flags&=-129):(c===null||c.memoizedState!==null)&&(k|=1),pn(An,k&1),c===null)return a1(p),c=p.memoizedState,c!==null&&(c=c.dehydrated,c!==null)?((p.mode&1)===0?p.lanes=1:c.data==="$!"?p.lanes=8:p.lanes=1073741824,null):(D=S.children,c=S.fallback,_?(S=p.mode,_=p.child,D={mode:"hidden",children:D},(S&1)===0&&_!==null?(_.childLanes=0,_.pendingProps=D):_=hy(D,S,0,null),c=Ol(c,S,b,null),_.return=p,c.return=p,_.sibling=c,p.child=_,p.child.memoizedState=A1(b),p.memoizedState=L1,c):z1(p,D));if(k=c.memoizedState,k!==null&&(j=k.dehydrated,j!==null))return XW(c,p,D,S,j,k,b);if(_){_=S.fallback,D=p.mode,k=c.child,j=k.sibling;var ie={mode:"hidden",children:S.children};return(D&1)===0&&p.child!==k?(S=p.child,S.childLanes=0,S.pendingProps=ie,p.deletions=null):(S=Do(k,ie),S.subtreeFlags=k.subtreeFlags&14680064),j!==null?_=Do(j,_):(_=Ol(_,D,b,null),_.flags|=2),_.return=p,S.return=p,S.sibling=_,p.child=S,S=_,_=p.child,D=c.child.memoizedState,D=D===null?A1(b):{baseLanes:D.baseLanes|b,cachePool:null,transitions:D.transitions},_.memoizedState=D,_.childLanes=c.childLanes&~b,p.memoizedState=L1,S}return _=c.child,c=_.sibling,S=Do(_,{mode:"visible",children:S.children}),(p.mode&1)===0&&(S.lanes=b),S.return=p,S.sibling=null,c!==null&&(b=p.deletions,b===null?(p.deletions=[c],p.flags|=16):b.push(c)),p.child=S,p.memoizedState=null,S}function z1(c,p){return p=hy({mode:"visible",children:p},c.mode,0,null),p.return=c,c.child=p}function qg(c,p,b,S){return S!==null&&o1(S),xc(p,c.child,null,b),c=z1(p,p.pendingProps.children),c.flags|=2,p.memoizedState=null,c}function XW(c,p,b,S,k,_,D){if(b)return p.flags&256?(p.flags&=-257,S=M1(Error(t(422))),qg(c,p,D,S)):p.memoizedState!==null?(p.child=c.child,p.flags|=128,null):(_=S.fallback,k=p.mode,S=hy({mode:"visible",children:S.children},k,0,null),_=Ol(_,k,D,null),_.flags|=2,S.return=p,_.return=p,S.sibling=_,p.child=S,(p.mode&1)!==0&&xc(p,c.child,null,D),p.child.memoizedState=A1(D),p.memoizedState=L1,_);if((p.mode&1)===0)return qg(c,p,D,null);if(k.data==="$!"){if(S=k.nextSibling&&k.nextSibling.dataset,S)var j=S.dgst;return S=j,_=Error(t(419)),S=M1(_,S,void 0),qg(c,p,D,S)}if(j=(D&c.childLanes)!==0,Ts||j){if(S=Sr,S!==null){switch(D&-D){case 4:k=2;break;case 16:k=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:k=32;break;case 536870912:k=268435456;break;default:k=0}k=(k&(S.suspendedLanes|D))!==0?0:k,k!==0&&k!==_.retryLane&&(_.retryLane=k,Da(c,k),Li(S,c,k,-1))}return j1(),S=M1(Error(t(421))),qg(c,p,D,S)}return k.data==="$?"?(p.flags|=128,p.child=c.child,p=rV.bind(null,c),k._reactRetry=p,null):(c=_.treeContext,$s=Io(k.nextSibling),Vs=p,kn=!0,Mi=null,c!==null&&(oi[li++]=Aa,oi[li++]=za,oi[li++]=El,Aa=c.id,za=c.overflow,El=p),p=z1(p,S.children),p.flags|=4096,p)}function FM(c,p,b){c.lanes|=p;var S=c.alternate;S!==null&&(S.lanes|=p),d1(c.return,p,b)}function D1(c,p,b,S,k){var _=c.memoizedState;_===null?c.memoizedState={isBackwards:p,rendering:null,renderingStartTime:0,last:S,tail:b,tailMode:k}:(_.isBackwards=p,_.rendering=null,_.renderingStartTime=0,_.last=S,_.tail=b,_.tailMode=k)}function GM(c,p,b){var S=p.pendingProps,k=S.revealOrder,_=S.tail;if(ss(c,p,S.children,b),S=An.current,(S&2)!==0)S=S&1|2,p.flags|=128;else{if(c!==null&&(c.flags&128)!==0)e:for(c=p.child;c!==null;){if(c.tag===13)c.memoizedState!==null&&FM(c,b,p);else if(c.tag===19)FM(c,b,p);else if(c.child!==null){c.child.return=c,c=c.child;continue}if(c===p)break e;for(;c.sibling===null;){if(c.return===null||c.return===p)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}S&=1}if(pn(An,S),(p.mode&1)===0)p.memoizedState=null;else switch(k){case"forwards":for(b=p.child,k=null;b!==null;)c=b.alternate,c!==null&&Hg(c)===null&&(k=b),b=b.sibling;b=k,b===null?(k=p.child,p.child=null):(k=b.sibling,b.sibling=null),D1(p,!1,k,b,_);break;case"backwards":for(b=null,k=p.child,p.child=null;k!==null;){if(c=k.alternate,c!==null&&Hg(c)===null){p.child=k;break}c=k.sibling,k.sibling=b,b=k,k=c}D1(p,!0,b,null,_);break;case"together":D1(p,!1,null,null,void 0);break;default:p.memoizedState=null}return p.child}function ey(c,p){(p.mode&1)===0&&c!==null&&(c.alternate=null,p.alternate=null,p.flags|=2)}function Fa(c,p,b){if(c!==null&&(p.dependencies=c.dependencies),Dl|=p.lanes,(b&p.childLanes)===0)return null;if(c!==null&&p.child!==c.child)throw Error(t(153));if(p.child!==null){for(c=p.child,b=Do(c,c.pendingProps),p.child=b,b.return=p;c.sibling!==null;)c=c.sibling,b=b.sibling=Do(c,c.pendingProps),b.return=p;b.sibling=null}return p.child}function UW(c,p,b){switch(p.tag){case 3:zM(p),gc();break;case 5:tM(p);break;case 1:Ss(p.type)&&Pg(p);break;case 4:g1(p,p.stateNode.containerInfo);break;case 10:var S=p.type._context,k=p.memoizedProps.value;pn(Vg,S._currentValue),S._currentValue=k;break;case 13:if(S=p.memoizedState,S!==null)return S.dehydrated!==null?(pn(An,An.current&1),p.flags|=128,null):(b&p.child.childLanes)!==0?PM(c,p,b):(pn(An,An.current&1),c=Fa(c,p,b),c!==null?c.sibling:null);pn(An,An.current&1);break;case 19:if(S=(b&p.childLanes)!==0,(c.flags&128)!==0){if(S)return GM(c,p,b);p.flags|=128}if(k=p.memoizedState,k!==null&&(k.rendering=null,k.tail=null,k.lastEffect=null),pn(An,An.current),S)break;return null;case 22:case 23:return p.lanes=0,RM(c,p,b)}return Fa(c,p,b)}var OM,P1,WM,VM;OM=function(c,p){for(var b=p.child;b!==null;){if(b.tag===5||b.tag===6)c.appendChild(b.stateNode);else if(b.tag!==4&&b.child!==null){b.child.return=b,b=b.child;continue}if(b===p)break;for(;b.sibling===null;){if(b.return===null||b.return===p)return;b=b.return}b.sibling.return=b.return,b=b.sibling}},P1=function(){},WM=function(c,p,b,S){var k=c.memoizedProps;if(k!==S){c=p.stateNode,Al(na.current);var _=null;switch(b){case"input":k=St(c,k),S=St(c,S),_=[];break;case"select":k=A({},k,{value:void 0}),S=A({},S,{value:void 0}),_=[];break;case"textarea":k=H(c,k),S=H(c,S),_=[];break;default:typeof k.onClick!="function"&&typeof S.onClick=="function"&&(c.onclick=Ag)}Xt(b,S);var D;b=null;for(xe in k)if(!S.hasOwnProperty(xe)&&k.hasOwnProperty(xe)&&k[xe]!=null)if(xe==="style"){var j=k[xe];for(D in j)j.hasOwnProperty(D)&&(b||(b={}),b[D]="")}else xe!=="dangerouslySetInnerHTML"&&xe!=="children"&&xe!=="suppressContentEditableWarning"&&xe!=="suppressHydrationWarning"&&xe!=="autoFocus"&&(s.hasOwnProperty(xe)?_||(_=[]):(_=_||[]).push(xe,null));for(xe in S){var ie=S[xe];if(j=k?.[xe],S.hasOwnProperty(xe)&&ie!==j&&(ie!=null||j!=null))if(xe==="style")if(j){for(D in j)!j.hasOwnProperty(D)||ie&&ie.hasOwnProperty(D)||(b||(b={}),b[D]="");for(D in ie)ie.hasOwnProperty(D)&&j[D]!==ie[D]&&(b||(b={}),b[D]=ie[D])}else b||(_||(_=[]),_.push(xe,b)),b=ie;else xe==="dangerouslySetInnerHTML"?(ie=ie?ie.__html:void 0,j=j?j.__html:void 0,ie!=null&&j!==ie&&(_=_||[]).push(xe,ie)):xe==="children"?typeof ie!="string"&&typeof ie!="number"||(_=_||[]).push(xe,""+ie):xe!=="suppressContentEditableWarning"&&xe!=="suppressHydrationWarning"&&(s.hasOwnProperty(xe)?(ie!=null&&xe==="onScroll"&&xn("scroll",c),_||j===ie||(_=[])):(_=_||[]).push(xe,ie))}b&&(_=_||[]).push("style",b);var xe=_;(p.updateQueue=xe)&&(p.flags|=4)}},VM=function(c,p,b,S){b!==S&&(p.flags|=4)};function bp(c,p){if(!kn)switch(c.tailMode){case"hidden":p=c.tail;for(var b=null;p!==null;)p.alternate!==null&&(b=p),p=p.sibling;b===null?c.tail=null:b.sibling=null;break;case"collapsed":b=c.tail;for(var S=null;b!==null;)b.alternate!==null&&(S=b),b=b.sibling;S===null?p||c.tail===null?c.tail=null:c.tail.sibling=null:S.sibling=null}}function Zr(c){var p=c.alternate!==null&&c.alternate.child===c.child,b=0,S=0;if(p)for(var k=c.child;k!==null;)b|=k.lanes|k.childLanes,S|=k.subtreeFlags&14680064,S|=k.flags&14680064,k.return=c,k=k.sibling;else for(k=c.child;k!==null;)b|=k.lanes|k.childLanes,S|=k.subtreeFlags,S|=k.flags,k.return=c,k=k.sibling;return c.subtreeFlags|=S,c.childLanes=b,p}function ZW(c,p,b){var S=p.pendingProps;switch(s1(p),p.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Zr(p),null;case 1:return Ss(p.type)&&Dg(),Zr(p),null;case 3:return S=p.stateNode,vc(),vn(ws),vn(Xr),x1(),S.pendingContext&&(S.context=S.pendingContext,S.pendingContext=null),(c===null||c.child===null)&&(Wg(p)?p.flags|=4:c===null||c.memoizedState.isDehydrated&&(p.flags&256)===0||(p.flags|=1024,Mi!==null&&(H1(Mi),Mi=null))),P1(c,p),Zr(p),null;case 5:y1(p);var k=Al(pp.current);if(b=p.type,c!==null&&p.stateNode!=null)WM(c,p,b,S,k),c.ref!==p.ref&&(p.flags|=512,p.flags|=2097152);else{if(!S){if(p.stateNode===null)throw Error(t(166));return Zr(p),null}if(c=Al(na.current),Wg(p)){S=p.stateNode,b=p.type;var _=p.memoizedProps;switch(S[ta]=p,S[lp]=_,c=(p.mode&1)!==0,b){case"dialog":xn("cancel",S),xn("close",S);break;case"iframe":case"object":case"embed":xn("load",S);break;case"video":case"audio":for(k=0;k<ip.length;k++)xn(ip[k],S);break;case"source":xn("error",S);break;case"img":case"image":case"link":xn("error",S),xn("load",S);break;case"details":xn("toggle",S);break;case"input":Rt(S,_),xn("invalid",S);break;case"select":S._wrapperState={wasMultiple:!!_.multiple},xn("invalid",S);break;case"textarea":W(S,_),xn("invalid",S)}Xt(b,_),k=null;for(var D in _)if(_.hasOwnProperty(D)){var j=_[D];D==="children"?typeof j=="string"?S.textContent!==j&&(_.suppressHydrationWarning!==!0&&Lg(S.textContent,j,c),k=["children",j]):typeof j=="number"&&S.textContent!==""+j&&(_.suppressHydrationWarning!==!0&&Lg(S.textContent,j,c),k=["children",""+j]):s.hasOwnProperty(D)&&j!=null&&D==="onScroll"&&xn("scroll",S)}switch(b){case"input":We(S),vt(S,_,!0);break;case"textarea":We(S),Pe(S);break;case"select":case"option":break;default:typeof _.onClick=="function"&&(S.onclick=Ag)}S=k,p.updateQueue=S,S!==null&&(p.flags|=4)}else{D=k.nodeType===9?k:k.ownerDocument,c==="http://www.w3.org/1999/xhtml"&&(c=Fe(b)),c==="http://www.w3.org/1999/xhtml"?b==="script"?(c=D.createElement("div"),c.innerHTML="<script><\/script>",c=c.removeChild(c.firstChild)):typeof S.is=="string"?c=D.createElement(b,{is:S.is}):(c=D.createElement(b),b==="select"&&(D=c,S.multiple?D.multiple=!0:S.size&&(D.size=S.size))):c=D.createElementNS(c,b),c[ta]=p,c[lp]=S,OM(c,p,!1,!1),p.stateNode=c;e:{switch(D=un(b,S),b){case"dialog":xn("cancel",c),xn("close",c),k=S;break;case"iframe":case"object":case"embed":xn("load",c),k=S;break;case"video":case"audio":for(k=0;k<ip.length;k++)xn(ip[k],c);k=S;break;case"source":xn("error",c),k=S;break;case"img":case"image":case"link":xn("error",c),xn("load",c),k=S;break;case"details":xn("toggle",c),k=S;break;case"input":Rt(c,S),k=St(c,S),xn("invalid",c);break;case"option":k=S;break;case"select":c._wrapperState={wasMultiple:!!S.multiple},k=A({},S,{value:void 0}),xn("invalid",c);break;case"textarea":W(c,S),k=H(c,S),xn("invalid",c);break;default:k=S}Xt(b,k),j=k;for(_ in j)if(j.hasOwnProperty(_)){var ie=j[_];_==="style"?mt(c,ie):_==="dangerouslySetInnerHTML"?(ie=ie?ie.__html:void 0,ie!=null&&Ke(c,ie)):_==="children"?typeof ie=="string"?(b!=="textarea"||ie!=="")&&Me(c,ie):typeof ie=="number"&&Me(c,""+ie):_!=="suppressContentEditableWarning"&&_!=="suppressHydrationWarning"&&_!=="autoFocus"&&(s.hasOwnProperty(_)?ie!=null&&_==="onScroll"&&xn("scroll",c):ie!=null&&I(c,_,ie,D))}switch(b){case"input":We(c),vt(c,S,!1);break;case"textarea":We(c),Pe(c);break;case"option":S.value!=null&&c.setAttribute("value",""+ve(S.value));break;case"select":c.multiple=!!S.multiple,_=S.value,_!=null?sn(c,!!S.multiple,_,!1):S.defaultValue!=null&&sn(c,!!S.multiple,S.defaultValue,!0);break;default:typeof k.onClick=="function"&&(c.onclick=Ag)}switch(b){case"button":case"input":case"select":case"textarea":S=!!S.autoFocus;break e;case"img":S=!0;break e;default:S=!1}}S&&(p.flags|=4)}p.ref!==null&&(p.flags|=512,p.flags|=2097152)}return Zr(p),null;case 6:if(c&&p.stateNode!=null)VM(c,p,c.memoizedProps,S);else{if(typeof S!="string"&&p.stateNode===null)throw Error(t(166));if(b=Al(pp.current),Al(na.current),Wg(p)){if(S=p.stateNode,b=p.memoizedProps,S[ta]=p,(_=S.nodeValue!==b)&&(c=Vs,c!==null))switch(c.tag){case 3:Lg(S.nodeValue,b,(c.mode&1)!==0);break;case 5:c.memoizedProps.suppressHydrationWarning!==!0&&Lg(S.nodeValue,b,(c.mode&1)!==0)}_&&(p.flags|=4)}else S=(b.nodeType===9?b:b.ownerDocument).createTextNode(S),S[ta]=p,p.stateNode=S}return Zr(p),null;case 13:if(vn(An),S=p.memoizedState,c===null||c.memoizedState!==null&&c.memoizedState.dehydrated!==null){if(kn&&$s!==null&&(p.mode&1)!==0&&(p.flags&128)===0)B_(),gc(),p.flags|=98560,_=!1;else if(_=Wg(p),S!==null&&S.dehydrated!==null){if(c===null){if(!_)throw Error(t(318));if(_=p.memoizedState,_=_!==null?_.dehydrated:null,!_)throw Error(t(317));_[ta]=p}else gc(),(p.flags&128)===0&&(p.memoizedState=null),p.flags|=4;Zr(p),_=!1}else Mi!==null&&(H1(Mi),Mi=null),_=!0;if(!_)return p.flags&65536?p:null}return(p.flags&128)!==0?(p.lanes=b,p):(S=S!==null,S!==(c!==null&&c.memoizedState!==null)&&S&&(p.child.flags|=8192,(p.mode&1)!==0&&(c===null||(An.current&1)!==0?ur===0&&(ur=3):j1())),p.updateQueue!==null&&(p.flags|=4),Zr(p),null);case 4:return vc(),P1(c,p),c===null&&ap(p.stateNode.containerInfo),Zr(p),null;case 10:return c1(p.type._context),Zr(p),null;case 17:return Ss(p.type)&&Dg(),Zr(p),null;case 19:if(vn(An),_=p.memoizedState,_===null)return Zr(p),null;if(S=(p.flags&128)!==0,D=_.rendering,D===null)if(S)bp(_,!1);else{if(ur!==0||c!==null&&(c.flags&128)!==0)for(c=p.child;c!==null;){if(D=Hg(c),D!==null){for(p.flags|=128,bp(_,!1),S=D.updateQueue,S!==null&&(p.updateQueue=S,p.flags|=4),p.subtreeFlags=0,S=b,b=p.child;b!==null;)_=b,c=S,_.flags&=14680066,D=_.alternate,D===null?(_.childLanes=0,_.lanes=c,_.child=null,_.subtreeFlags=0,_.memoizedProps=null,_.memoizedState=null,_.updateQueue=null,_.dependencies=null,_.stateNode=null):(_.childLanes=D.childLanes,_.lanes=D.lanes,_.child=D.child,_.subtreeFlags=0,_.deletions=null,_.memoizedProps=D.memoizedProps,_.memoizedState=D.memoizedState,_.updateQueue=D.updateQueue,_.type=D.type,c=D.dependencies,_.dependencies=c===null?null:{lanes:c.lanes,firstContext:c.firstContext}),b=b.sibling;return pn(An,An.current&1|2),p.child}c=c.sibling}_.tail!==null&&ht()>Ic&&(p.flags|=128,S=!0,bp(_,!1),p.lanes=4194304)}else{if(!S)if(c=Hg(D),c!==null){if(p.flags|=128,S=!0,b=c.updateQueue,b!==null&&(p.updateQueue=b,p.flags|=4),bp(_,!0),_.tail===null&&_.tailMode==="hidden"&&!D.alternate&&!kn)return Zr(p),null}else 2*ht()-_.renderingStartTime>Ic&&b!==1073741824&&(p.flags|=128,S=!0,bp(_,!1),p.lanes=4194304);_.isBackwards?(D.sibling=p.child,p.child=D):(b=_.last,b!==null?b.sibling=D:p.child=D,_.last=D)}return _.tail!==null?(p=_.tail,_.rendering=p,_.tail=p.sibling,_.renderingStartTime=ht(),p.sibling=null,b=An.current,pn(An,S?b&1|2:b&1),p):(Zr(p),null);case 22:case 23:return Y1(),S=p.memoizedState!==null,c!==null&&c.memoizedState!==null!==S&&(p.flags|=8192),S&&(p.mode&1)!==0?(Bs&1073741824)!==0&&(Zr(p),p.subtreeFlags&6&&(p.flags|=8192)):Zr(p),null;case 24:return null;case 25:return null}throw Error(t(156,p.tag))}function HW(c,p){switch(s1(p),p.tag){case 1:return Ss(p.type)&&Dg(),c=p.flags,c&65536?(p.flags=c&-65537|128,p):null;case 3:return vc(),vn(ws),vn(Xr),x1(),c=p.flags,(c&65536)!==0&&(c&128)===0?(p.flags=c&-65537|128,p):null;case 5:return y1(p),null;case 13:if(vn(An),c=p.memoizedState,c!==null&&c.dehydrated!==null){if(p.alternate===null)throw Error(t(340));gc()}return c=p.flags,c&65536?(p.flags=c&-65537|128,p):null;case 19:return vn(An),null;case 4:return vc(),null;case 10:return c1(p.type._context),null;case 22:case 23:return Y1(),null;case 24:return null;default:return null}}var ty=!1,Hr=!1,KW=typeof WeakSet=="function"?WeakSet:Set,Je=null;function Sc(c,p){var b=c.ref;if(b!==null)if(typeof b=="function")try{b(null)}catch(S){Vn(c,p,S)}else b.current=null}function F1(c,p,b){try{b()}catch(S){Vn(c,p,S)}}var $M=!1;function YW(c,p){if(Yv=wg,c=x_(),Vv(c)){if("selectionStart"in c)var b={start:c.selectionStart,end:c.selectionEnd};else e:{b=(b=c.ownerDocument)&&b.defaultView||window;var S=b.getSelection&&b.getSelection();if(S&&S.rangeCount!==0){b=S.anchorNode;var k=S.anchorOffset,_=S.focusNode;S=S.focusOffset;try{b.nodeType,_.nodeType}catch{b=null;break e}var D=0,j=-1,ie=-1,xe=0,Le=0,ze=c,Re=null;t:for(;;){for(var je;ze!==b||k!==0&&ze.nodeType!==3||(j=D+k),ze!==_||S!==0&&ze.nodeType!==3||(ie=D+S),ze.nodeType===3&&(D+=ze.nodeValue.length),(je=ze.firstChild)!==null;)Re=ze,ze=je;for(;;){if(ze===c)break t;if(Re===b&&++xe===k&&(j=D),Re===_&&++Le===S&&(ie=D),(je=ze.nextSibling)!==null)break;ze=Re,Re=ze.parentNode}ze=je}b=j===-1||ie===-1?null:{start:j,end:ie}}else b=null}b=b||{start:0,end:0}}else b=null;for(jv={focusedElem:c,selectionRange:b},wg=!1,Je=p;Je!==null;)if(p=Je,c=p.child,(p.subtreeFlags&1028)!==0&&c!==null)c.return=p,Je=c;else for(;Je!==null;){p=Je;try{var et=p.alternate;if((p.flags&1024)!==0)switch(p.tag){case 0:case 11:case 15:break;case 1:if(et!==null){var it=et.memoizedProps,Kn=et.memoizedState,he=p.stateNode,ue=he.getSnapshotBeforeUpdate(p.elementType===p.type?it:Ni(p.type,it),Kn);he.__reactInternalSnapshotBeforeUpdate=ue}break;case 3:var fe=p.stateNode.containerInfo;fe.nodeType===1?fe.textContent="":fe.nodeType===9&&fe.documentElement&&fe.removeChild(fe.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(t(163))}}catch(Ge){Vn(p,p.return,Ge)}if(c=p.sibling,c!==null){c.return=p.return,Je=c;break}Je=p.return}return et=$M,$M=!1,et}function xp(c,p,b){var S=p.updateQueue;if(S=S!==null?S.lastEffect:null,S!==null){var k=S=S.next;do{if((k.tag&c)===c){var _=k.destroy;k.destroy=void 0,_!==void 0&&F1(p,b,_)}k=k.next}while(k!==S)}}function ny(c,p){if(p=p.updateQueue,p=p!==null?p.lastEffect:null,p!==null){var b=p=p.next;do{if((b.tag&c)===c){var S=b.create;b.destroy=S()}b=b.next}while(b!==p)}}function G1(c){var p=c.ref;if(p!==null){var b=c.stateNode;switch(c.tag){case 5:c=b;break;default:c=b}typeof p=="function"?p(c):p.current=c}}function BM(c){var p=c.alternate;p!==null&&(c.alternate=null,BM(p)),c.child=null,c.deletions=null,c.sibling=null,c.tag===5&&(p=c.stateNode,p!==null&&(delete p[ta],delete p[lp],delete p[e1],delete p[RW],delete p[LW])),c.stateNode=null,c.return=null,c.dependencies=null,c.memoizedProps=null,c.memoizedState=null,c.pendingProps=null,c.stateNode=null,c.updateQueue=null}function XM(c){return c.tag===5||c.tag===3||c.tag===4}function UM(c){e:for(;;){for(;c.sibling===null;){if(c.return===null||XM(c.return))return null;c=c.return}for(c.sibling.return=c.return,c=c.sibling;c.tag!==5&&c.tag!==6&&c.tag!==18;){if(c.flags&2||c.child===null||c.tag===4)continue e;c.child.return=c,c=c.child}if(!(c.flags&2))return c.stateNode}}function O1(c,p,b){var S=c.tag;if(S===5||S===6)c=c.stateNode,p?b.nodeType===8?b.parentNode.insertBefore(c,p):b.insertBefore(c,p):(b.nodeType===8?(p=b.parentNode,p.insertBefore(c,b)):(p=b,p.appendChild(c)),b=b._reactRootContainer,b!=null||p.onclick!==null||(p.onclick=Ag));else if(S!==4&&(c=c.child,c!==null))for(O1(c,p,b),c=c.sibling;c!==null;)O1(c,p,b),c=c.sibling}function W1(c,p,b){var S=c.tag;if(S===5||S===6)c=c.stateNode,p?b.insertBefore(c,p):b.appendChild(c);else if(S!==4&&(c=c.child,c!==null))for(W1(c,p,b),c=c.sibling;c!==null;)W1(c,p,b),c=c.sibling}var Fr=null,Ei=!1;function Eo(c,p,b){for(b=b.child;b!==null;)ZM(c,p,b),b=b.sibling}function ZM(c,p,b){if(vr&&typeof vr.onCommitFiberUnmount=="function")try{vr.onCommitFiberUnmount(er,b)}catch{}switch(b.tag){case 5:Hr||Sc(b,p);case 6:var S=Fr,k=Ei;Fr=null,Eo(c,p,b),Fr=S,Ei=k,Fr!==null&&(Ei?(c=Fr,b=b.stateNode,c.nodeType===8?c.parentNode.removeChild(b):c.removeChild(b)):Fr.removeChild(b.stateNode));break;case 18:Fr!==null&&(Ei?(c=Fr,b=b.stateNode,c.nodeType===8?qv(c.parentNode,b):c.nodeType===1&&qv(c,b),Qh(c)):qv(Fr,b.stateNode));break;case 4:S=Fr,k=Ei,Fr=b.stateNode.containerInfo,Ei=!0,Eo(c,p,b),Fr=S,Ei=k;break;case 0:case 11:case 14:case 15:if(!Hr&&(S=b.updateQueue,S!==null&&(S=S.lastEffect,S!==null))){k=S=S.next;do{var _=k,D=_.destroy;_=_.tag,D!==void 0&&((_&2)!==0||(_&4)!==0)&&F1(b,p,D),k=k.next}while(k!==S)}Eo(c,p,b);break;case 1:if(!Hr&&(Sc(b,p),S=b.stateNode,typeof S.componentWillUnmount=="function"))try{S.props=b.memoizedProps,S.state=b.memoizedState,S.componentWillUnmount()}catch(j){Vn(b,p,j)}Eo(c,p,b);break;case 21:Eo(c,p,b);break;case 22:b.mode&1?(Hr=(S=Hr)||b.memoizedState!==null,Eo(c,p,b),Hr=S):Eo(c,p,b);break;default:Eo(c,p,b)}}function HM(c){var p=c.updateQueue;if(p!==null){c.updateQueue=null;var b=c.stateNode;b===null&&(b=c.stateNode=new KW),p.forEach(function(S){var k=sV.bind(null,c,S);b.has(S)||(b.add(S),S.then(k,k))})}}function Ri(c,p){var b=p.deletions;if(b!==null)for(var S=0;S<b.length;S++){var k=b[S];try{var _=c,D=p,j=D;e:for(;j!==null;){switch(j.tag){case 5:Fr=j.stateNode,Ei=!1;break e;case 3:Fr=j.stateNode.containerInfo,Ei=!0;break e;case 4:Fr=j.stateNode.containerInfo,Ei=!0;break e}j=j.return}if(Fr===null)throw Error(t(160));ZM(_,D,k),Fr=null,Ei=!1;var ie=k.alternate;ie!==null&&(ie.return=null),k.return=null}catch(xe){Vn(k,p,xe)}}if(p.subtreeFlags&12854)for(p=p.child;p!==null;)KM(p,c),p=p.sibling}function KM(c,p){var b=c.alternate,S=c.flags;switch(c.tag){case 0:case 11:case 14:case 15:if(Ri(p,c),sa(c),S&4){try{xp(3,c,c.return),ny(3,c)}catch(it){Vn(c,c.return,it)}try{xp(5,c,c.return)}catch(it){Vn(c,c.return,it)}}break;case 1:Ri(p,c),sa(c),S&512&&b!==null&&Sc(b,b.return);break;case 5:if(Ri(p,c),sa(c),S&512&&b!==null&&Sc(b,b.return),c.flags&32){var k=c.stateNode;try{Me(k,"")}catch(it){Vn(c,c.return,it)}}if(S&4&&(k=c.stateNode,k!=null)){var _=c.memoizedProps,D=b!==null?b.memoizedProps:_,j=c.type,ie=c.updateQueue;if(c.updateQueue=null,ie!==null)try{j==="input"&&_.type==="radio"&&_.name!=null&&_t(k,_),un(j,D);var xe=un(j,_);for(D=0;D<ie.length;D+=2){var Le=ie[D],ze=ie[D+1];Le==="style"?mt(k,ze):Le==="dangerouslySetInnerHTML"?Ke(k,ze):Le==="children"?Me(k,ze):I(k,Le,ze,xe)}switch(j){case"input":Tt(k,_);break;case"textarea":Te(k,_);break;case"select":var Re=k._wrapperState.wasMultiple;k._wrapperState.wasMultiple=!!_.multiple;var je=_.value;je!=null?sn(k,!!_.multiple,je,!1):Re!==!!_.multiple&&(_.defaultValue!=null?sn(k,!!_.multiple,_.defaultValue,!0):sn(k,!!_.multiple,_.multiple?[]:"",!1))}k[lp]=_}catch(it){Vn(c,c.return,it)}}break;case 6:if(Ri(p,c),sa(c),S&4){if(c.stateNode===null)throw Error(t(162));k=c.stateNode,_=c.memoizedProps;try{k.nodeValue=_}catch(it){Vn(c,c.return,it)}}break;case 3:if(Ri(p,c),sa(c),S&4&&b!==null&&b.memoizedState.isDehydrated)try{Qh(p.containerInfo)}catch(it){Vn(c,c.return,it)}break;case 4:Ri(p,c),sa(c);break;case 13:Ri(p,c),sa(c),k=c.child,k.flags&8192&&(_=k.memoizedState!==null,k.stateNode.isHidden=_,!_||k.alternate!==null&&k.alternate.memoizedState!==null||(B1=ht())),S&4&&HM(c);break;case 22:if(Le=b!==null&&b.memoizedState!==null,c.mode&1?(Hr=(xe=Hr)||Le,Ri(p,c),Hr=xe):Ri(p,c),sa(c),S&8192){if(xe=c.memoizedState!==null,(c.stateNode.isHidden=xe)&&!Le&&(c.mode&1)!==0)for(Je=c,Le=c.child;Le!==null;){for(ze=Je=Le;Je!==null;){switch(Re=Je,je=Re.child,Re.tag){case 0:case 11:case 14:case 15:xp(4,Re,Re.return);break;case 1:Sc(Re,Re.return);var et=Re.stateNode;if(typeof et.componentWillUnmount=="function"){S=Re,b=Re.return;try{p=S,et.props=p.memoizedProps,et.state=p.memoizedState,et.componentWillUnmount()}catch(it){Vn(S,b,it)}}break;case 5:Sc(Re,Re.return);break;case 22:if(Re.memoizedState!==null){QM(ze);continue}}je!==null?(je.return=Re,Je=je):QM(ze)}Le=Le.sibling}e:for(Le=null,ze=c;;){if(ze.tag===5){if(Le===null){Le=ze;try{k=ze.stateNode,xe?(_=k.style,typeof _.setProperty=="function"?_.setProperty("display","none","important"):_.display="none"):(j=ze.stateNode,ie=ze.memoizedProps.style,D=ie!=null&&ie.hasOwnProperty("display")?ie.display:null,j.style.display=ft("display",D))}catch(it){Vn(c,c.return,it)}}}else if(ze.tag===6){if(Le===null)try{ze.stateNode.nodeValue=xe?"":ze.memoizedProps}catch(it){Vn(c,c.return,it)}}else if((ze.tag!==22&&ze.tag!==23||ze.memoizedState===null||ze===c)&&ze.child!==null){ze.child.return=ze,ze=ze.child;continue}if(ze===c)break e;for(;ze.sibling===null;){if(ze.return===null||ze.return===c)break e;Le===ze&&(Le=null),ze=ze.return}Le===ze&&(Le=null),ze.sibling.return=ze.return,ze=ze.sibling}}break;case 19:Ri(p,c),sa(c),S&4&&HM(c);break;case 21:break;default:Ri(p,c),sa(c)}}function sa(c){var p=c.flags;if(p&2){try{e:{for(var b=c.return;b!==null;){if(XM(b)){var S=b;break e}b=b.return}throw Error(t(160))}switch(S.tag){case 5:var k=S.stateNode;S.flags&32&&(Me(k,""),S.flags&=-33);var _=UM(c);W1(c,_,k);break;case 3:case 4:var D=S.stateNode.containerInfo,j=UM(c);O1(c,j,D);break;default:throw Error(t(161))}}catch(ie){Vn(c,c.return,ie)}c.flags&=-3}p&4096&&(c.flags&=-4097)}function jW(c,p,b){Je=c,YM(c)}function YM(c,p,b){for(var S=(c.mode&1)!==0;Je!==null;){var k=Je,_=k.child;if(k.tag===22&&S){var D=k.memoizedState!==null||ty;if(!D){var j=k.alternate,ie=j!==null&&j.memoizedState!==null||Hr;j=ty;var xe=Hr;if(ty=D,(Hr=ie)&&!xe)for(Je=k;Je!==null;)D=Je,ie=D.child,D.tag===22&&D.memoizedState!==null?JM(k):ie!==null?(ie.return=D,Je=ie):JM(k);for(;_!==null;)Je=_,YM(_),_=_.sibling;Je=k,ty=j,Hr=xe}jM(c)}else(k.subtreeFlags&8772)!==0&&_!==null?(_.return=k,Je=_):jM(c)}}function jM(c){for(;Je!==null;){var p=Je;if((p.flags&8772)!==0){var b=p.alternate;try{if((p.flags&8772)!==0)switch(p.tag){case 0:case 11:case 15:Hr||ny(5,p);break;case 1:var S=p.stateNode;if(p.flags&4&&!Hr)if(b===null)S.componentDidMount();else{var k=p.elementType===p.type?b.memoizedProps:Ni(p.type,b.memoizedProps);S.componentDidUpdate(k,b.memoizedState,S.__reactInternalSnapshotBeforeUpdate)}var _=p.updateQueue;_!==null&&H_(p,_,S);break;case 3:var D=p.updateQueue;if(D!==null){if(b=null,p.child!==null)switch(p.child.tag){case 5:b=p.child.stateNode;break;case 1:b=p.child.stateNode}H_(p,D,b)}break;case 5:var j=p.stateNode;if(b===null&&p.flags&4){b=j;var ie=p.memoizedProps;switch(p.type){case"button":case"input":case"select":case"textarea":ie.autoFocus&&b.focus();break;case"img":ie.src&&(b.src=ie.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(p.memoizedState===null){var xe=p.alternate;if(xe!==null){var Le=xe.memoizedState;if(Le!==null){var ze=Le.dehydrated;ze!==null&&Qh(ze)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(t(163))}Hr||p.flags&512&&G1(p)}catch(Re){Vn(p,p.return,Re)}}if(p===c){Je=null;break}if(b=p.sibling,b!==null){b.return=p.return,Je=b;break}Je=p.return}}function QM(c){for(;Je!==null;){var p=Je;if(p===c){Je=null;break}var b=p.sibling;if(b!==null){b.return=p.return,Je=b;break}Je=p.return}}function JM(c){for(;Je!==null;){var p=Je;try{switch(p.tag){case 0:case 11:case 15:var b=p.return;try{ny(4,p)}catch(ie){Vn(p,b,ie)}break;case 1:var S=p.stateNode;if(typeof S.componentDidMount=="function"){var k=p.return;try{S.componentDidMount()}catch(ie){Vn(p,k,ie)}}var _=p.return;try{G1(p)}catch(ie){Vn(p,_,ie)}break;case 5:var D=p.return;try{G1(p)}catch(ie){Vn(p,D,ie)}}}catch(ie){Vn(p,p.return,ie)}if(p===c){Je=null;break}var j=p.sibling;if(j!==null){j.return=p.return,Je=j;break}Je=p.return}}var QW=Math.ceil,ry=T.ReactCurrentDispatcher,V1=T.ReactCurrentOwner,di=T.ReactCurrentBatchConfig,Qt=0,Sr=null,tr=null,Gr=0,Bs=0,Tc=ko(0),ur=0,vp=null,Dl=0,sy=0,$1=0,wp=null,Is=null,B1=0,Ic=1/0,Ga=null,iy=!1,X1=null,Ro=null,ay=!1,Lo=null,oy=0,Sp=0,U1=null,ly=-1,uy=0;function is(){return(Qt&6)!==0?ht():ly!==-1?ly:ly=ht()}function Ao(c){return(c.mode&1)===0?1:(Qt&2)!==0&&Gr!==0?Gr&-Gr:zW.transition!==null?(uy===0&&(uy=XC()),uy):(c=tn,c!==0||(c=window.event,c=c===void 0?16:qC(c.type)),c)}function Li(c,p,b,S){if(50<Sp)throw Sp=0,U1=null,Error(t(185));Zh(c,b,S),((Qt&2)===0||c!==Sr)&&(c===Sr&&((Qt&2)===0&&(sy|=b),ur===4&&zo(c,Gr)),ks(c,S),b===1&&Qt===0&&(p.mode&1)===0&&(Ic=ht()+500,Fg&&_o()))}function ks(c,p){var b=c.callbackNode;zO(c,p);var S=bg(c,c===Sr?Gr:0);if(S===0)b!==null&&ai(b),c.callbackNode=null,c.callbackPriority=0;else if(p=S&-S,c.callbackPriority!==p){if(b!=null&&ai(b),p===1)c.tag===0?AW(eN.bind(null,c)):G_(eN.bind(null,c)),NW(function(){(Qt&6)===0&&_o()}),b=null;else{switch(UC(S)){case 1:b=Wn;break;case 4:b=ea;break;case 16:b=Cl;break;case 536870912:b=rc;break;default:b=Cl}b=lN(b,qM.bind(null,c))}c.callbackPriority=p,c.callbackNode=b}}function qM(c,p){if(ly=-1,uy=0,(Qt&6)!==0)throw Error(t(327));var b=c.callbackNode;if(kc()&&c.callbackNode!==b)return null;var S=bg(c,c===Sr?Gr:0);if(S===0)return null;if((S&30)!==0||(S&c.expiredLanes)!==0||p)p=cy(c,S);else{p=S;var k=Qt;Qt|=2;var _=nN();(Sr!==c||Gr!==p)&&(Ga=null,Ic=ht()+500,Fl(c,p));do try{eV();break}catch(j){tN(c,j)}while(!0);u1(),ry.current=_,Qt=k,tr!==null?p=0:(Sr=null,Gr=0,p=ur)}if(p!==0){if(p===2&&(k=kv(c),k!==0&&(S=k,p=Z1(c,k))),p===1)throw b=vp,Fl(c,0),zo(c,S),ks(c,ht()),b;if(p===6)zo(c,S);else{if(k=c.current.alternate,(S&30)===0&&!JW(k)&&(p=cy(c,S),p===2&&(_=kv(c),_!==0&&(S=_,p=Z1(c,_))),p===1))throw b=vp,Fl(c,0),zo(c,S),ks(c,ht()),b;switch(c.finishedWork=k,c.finishedLanes=S,p){case 0:case 1:throw Error(t(345));case 2:Gl(c,Is,Ga);break;case 3:if(zo(c,S),(S&130023424)===S&&(p=B1+500-ht(),10<p)){if(bg(c,0)!==0)break;if(k=c.suspendedLanes,(k&S)!==S){is(),c.pingedLanes|=c.suspendedLanes&k;break}c.timeoutHandle=Jv(Gl.bind(null,c,Is,Ga),p);break}Gl(c,Is,Ga);break;case 4:if(zo(c,S),(S&4194240)===S)break;for(p=c.eventTimes,k=-1;0<S;){var D=31-bn(S);_=1<<D,D=p[D],D>k&&(k=D),S&=~_}if(S=k,S=ht()-S,S=(120>S?120:480>S?480:1080>S?1080:1920>S?1920:3e3>S?3e3:4320>S?4320:1960*QW(S/1960))-S,10<S){c.timeoutHandle=Jv(Gl.bind(null,c,Is,Ga),S);break}Gl(c,Is,Ga);break;case 5:Gl(c,Is,Ga);break;default:throw Error(t(329))}}}return ks(c,ht()),c.callbackNode===b?qM.bind(null,c):null}function Z1(c,p){var b=wp;return c.current.memoizedState.isDehydrated&&(Fl(c,p).flags|=256),c=cy(c,p),c!==2&&(p=Is,Is=b,p!==null&&H1(p)),c}function H1(c){Is===null?Is=c:Is.push.apply(Is,c)}function JW(c){for(var p=c;;){if(p.flags&16384){var b=p.updateQueue;if(b!==null&&(b=b.stores,b!==null))for(var S=0;S<b.length;S++){var k=b[S],_=k.getSnapshot;k=k.value;try{if(!_i(_(),k))return!1}catch{return!1}}}if(b=p.child,p.subtreeFlags&16384&&b!==null)b.return=p,p=b;else{if(p===c)break;for(;p.sibling===null;){if(p.return===null||p.return===c)return!0;p=p.return}p.sibling.return=p.return,p=p.sibling}}return!0}function zo(c,p){for(p&=~$1,p&=~sy,c.suspendedLanes|=p,c.pingedLanes&=~p,c=c.expirationTimes;0<p;){var b=31-bn(p),S=1<<b;c[b]=-1,p&=~S}}function eN(c){if((Qt&6)!==0)throw Error(t(327));kc();var p=bg(c,0);if((p&1)===0)return ks(c,ht()),null;var b=cy(c,p);if(c.tag!==0&&b===2){var S=kv(c);S!==0&&(p=S,b=Z1(c,S))}if(b===1)throw b=vp,Fl(c,0),zo(c,p),ks(c,ht()),b;if(b===6)throw Error(t(345));return c.finishedWork=c.current.alternate,c.finishedLanes=p,Gl(c,Is,Ga),ks(c,ht()),null}function K1(c,p){var b=Qt;Qt|=1;try{return c(p)}finally{Qt=b,Qt===0&&(Ic=ht()+500,Fg&&_o())}}function Pl(c){Lo!==null&&Lo.tag===0&&(Qt&6)===0&&kc();var p=Qt;Qt|=1;var b=di.transition,S=tn;try{if(di.transition=null,tn=1,c)return c()}finally{tn=S,di.transition=b,Qt=p,(Qt&6)===0&&_o()}}function Y1(){Bs=Tc.current,vn(Tc)}function Fl(c,p){c.finishedWork=null,c.finishedLanes=0;var b=c.timeoutHandle;if(b!==-1&&(c.timeoutHandle=-1,MW(b)),tr!==null)for(b=tr.return;b!==null;){var S=b;switch(s1(S),S.tag){case 1:S=S.type.childContextTypes,S!=null&&Dg();break;case 3:vc(),vn(ws),vn(Xr),x1();break;case 5:y1(S);break;case 4:vc();break;case 13:vn(An);break;case 19:vn(An);break;case 10:c1(S.type._context);break;case 22:case 23:Y1()}b=b.return}if(Sr=c,tr=c=Do(c.current,null),Gr=Bs=p,ur=0,vp=null,$1=sy=Dl=0,Is=wp=null,Ll!==null){for(p=0;p<Ll.length;p++)if(b=Ll[p],S=b.interleaved,S!==null){b.interleaved=null;var k=S.next,_=b.pending;if(_!==null){var D=_.next;_.next=k,S.next=D}b.pending=S}Ll=null}return c}function tN(c,p){do{var b=tr;try{if(u1(),Kg.current=Jg,Yg){for(var S=zn.memoizedState;S!==null;){var k=S.queue;k!==null&&(k.pending=null),S=S.next}Yg=!1}if(zl=0,wr=lr=zn=null,fp=!1,mp=0,V1.current=null,b===null||b.return===null){ur=1,vp=p,tr=null;break}e:{var _=c,D=b.return,j=b,ie=p;if(p=Gr,j.flags|=32768,ie!==null&&typeof ie=="object"&&typeof ie.then=="function"){var xe=ie,Le=j,ze=Le.tag;if((Le.mode&1)===0&&(ze===0||ze===11||ze===15)){var Re=Le.alternate;Re?(Le.updateQueue=Re.updateQueue,Le.memoizedState=Re.memoizedState,Le.lanes=Re.lanes):(Le.updateQueue=null,Le.memoizedState=null)}var je=CM(D);if(je!==null){je.flags&=-257,_M(je,D,j,_,p),je.mode&1&&kM(_,xe,p),p=je,ie=xe;var et=p.updateQueue;if(et===null){var it=new Set;it.add(ie),p.updateQueue=it}else et.add(ie);break e}else{if((p&1)===0){kM(_,xe,p),j1();break e}ie=Error(t(426))}}else if(kn&&j.mode&1){var Kn=CM(D);if(Kn!==null){(Kn.flags&65536)===0&&(Kn.flags|=256),_M(Kn,D,j,_,p),o1(wc(ie,j));break e}}_=ie=wc(ie,j),ur!==4&&(ur=2),wp===null?wp=[_]:wp.push(_),_=D;do{switch(_.tag){case 3:_.flags|=65536,p&=-p,_.lanes|=p;var he=TM(_,ie,p);Z_(_,he);break e;case 1:j=ie;var ue=_.type,fe=_.stateNode;if((_.flags&128)===0&&(typeof ue.getDerivedStateFromError=="function"||fe!==null&&typeof fe.componentDidCatch=="function"&&(Ro===null||!Ro.has(fe)))){_.flags|=65536,p&=-p,_.lanes|=p;var Ge=IM(_,j,p);Z_(_,Ge);break e}}_=_.return}while(_!==null)}sN(b)}catch(lt){p=lt,tr===b&&b!==null&&(tr=b=b.return);continue}break}while(!0)}function nN(){var c=ry.current;return ry.current=Jg,c===null?Jg:c}function j1(){(ur===0||ur===3||ur===2)&&(ur=4),Sr===null||(Dl&268435455)===0&&(sy&268435455)===0||zo(Sr,Gr)}function cy(c,p){var b=Qt;Qt|=2;var S=nN();(Sr!==c||Gr!==p)&&(Ga=null,Fl(c,p));do try{qW();break}catch(k){tN(c,k)}while(!0);if(u1(),Qt=b,ry.current=S,tr!==null)throw Error(t(261));return Sr=null,Gr=0,ur}function qW(){for(;tr!==null;)rN(tr)}function eV(){for(;tr!==null&&!Ea();)rN(tr)}function rN(c){var p=oN(c.alternate,c,Bs);c.memoizedProps=c.pendingProps,p===null?sN(c):tr=p,V1.current=null}function sN(c){var p=c;do{var b=p.alternate;if(c=p.return,(p.flags&32768)===0){if(b=ZW(b,p,Bs),b!==null){tr=b;return}}else{if(b=HW(b,p),b!==null){b.flags&=32767,tr=b;return}if(c!==null)c.flags|=32768,c.subtreeFlags=0,c.deletions=null;else{ur=6,tr=null;return}}if(p=p.sibling,p!==null){tr=p;return}tr=p=c}while(p!==null);ur===0&&(ur=5)}function Gl(c,p,b){var S=tn,k=di.transition;try{di.transition=null,tn=1,tV(c,p,b,S)}finally{di.transition=k,tn=S}return null}function tV(c,p,b,S){do kc();while(Lo!==null);if((Qt&6)!==0)throw Error(t(327));b=c.finishedWork;var k=c.finishedLanes;if(b===null)return null;if(c.finishedWork=null,c.finishedLanes=0,b===c.current)throw Error(t(177));c.callbackNode=null,c.callbackPriority=0;var _=b.lanes|b.childLanes;if(DO(c,_),c===Sr&&(tr=Sr=null,Gr=0),(b.subtreeFlags&2064)===0&&(b.flags&2064)===0||ay||(ay=!0,lN(Cl,function(){return kc(),null})),_=(b.flags&15990)!==0,(b.subtreeFlags&15990)!==0||_){_=di.transition,di.transition=null;var D=tn;tn=1;var j=Qt;Qt|=4,V1.current=null,YW(c,b),KM(b,c),wW(jv),wg=!!Yv,jv=Yv=null,c.current=b,jW(b),On(),Qt=j,tn=D,di.transition=_}else c.current=b;if(ay&&(ay=!1,Lo=c,oy=k),_=c.pendingLanes,_===0&&(Ro=null),Bh(b.stateNode),ks(c,ht()),p!==null)for(S=c.onRecoverableError,b=0;b<p.length;b++)k=p[b],S(k.value,{componentStack:k.stack,digest:k.digest});if(iy)throw iy=!1,c=X1,X1=null,c;return(oy&1)!==0&&c.tag!==0&&kc(),_=c.pendingLanes,(_&1)!==0?c===U1?Sp++:(Sp=0,U1=c):Sp=0,_o(),null}function kc(){if(Lo!==null){var c=UC(oy),p=di.transition,b=tn;try{if(di.transition=null,tn=16>c?16:c,Lo===null)var S=!1;else{if(c=Lo,Lo=null,oy=0,(Qt&6)!==0)throw Error(t(331));var k=Qt;for(Qt|=4,Je=c.current;Je!==null;){var _=Je,D=_.child;if((Je.flags&16)!==0){var j=_.deletions;if(j!==null){for(var ie=0;ie<j.length;ie++){var xe=j[ie];for(Je=xe;Je!==null;){var Le=Je;switch(Le.tag){case 0:case 11:case 15:xp(8,Le,_)}var ze=Le.child;if(ze!==null)ze.return=Le,Je=ze;else for(;Je!==null;){Le=Je;var Re=Le.sibling,je=Le.return;if(BM(Le),Le===xe){Je=null;break}if(Re!==null){Re.return=je,Je=Re;break}Je=je}}}var et=_.alternate;if(et!==null){var it=et.child;if(it!==null){et.child=null;do{var Kn=it.sibling;it.sibling=null,it=Kn}while(it!==null)}}Je=_}}if((_.subtreeFlags&2064)!==0&&D!==null)D.return=_,Je=D;else e:for(;Je!==null;){if(_=Je,(_.flags&2048)!==0)switch(_.tag){case 0:case 11:case 15:xp(9,_,_.return)}var he=_.sibling;if(he!==null){he.return=_.return,Je=he;break e}Je=_.return}}var ue=c.current;for(Je=ue;Je!==null;){D=Je;var fe=D.child;if((D.subtreeFlags&2064)!==0&&fe!==null)fe.return=D,Je=fe;else e:for(D=ue;Je!==null;){if(j=Je,(j.flags&2048)!==0)try{switch(j.tag){case 0:case 11:case 15:ny(9,j)}}catch(lt){Vn(j,j.return,lt)}if(j===D){Je=null;break e}var Ge=j.sibling;if(Ge!==null){Ge.return=j.return,Je=Ge;break e}Je=j.return}}if(Qt=k,_o(),vr&&typeof vr.onPostCommitFiberRoot=="function")try{vr.onPostCommitFiberRoot(er,c)}catch{}S=!0}return S}finally{tn=b,di.transition=p}}return!1}function iN(c,p,b){p=wc(b,p),p=TM(c,p,1),c=No(c,p,1),p=is(),c!==null&&(Zh(c,1,p),ks(c,p))}function Vn(c,p,b){if(c.tag===3)iN(c,c,b);else for(;p!==null;){if(p.tag===3){iN(p,c,b);break}else if(p.tag===1){var S=p.stateNode;if(typeof p.type.getDerivedStateFromError=="function"||typeof S.componentDidCatch=="function"&&(Ro===null||!Ro.has(S))){c=wc(b,c),c=IM(p,c,1),p=No(p,c,1),c=is(),p!==null&&(Zh(p,1,c),ks(p,c));break}}p=p.return}}function nV(c,p,b){var S=c.pingCache;S!==null&&S.delete(p),p=is(),c.pingedLanes|=c.suspendedLanes&b,Sr===c&&(Gr&b)===b&&(ur===4||ur===3&&(Gr&130023424)===Gr&&500>ht()-B1?Fl(c,0):$1|=b),ks(c,p)}function aN(c,p){p===0&&((c.mode&1)===0?p=1:(p=yg,yg<<=1,(yg&130023424)===0&&(yg=4194304)));var b=is();c=Da(c,p),c!==null&&(Zh(c,p,b),ks(c,b))}function rV(c){var p=c.memoizedState,b=0;p!==null&&(b=p.retryLane),aN(c,b)}function sV(c,p){var b=0;switch(c.tag){case 13:var S=c.stateNode,k=c.memoizedState;k!==null&&(b=k.retryLane);break;case 19:S=c.stateNode;break;default:throw Error(t(314))}S!==null&&S.delete(p),aN(c,b)}var oN;oN=function(c,p,b){if(c!==null)if(c.memoizedProps!==p.pendingProps||ws.current)Ts=!0;else{if((c.lanes&b)===0&&(p.flags&128)===0)return Ts=!1,UW(c,p,b);Ts=(c.flags&131072)!==0}else Ts=!1,kn&&(p.flags&1048576)!==0&&O_(p,Og,p.index);switch(p.lanes=0,p.tag){case 2:var S=p.type;ey(c,p),c=p.pendingProps;var k=pc(p,Xr.current);bc(p,b),k=S1(null,p,S,c,k,b);var _=T1();return p.flags|=1,typeof k=="object"&&k!==null&&typeof k.render=="function"&&k.$$typeof===void 0?(p.tag=1,p.memoizedState=null,p.updateQueue=null,Ss(S)?(_=!0,Pg(p)):_=!1,p.memoizedState=k.state!==null&&k.state!==void 0?k.state:null,p1(p),k.updater=Ug,p.stateNode=k,k._reactInternals=p,m1(p,S,c,b),p=R1(null,p,S,!0,_,b)):(p.tag=0,kn&&_&&r1(p),ss(null,p,k,b),p=p.child),p;case 16:S=p.elementType;e:{switch(ey(c,p),c=p.pendingProps,k=S._init,S=k(S._payload),p.type=S,k=p.tag=aV(S),c=Ni(S,c),k){case 0:p=E1(null,p,S,c,b);break e;case 1:p=AM(null,p,S,c,b);break e;case 11:p=MM(null,p,S,c,b);break e;case 14:p=NM(null,p,S,Ni(S.type,c),b);break e}throw Error(t(306,S,""))}return p;case 0:return S=p.type,k=p.pendingProps,k=p.elementType===S?k:Ni(S,k),E1(c,p,S,k,b);case 1:return S=p.type,k=p.pendingProps,k=p.elementType===S?k:Ni(S,k),AM(c,p,S,k,b);case 3:e:{if(zM(p),c===null)throw Error(t(387));S=p.pendingProps,_=p.memoizedState,k=_.element,U_(c,p),Xg(p,S,null,b);var D=p.memoizedState;if(S=D.element,_.isDehydrated)if(_={element:S,isDehydrated:!1,cache:D.cache,pendingSuspenseBoundaries:D.pendingSuspenseBoundaries,transitions:D.transitions},p.updateQueue.baseState=_,p.memoizedState=_,p.flags&256){k=wc(Error(t(423)),p),p=DM(c,p,S,b,k);break e}else if(S!==k){k=wc(Error(t(424)),p),p=DM(c,p,S,b,k);break e}else for($s=Io(p.stateNode.containerInfo.firstChild),Vs=p,kn=!0,Mi=null,b=eM(p,null,S,b),p.child=b;b;)b.flags=b.flags&-3|4096,b=b.sibling;else{if(gc(),S===k){p=Fa(c,p,b);break e}ss(c,p,S,b)}p=p.child}return p;case 5:return tM(p),c===null&&a1(p),S=p.type,k=p.pendingProps,_=c!==null?c.memoizedProps:null,D=k.children,Qv(S,k)?D=null:_!==null&&Qv(S,_)&&(p.flags|=32),LM(c,p),ss(c,p,D,b),p.child;case 6:return c===null&&a1(p),null;case 13:return PM(c,p,b);case 4:return g1(p,p.stateNode.containerInfo),S=p.pendingProps,c===null?p.child=xc(p,null,S,b):ss(c,p,S,b),p.child;case 11:return S=p.type,k=p.pendingProps,k=p.elementType===S?k:Ni(S,k),MM(c,p,S,k,b);case 7:return ss(c,p,p.pendingProps,b),p.child;case 8:return ss(c,p,p.pendingProps.children,b),p.child;case 12:return ss(c,p,p.pendingProps.children,b),p.child;case 10:e:{if(S=p.type._context,k=p.pendingProps,_=p.memoizedProps,D=k.value,pn(Vg,S._currentValue),S._currentValue=D,_!==null)if(_i(_.value,D)){if(_.children===k.children&&!ws.current){p=Fa(c,p,b);break e}}else for(_=p.child,_!==null&&(_.return=p);_!==null;){var j=_.dependencies;if(j!==null){D=_.child;for(var ie=j.firstContext;ie!==null;){if(ie.context===S){if(_.tag===1){ie=Pa(-1,b&-b),ie.tag=2;var xe=_.updateQueue;if(xe!==null){xe=xe.shared;var Le=xe.pending;Le===null?ie.next=ie:(ie.next=Le.next,Le.next=ie),xe.pending=ie}}_.lanes|=b,ie=_.alternate,ie!==null&&(ie.lanes|=b),d1(_.return,b,p),j.lanes|=b;break}ie=ie.next}}else if(_.tag===10)D=_.type===p.type?null:_.child;else if(_.tag===18){if(D=_.return,D===null)throw Error(t(341));D.lanes|=b,j=D.alternate,j!==null&&(j.lanes|=b),d1(D,b,p),D=_.sibling}else D=_.child;if(D!==null)D.return=_;else for(D=_;D!==null;){if(D===p){D=null;break}if(_=D.sibling,_!==null){_.return=D.return,D=_;break}D=D.return}_=D}ss(c,p,k.children,b),p=p.child}return p;case 9:return k=p.type,S=p.pendingProps.children,bc(p,b),k=ui(k),S=S(k),p.flags|=1,ss(c,p,S,b),p.child;case 14:return S=p.type,k=Ni(S,p.pendingProps),k=Ni(S.type,k),NM(c,p,S,k,b);case 15:return EM(c,p,p.type,p.pendingProps,b);case 17:return S=p.type,k=p.pendingProps,k=p.elementType===S?k:Ni(S,k),ey(c,p),p.tag=1,Ss(S)?(c=!0,Pg(p)):c=!1,bc(p,b),j_(p,S,k),m1(p,S,k,b),R1(null,p,S,!0,c,b);case 19:return GM(c,p,b);case 22:return RM(c,p,b)}throw Error(t(156,p.tag))};function lN(c,p){return Br(c,p)}function iV(c,p,b,S){this.tag=c,this.key=b,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=p,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=S,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function hi(c,p,b,S){return new iV(c,p,b,S)}function Q1(c){return c=c.prototype,!(!c||!c.isReactComponent)}function aV(c){if(typeof c=="function")return Q1(c)?1:0;if(c!=null){if(c=c.$$typeof,c===U)return 11;if(c===Z)return 14}return 2}function Do(c,p){var b=c.alternate;return b===null?(b=hi(c.tag,p,c.key,c.mode),b.elementType=c.elementType,b.type=c.type,b.stateNode=c.stateNode,b.alternate=c,c.alternate=b):(b.pendingProps=p,b.type=c.type,b.flags=0,b.subtreeFlags=0,b.deletions=null),b.flags=c.flags&14680064,b.childLanes=c.childLanes,b.lanes=c.lanes,b.child=c.child,b.memoizedProps=c.memoizedProps,b.memoizedState=c.memoizedState,b.updateQueue=c.updateQueue,p=c.dependencies,b.dependencies=p===null?null:{lanes:p.lanes,firstContext:p.firstContext},b.sibling=c.sibling,b.index=c.index,b.ref=c.ref,b}function dy(c,p,b,S,k,_){var D=2;if(S=c,typeof c=="function")Q1(c)&&(D=1);else if(typeof c=="string")D=5;else e:switch(c){case L:return Ol(b.children,k,_,p);case M:D=8,k|=8;break;case R:return c=hi(12,b,p,k|2),c.elementType=R,c.lanes=_,c;case G:return c=hi(13,b,p,k),c.elementType=G,c.lanes=_,c;case V:return c=hi(19,b,p,k),c.elementType=V,c.lanes=_,c;case te:return hy(b,k,_,p);default:if(typeof c=="object"&&c!==null)switch(c.$$typeof){case z:D=10;break e;case X:D=9;break e;case U:D=11;break e;case Z:D=14;break e;case J:D=16,S=null;break e}throw Error(t(130,c==null?c:typeof c,""))}return p=hi(D,b,p,k),p.elementType=c,p.type=S,p.lanes=_,p}function Ol(c,p,b,S){return c=hi(7,c,S,p),c.lanes=b,c}function hy(c,p,b,S){return c=hi(22,c,S,p),c.elementType=te,c.lanes=b,c.stateNode={isHidden:!1},c}function J1(c,p,b){return c=hi(6,c,null,p),c.lanes=b,c}function q1(c,p,b){return p=hi(4,c.children!==null?c.children:[],c.key,p),p.lanes=b,p.stateNode={containerInfo:c.containerInfo,pendingChildren:null,implementation:c.implementation},p}function oV(c,p,b,S,k){this.tag=p,this.containerInfo=c,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Cv(0),this.expirationTimes=Cv(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Cv(0),this.identifierPrefix=S,this.onRecoverableError=k,this.mutableSourceEagerHydrationData=null}function ew(c,p,b,S,k,_,D,j,ie){return c=new oV(c,p,b,j,ie),p===1?(p=1,_===!0&&(p|=8)):p=0,_=hi(3,null,null,p),c.current=_,_.stateNode=c,_.memoizedState={element:S,isDehydrated:b,cache:null,transitions:null,pendingSuspenseBoundaries:null},p1(_),c}function lV(c,p,b){var S=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:E,key:S==null?null:""+S,children:c,containerInfo:p,implementation:b}}function uN(c){if(!c)return Co;c=c._reactInternals;e:{if(It(c)!==c||c.tag!==1)throw Error(t(170));var p=c;do{switch(p.tag){case 3:p=p.stateNode.context;break e;case 1:if(Ss(p.type)){p=p.stateNode.__reactInternalMemoizedMergedChildContext;break e}}p=p.return}while(p!==null);throw Error(t(171))}if(c.tag===1){var b=c.type;if(Ss(b))return P_(c,b,p)}return p}function cN(c,p,b,S,k,_,D,j,ie){return c=ew(b,S,!0,c,k,_,D,j,ie),c.context=uN(null),b=c.current,S=is(),k=Ao(b),_=Pa(S,k),_.callback=p??null,No(b,_,k),c.current.lanes=k,Zh(c,k,S),ks(c,S),c}function py(c,p,b,S){var k=p.current,_=is(),D=Ao(k);return b=uN(b),p.context===null?p.context=b:p.pendingContext=b,p=Pa(_,D),p.payload={element:c},S=S===void 0?null:S,S!==null&&(p.callback=S),c=No(k,p,D),c!==null&&(Li(c,k,D,_),Bg(c,k,D)),D}function fy(c){if(c=c.current,!c.child)return null;switch(c.child.tag){case 5:return c.child.stateNode;default:return c.child.stateNode}}function dN(c,p){if(c=c.memoizedState,c!==null&&c.dehydrated!==null){var b=c.retryLane;c.retryLane=b!==0&&b<p?b:p}}function tw(c,p){dN(c,p),(c=c.alternate)&&dN(c,p)}function uV(){return null}var hN=typeof reportError=="function"?reportError:function(c){console.error(c)};function nw(c){this._internalRoot=c}my.prototype.render=nw.prototype.render=function(c){var p=this._internalRoot;if(p===null)throw Error(t(409));py(c,p,null,null)},my.prototype.unmount=nw.prototype.unmount=function(){var c=this._internalRoot;if(c!==null){this._internalRoot=null;var p=c.containerInfo;Pl(function(){py(null,c,null,null)}),p[Ra]=null}};function my(c){this._internalRoot=c}my.prototype.unstable_scheduleHydration=function(c){if(c){var p=KC();c={blockedOn:null,target:c,priority:p};for(var b=0;b<wo.length&&p!==0&&p<wo[b].priority;b++);wo.splice(b,0,c),b===0&&QC(c)}};function rw(c){return!(!c||c.nodeType!==1&&c.nodeType!==9&&c.nodeType!==11)}function gy(c){return!(!c||c.nodeType!==1&&c.nodeType!==9&&c.nodeType!==11&&(c.nodeType!==8||c.nodeValue!==" react-mount-point-unstable "))}function pN(){}function cV(c,p,b,S,k){if(k){if(typeof S=="function"){var _=S;S=function(){var xe=fy(D);_.call(xe)}}var D=cN(p,S,c,0,null,!1,!1,"",pN);return c._reactRootContainer=D,c[Ra]=D.current,ap(c.nodeType===8?c.parentNode:c),Pl(),D}for(;k=c.lastChild;)c.removeChild(k);if(typeof S=="function"){var j=S;S=function(){var xe=fy(ie);j.call(xe)}}var ie=ew(c,0,!1,null,null,!1,!1,"",pN);return c._reactRootContainer=ie,c[Ra]=ie.current,ap(c.nodeType===8?c.parentNode:c),Pl(function(){py(p,ie,b,S)}),ie}function yy(c,p,b,S,k){var _=b._reactRootContainer;if(_){var D=_;if(typeof k=="function"){var j=k;k=function(){var ie=fy(D);j.call(ie)}}py(p,D,c,k)}else D=cV(b,p,c,k,S);return fy(D)}ZC=function(c){switch(c.tag){case 3:var p=c.stateNode;if(p.current.memoizedState.isDehydrated){var b=Uh(p.pendingLanes);b!==0&&(_v(p,b|1),ks(p,ht()),(Qt&6)===0&&(Ic=ht()+500,_o()))}break;case 13:Pl(function(){var S=Da(c,1);if(S!==null){var k=is();Li(S,c,1,k)}}),tw(c,1)}},Mv=function(c){if(c.tag===13){var p=Da(c,134217728);if(p!==null){var b=is();Li(p,c,134217728,b)}tw(c,134217728)}},HC=function(c){if(c.tag===13){var p=Ao(c),b=Da(c,p);if(b!==null){var S=is();Li(b,c,p,S)}tw(c,p)}},KC=function(){return tn},YC=function(c,p){var b=tn;try{return tn=c,p()}finally{tn=b}},ke=function(c,p,b){switch(p){case"input":if(Tt(c,b),p=b.name,b.type==="radio"&&p!=null){for(b=c;b.parentNode;)b=b.parentNode;for(b=b.querySelectorAll("input[name="+JSON.stringify(""+p)+'][type="radio"]'),p=0;p<b.length;p++){var S=b[p];if(S!==c&&S.form===c.form){var k=zg(S);if(!k)throw Error(t(90));Ze(S),Tt(S,k)}}}break;case"textarea":Te(c,b);break;case"select":p=b.value,p!=null&&sn(c,!!b.multiple,p,!1)}},xr=K1,Os=Pl;var dV={usingClientEntryPoint:!1,Events:[up,dc,zg,an,Hn,K1]},Tp={findFiberByHostInstance:Ml,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},hV={bundleType:Tp.bundleType,version:Tp.version,rendererPackageName:Tp.rendererPackageName,rendererConfig:Tp.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:T.ReactCurrentDispatcher,findHostInstanceByFiber:function(c){return c=Wt(c),c===null?null:c.stateNode},findFiberByHostInstance:Tp.findFiberByHostInstance||uV,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var by=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!by.isDisabled&&by.supportsFiber)try{er=by.inject(hV),vr=by}catch{}}return Cs.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=dV,Cs.createPortal=function(c,p){var b=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!rw(p))throw Error(t(200));return lV(c,p,null,b)},Cs.createRoot=function(c,p){if(!rw(c))throw Error(t(299));var b=!1,S="",k=hN;return p!=null&&(p.unstable_strictMode===!0&&(b=!0),p.identifierPrefix!==void 0&&(S=p.identifierPrefix),p.onRecoverableError!==void 0&&(k=p.onRecoverableError)),p=ew(c,1,!1,null,null,b,!1,S,k),c[Ra]=p.current,ap(c.nodeType===8?c.parentNode:c),new nw(p)},Cs.findDOMNode=function(c){if(c==null)return null;if(c.nodeType===1)return c;var p=c._reactInternals;if(p===void 0)throw typeof c.render=="function"?Error(t(188)):(c=Object.keys(c).join(","),Error(t(268,c)));return c=Wt(p),c=c===null?null:c.stateNode,c},Cs.flushSync=function(c){return Pl(c)},Cs.hydrate=function(c,p,b){if(!gy(p))throw Error(t(200));return yy(null,c,p,!0,b)},Cs.hydrateRoot=function(c,p,b){if(!rw(c))throw Error(t(405));var S=b!=null&&b.hydratedSources||null,k=!1,_="",D=hN;if(b!=null&&(b.unstable_strictMode===!0&&(k=!0),b.identifierPrefix!==void 0&&(_=b.identifierPrefix),b.onRecoverableError!==void 0&&(D=b.onRecoverableError)),p=cN(p,null,c,1,b??null,k,!1,_,D),c[Ra]=p.current,ap(c),S)for(c=0;c<S.length;c++)b=S[c],k=b._getVersion,k=k(b._source),p.mutableSourceEagerHydrationData==null?p.mutableSourceEagerHydrationData=[b,k]:p.mutableSourceEagerHydrationData.push(b,k);return new my(p)},Cs.render=function(c,p,b){if(!gy(p))throw Error(t(200));return yy(null,c,p,!1,b)},Cs.unmountComponentAtNode=function(c){if(!gy(c))throw Error(t(40));return c._reactRootContainer?(Pl(function(){yy(null,null,c,!1,function(){c._reactRootContainer=null,c[Ra]=null})}),!0):!1},Cs.unstable_batchedUpdates=K1,Cs.unstable_renderSubtreeIntoContainer=function(c,p,b,S){if(!gy(b))throw Error(t(200));if(c==null||c._reactInternals===void 0)throw Error(t(38));return yy(c,p,b,!1,S)},Cs.version="18.2.0-next-9e3b772b8-20220608",Cs}var wN;function vV(){if(wN)return aw.exports;wN=1;function n(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(n)}catch(e){console.error(e)}}return n(),aw.exports=xV(),aw.exports}var SN;function wV(){if(SN)return xy;SN=1;var n=vV();return xy.createRoot=n.createRoot,xy.hydrateRoot=n.hydrateRoot,xy}var SV=wV(),wS=M2();/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const N2="150",TV=0,TN=1,IV=2,DR=1,kV=2,Wp=3,nl=0,Js=1,Uo=2,Qo=0,Yc=1,IN=2,kN=3,CN=4,CV=5,$c=100,_V=101,MV=102,_N=103,MN=104,NV=200,EV=201,RV=202,LV=203,PR=204,FR=205,AV=206,zV=207,DV=208,PV=209,FV=210,GV=0,OV=1,WV=2,SS=3,VV=4,$V=5,BV=6,XV=7,GR=0,UV=1,ZV=2,Qa=0,HV=1,KV=2,YV=3,jV=4,QV=5,OR=300,nd=301,rd=302,TS=303,IS=304,K0=306,kS=1e3,Oi=1001,CS=1002,ls=1003,NN=1004,uw=1005,yi=1006,JV=1007,qp=1008,fu=1009,qV=1010,e$=1011,WR=1012,t$=1013,nu=1014,ru=1015,ef=1016,n$=1017,r$=1018,jc=1020,s$=1021,Wi=1023,i$=1024,a$=1025,ou=1026,sd=1027,o$=1028,l$=1029,u$=1030,c$=1031,d$=1033,cw=33776,dw=33777,hw=33778,pw=33779,EN=35840,RN=35841,LN=35842,AN=35843,h$=36196,zN=37492,DN=37496,PN=37808,FN=37809,GN=37810,ON=37811,WN=37812,VN=37813,$N=37814,BN=37815,XN=37816,UN=37817,ZN=37818,HN=37819,KN=37820,YN=37821,fw=36492,p$=36283,jN=36284,QN=36285,JN=36286,mu=3e3,fn=3001,f$=3200,m$=3201,g$=0,y$=1,da="srgb",tf="srgb-linear",VR="display-p3",mw=7680,b$=519,qN=35044,eE="300 es",_S=1035;class wd{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const r=this._listeners;r[e]===void 0&&(r[e]=[]),r[e].indexOf(t)===-1&&r[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const r=this._listeners;return r[e]!==void 0&&r[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const s=this._listeners[e];if(s!==void 0){const i=s.indexOf(t);i!==-1&&s.splice(i,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const r=this._listeners[e.type];if(r!==void 0){e.target=this;const s=r.slice(0);for(let i=0,a=s.length;i<a;i++)s[i].call(this,e);e.target=null}}}const Kr=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],gw=Math.PI/180,tE=180/Math.PI;function Tf(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,r=Math.random()*4294967295|0;return(Kr[n&255]+Kr[n>>8&255]+Kr[n>>16&255]+Kr[n>>24&255]+"-"+Kr[e&255]+Kr[e>>8&255]+"-"+Kr[e>>16&15|64]+Kr[e>>24&255]+"-"+Kr[t&63|128]+Kr[t>>8&255]+"-"+Kr[t>>16&255]+Kr[t>>24&255]+Kr[r&255]+Kr[r>>8&255]+Kr[r>>16&255]+Kr[r>>24&255]).toLowerCase()}function Hs(n,e,t){return Math.max(e,Math.min(t,n))}function x$(n,e){return(n%e+e)%e}function yw(n,e,t){return(1-t)*n+t*e}function nE(n){return(n&n-1)===0&&n!==0}function v$(n){return Math.pow(2,Math.floor(Math.log(n)/Math.LN2))}function vy(n,e){switch(e.constructor){case Float32Array:return n;case Uint16Array:return n/65535;case Uint8Array:return n/255;case Int16Array:return Math.max(n/32767,-1);case Int8Array:return Math.max(n/127,-1);default:throw new Error("Invalid component type.")}}function Xs(n,e){switch(e.constructor){case Float32Array:return n;case Uint16Array:return Math.round(n*65535);case Uint8Array:return Math.round(n*255);case Int16Array:return Math.round(n*32767);case Int8Array:return Math.round(n*127);default:throw new Error("Invalid component type.")}}class Tn{constructor(e=0,t=0){Tn.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,r=this.y,s=e.elements;return this.x=s[0]*t+s[3]*r+s[6],this.y=s[1]*t+s[4]*r+s[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,r=this.y-e.y;return t*t+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const r=Math.cos(t),s=Math.sin(t),i=this.x-e.x,a=this.y-e.y;return this.x=i*r-a*s+e.x,this.y=i*s+a*r+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class cs{constructor(){cs.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,r,s,i,a,o,l,u){const d=this.elements;return d[0]=e,d[1]=s,d[2]=o,d[3]=t,d[4]=i,d[5]=l,d[6]=r,d[7]=a,d[8]=u,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],this}extractBasis(e,t,r){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),r.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const r=e.elements,s=t.elements,i=this.elements,a=r[0],o=r[3],l=r[6],u=r[1],d=r[4],h=r[7],f=r[2],m=r[5],x=r[8],g=s[0],y=s[3],v=s[6],w=s[1],I=s[4],T=s[7],C=s[2],E=s[5],L=s[8];return i[0]=a*g+o*w+l*C,i[3]=a*y+o*I+l*E,i[6]=a*v+o*T+l*L,i[1]=u*g+d*w+h*C,i[4]=u*y+d*I+h*E,i[7]=u*v+d*T+h*L,i[2]=f*g+m*w+x*C,i[5]=f*y+m*I+x*E,i[8]=f*v+m*T+x*L,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],r=e[1],s=e[2],i=e[3],a=e[4],o=e[5],l=e[6],u=e[7],d=e[8];return t*a*d-t*o*u-r*i*d+r*o*l+s*i*u-s*a*l}invert(){const e=this.elements,t=e[0],r=e[1],s=e[2],i=e[3],a=e[4],o=e[5],l=e[6],u=e[7],d=e[8],h=d*a-o*u,f=o*l-d*i,m=u*i-a*l,x=t*h+r*f+s*m;if(x===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/x;return e[0]=h*g,e[1]=(s*u-d*r)*g,e[2]=(o*r-s*a)*g,e[3]=f*g,e[4]=(d*t-s*l)*g,e[5]=(s*i-o*t)*g,e[6]=m*g,e[7]=(r*l-u*t)*g,e[8]=(a*t-r*i)*g,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,r,s,i,a,o){const l=Math.cos(i),u=Math.sin(i);return this.set(r*l,r*u,-r*(l*a+u*o)+a+e,-s*u,s*l,-s*(-u*a+l*o)+o+t,0,0,1),this}scale(e,t){return this.premultiply(bw.makeScale(e,t)),this}rotate(e){return this.premultiply(bw.makeRotation(-e)),this}translate(e,t){return this.premultiply(bw.makeTranslation(e,t)),this}makeTranslation(e,t){return this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,r,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,r=e.elements;for(let s=0;s<9;s++)if(t[s]!==r[s])return!1;return!0}fromArray(e,t=0){for(let r=0;r<9;r++)this.elements[r]=e[r+t];return this}toArray(e=[],t=0){const r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const bw=new cs;function $R(n){for(let e=n.length-1;e>=0;--e)if(n[e]>=65535)return!0;return!1}function p0(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}class fl{constructor(e=0,t=0,r=0,s=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=r,this._w=s}static slerpFlat(e,t,r,s,i,a,o){let l=r[s+0],u=r[s+1],d=r[s+2],h=r[s+3];const f=i[a+0],m=i[a+1],x=i[a+2],g=i[a+3];if(o===0){e[t+0]=l,e[t+1]=u,e[t+2]=d,e[t+3]=h;return}if(o===1){e[t+0]=f,e[t+1]=m,e[t+2]=x,e[t+3]=g;return}if(h!==g||l!==f||u!==m||d!==x){let y=1-o;const v=l*f+u*m+d*x+h*g,w=v>=0?1:-1,I=1-v*v;if(I>Number.EPSILON){const C=Math.sqrt(I),E=Math.atan2(C,v*w);y=Math.sin(y*E)/C,o=Math.sin(o*E)/C}const T=o*w;if(l=l*y+f*T,u=u*y+m*T,d=d*y+x*T,h=h*y+g*T,y===1-o){const C=1/Math.sqrt(l*l+u*u+d*d+h*h);l*=C,u*=C,d*=C,h*=C}}e[t]=l,e[t+1]=u,e[t+2]=d,e[t+3]=h}static multiplyQuaternionsFlat(e,t,r,s,i,a){const o=r[s],l=r[s+1],u=r[s+2],d=r[s+3],h=i[a],f=i[a+1],m=i[a+2],x=i[a+3];return e[t]=o*x+d*h+l*m-u*f,e[t+1]=l*x+d*f+u*h-o*m,e[t+2]=u*x+d*m+o*f-l*h,e[t+3]=d*x-o*h-l*f-u*m,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,r,s){return this._x=e,this._y=t,this._z=r,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const r=e._x,s=e._y,i=e._z,a=e._order,o=Math.cos,l=Math.sin,u=o(r/2),d=o(s/2),h=o(i/2),f=l(r/2),m=l(s/2),x=l(i/2);switch(a){case"XYZ":this._x=f*d*h+u*m*x,this._y=u*m*h-f*d*x,this._z=u*d*x+f*m*h,this._w=u*d*h-f*m*x;break;case"YXZ":this._x=f*d*h+u*m*x,this._y=u*m*h-f*d*x,this._z=u*d*x-f*m*h,this._w=u*d*h+f*m*x;break;case"ZXY":this._x=f*d*h-u*m*x,this._y=u*m*h+f*d*x,this._z=u*d*x+f*m*h,this._w=u*d*h-f*m*x;break;case"ZYX":this._x=f*d*h-u*m*x,this._y=u*m*h+f*d*x,this._z=u*d*x-f*m*h,this._w=u*d*h+f*m*x;break;case"YZX":this._x=f*d*h+u*m*x,this._y=u*m*h+f*d*x,this._z=u*d*x-f*m*h,this._w=u*d*h-f*m*x;break;case"XZY":this._x=f*d*h-u*m*x,this._y=u*m*h-f*d*x,this._z=u*d*x+f*m*h,this._w=u*d*h+f*m*x;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const r=t/2,s=Math.sin(r);return this._x=e.x*s,this._y=e.y*s,this._z=e.z*s,this._w=Math.cos(r),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,r=t[0],s=t[4],i=t[8],a=t[1],o=t[5],l=t[9],u=t[2],d=t[6],h=t[10],f=r+o+h;if(f>0){const m=.5/Math.sqrt(f+1);this._w=.25/m,this._x=(d-l)*m,this._y=(i-u)*m,this._z=(a-s)*m}else if(r>o&&r>h){const m=2*Math.sqrt(1+r-o-h);this._w=(d-l)/m,this._x=.25*m,this._y=(s+a)/m,this._z=(i+u)/m}else if(o>h){const m=2*Math.sqrt(1+o-r-h);this._w=(i-u)/m,this._x=(s+a)/m,this._y=.25*m,this._z=(l+d)/m}else{const m=2*Math.sqrt(1+h-r-o);this._w=(a-s)/m,this._x=(i+u)/m,this._y=(l+d)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let r=e.dot(t)+1;return r<Number.EPSILON?(r=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=r):(this._x=0,this._y=-e.z,this._z=e.y,this._w=r)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=r),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Hs(this.dot(e),-1,1)))}rotateTowards(e,t){const r=this.angleTo(e);if(r===0)return this;const s=Math.min(1,t/r);return this.slerp(e,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const r=e._x,s=e._y,i=e._z,a=e._w,o=t._x,l=t._y,u=t._z,d=t._w;return this._x=r*d+a*o+s*u-i*l,this._y=s*d+a*l+i*o-r*u,this._z=i*d+a*u+r*l-s*o,this._w=a*d-r*o-s*l-i*u,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const r=this._x,s=this._y,i=this._z,a=this._w;let o=a*e._w+r*e._x+s*e._y+i*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=r,this._y=s,this._z=i,this;const l=1-o*o;if(l<=Number.EPSILON){const m=1-t;return this._w=m*a+t*this._w,this._x=m*r+t*this._x,this._y=m*s+t*this._y,this._z=m*i+t*this._z,this.normalize(),this._onChangeCallback(),this}const u=Math.sqrt(l),d=Math.atan2(u,o),h=Math.sin((1-t)*d)/u,f=Math.sin(t*d)/u;return this._w=a*h+this._w*f,this._x=r*h+this._x*f,this._y=s*h+this._y*f,this._z=i*h+this._z*f,this._onChangeCallback(),this}slerpQuaternions(e,t,r){return this.copy(e).slerp(t,r)}random(){const e=Math.random(),t=Math.sqrt(1-e),r=Math.sqrt(e),s=2*Math.PI*Math.random(),i=2*Math.PI*Math.random();return this.set(t*Math.cos(s),r*Math.sin(i),r*Math.cos(i),t*Math.sin(s))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class we{constructor(e=0,t=0,r=0){we.prototype.isVector3=!0,this.x=e,this.y=t,this.z=r}set(e,t,r){return r===void 0&&(r=this.z),this.x=e,this.y=t,this.z=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(rE.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(rE.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,r=this.y,s=this.z,i=e.elements;return this.x=i[0]*t+i[3]*r+i[6]*s,this.y=i[1]*t+i[4]*r+i[7]*s,this.z=i[2]*t+i[5]*r+i[8]*s,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,r=this.y,s=this.z,i=e.elements,a=1/(i[3]*t+i[7]*r+i[11]*s+i[15]);return this.x=(i[0]*t+i[4]*r+i[8]*s+i[12])*a,this.y=(i[1]*t+i[5]*r+i[9]*s+i[13])*a,this.z=(i[2]*t+i[6]*r+i[10]*s+i[14])*a,this}applyQuaternion(e){const t=this.x,r=this.y,s=this.z,i=e.x,a=e.y,o=e.z,l=e.w,u=l*t+a*s-o*r,d=l*r+o*t-i*s,h=l*s+i*r-a*t,f=-i*t-a*r-o*s;return this.x=u*l+f*-i+d*-o-h*-a,this.y=d*l+f*-a+h*-i-u*-o,this.z=h*l+f*-o+u*-a-d*-i,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,r=this.y,s=this.z,i=e.elements;return this.x=i[0]*t+i[4]*r+i[8]*s,this.y=i[1]*t+i[5]*r+i[9]*s,this.z=i[2]*t+i[6]*r+i[10]*s,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const r=e.x,s=e.y,i=e.z,a=t.x,o=t.y,l=t.z;return this.x=s*l-i*o,this.y=i*a-r*l,this.z=r*o-s*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const r=e.dot(this)/t;return this.copy(e).multiplyScalar(r)}projectOnPlane(e){return xw.copy(this).projectOnVector(e),this.sub(xw)}reflect(e){return this.sub(xw.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const r=this.dot(e)/t;return Math.acos(Hs(r,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,r=this.y-e.y,s=this.z-e.z;return t*t+r*r+s*s}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,r){const s=Math.sin(t)*e;return this.x=s*Math.sin(r),this.y=Math.cos(t)*e,this.z=s*Math.cos(r),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,r){return this.x=e*Math.sin(t),this.y=r,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),r=this.setFromMatrixColumn(e,1).length(),s=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=r,this.z=s,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,r=Math.sqrt(1-e**2);return this.x=r*Math.cos(t),this.y=r*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const xw=new we,rE=new fl;function Qc(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function vw(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}const w$=new cs().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),S$=new cs().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]),Zo=new we;function T$(n){return n.convertSRGBToLinear(),Zo.set(n.r,n.g,n.b).applyMatrix3(S$),n.setRGB(Zo.x,Zo.y,Zo.z)}function I$(n){return Zo.set(n.r,n.g,n.b).applyMatrix3(w$),n.setRGB(Zo.x,Zo.y,Zo.z).convertLinearToSRGB()}const k$={[tf]:n=>n,[da]:n=>n.convertSRGBToLinear(),[VR]:T$},C$={[tf]:n=>n,[da]:n=>n.convertLinearToSRGB(),[VR]:I$},as={enabled:!1,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(n){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!n},get workingColorSpace(){return tf},set workingColorSpace(n){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(n,e,t){if(this.enabled===!1||e===t||!e||!t)return n;const r=k$[e],s=C$[t];if(r===void 0||s===void 0)throw new Error(`Unsupported color space conversion, "${e}" to "${t}".`);return s(r(n))},fromWorkingColorSpace:function(n,e){return this.convert(n,this.workingColorSpace,e)},toWorkingColorSpace:function(n,e){return this.convert(n,e,this.workingColorSpace)}};let Cc;class BR{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Cc===void 0&&(Cc=p0("canvas")),Cc.width=e.width,Cc.height=e.height;const r=Cc.getContext("2d");e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),t=Cc}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=p0("canvas");t.width=e.width,t.height=e.height;const r=t.getContext("2d");r.drawImage(e,0,0,e.width,e.height);const s=r.getImageData(0,0,e.width,e.height),i=s.data;for(let a=0;a<i.length;a++)i[a]=Qc(i[a]/255)*255;return r.putImageData(s,0,0),t}else if(e.data){const t=e.data.slice(0);for(let r=0;r<t.length;r++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[r]=Math.floor(Qc(t[r]/255)*255):t[r]=Qc(t[r]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class XR{constructor(e=null){this.isSource=!0,this.uuid=Tf(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const r={uuid:this.uuid,url:""},s=this.data;if(s!==null){let i;if(Array.isArray(s)){i=[];for(let a=0,o=s.length;a<o;a++)s[a].isDataTexture?i.push(ww(s[a].image)):i.push(ww(s[a]))}else i=ww(s);r.url=i}return t||(e.images[this.uuid]=r),r}}function ww(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?BR.getDataURL(n):n.data?{data:Array.from(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let _$=0;class qs extends wd{constructor(e=qs.DEFAULT_IMAGE,t=qs.DEFAULT_MAPPING,r=Oi,s=Oi,i=yi,a=qp,o=Wi,l=fu,u=qs.DEFAULT_ANISOTROPY,d=mu){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:_$++}),this.uuid=Tf(),this.name="",this.source=new XR(e),this.mipmaps=[],this.mapping=t,this.wrapS=r,this.wrapT=s,this.magFilter=i,this.minFilter=a,this.anisotropy=u,this.format=o,this.internalFormat=null,this.type=l,this.offset=new Tn(0,0),this.repeat=new Tn(1,1),this.center=new Tn(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new cs,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=d,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const r={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(r.userData=this.userData),t||(e.textures[this.uuid]=r),r}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==OR)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case kS:e.x=e.x-Math.floor(e.x);break;case Oi:e.x=e.x<0?0:1;break;case CS:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case kS:e.y=e.y-Math.floor(e.y);break;case Oi:e.y=e.y<0?0:1;break;case CS:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}qs.DEFAULT_IMAGE=null;qs.DEFAULT_MAPPING=OR;qs.DEFAULT_ANISOTROPY=1;class Or{constructor(e=0,t=0,r=0,s=1){Or.prototype.isVector4=!0,this.x=e,this.y=t,this.z=r,this.w=s}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,r,s){return this.x=e,this.y=t,this.z=r,this.w=s,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,r=this.y,s=this.z,i=this.w,a=e.elements;return this.x=a[0]*t+a[4]*r+a[8]*s+a[12]*i,this.y=a[1]*t+a[5]*r+a[9]*s+a[13]*i,this.z=a[2]*t+a[6]*r+a[10]*s+a[14]*i,this.w=a[3]*t+a[7]*r+a[11]*s+a[15]*i,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,r,s,i;const l=e.elements,u=l[0],d=l[4],h=l[8],f=l[1],m=l[5],x=l[9],g=l[2],y=l[6],v=l[10];if(Math.abs(d-f)<.01&&Math.abs(h-g)<.01&&Math.abs(x-y)<.01){if(Math.abs(d+f)<.1&&Math.abs(h+g)<.1&&Math.abs(x+y)<.1&&Math.abs(u+m+v-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const I=(u+1)/2,T=(m+1)/2,C=(v+1)/2,E=(d+f)/4,L=(h+g)/4,M=(x+y)/4;return I>T&&I>C?I<.01?(r=0,s=.707106781,i=.707106781):(r=Math.sqrt(I),s=E/r,i=L/r):T>C?T<.01?(r=.707106781,s=0,i=.707106781):(s=Math.sqrt(T),r=E/s,i=M/s):C<.01?(r=.707106781,s=.707106781,i=0):(i=Math.sqrt(C),r=L/i,s=M/i),this.set(r,s,i,t),this}let w=Math.sqrt((y-x)*(y-x)+(h-g)*(h-g)+(f-d)*(f-d));return Math.abs(w)<.001&&(w=1),this.x=(y-x)/w,this.y=(h-g)/w,this.z=(f-d)/w,this.w=Math.acos((u+m+v-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this.w=e.w+(t.w-e.w)*r,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class gu extends wd{constructor(e=1,t=1,r={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Or(0,0,e,t),this.scissorTest=!1,this.viewport=new Or(0,0,e,t);const s={width:e,height:t,depth:1};this.texture=new qs(s,r.mapping,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=r.generateMipmaps!==void 0?r.generateMipmaps:!1,this.texture.internalFormat=r.internalFormat!==void 0?r.internalFormat:null,this.texture.minFilter=r.minFilter!==void 0?r.minFilter:yi,this.depthBuffer=r.depthBuffer!==void 0?r.depthBuffer:!0,this.stencilBuffer=r.stencilBuffer!==void 0?r.stencilBuffer:!1,this.depthTexture=r.depthTexture!==void 0?r.depthTexture:null,this.samples=r.samples!==void 0?r.samples:0}setSize(e,t,r=1){(this.width!==e||this.height!==t||this.depth!==r)&&(this.width=e,this.height=t,this.depth=r,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=r,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new XR(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class UR extends qs{constructor(e=null,t=1,r=1,s=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:r,depth:s},this.magFilter=ls,this.minFilter=ls,this.wrapR=Oi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class M$ extends qs{constructor(e=null,t=1,r=1,s=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:r,depth:s},this.magFilter=ls,this.minFilter=ls,this.wrapR=Oi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class If{constructor(e=new we(1/0,1/0,1/0),t=new we(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,r=1/0,s=1/0,i=-1/0,a=-1/0,o=-1/0;for(let l=0,u=e.length;l<u;l+=3){const d=e[l],h=e[l+1],f=e[l+2];d<t&&(t=d),h<r&&(r=h),f<s&&(s=f),d>i&&(i=d),h>a&&(a=h),f>o&&(o=f)}return this.min.set(t,r,s),this.max.set(i,a,o),this}setFromBufferAttribute(e){let t=1/0,r=1/0,s=1/0,i=-1/0,a=-1/0,o=-1/0;for(let l=0,u=e.count;l<u;l++){const d=e.getX(l),h=e.getY(l),f=e.getZ(l);d<t&&(t=d),h<r&&(r=h),f<s&&(s=f),d>i&&(i=d),h>a&&(a=h),f>o&&(o=f)}return this.min.set(t,r,s),this.max.set(i,a,o),this}setFromPoints(e){this.makeEmpty();for(let t=0,r=e.length;t<r;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const r=Wl.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const r=e.geometry;if(r!==void 0)if(t&&r.attributes!=null&&r.attributes.position!==void 0){const i=r.attributes.position;for(let a=0,o=i.count;a<o;a++)Wl.fromBufferAttribute(i,a).applyMatrix4(e.matrixWorld),this.expandByPoint(Wl)}else r.boundingBox===null&&r.computeBoundingBox(),Sw.copy(r.boundingBox),Sw.applyMatrix4(e.matrixWorld),this.union(Sw);const s=e.children;for(let i=0,a=s.length;i<a;i++)this.expandByObject(s[i],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Wl),Wl.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,r;return e.normal.x>0?(t=e.normal.x*this.min.x,r=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,r=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,r+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,r+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,r+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,r+=e.normal.z*this.min.z),t<=-e.constant&&r>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(kp),wy.subVectors(this.max,kp),_c.subVectors(e.a,kp),Mc.subVectors(e.b,kp),Nc.subVectors(e.c,kp),Fo.subVectors(Mc,_c),Go.subVectors(Nc,Mc),Vl.subVectors(_c,Nc);let t=[0,-Fo.z,Fo.y,0,-Go.z,Go.y,0,-Vl.z,Vl.y,Fo.z,0,-Fo.x,Go.z,0,-Go.x,Vl.z,0,-Vl.x,-Fo.y,Fo.x,0,-Go.y,Go.x,0,-Vl.y,Vl.x,0];return!Tw(t,_c,Mc,Nc,wy)||(t=[1,0,0,0,1,0,0,0,1],!Tw(t,_c,Mc,Nc,wy))?!1:(Sy.crossVectors(Fo,Go),t=[Sy.x,Sy.y,Sy.z],Tw(t,_c,Mc,Nc,wy))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Wl).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Wl).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Oa[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Oa[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Oa[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Oa[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Oa[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Oa[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Oa[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Oa[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Oa),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Oa=[new we,new we,new we,new we,new we,new we,new we,new we],Wl=new we,Sw=new If,_c=new we,Mc=new we,Nc=new we,Fo=new we,Go=new we,Vl=new we,kp=new we,wy=new we,Sy=new we,$l=new we;function Tw(n,e,t,r,s){for(let i=0,a=n.length-3;i<=a;i+=3){$l.fromArray(n,i);const o=s.x*Math.abs($l.x)+s.y*Math.abs($l.y)+s.z*Math.abs($l.z),l=e.dot($l),u=t.dot($l),d=r.dot($l);if(Math.max(-Math.max(l,u,d),Math.min(l,u,d))>o)return!1}return!0}const N$=new If,Cp=new we,Iw=new we;class E2{constructor(e=new we,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const r=this.center;t!==void 0?r.copy(t):N$.setFromPoints(e).getCenter(r);let s=0;for(let i=0,a=e.length;i<a;i++)s=Math.max(s,r.distanceToSquared(e[i]));return this.radius=Math.sqrt(s),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const r=this.center.distanceToSquared(e);return t.copy(e),r>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Cp.subVectors(e,this.center);const t=Cp.lengthSq();if(t>this.radius*this.radius){const r=Math.sqrt(t),s=(r-this.radius)*.5;this.center.addScaledVector(Cp,s/r),this.radius+=s}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Iw.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Cp.copy(e.center).add(Iw)),this.expandByPoint(Cp.copy(e.center).sub(Iw))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Wa=new we,kw=new we,Ty=new we,Oo=new we,Cw=new we,Iy=new we,_w=new we;class E${constructor(e=new we,t=new we(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Wa)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const r=t.dot(this.direction);return r<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,r)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Wa.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Wa.copy(this.origin).addScaledVector(this.direction,t),Wa.distanceToSquared(e))}distanceSqToSegment(e,t,r,s){kw.copy(e).add(t).multiplyScalar(.5),Ty.copy(t).sub(e).normalize(),Oo.copy(this.origin).sub(kw);const i=e.distanceTo(t)*.5,a=-this.direction.dot(Ty),o=Oo.dot(this.direction),l=-Oo.dot(Ty),u=Oo.lengthSq(),d=Math.abs(1-a*a);let h,f,m,x;if(d>0)if(h=a*l-o,f=a*o-l,x=i*d,h>=0)if(f>=-x)if(f<=x){const g=1/d;h*=g,f*=g,m=h*(h+a*f+2*o)+f*(a*h+f+2*l)+u}else f=i,h=Math.max(0,-(a*f+o)),m=-h*h+f*(f+2*l)+u;else f=-i,h=Math.max(0,-(a*f+o)),m=-h*h+f*(f+2*l)+u;else f<=-x?(h=Math.max(0,-(-a*i+o)),f=h>0?-i:Math.min(Math.max(-i,-l),i),m=-h*h+f*(f+2*l)+u):f<=x?(h=0,f=Math.min(Math.max(-i,-l),i),m=f*(f+2*l)+u):(h=Math.max(0,-(a*i+o)),f=h>0?i:Math.min(Math.max(-i,-l),i),m=-h*h+f*(f+2*l)+u);else f=a>0?-i:i,h=Math.max(0,-(a*f+o)),m=-h*h+f*(f+2*l)+u;return r&&r.copy(this.origin).addScaledVector(this.direction,h),s&&s.copy(kw).addScaledVector(Ty,f),m}intersectSphere(e,t){Wa.subVectors(e.center,this.origin);const r=Wa.dot(this.direction),s=Wa.dot(Wa)-r*r,i=e.radius*e.radius;if(s>i)return null;const a=Math.sqrt(i-s),o=r-a,l=r+a;return l<0?null:o<0?this.at(l,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const r=-(this.origin.dot(e.normal)+e.constant)/t;return r>=0?r:null}intersectPlane(e,t){const r=this.distanceToPlane(e);return r===null?null:this.at(r,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let r,s,i,a,o,l;const u=1/this.direction.x,d=1/this.direction.y,h=1/this.direction.z,f=this.origin;return u>=0?(r=(e.min.x-f.x)*u,s=(e.max.x-f.x)*u):(r=(e.max.x-f.x)*u,s=(e.min.x-f.x)*u),d>=0?(i=(e.min.y-f.y)*d,a=(e.max.y-f.y)*d):(i=(e.max.y-f.y)*d,a=(e.min.y-f.y)*d),r>a||i>s||((i>r||isNaN(r))&&(r=i),(a<s||isNaN(s))&&(s=a),h>=0?(o=(e.min.z-f.z)*h,l=(e.max.z-f.z)*h):(o=(e.max.z-f.z)*h,l=(e.min.z-f.z)*h),r>l||o>s)||((o>r||r!==r)&&(r=o),(l<s||s!==s)&&(s=l),s<0)?null:this.at(r>=0?r:s,t)}intersectsBox(e){return this.intersectBox(e,Wa)!==null}intersectTriangle(e,t,r,s,i){Cw.subVectors(t,e),Iy.subVectors(r,e),_w.crossVectors(Cw,Iy);let a=this.direction.dot(_w),o;if(a>0){if(s)return null;o=1}else if(a<0)o=-1,a=-a;else return null;Oo.subVectors(this.origin,e);const l=o*this.direction.dot(Iy.crossVectors(Oo,Iy));if(l<0)return null;const u=o*this.direction.dot(Cw.cross(Oo));if(u<0||l+u>a)return null;const d=-o*Oo.dot(_w);return d<0?null:this.at(d/a,i)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Fn{constructor(){Fn.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,r,s,i,a,o,l,u,d,h,f,m,x,g,y){const v=this.elements;return v[0]=e,v[4]=t,v[8]=r,v[12]=s,v[1]=i,v[5]=a,v[9]=o,v[13]=l,v[2]=u,v[6]=d,v[10]=h,v[14]=f,v[3]=m,v[7]=x,v[11]=g,v[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Fn().fromArray(this.elements)}copy(e){const t=this.elements,r=e.elements;return t[0]=r[0],t[1]=r[1],t[2]=r[2],t[3]=r[3],t[4]=r[4],t[5]=r[5],t[6]=r[6],t[7]=r[7],t[8]=r[8],t[9]=r[9],t[10]=r[10],t[11]=r[11],t[12]=r[12],t[13]=r[13],t[14]=r[14],t[15]=r[15],this}copyPosition(e){const t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,r){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this}makeBasis(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,r=e.elements,s=1/Ec.setFromMatrixColumn(e,0).length(),i=1/Ec.setFromMatrixColumn(e,1).length(),a=1/Ec.setFromMatrixColumn(e,2).length();return t[0]=r[0]*s,t[1]=r[1]*s,t[2]=r[2]*s,t[3]=0,t[4]=r[4]*i,t[5]=r[5]*i,t[6]=r[6]*i,t[7]=0,t[8]=r[8]*a,t[9]=r[9]*a,t[10]=r[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,r=e.x,s=e.y,i=e.z,a=Math.cos(r),o=Math.sin(r),l=Math.cos(s),u=Math.sin(s),d=Math.cos(i),h=Math.sin(i);if(e.order==="XYZ"){const f=a*d,m=a*h,x=o*d,g=o*h;t[0]=l*d,t[4]=-l*h,t[8]=u,t[1]=m+x*u,t[5]=f-g*u,t[9]=-o*l,t[2]=g-f*u,t[6]=x+m*u,t[10]=a*l}else if(e.order==="YXZ"){const f=l*d,m=l*h,x=u*d,g=u*h;t[0]=f+g*o,t[4]=x*o-m,t[8]=a*u,t[1]=a*h,t[5]=a*d,t[9]=-o,t[2]=m*o-x,t[6]=g+f*o,t[10]=a*l}else if(e.order==="ZXY"){const f=l*d,m=l*h,x=u*d,g=u*h;t[0]=f-g*o,t[4]=-a*h,t[8]=x+m*o,t[1]=m+x*o,t[5]=a*d,t[9]=g-f*o,t[2]=-a*u,t[6]=o,t[10]=a*l}else if(e.order==="ZYX"){const f=a*d,m=a*h,x=o*d,g=o*h;t[0]=l*d,t[4]=x*u-m,t[8]=f*u+g,t[1]=l*h,t[5]=g*u+f,t[9]=m*u-x,t[2]=-u,t[6]=o*l,t[10]=a*l}else if(e.order==="YZX"){const f=a*l,m=a*u,x=o*l,g=o*u;t[0]=l*d,t[4]=g-f*h,t[8]=x*h+m,t[1]=h,t[5]=a*d,t[9]=-o*d,t[2]=-u*d,t[6]=m*h+x,t[10]=f-g*h}else if(e.order==="XZY"){const f=a*l,m=a*u,x=o*l,g=o*u;t[0]=l*d,t[4]=-h,t[8]=u*d,t[1]=f*h+g,t[5]=a*d,t[9]=m*h-x,t[2]=x*h-m,t[6]=o*d,t[10]=g*h+f}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(R$,e,L$)}lookAt(e,t,r){const s=this.elements;return Us.subVectors(e,t),Us.lengthSq()===0&&(Us.z=1),Us.normalize(),Wo.crossVectors(r,Us),Wo.lengthSq()===0&&(Math.abs(r.z)===1?Us.x+=1e-4:Us.z+=1e-4,Us.normalize(),Wo.crossVectors(r,Us)),Wo.normalize(),ky.crossVectors(Us,Wo),s[0]=Wo.x,s[4]=ky.x,s[8]=Us.x,s[1]=Wo.y,s[5]=ky.y,s[9]=Us.y,s[2]=Wo.z,s[6]=ky.z,s[10]=Us.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const r=e.elements,s=t.elements,i=this.elements,a=r[0],o=r[4],l=r[8],u=r[12],d=r[1],h=r[5],f=r[9],m=r[13],x=r[2],g=r[6],y=r[10],v=r[14],w=r[3],I=r[7],T=r[11],C=r[15],E=s[0],L=s[4],M=s[8],R=s[12],z=s[1],X=s[5],U=s[9],G=s[13],V=s[2],Z=s[6],J=s[10],te=s[14],O=s[3],Q=s[7],A=s[11],K=s[15];return i[0]=a*E+o*z+l*V+u*O,i[4]=a*L+o*X+l*Z+u*Q,i[8]=a*M+o*U+l*J+u*A,i[12]=a*R+o*G+l*te+u*K,i[1]=d*E+h*z+f*V+m*O,i[5]=d*L+h*X+f*Z+m*Q,i[9]=d*M+h*U+f*J+m*A,i[13]=d*R+h*G+f*te+m*K,i[2]=x*E+g*z+y*V+v*O,i[6]=x*L+g*X+y*Z+v*Q,i[10]=x*M+g*U+y*J+v*A,i[14]=x*R+g*G+y*te+v*K,i[3]=w*E+I*z+T*V+C*O,i[7]=w*L+I*X+T*Z+C*Q,i[11]=w*M+I*U+T*J+C*A,i[15]=w*R+I*G+T*te+C*K,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],r=e[4],s=e[8],i=e[12],a=e[1],o=e[5],l=e[9],u=e[13],d=e[2],h=e[6],f=e[10],m=e[14],x=e[3],g=e[7],y=e[11],v=e[15];return x*(+i*l*h-s*u*h-i*o*f+r*u*f+s*o*m-r*l*m)+g*(+t*l*m-t*u*f+i*a*f-s*a*m+s*u*d-i*l*d)+y*(+t*u*h-t*o*m-i*a*h+r*a*m+i*o*d-r*u*d)+v*(-s*o*d-t*l*h+t*o*f+s*a*h-r*a*f+r*l*d)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,r){const s=this.elements;return e.isVector3?(s[12]=e.x,s[13]=e.y,s[14]=e.z):(s[12]=e,s[13]=t,s[14]=r),this}invert(){const e=this.elements,t=e[0],r=e[1],s=e[2],i=e[3],a=e[4],o=e[5],l=e[6],u=e[7],d=e[8],h=e[9],f=e[10],m=e[11],x=e[12],g=e[13],y=e[14],v=e[15],w=h*y*u-g*f*u+g*l*m-o*y*m-h*l*v+o*f*v,I=x*f*u-d*y*u-x*l*m+a*y*m+d*l*v-a*f*v,T=d*g*u-x*h*u+x*o*m-a*g*m-d*o*v+a*h*v,C=x*h*l-d*g*l-x*o*f+a*g*f+d*o*y-a*h*y,E=t*w+r*I+s*T+i*C;if(E===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const L=1/E;return e[0]=w*L,e[1]=(g*f*i-h*y*i-g*s*m+r*y*m+h*s*v-r*f*v)*L,e[2]=(o*y*i-g*l*i+g*s*u-r*y*u-o*s*v+r*l*v)*L,e[3]=(h*l*i-o*f*i-h*s*u+r*f*u+o*s*m-r*l*m)*L,e[4]=I*L,e[5]=(d*y*i-x*f*i+x*s*m-t*y*m-d*s*v+t*f*v)*L,e[6]=(x*l*i-a*y*i-x*s*u+t*y*u+a*s*v-t*l*v)*L,e[7]=(a*f*i-d*l*i+d*s*u-t*f*u-a*s*m+t*l*m)*L,e[8]=T*L,e[9]=(x*h*i-d*g*i-x*r*m+t*g*m+d*r*v-t*h*v)*L,e[10]=(a*g*i-x*o*i+x*r*u-t*g*u-a*r*v+t*o*v)*L,e[11]=(d*o*i-a*h*i-d*r*u+t*h*u+a*r*m-t*o*m)*L,e[12]=C*L,e[13]=(d*g*s-x*h*s+x*r*f-t*g*f-d*r*y+t*h*y)*L,e[14]=(x*o*s-a*g*s-x*r*l+t*g*l+a*r*y-t*o*y)*L,e[15]=(a*h*s-d*o*s+d*r*l-t*h*l-a*r*f+t*o*f)*L,this}scale(e){const t=this.elements,r=e.x,s=e.y,i=e.z;return t[0]*=r,t[4]*=s,t[8]*=i,t[1]*=r,t[5]*=s,t[9]*=i,t[2]*=r,t[6]*=s,t[10]*=i,t[3]*=r,t[7]*=s,t[11]*=i,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],s=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,r,s))}makeTranslation(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),r=Math.sin(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),r=Math.sin(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const r=Math.cos(t),s=Math.sin(t),i=1-r,a=e.x,o=e.y,l=e.z,u=i*a,d=i*o;return this.set(u*a+r,u*o-s*l,u*l+s*o,0,u*o+s*l,d*o+r,d*l-s*a,0,u*l-s*o,d*l+s*a,i*l*l+r,0,0,0,0,1),this}makeScale(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this}makeShear(e,t,r,s,i,a){return this.set(1,r,i,0,e,1,a,0,t,s,1,0,0,0,0,1),this}compose(e,t,r){const s=this.elements,i=t._x,a=t._y,o=t._z,l=t._w,u=i+i,d=a+a,h=o+o,f=i*u,m=i*d,x=i*h,g=a*d,y=a*h,v=o*h,w=l*u,I=l*d,T=l*h,C=r.x,E=r.y,L=r.z;return s[0]=(1-(g+v))*C,s[1]=(m+T)*C,s[2]=(x-I)*C,s[3]=0,s[4]=(m-T)*E,s[5]=(1-(f+v))*E,s[6]=(y+w)*E,s[7]=0,s[8]=(x+I)*L,s[9]=(y-w)*L,s[10]=(1-(f+g))*L,s[11]=0,s[12]=e.x,s[13]=e.y,s[14]=e.z,s[15]=1,this}decompose(e,t,r){const s=this.elements;let i=Ec.set(s[0],s[1],s[2]).length();const a=Ec.set(s[4],s[5],s[6]).length(),o=Ec.set(s[8],s[9],s[10]).length();this.determinant()<0&&(i=-i),e.x=s[12],e.y=s[13],e.z=s[14],Ai.copy(this);const u=1/i,d=1/a,h=1/o;return Ai.elements[0]*=u,Ai.elements[1]*=u,Ai.elements[2]*=u,Ai.elements[4]*=d,Ai.elements[5]*=d,Ai.elements[6]*=d,Ai.elements[8]*=h,Ai.elements[9]*=h,Ai.elements[10]*=h,t.setFromRotationMatrix(Ai),r.x=i,r.y=a,r.z=o,this}makePerspective(e,t,r,s,i,a){const o=this.elements,l=2*i/(t-e),u=2*i/(r-s),d=(t+e)/(t-e),h=(r+s)/(r-s),f=-(a+i)/(a-i),m=-2*a*i/(a-i);return o[0]=l,o[4]=0,o[8]=d,o[12]=0,o[1]=0,o[5]=u,o[9]=h,o[13]=0,o[2]=0,o[6]=0,o[10]=f,o[14]=m,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,t,r,s,i,a){const o=this.elements,l=1/(t-e),u=1/(r-s),d=1/(a-i),h=(t+e)*l,f=(r+s)*u,m=(a+i)*d;return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-h,o[1]=0,o[5]=2*u,o[9]=0,o[13]=-f,o[2]=0,o[6]=0,o[10]=-2*d,o[14]=-m,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const t=this.elements,r=e.elements;for(let s=0;s<16;s++)if(t[s]!==r[s])return!1;return!0}fromArray(e,t=0){for(let r=0;r<16;r++)this.elements[r]=e[r+t];return this}toArray(e=[],t=0){const r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e}}const Ec=new we,Ai=new Fn,R$=new we(0,0,0),L$=new we(1,1,1),Wo=new we,ky=new we,Us=new we,sE=new Fn,iE=new fl;class Y0{constructor(e=0,t=0,r=0,s=Y0.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=r,this._order=s}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,r,s=this._order){return this._x=e,this._y=t,this._z=r,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,r=!0){const s=e.elements,i=s[0],a=s[4],o=s[8],l=s[1],u=s[5],d=s[9],h=s[2],f=s[6],m=s[10];switch(t){case"XYZ":this._y=Math.asin(Hs(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-d,m),this._z=Math.atan2(-a,i)):(this._x=Math.atan2(f,u),this._z=0);break;case"YXZ":this._x=Math.asin(-Hs(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(o,m),this._z=Math.atan2(l,u)):(this._y=Math.atan2(-h,i),this._z=0);break;case"ZXY":this._x=Math.asin(Hs(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-h,m),this._z=Math.atan2(-a,u)):(this._y=0,this._z=Math.atan2(l,i));break;case"ZYX":this._y=Math.asin(-Hs(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(f,m),this._z=Math.atan2(l,i)):(this._x=0,this._z=Math.atan2(-a,u));break;case"YZX":this._z=Math.asin(Hs(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-d,u),this._y=Math.atan2(-h,i)):(this._x=0,this._y=Math.atan2(o,m));break;case"XZY":this._z=Math.asin(-Hs(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(f,u),this._y=Math.atan2(o,i)):(this._x=Math.atan2(-d,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,r===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,r){return sE.makeRotationFromQuaternion(e),this.setFromRotationMatrix(sE,t,r)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return iE.setFromEuler(this),this.setFromQuaternion(iE,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Y0.DEFAULT_ORDER="XYZ";class ZR{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let A$=0;const aE=new we,Rc=new fl,Va=new Fn,Cy=new we,_p=new we,z$=new we,D$=new fl,oE=new we(1,0,0),lE=new we(0,1,0),uE=new we(0,0,1),P$={type:"added"},cE={type:"removed"};class ei extends wd{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:A$++}),this.uuid=Tf(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ei.DEFAULT_UP.clone();const e=new we,t=new Y0,r=new fl,s=new we(1,1,1);function i(){r.setFromEuler(t,!1)}function a(){t.setFromQuaternion(r,void 0,!1)}t._onChange(i),r._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:r},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new Fn},normalMatrix:{value:new cs}}),this.matrix=new Fn,this.matrixWorld=new Fn,this.matrixAutoUpdate=ei.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=ei.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new ZR,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Rc.setFromAxisAngle(e,t),this.quaternion.multiply(Rc),this}rotateOnWorldAxis(e,t){return Rc.setFromAxisAngle(e,t),this.quaternion.premultiply(Rc),this}rotateX(e){return this.rotateOnAxis(oE,e)}rotateY(e){return this.rotateOnAxis(lE,e)}rotateZ(e){return this.rotateOnAxis(uE,e)}translateOnAxis(e,t){return aE.copy(e).applyQuaternion(this.quaternion),this.position.add(aE.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(oE,e)}translateY(e){return this.translateOnAxis(lE,e)}translateZ(e){return this.translateOnAxis(uE,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Va.copy(this.matrixWorld).invert())}lookAt(e,t,r){e.isVector3?Cy.copy(e):Cy.set(e,t,r);const s=this.parent;this.updateWorldMatrix(!0,!1),_p.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Va.lookAt(_p,Cy,this.up):Va.lookAt(Cy,_p,this.up),this.quaternion.setFromRotationMatrix(Va),s&&(Va.extractRotation(s.matrixWorld),Rc.setFromRotationMatrix(Va),this.quaternion.premultiply(Rc.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(P$)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let r=0;r<arguments.length;r++)this.remove(arguments[r]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(cE)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(cE)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Va.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Va.multiply(e.parent.matrixWorld)),e.applyMatrix4(Va),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let r=0,s=this.children.length;r<s;r++){const a=this.children[r].getObjectByProperty(e,t);if(a!==void 0)return a}}getObjectsByProperty(e,t){let r=[];this[e]===t&&r.push(this);for(let s=0,i=this.children.length;s<i;s++){const a=this.children[s].getObjectsByProperty(e,t);a.length>0&&(r=r.concat(a))}return r}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(_p,e,z$),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(_p,D$,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let r=0,s=t.length;r<s;r++)t[r].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let r=0,s=t.length;r<s;r++)t[r].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let r=0,s=t.length;r<s;r++){const i=t[r];(i.matrixWorldAutoUpdate===!0||e===!0)&&i.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const r=this.parent;if(e===!0&&r!==null&&r.matrixWorldAutoUpdate===!0&&r.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const s=this.children;for(let i=0,a=s.length;i<a;i++){const o=s[i];o.matrixWorldAutoUpdate===!0&&o.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",r={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},r.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON()));function i(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=i(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let u=0,d=l.length;u<d;u++){const h=l[u];i(e.shapes,h)}else i(e.shapes,l)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(i(e.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,u=this.material.length;l<u;l++)o.push(i(e.materials,this.material[l]));s.material=o}else s.material=i(e.materials,this.material);if(this.children.length>0){s.children=[];for(let o=0;o<this.children.length;o++)s.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){s.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];s.animations.push(i(e.animations,l))}}if(t){const o=a(e.geometries),l=a(e.materials),u=a(e.textures),d=a(e.images),h=a(e.shapes),f=a(e.skeletons),m=a(e.animations),x=a(e.nodes);o.length>0&&(r.geometries=o),l.length>0&&(r.materials=l),u.length>0&&(r.textures=u),d.length>0&&(r.images=d),h.length>0&&(r.shapes=h),f.length>0&&(r.skeletons=f),m.length>0&&(r.animations=m),x.length>0&&(r.nodes=x)}return r.object=s,r;function a(o){const l=[];for(const u in o){const d=o[u];delete d.metadata,l.push(d)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let r=0;r<e.children.length;r++){const s=e.children[r];this.add(s.clone())}return this}}ei.DEFAULT_UP=new we(0,1,0);ei.DEFAULT_MATRIX_AUTO_UPDATE=!0;ei.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const zi=new we,$a=new we,Mw=new we,Ba=new we,Lc=new we,Ac=new we,dE=new we,Nw=new we,Ew=new we,Rw=new we;class Ha{constructor(e=new we,t=new we,r=new we){this.a=e,this.b=t,this.c=r}static getNormal(e,t,r,s){s.subVectors(r,t),zi.subVectors(e,t),s.cross(zi);const i=s.lengthSq();return i>0?s.multiplyScalar(1/Math.sqrt(i)):s.set(0,0,0)}static getBarycoord(e,t,r,s,i){zi.subVectors(s,t),$a.subVectors(r,t),Mw.subVectors(e,t);const a=zi.dot(zi),o=zi.dot($a),l=zi.dot(Mw),u=$a.dot($a),d=$a.dot(Mw),h=a*u-o*o;if(h===0)return i.set(-2,-1,-1);const f=1/h,m=(u*l-o*d)*f,x=(a*d-o*l)*f;return i.set(1-m-x,x,m)}static containsPoint(e,t,r,s){return this.getBarycoord(e,t,r,s,Ba),Ba.x>=0&&Ba.y>=0&&Ba.x+Ba.y<=1}static getUV(e,t,r,s,i,a,o,l){return this.getBarycoord(e,t,r,s,Ba),l.set(0,0),l.addScaledVector(i,Ba.x),l.addScaledVector(a,Ba.y),l.addScaledVector(o,Ba.z),l}static isFrontFacing(e,t,r,s){return zi.subVectors(r,t),$a.subVectors(e,t),zi.cross($a).dot(s)<0}set(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this}setFromPointsAndIndices(e,t,r,s){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[s]),this}setFromAttributeAndIndices(e,t,r,s){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,r),this.c.fromBufferAttribute(e,s),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return zi.subVectors(this.c,this.b),$a.subVectors(this.a,this.b),zi.cross($a).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Ha.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Ha.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,r,s,i){return Ha.getUV(e,this.a,this.b,this.c,t,r,s,i)}containsPoint(e){return Ha.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Ha.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const r=this.a,s=this.b,i=this.c;let a,o;Lc.subVectors(s,r),Ac.subVectors(i,r),Nw.subVectors(e,r);const l=Lc.dot(Nw),u=Ac.dot(Nw);if(l<=0&&u<=0)return t.copy(r);Ew.subVectors(e,s);const d=Lc.dot(Ew),h=Ac.dot(Ew);if(d>=0&&h<=d)return t.copy(s);const f=l*h-d*u;if(f<=0&&l>=0&&d<=0)return a=l/(l-d),t.copy(r).addScaledVector(Lc,a);Rw.subVectors(e,i);const m=Lc.dot(Rw),x=Ac.dot(Rw);if(x>=0&&m<=x)return t.copy(i);const g=m*u-l*x;if(g<=0&&u>=0&&x<=0)return o=u/(u-x),t.copy(r).addScaledVector(Ac,o);const y=d*x-m*h;if(y<=0&&h-d>=0&&m-x>=0)return dE.subVectors(i,s),o=(h-d)/(h-d+(m-x)),t.copy(s).addScaledVector(dE,o);const v=1/(y+g+f);return a=g*v,o=f*v,t.copy(r).addScaledVector(Lc,a).addScaledVector(Ac,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let F$=0;class j0 extends wd{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:F$++}),this.uuid=Tf(),this.name="",this.type="Material",this.blending=Yc,this.side=nl,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=PR,this.blendDst=FR,this.blendEquation=$c,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=SS,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=b$,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=mw,this.stencilZFail=mw,this.stencilZPass=mw,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const r=e[t];if(r===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}const s=this[t];if(s===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}s&&s.isColor?s.set(r):s&&s.isVector3&&r&&r.isVector3?s.copy(r):this[t]=r}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const r={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.color&&this.color.isColor&&(r.color=this.color.getHex()),this.roughness!==void 0&&(r.roughness=this.roughness),this.metalness!==void 0&&(r.metalness=this.metalness),this.sheen!==void 0&&(r.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(r.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(r.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(r.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(r.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(r.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(r.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(r.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(r.shininess=this.shininess),this.clearcoat!==void 0&&(r.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(r.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(r.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(r.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(r.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,r.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(r.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(r.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(r.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(r.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(r.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(r.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(r.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(r.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(r.lightMap=this.lightMap.toJSON(e).uuid,r.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(r.aoMap=this.aoMap.toJSON(e).uuid,r.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(r.bumpMap=this.bumpMap.toJSON(e).uuid,r.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(r.normalMap=this.normalMap.toJSON(e).uuid,r.normalMapType=this.normalMapType,r.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(r.displacementMap=this.displacementMap.toJSON(e).uuid,r.displacementScale=this.displacementScale,r.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(r.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(r.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(r.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(r.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(r.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(r.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(r.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(r.combine=this.combine)),this.envMapIntensity!==void 0&&(r.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(r.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(r.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(r.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(r.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(r.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(r.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(r.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(r.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(r.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(r.size=this.size),this.shadowSide!==null&&(r.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(r.sizeAttenuation=this.sizeAttenuation),this.blending!==Yc&&(r.blending=this.blending),this.side!==nl&&(r.side=this.side),this.vertexColors&&(r.vertexColors=!0),this.opacity<1&&(r.opacity=this.opacity),this.transparent===!0&&(r.transparent=this.transparent),r.depthFunc=this.depthFunc,r.depthTest=this.depthTest,r.depthWrite=this.depthWrite,r.colorWrite=this.colorWrite,r.stencilWrite=this.stencilWrite,r.stencilWriteMask=this.stencilWriteMask,r.stencilFunc=this.stencilFunc,r.stencilRef=this.stencilRef,r.stencilFuncMask=this.stencilFuncMask,r.stencilFail=this.stencilFail,r.stencilZFail=this.stencilZFail,r.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(r.rotation=this.rotation),this.polygonOffset===!0&&(r.polygonOffset=!0),this.polygonOffsetFactor!==0&&(r.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(r.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(r.linewidth=this.linewidth),this.dashSize!==void 0&&(r.dashSize=this.dashSize),this.gapSize!==void 0&&(r.gapSize=this.gapSize),this.scale!==void 0&&(r.scale=this.scale),this.dithering===!0&&(r.dithering=!0),this.alphaTest>0&&(r.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(r.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(r.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(r.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(r.wireframe=this.wireframe),this.wireframeLinewidth>1&&(r.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(r.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(r.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(r.flatShading=this.flatShading),this.visible===!1&&(r.visible=!1),this.toneMapped===!1&&(r.toneMapped=!1),this.fog===!1&&(r.fog=!1),Object.keys(this.userData).length>0&&(r.userData=this.userData);function s(i){const a=[];for(const o in i){const l=i[o];delete l.metadata,a.push(l)}return a}if(t){const i=s(e.textures),a=s(e.images);i.length>0&&(r.textures=i),a.length>0&&(r.images=a)}return r}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let r=null;if(t!==null){const s=t.length;r=new Array(s);for(let i=0;i!==s;++i)r[i]=t[i].clone()}return this.clippingPlanes=r,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}const HR={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Di={h:0,s:0,l:0},_y={h:0,s:0,l:0};function Lw(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}class _n{constructor(e,t,r){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&r===void 0?this.set(e):this.setRGB(e,t,r)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=da){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,as.toWorkingColorSpace(this,t),this}setRGB(e,t,r,s=as.workingColorSpace){return this.r=e,this.g=t,this.b=r,as.toWorkingColorSpace(this,s),this}setHSL(e,t,r,s=as.workingColorSpace){if(e=x$(e,1),t=Hs(t,0,1),r=Hs(r,0,1),t===0)this.r=this.g=this.b=r;else{const i=r<=.5?r*(1+t):r+t-r*t,a=2*r-i;this.r=Lw(a,i,e+1/3),this.g=Lw(a,i,e),this.b=Lw(a,i,e-1/3)}return as.toWorkingColorSpace(this,s),this}setStyle(e,t=da){function r(i){i!==void 0&&parseFloat(i)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(e)){let i;const a=s[1],o=s[2];switch(a){case"rgb":case"rgba":if(i=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,as.toWorkingColorSpace(this,t),r(i[4]),this;if(i=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,as.toWorkingColorSpace(this,t),r(i[4]),this;break;case"hsl":case"hsla":if(i=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)){const l=parseFloat(i[1])/360,u=parseFloat(i[2])/100,d=parseFloat(i[3])/100;return r(i[4]),this.setHSL(l,u,d,t)}break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(e)){const i=s[1],a=i.length;if(a===3)return this.r=parseInt(i.charAt(0)+i.charAt(0),16)/255,this.g=parseInt(i.charAt(1)+i.charAt(1),16)/255,this.b=parseInt(i.charAt(2)+i.charAt(2),16)/255,as.toWorkingColorSpace(this,t),this;if(a===6)return this.r=parseInt(i.charAt(0)+i.charAt(1),16)/255,this.g=parseInt(i.charAt(2)+i.charAt(3),16)/255,this.b=parseInt(i.charAt(4)+i.charAt(5),16)/255,as.toWorkingColorSpace(this,t),this;console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=da){const r=HR[e.toLowerCase()];return r!==void 0?this.setHex(r,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Qc(e.r),this.g=Qc(e.g),this.b=Qc(e.b),this}copyLinearToSRGB(e){return this.r=vw(e.r),this.g=vw(e.g),this.b=vw(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=da){return as.fromWorkingColorSpace(Yr.copy(this),e),Hs(Yr.r*255,0,255)<<16^Hs(Yr.g*255,0,255)<<8^Hs(Yr.b*255,0,255)<<0}getHexString(e=da){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=as.workingColorSpace){as.fromWorkingColorSpace(Yr.copy(this),t);const r=Yr.r,s=Yr.g,i=Yr.b,a=Math.max(r,s,i),o=Math.min(r,s,i);let l,u;const d=(o+a)/2;if(o===a)l=0,u=0;else{const h=a-o;switch(u=d<=.5?h/(a+o):h/(2-a-o),a){case r:l=(s-i)/h+(s<i?6:0);break;case s:l=(i-r)/h+2;break;case i:l=(r-s)/h+4;break}l/=6}return e.h=l,e.s=u,e.l=d,e}getRGB(e,t=as.workingColorSpace){return as.fromWorkingColorSpace(Yr.copy(this),t),e.r=Yr.r,e.g=Yr.g,e.b=Yr.b,e}getStyle(e=da){as.fromWorkingColorSpace(Yr.copy(this),e);const t=Yr.r,r=Yr.g,s=Yr.b;return e!==da?`color(${e} ${t.toFixed(3)} ${r.toFixed(3)} ${s.toFixed(3)})`:`rgb(${t*255|0},${r*255|0},${s*255|0})`}offsetHSL(e,t,r){return this.getHSL(Di),Di.h+=e,Di.s+=t,Di.l+=r,this.setHSL(Di.h,Di.s,Di.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,r){return this.r=e.r+(t.r-e.r)*r,this.g=e.g+(t.g-e.g)*r,this.b=e.b+(t.b-e.b)*r,this}lerpHSL(e,t){this.getHSL(Di),e.getHSL(_y);const r=yw(Di.h,_y.h,t),s=yw(Di.s,_y.s,t),i=yw(Di.l,_y.l,t);return this.setHSL(r,s,i),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Yr=new _n;_n.NAMES=HR;class R2 extends j0{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new _n(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=GR,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const nr=new we,My=new Tn;class xa{constructor(e,t,r=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=r,this.usage=qN,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,r){e*=this.itemSize,r*=t.itemSize;for(let s=0,i=this.itemSize;s<i;s++)this.array[e+s]=t.array[r+s];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,r=this.count;t<r;t++)My.fromBufferAttribute(this,t),My.applyMatrix3(e),this.setXY(t,My.x,My.y);else if(this.itemSize===3)for(let t=0,r=this.count;t<r;t++)nr.fromBufferAttribute(this,t),nr.applyMatrix3(e),this.setXYZ(t,nr.x,nr.y,nr.z);return this}applyMatrix4(e){for(let t=0,r=this.count;t<r;t++)nr.fromBufferAttribute(this,t),nr.applyMatrix4(e),this.setXYZ(t,nr.x,nr.y,nr.z);return this}applyNormalMatrix(e){for(let t=0,r=this.count;t<r;t++)nr.fromBufferAttribute(this,t),nr.applyNormalMatrix(e),this.setXYZ(t,nr.x,nr.y,nr.z);return this}transformDirection(e){for(let t=0,r=this.count;t<r;t++)nr.fromBufferAttribute(this,t),nr.transformDirection(e),this.setXYZ(t,nr.x,nr.y,nr.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=vy(t,this.array)),t}setX(e,t){return this.normalized&&(t=Xs(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=vy(t,this.array)),t}setY(e,t){return this.normalized&&(t=Xs(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=vy(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Xs(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=vy(t,this.array)),t}setW(e,t){return this.normalized&&(t=Xs(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,r){return e*=this.itemSize,this.normalized&&(t=Xs(t,this.array),r=Xs(r,this.array)),this.array[e+0]=t,this.array[e+1]=r,this}setXYZ(e,t,r,s){return e*=this.itemSize,this.normalized&&(t=Xs(t,this.array),r=Xs(r,this.array),s=Xs(s,this.array)),this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=s,this}setXYZW(e,t,r,s,i){return e*=this.itemSize,this.normalized&&(t=Xs(t,this.array),r=Xs(r,this.array),s=Xs(s,this.array),i=Xs(i,this.array)),this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=s,this.array[e+3]=i,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==qN&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class KR extends xa{constructor(e,t,r){super(new Uint16Array(e),t,r)}}class YR extends xa{constructor(e,t,r){super(new Uint32Array(e),t,r)}}class lu extends xa{constructor(e,t,r){super(new Float32Array(e),t,r)}}let G$=0;const pi=new Fn,Aw=new ei,zc=new we,Zs=new If,Mp=new If,Ir=new we;class Fu extends wd{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:G$++}),this.uuid=Tf(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new($R(e)?YR:KR)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,r=0){this.groups.push({start:e,count:t,materialIndex:r})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const r=this.attributes.normal;if(r!==void 0){const i=new cs().getNormalMatrix(e);r.applyNormalMatrix(i),r.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(e),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return pi.makeRotationFromQuaternion(e),this.applyMatrix4(pi),this}rotateX(e){return pi.makeRotationX(e),this.applyMatrix4(pi),this}rotateY(e){return pi.makeRotationY(e),this.applyMatrix4(pi),this}rotateZ(e){return pi.makeRotationZ(e),this.applyMatrix4(pi),this}translate(e,t,r){return pi.makeTranslation(e,t,r),this.applyMatrix4(pi),this}scale(e,t,r){return pi.makeScale(e,t,r),this.applyMatrix4(pi),this}lookAt(e){return Aw.lookAt(e),Aw.updateMatrix(),this.applyMatrix4(Aw.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(zc).negate(),this.translate(zc.x,zc.y,zc.z),this}setFromPoints(e){const t=[];for(let r=0,s=e.length;r<s;r++){const i=e[r];t.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new lu(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new If);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new we(-1/0,-1/0,-1/0),new we(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let r=0,s=t.length;r<s;r++){const i=t[r];Zs.setFromBufferAttribute(i),this.morphTargetsRelative?(Ir.addVectors(this.boundingBox.min,Zs.min),this.boundingBox.expandByPoint(Ir),Ir.addVectors(this.boundingBox.max,Zs.max),this.boundingBox.expandByPoint(Ir)):(this.boundingBox.expandByPoint(Zs.min),this.boundingBox.expandByPoint(Zs.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new E2);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new we,1/0);return}if(e){const r=this.boundingSphere.center;if(Zs.setFromBufferAttribute(e),t)for(let i=0,a=t.length;i<a;i++){const o=t[i];Mp.setFromBufferAttribute(o),this.morphTargetsRelative?(Ir.addVectors(Zs.min,Mp.min),Zs.expandByPoint(Ir),Ir.addVectors(Zs.max,Mp.max),Zs.expandByPoint(Ir)):(Zs.expandByPoint(Mp.min),Zs.expandByPoint(Mp.max))}Zs.getCenter(r);let s=0;for(let i=0,a=e.count;i<a;i++)Ir.fromBufferAttribute(e,i),s=Math.max(s,r.distanceToSquared(Ir));if(t)for(let i=0,a=t.length;i<a;i++){const o=t[i],l=this.morphTargetsRelative;for(let u=0,d=o.count;u<d;u++)Ir.fromBufferAttribute(o,u),l&&(zc.fromBufferAttribute(e,u),Ir.add(zc)),s=Math.max(s,r.distanceToSquared(Ir))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const r=e.array,s=t.position.array,i=t.normal.array,a=t.uv.array,o=s.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new xa(new Float32Array(4*o),4));const l=this.getAttribute("tangent").array,u=[],d=[];for(let z=0;z<o;z++)u[z]=new we,d[z]=new we;const h=new we,f=new we,m=new we,x=new Tn,g=new Tn,y=new Tn,v=new we,w=new we;function I(z,X,U){h.fromArray(s,z*3),f.fromArray(s,X*3),m.fromArray(s,U*3),x.fromArray(a,z*2),g.fromArray(a,X*2),y.fromArray(a,U*2),f.sub(h),m.sub(h),g.sub(x),y.sub(x);const G=1/(g.x*y.y-y.x*g.y);isFinite(G)&&(v.copy(f).multiplyScalar(y.y).addScaledVector(m,-g.y).multiplyScalar(G),w.copy(m).multiplyScalar(g.x).addScaledVector(f,-y.x).multiplyScalar(G),u[z].add(v),u[X].add(v),u[U].add(v),d[z].add(w),d[X].add(w),d[U].add(w))}let T=this.groups;T.length===0&&(T=[{start:0,count:r.length}]);for(let z=0,X=T.length;z<X;++z){const U=T[z],G=U.start,V=U.count;for(let Z=G,J=G+V;Z<J;Z+=3)I(r[Z+0],r[Z+1],r[Z+2])}const C=new we,E=new we,L=new we,M=new we;function R(z){L.fromArray(i,z*3),M.copy(L);const X=u[z];C.copy(X),C.sub(L.multiplyScalar(L.dot(X))).normalize(),E.crossVectors(M,X);const G=E.dot(d[z])<0?-1:1;l[z*4]=C.x,l[z*4+1]=C.y,l[z*4+2]=C.z,l[z*4+3]=G}for(let z=0,X=T.length;z<X;++z){const U=T[z],G=U.start,V=U.count;for(let Z=G,J=G+V;Z<J;Z+=3)R(r[Z+0]),R(r[Z+1]),R(r[Z+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let r=this.getAttribute("normal");if(r===void 0)r=new xa(new Float32Array(t.count*3),3),this.setAttribute("normal",r);else for(let f=0,m=r.count;f<m;f++)r.setXYZ(f,0,0,0);const s=new we,i=new we,a=new we,o=new we,l=new we,u=new we,d=new we,h=new we;if(e)for(let f=0,m=e.count;f<m;f+=3){const x=e.getX(f+0),g=e.getX(f+1),y=e.getX(f+2);s.fromBufferAttribute(t,x),i.fromBufferAttribute(t,g),a.fromBufferAttribute(t,y),d.subVectors(a,i),h.subVectors(s,i),d.cross(h),o.fromBufferAttribute(r,x),l.fromBufferAttribute(r,g),u.fromBufferAttribute(r,y),o.add(d),l.add(d),u.add(d),r.setXYZ(x,o.x,o.y,o.z),r.setXYZ(g,l.x,l.y,l.z),r.setXYZ(y,u.x,u.y,u.z)}else for(let f=0,m=t.count;f<m;f+=3)s.fromBufferAttribute(t,f+0),i.fromBufferAttribute(t,f+1),a.fromBufferAttribute(t,f+2),d.subVectors(a,i),h.subVectors(s,i),d.cross(h),r.setXYZ(f+0,d.x,d.y,d.z),r.setXYZ(f+1,d.x,d.y,d.z),r.setXYZ(f+2,d.x,d.y,d.z);this.normalizeNormals(),r.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,r=e.count;t<r;t++)Ir.fromBufferAttribute(e,t),Ir.normalize(),e.setXYZ(t,Ir.x,Ir.y,Ir.z)}toNonIndexed(){function e(o,l){const u=o.array,d=o.itemSize,h=o.normalized,f=new u.constructor(l.length*d);let m=0,x=0;for(let g=0,y=l.length;g<y;g++){o.isInterleavedBufferAttribute?m=l[g]*o.data.stride+o.offset:m=l[g]*d;for(let v=0;v<d;v++)f[x++]=u[m++]}return new xa(f,d,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Fu,r=this.index.array,s=this.attributes;for(const o in s){const l=s[o],u=e(l,r);t.setAttribute(o,u)}const i=this.morphAttributes;for(const o in i){const l=[],u=i[o];for(let d=0,h=u.length;d<h;d++){const f=u[d],m=e(f,r);l.push(m)}t.morphAttributes[o]=l}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,l=a.length;o<l;o++){const u=a[o];t.addGroup(u.start,u.count,u.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const u in l)l[u]!==void 0&&(e[u]=l[u]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const r=this.attributes;for(const l in r){const u=r[l];e.data.attributes[l]=u.toJSON(e.data)}const s={};let i=!1;for(const l in this.morphAttributes){const u=this.morphAttributes[l],d=[];for(let h=0,f=u.length;h<f;h++){const m=u[h];d.push(m.toJSON(e.data))}d.length>0&&(s[l]=d,i=!0)}i&&(e.data.morphAttributes=s,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const r=e.index;r!==null&&this.setIndex(r.clone(t));const s=e.attributes;for(const u in s){const d=s[u];this.setAttribute(u,d.clone(t))}const i=e.morphAttributes;for(const u in i){const d=[],h=i[u];for(let f=0,m=h.length;f<m;f++)d.push(h[f].clone(t));this.morphAttributes[u]=d}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let u=0,d=a.length;u<d;u++){const h=a[u];this.addGroup(h.start,h.count,h.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const hE=new Fn,ia=new E$,Ny=new E2,pE=new we,Np=new we,Ep=new we,Rp=new we,zw=new we,Ey=new we,Ry=new Tn,Ly=new Tn,Ay=new Tn,Dw=new we,zy=new we;class ja extends ei{constructor(e=new Fu,t=new R2){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,r=Object.keys(t);if(r.length>0){const s=t[r[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let i=0,a=s.length;i<a;i++){const o=s[i].name||String(i);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=i}}}}getVertexPosition(e,t){const r=this.geometry,s=r.attributes.position,i=r.morphAttributes.position,a=r.morphTargetsRelative;t.fromBufferAttribute(s,e);const o=this.morphTargetInfluences;if(i&&o){Ey.set(0,0,0);for(let l=0,u=i.length;l<u;l++){const d=o[l],h=i[l];d!==0&&(zw.fromBufferAttribute(h,e),a?Ey.addScaledVector(zw,d):Ey.addScaledVector(zw.sub(t),d))}t.add(Ey)}return this.isSkinnedMesh&&this.boneTransform(e,t),t}raycast(e,t){const r=this.geometry,s=this.material,i=this.matrixWorld;if(s===void 0||(r.boundingSphere===null&&r.computeBoundingSphere(),Ny.copy(r.boundingSphere),Ny.applyMatrix4(i),ia.copy(e.ray).recast(e.near),Ny.containsPoint(ia.origin)===!1&&(ia.intersectSphere(Ny,pE)===null||ia.origin.distanceToSquared(pE)>(e.far-e.near)**2))||(hE.copy(i).invert(),ia.copy(e.ray).applyMatrix4(hE),r.boundingBox!==null&&ia.intersectsBox(r.boundingBox)===!1))return;let a;const o=r.index,l=r.attributes.position,u=r.attributes.uv,d=r.attributes.uv2,h=r.groups,f=r.drawRange;if(o!==null)if(Array.isArray(s))for(let m=0,x=h.length;m<x;m++){const g=h[m],y=s[g.materialIndex],v=Math.max(g.start,f.start),w=Math.min(o.count,Math.min(g.start+g.count,f.start+f.count));for(let I=v,T=w;I<T;I+=3){const C=o.getX(I),E=o.getX(I+1),L=o.getX(I+2);a=Dy(this,y,e,ia,u,d,C,E,L),a&&(a.faceIndex=Math.floor(I/3),a.face.materialIndex=g.materialIndex,t.push(a))}}else{const m=Math.max(0,f.start),x=Math.min(o.count,f.start+f.count);for(let g=m,y=x;g<y;g+=3){const v=o.getX(g),w=o.getX(g+1),I=o.getX(g+2);a=Dy(this,s,e,ia,u,d,v,w,I),a&&(a.faceIndex=Math.floor(g/3),t.push(a))}}else if(l!==void 0)if(Array.isArray(s))for(let m=0,x=h.length;m<x;m++){const g=h[m],y=s[g.materialIndex],v=Math.max(g.start,f.start),w=Math.min(l.count,Math.min(g.start+g.count,f.start+f.count));for(let I=v,T=w;I<T;I+=3){const C=I,E=I+1,L=I+2;a=Dy(this,y,e,ia,u,d,C,E,L),a&&(a.faceIndex=Math.floor(I/3),a.face.materialIndex=g.materialIndex,t.push(a))}}else{const m=Math.max(0,f.start),x=Math.min(l.count,f.start+f.count);for(let g=m,y=x;g<y;g+=3){const v=g,w=g+1,I=g+2;a=Dy(this,s,e,ia,u,d,v,w,I),a&&(a.faceIndex=Math.floor(g/3),t.push(a))}}}}function O$(n,e,t,r,s,i,a,o){let l;if(e.side===Js?l=r.intersectTriangle(a,i,s,!0,o):l=r.intersectTriangle(s,i,a,e.side===nl,o),l===null)return null;zy.copy(o),zy.applyMatrix4(n.matrixWorld);const u=t.ray.origin.distanceTo(zy);return u<t.near||u>t.far?null:{distance:u,point:zy.clone(),object:n}}function Dy(n,e,t,r,s,i,a,o,l){n.getVertexPosition(a,Np),n.getVertexPosition(o,Ep),n.getVertexPosition(l,Rp);const u=O$(n,e,t,r,Np,Ep,Rp,Dw);if(u){s&&(Ry.fromBufferAttribute(s,a),Ly.fromBufferAttribute(s,o),Ay.fromBufferAttribute(s,l),u.uv=Ha.getUV(Dw,Np,Ep,Rp,Ry,Ly,Ay,new Tn)),i&&(Ry.fromBufferAttribute(i,a),Ly.fromBufferAttribute(i,o),Ay.fromBufferAttribute(i,l),u.uv2=Ha.getUV(Dw,Np,Ep,Rp,Ry,Ly,Ay,new Tn));const d={a,b:o,c:l,normal:new we,materialIndex:0};Ha.getNormal(Np,Ep,Rp,d.normal),u.face=d}return u}class kf extends Fu{constructor(e=1,t=1,r=1,s=1,i=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:s,heightSegments:i,depthSegments:a};const o=this;s=Math.floor(s),i=Math.floor(i),a=Math.floor(a);const l=[],u=[],d=[],h=[];let f=0,m=0;x("z","y","x",-1,-1,r,t,e,a,i,0),x("z","y","x",1,-1,r,t,-e,a,i,1),x("x","z","y",1,1,e,r,t,s,a,2),x("x","z","y",1,-1,e,r,-t,s,a,3),x("x","y","z",1,-1,e,t,r,s,i,4),x("x","y","z",-1,-1,e,t,-r,s,i,5),this.setIndex(l),this.setAttribute("position",new lu(u,3)),this.setAttribute("normal",new lu(d,3)),this.setAttribute("uv",new lu(h,2));function x(g,y,v,w,I,T,C,E,L,M,R){const z=T/L,X=C/M,U=T/2,G=C/2,V=E/2,Z=L+1,J=M+1;let te=0,O=0;const Q=new we;for(let A=0;A<J;A++){const K=A*X-G;for(let $=0;$<Z;$++){const re=$*z-U;Q[g]=re*w,Q[y]=K*I,Q[v]=V,u.push(Q.x,Q.y,Q.z),Q[g]=0,Q[y]=0,Q[v]=E>0?1:-1,d.push(Q.x,Q.y,Q.z),h.push($/L),h.push(1-A/M),te+=1}}for(let A=0;A<M;A++)for(let K=0;K<L;K++){const $=f+K+Z*A,re=f+K+Z*(A+1),oe=f+(K+1)+Z*(A+1),Y=f+(K+1)+Z*A;l.push($,re,Y),l.push(re,oe,Y),O+=6}o.addGroup(m,O,R),m+=O,f+=te}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new kf(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function id(n){const e={};for(const t in n){e[t]={};for(const r in n[t]){const s=n[t][r];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?e[t][r]=s.clone():Array.isArray(s)?e[t][r]=s.slice():e[t][r]=s}}return e}function os(n){const e={};for(let t=0;t<n.length;t++){const r=id(n[t]);for(const s in r)e[s]=r[s]}return e}function W$(n){const e=[];for(let t=0;t<n.length;t++)e.push(n[t].clone());return e}function jR(n){return n.getRenderTarget()===null&&n.outputEncoding===fn?da:tf}const V$={clone:id,merge:os};var $$=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,B$=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class yu extends j0{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=$$,this.fragmentShader=B$,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=id(e.uniforms),this.uniformsGroups=W$(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const s in this.uniforms){const a=this.uniforms[s].value;a&&a.isTexture?t.uniforms[s]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[s]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[s]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[s]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[s]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[s]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[s]={type:"m4",value:a.toArray()}:t.uniforms[s]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const r={};for(const s in this.extensions)this.extensions[s]===!0&&(r[s]=!0);return Object.keys(r).length>0&&(t.extensions=r),t}}class QR extends ei{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Fn,this.projectionMatrix=new Fn,this.projectionMatrixInverse=new Fn}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class bi extends QR{constructor(e=50,t=1,r=.1,s=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=r,this.far=s,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=tE*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(gw*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return tE*2*Math.atan(Math.tan(gw*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,r,s,i,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=s,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(gw*.5*this.fov)/this.zoom,r=2*t,s=this.aspect*r,i=-.5*s;const a=this.view;if(this.view!==null&&this.view.enabled){const l=a.fullWidth,u=a.fullHeight;i+=a.offsetX*s/l,t-=a.offsetY*r/u,s*=a.width/l,r*=a.height/u}const o=this.filmOffset;o!==0&&(i+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+s,t,t-r,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Dc=-90,Pc=1;class X$ extends ei{constructor(e,t,r){super(),this.type="CubeCamera",this.renderTarget=r;const s=new bi(Dc,Pc,e,t);s.layers=this.layers,s.up.set(0,1,0),s.lookAt(1,0,0),this.add(s);const i=new bi(Dc,Pc,e,t);i.layers=this.layers,i.up.set(0,1,0),i.lookAt(-1,0,0),this.add(i);const a=new bi(Dc,Pc,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(0,1,0),this.add(a);const o=new bi(Dc,Pc,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(0,-1,0),this.add(o);const l=new bi(Dc,Pc,e,t);l.layers=this.layers,l.up.set(0,1,0),l.lookAt(0,0,1),this.add(l);const u=new bi(Dc,Pc,e,t);u.layers=this.layers,u.up.set(0,1,0),u.lookAt(0,0,-1),this.add(u)}update(e,t){this.parent===null&&this.updateMatrixWorld();const r=this.renderTarget,[s,i,a,o,l,u]=this.children,d=e.getRenderTarget(),h=e.toneMapping,f=e.xr.enabled;e.toneMapping=Qa,e.xr.enabled=!1;const m=r.texture.generateMipmaps;r.texture.generateMipmaps=!1,e.setRenderTarget(r,0),e.render(t,s),e.setRenderTarget(r,1),e.render(t,i),e.setRenderTarget(r,2),e.render(t,a),e.setRenderTarget(r,3),e.render(t,o),e.setRenderTarget(r,4),e.render(t,l),r.texture.generateMipmaps=m,e.setRenderTarget(r,5),e.render(t,u),e.setRenderTarget(d),e.toneMapping=h,e.xr.enabled=f,r.texture.needsPMREMUpdate=!0}}class JR extends qs{constructor(e,t,r,s,i,a,o,l,u,d){e=e!==void 0?e:[],t=t!==void 0?t:nd,super(e,t,r,s,i,a,o,l,u,d),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class U$ extends gu{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const r={width:e,height:e,depth:1},s=[r,r,r,r,r,r];this.texture=new JR(s,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:yi}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const r={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},s=new kf(5,5,5),i=new yu({name:"CubemapFromEquirect",uniforms:id(r.uniforms),vertexShader:r.vertexShader,fragmentShader:r.fragmentShader,side:Js,blending:Qo});i.uniforms.tEquirect.value=t;const a=new ja(s,i),o=t.minFilter;return t.minFilter===qp&&(t.minFilter=yi),new X$(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,r,s){const i=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,r,s);e.setRenderTarget(i)}}const Pw=new we,Z$=new we,H$=new cs;class Ul{constructor(e=new we(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,r,s){return this.normal.set(e,t,r),this.constant=s,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,r){const s=Pw.subVectors(r,t).cross(Z$.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(s,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const r=e.delta(Pw),s=this.normal.dot(r);if(s===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const i=-(e.start.dot(this.normal)+this.constant)/s;return i<0||i>1?null:t.copy(e.start).addScaledVector(r,i)}intersectsLine(e){const t=this.distanceToPoint(e.start),r=this.distanceToPoint(e.end);return t<0&&r>0||r<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const r=t||H$.getNormalMatrix(e),s=this.coplanarPoint(Pw).applyMatrix4(e),i=this.normal.applyMatrix3(r).normalize();return this.constant=-s.dot(i),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Fc=new E2,Py=new we;class qR{constructor(e=new Ul,t=new Ul,r=new Ul,s=new Ul,i=new Ul,a=new Ul){this.planes=[e,t,r,s,i,a]}set(e,t,r,s,i,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(r),o[3].copy(s),o[4].copy(i),o[5].copy(a),this}copy(e){const t=this.planes;for(let r=0;r<6;r++)t[r].copy(e.planes[r]);return this}setFromProjectionMatrix(e){const t=this.planes,r=e.elements,s=r[0],i=r[1],a=r[2],o=r[3],l=r[4],u=r[5],d=r[6],h=r[7],f=r[8],m=r[9],x=r[10],g=r[11],y=r[12],v=r[13],w=r[14],I=r[15];return t[0].setComponents(o-s,h-l,g-f,I-y).normalize(),t[1].setComponents(o+s,h+l,g+f,I+y).normalize(),t[2].setComponents(o+i,h+u,g+m,I+v).normalize(),t[3].setComponents(o-i,h-u,g-m,I-v).normalize(),t[4].setComponents(o-a,h-d,g-x,I-w).normalize(),t[5].setComponents(o+a,h+d,g+x,I+w).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),Fc.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Fc)}intersectsSprite(e){return Fc.center.set(0,0,0),Fc.radius=.7071067811865476,Fc.applyMatrix4(e.matrixWorld),this.intersectsSphere(Fc)}intersectsSphere(e){const t=this.planes,r=e.center,s=-e.radius;for(let i=0;i<6;i++)if(t[i].distanceToPoint(r)<s)return!1;return!0}intersectsBox(e){const t=this.planes;for(let r=0;r<6;r++){const s=t[r];if(Py.x=s.normal.x>0?e.max.x:e.min.x,Py.y=s.normal.y>0?e.max.y:e.min.y,Py.z=s.normal.z>0?e.max.z:e.min.z,s.distanceToPoint(Py)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let r=0;r<6;r++)if(t[r].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function eL(){let n=null,e=!1,t=null,r=null;function s(i,a){t(i,a),r=n.requestAnimationFrame(s)}return{start:function(){e!==!0&&t!==null&&(r=n.requestAnimationFrame(s),e=!0)},stop:function(){n.cancelAnimationFrame(r),e=!1},setAnimationLoop:function(i){t=i},setContext:function(i){n=i}}}function K$(n,e){const t=e.isWebGL2,r=new WeakMap;function s(u,d){const h=u.array,f=u.usage,m=n.createBuffer();n.bindBuffer(d,m),n.bufferData(d,h,f),u.onUploadCallback();let x;if(h instanceof Float32Array)x=5126;else if(h instanceof Uint16Array)if(u.isFloat16BufferAttribute)if(t)x=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else x=5123;else if(h instanceof Int16Array)x=5122;else if(h instanceof Uint32Array)x=5125;else if(h instanceof Int32Array)x=5124;else if(h instanceof Int8Array)x=5120;else if(h instanceof Uint8Array)x=5121;else if(h instanceof Uint8ClampedArray)x=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+h);return{buffer:m,type:x,bytesPerElement:h.BYTES_PER_ELEMENT,version:u.version}}function i(u,d,h){const f=d.array,m=d.updateRange;n.bindBuffer(h,u),m.count===-1?n.bufferSubData(h,0,f):(t?n.bufferSubData(h,m.offset*f.BYTES_PER_ELEMENT,f,m.offset,m.count):n.bufferSubData(h,m.offset*f.BYTES_PER_ELEMENT,f.subarray(m.offset,m.offset+m.count)),m.count=-1),d.onUploadCallback()}function a(u){return u.isInterleavedBufferAttribute&&(u=u.data),r.get(u)}function o(u){u.isInterleavedBufferAttribute&&(u=u.data);const d=r.get(u);d&&(n.deleteBuffer(d.buffer),r.delete(u))}function l(u,d){if(u.isGLBufferAttribute){const f=r.get(u);(!f||f.version<u.version)&&r.set(u,{buffer:u.buffer,type:u.type,bytesPerElement:u.elementSize,version:u.version});return}u.isInterleavedBufferAttribute&&(u=u.data);const h=r.get(u);h===void 0?r.set(u,s(u,d)):h.version<u.version&&(i(h.buffer,u,d),h.version=u.version)}return{get:a,remove:o,update:l}}class Q0 extends Fu{constructor(e=1,t=1,r=1,s=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:s};const i=e/2,a=t/2,o=Math.floor(r),l=Math.floor(s),u=o+1,d=l+1,h=e/o,f=t/l,m=[],x=[],g=[],y=[];for(let v=0;v<d;v++){const w=v*f-a;for(let I=0;I<u;I++){const T=I*h-i;x.push(T,-w,0),g.push(0,0,1),y.push(I/o),y.push(1-v/l)}}for(let v=0;v<l;v++)for(let w=0;w<o;w++){const I=w+u*v,T=w+u*(v+1),C=w+1+u*(v+1),E=w+1+u*v;m.push(I,T,E),m.push(T,C,E)}this.setIndex(m),this.setAttribute("position",new lu(x,3)),this.setAttribute("normal",new lu(g,3)),this.setAttribute("uv",new lu(y,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Q0(e.width,e.height,e.widthSegments,e.heightSegments)}}var Y$=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,j$=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Q$=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,J$=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,q$=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,eB=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,tB="vec3 transformed = vec3( position );",nB=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,rB=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,sB=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,iB=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,aB=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,oB=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,lB=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,uB=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,cB=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,dB=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,hB=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,pB=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,fB=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,mB=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,gB=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,yB=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,bB=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,xB=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,vB=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,wB="gl_FragColor = linearToOutputTexel( gl_FragColor );",SB=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,TB=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,IB=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,kB=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,CB=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,_B=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,MB=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,NB=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,EB=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,RB=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,LB=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,AB=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,zB=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,DB=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,PB=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,FB=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,GB=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,OB=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,WB=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,VB=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,$B=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,BB=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,XB=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,UB=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,ZB=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,HB=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,KB=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,YB=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,jB=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,QB=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,JB=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,qB=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,eX=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,tX=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,nX=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,rX=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,sX=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,iX=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,aX=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,oX=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,lX=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,uX=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,cX=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,dX=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,hX=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,pX=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,fX=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,mX=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,gX=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,yX=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,bX=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,xX=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,vX=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,wX=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,SX=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,TX=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,IX=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,kX=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,CX=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,_X=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,MX=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,NX=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,EX=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,RX=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,LX=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,AX=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,zX=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,DX=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,PX=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,FX=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,GX=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,OX=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, vec2 fullSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		
		vec2 lodFudge = pow( 1.95, lod ) / fullSize;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec2 fullSize = vec2( textureSize( sampler, 0 ) );
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), fullSize, floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), fullSize, ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,WX=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,VX=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,$X=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,BX=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,XX=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,UX=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,ZX=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const HX=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,KX=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,YX=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,jX=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,QX=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,JX=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,qX=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,eU=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,tU=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,nU=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,rU=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,sU=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,iU=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,aU=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,oU=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,lU=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,uU=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,cU=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,dU=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,hU=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,pU=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,fU=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,mU=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,gU=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,yU=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,bU=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,xU=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,vU=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,wU=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,SU=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,TU=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,IU=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,kU=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,CU=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Pt={alphamap_fragment:Y$,alphamap_pars_fragment:j$,alphatest_fragment:Q$,alphatest_pars_fragment:J$,aomap_fragment:q$,aomap_pars_fragment:eB,begin_vertex:tB,beginnormal_vertex:nB,bsdfs:rB,iridescence_fragment:sB,bumpmap_pars_fragment:iB,clipping_planes_fragment:aB,clipping_planes_pars_fragment:oB,clipping_planes_pars_vertex:lB,clipping_planes_vertex:uB,color_fragment:cB,color_pars_fragment:dB,color_pars_vertex:hB,color_vertex:pB,common:fB,cube_uv_reflection_fragment:mB,defaultnormal_vertex:gB,displacementmap_pars_vertex:yB,displacementmap_vertex:bB,emissivemap_fragment:xB,emissivemap_pars_fragment:vB,encodings_fragment:wB,encodings_pars_fragment:SB,envmap_fragment:TB,envmap_common_pars_fragment:IB,envmap_pars_fragment:kB,envmap_pars_vertex:CB,envmap_physical_pars_fragment:GB,envmap_vertex:_B,fog_vertex:MB,fog_pars_vertex:NB,fog_fragment:EB,fog_pars_fragment:RB,gradientmap_pars_fragment:LB,lightmap_fragment:AB,lightmap_pars_fragment:zB,lights_lambert_fragment:DB,lights_lambert_pars_fragment:PB,lights_pars_begin:FB,lights_toon_fragment:OB,lights_toon_pars_fragment:WB,lights_phong_fragment:VB,lights_phong_pars_fragment:$B,lights_physical_fragment:BB,lights_physical_pars_fragment:XB,lights_fragment_begin:UB,lights_fragment_maps:ZB,lights_fragment_end:HB,logdepthbuf_fragment:KB,logdepthbuf_pars_fragment:YB,logdepthbuf_pars_vertex:jB,logdepthbuf_vertex:QB,map_fragment:JB,map_pars_fragment:qB,map_particle_fragment:eX,map_particle_pars_fragment:tX,metalnessmap_fragment:nX,metalnessmap_pars_fragment:rX,morphcolor_vertex:sX,morphnormal_vertex:iX,morphtarget_pars_vertex:aX,morphtarget_vertex:oX,normal_fragment_begin:lX,normal_fragment_maps:uX,normal_pars_fragment:cX,normal_pars_vertex:dX,normal_vertex:hX,normalmap_pars_fragment:pX,clearcoat_normal_fragment_begin:fX,clearcoat_normal_fragment_maps:mX,clearcoat_pars_fragment:gX,iridescence_pars_fragment:yX,output_fragment:bX,packing:xX,premultiplied_alpha_fragment:vX,project_vertex:wX,dithering_fragment:SX,dithering_pars_fragment:TX,roughnessmap_fragment:IX,roughnessmap_pars_fragment:kX,shadowmap_pars_fragment:CX,shadowmap_pars_vertex:_X,shadowmap_vertex:MX,shadowmask_pars_fragment:NX,skinbase_vertex:EX,skinning_pars_vertex:RX,skinning_vertex:LX,skinnormal_vertex:AX,specularmap_fragment:zX,specularmap_pars_fragment:DX,tonemapping_fragment:PX,tonemapping_pars_fragment:FX,transmission_fragment:GX,transmission_pars_fragment:OX,uv_pars_fragment:WX,uv_pars_vertex:VX,uv_vertex:$X,uv2_pars_fragment:BX,uv2_pars_vertex:XX,uv2_vertex:UX,worldpos_vertex:ZX,background_vert:HX,background_frag:KX,backgroundCube_vert:YX,backgroundCube_frag:jX,cube_vert:QX,cube_frag:JX,depth_vert:qX,depth_frag:eU,distanceRGBA_vert:tU,distanceRGBA_frag:nU,equirect_vert:rU,equirect_frag:sU,linedashed_vert:iU,linedashed_frag:aU,meshbasic_vert:oU,meshbasic_frag:lU,meshlambert_vert:uU,meshlambert_frag:cU,meshmatcap_vert:dU,meshmatcap_frag:hU,meshnormal_vert:pU,meshnormal_frag:fU,meshphong_vert:mU,meshphong_frag:gU,meshphysical_vert:yU,meshphysical_frag:bU,meshtoon_vert:xU,meshtoon_frag:vU,points_vert:wU,points_frag:SU,shadow_vert:TU,shadow_frag:IU,sprite_vert:kU,sprite_frag:CU},Ue={common:{diffuse:{value:new _n(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new cs},uv2Transform:{value:new cs},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Tn(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new _n(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new _n(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new cs}},sprite:{diffuse:{value:new _n(16777215)},opacity:{value:1},center:{value:new Tn(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new cs}}},ha={basic:{uniforms:os([Ue.common,Ue.specularmap,Ue.envmap,Ue.aomap,Ue.lightmap,Ue.fog]),vertexShader:Pt.meshbasic_vert,fragmentShader:Pt.meshbasic_frag},lambert:{uniforms:os([Ue.common,Ue.specularmap,Ue.envmap,Ue.aomap,Ue.lightmap,Ue.emissivemap,Ue.bumpmap,Ue.normalmap,Ue.displacementmap,Ue.fog,Ue.lights,{emissive:{value:new _n(0)}}]),vertexShader:Pt.meshlambert_vert,fragmentShader:Pt.meshlambert_frag},phong:{uniforms:os([Ue.common,Ue.specularmap,Ue.envmap,Ue.aomap,Ue.lightmap,Ue.emissivemap,Ue.bumpmap,Ue.normalmap,Ue.displacementmap,Ue.fog,Ue.lights,{emissive:{value:new _n(0)},specular:{value:new _n(1118481)},shininess:{value:30}}]),vertexShader:Pt.meshphong_vert,fragmentShader:Pt.meshphong_frag},standard:{uniforms:os([Ue.common,Ue.envmap,Ue.aomap,Ue.lightmap,Ue.emissivemap,Ue.bumpmap,Ue.normalmap,Ue.displacementmap,Ue.roughnessmap,Ue.metalnessmap,Ue.fog,Ue.lights,{emissive:{value:new _n(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Pt.meshphysical_vert,fragmentShader:Pt.meshphysical_frag},toon:{uniforms:os([Ue.common,Ue.aomap,Ue.lightmap,Ue.emissivemap,Ue.bumpmap,Ue.normalmap,Ue.displacementmap,Ue.gradientmap,Ue.fog,Ue.lights,{emissive:{value:new _n(0)}}]),vertexShader:Pt.meshtoon_vert,fragmentShader:Pt.meshtoon_frag},matcap:{uniforms:os([Ue.common,Ue.bumpmap,Ue.normalmap,Ue.displacementmap,Ue.fog,{matcap:{value:null}}]),vertexShader:Pt.meshmatcap_vert,fragmentShader:Pt.meshmatcap_frag},points:{uniforms:os([Ue.points,Ue.fog]),vertexShader:Pt.points_vert,fragmentShader:Pt.points_frag},dashed:{uniforms:os([Ue.common,Ue.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Pt.linedashed_vert,fragmentShader:Pt.linedashed_frag},depth:{uniforms:os([Ue.common,Ue.displacementmap]),vertexShader:Pt.depth_vert,fragmentShader:Pt.depth_frag},normal:{uniforms:os([Ue.common,Ue.bumpmap,Ue.normalmap,Ue.displacementmap,{opacity:{value:1}}]),vertexShader:Pt.meshnormal_vert,fragmentShader:Pt.meshnormal_frag},sprite:{uniforms:os([Ue.sprite,Ue.fog]),vertexShader:Pt.sprite_vert,fragmentShader:Pt.sprite_frag},background:{uniforms:{uvTransform:{value:new cs},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Pt.background_vert,fragmentShader:Pt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:Pt.backgroundCube_vert,fragmentShader:Pt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Pt.cube_vert,fragmentShader:Pt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Pt.equirect_vert,fragmentShader:Pt.equirect_frag},distanceRGBA:{uniforms:os([Ue.common,Ue.displacementmap,{referencePosition:{value:new we},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Pt.distanceRGBA_vert,fragmentShader:Pt.distanceRGBA_frag},shadow:{uniforms:os([Ue.lights,Ue.fog,{color:{value:new _n(0)},opacity:{value:1}}]),vertexShader:Pt.shadow_vert,fragmentShader:Pt.shadow_frag}};ha.physical={uniforms:os([ha.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Tn(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new _n(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Tn},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new _n(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new _n(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Pt.meshphysical_vert,fragmentShader:Pt.meshphysical_frag};const Fy={r:0,b:0,g:0};function _U(n,e,t,r,s,i,a){const o=new _n(0);let l=i===!0?0:1,u,d,h=null,f=0,m=null;function x(y,v){let w=!1,I=v.isScene===!0?v.background:null;I&&I.isTexture&&(I=(v.backgroundBlurriness>0?t:e).get(I));const T=n.xr,C=T.getSession&&T.getSession();C&&C.environmentBlendMode==="additive"&&(I=null),I===null?g(o,l):I&&I.isColor&&(g(I,1),w=!0),(n.autoClear||w)&&n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil),I&&(I.isCubeTexture||I.mapping===K0)?(d===void 0&&(d=new ja(new kf(1,1,1),new yu({name:"BackgroundCubeMaterial",uniforms:id(ha.backgroundCube.uniforms),vertexShader:ha.backgroundCube.vertexShader,fragmentShader:ha.backgroundCube.fragmentShader,side:Js,depthTest:!1,depthWrite:!1,fog:!1})),d.geometry.deleteAttribute("normal"),d.geometry.deleteAttribute("uv"),d.onBeforeRender=function(E,L,M){this.matrixWorld.copyPosition(M.matrixWorld)},Object.defineProperty(d.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(d)),d.material.uniforms.envMap.value=I,d.material.uniforms.flipEnvMap.value=I.isCubeTexture&&I.isRenderTargetTexture===!1?-1:1,d.material.uniforms.backgroundBlurriness.value=v.backgroundBlurriness,d.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,d.material.toneMapped=I.encoding!==fn,(h!==I||f!==I.version||m!==n.toneMapping)&&(d.material.needsUpdate=!0,h=I,f=I.version,m=n.toneMapping),d.layers.enableAll(),y.unshift(d,d.geometry,d.material,0,0,null)):I&&I.isTexture&&(u===void 0&&(u=new ja(new Q0(2,2),new yu({name:"BackgroundMaterial",uniforms:id(ha.background.uniforms),vertexShader:ha.background.vertexShader,fragmentShader:ha.background.fragmentShader,side:nl,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),Object.defineProperty(u.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(u)),u.material.uniforms.t2D.value=I,u.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,u.material.toneMapped=I.encoding!==fn,I.matrixAutoUpdate===!0&&I.updateMatrix(),u.material.uniforms.uvTransform.value.copy(I.matrix),(h!==I||f!==I.version||m!==n.toneMapping)&&(u.material.needsUpdate=!0,h=I,f=I.version,m=n.toneMapping),u.layers.enableAll(),y.unshift(u,u.geometry,u.material,0,0,null))}function g(y,v){y.getRGB(Fy,jR(n)),r.buffers.color.setClear(Fy.r,Fy.g,Fy.b,v,a)}return{getClearColor:function(){return o},setClearColor:function(y,v=1){o.set(y),l=v,g(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(y){l=y,g(o,l)},render:x}}function MU(n,e,t,r){const s=n.getParameter(34921),i=r.isWebGL2?null:e.get("OES_vertex_array_object"),a=r.isWebGL2||i!==null,o={},l=y(null);let u=l,d=!1;function h(V,Z,J,te,O){let Q=!1;if(a){const A=g(te,J,Z);u!==A&&(u=A,m(u.object)),Q=v(V,te,J,O),Q&&w(V,te,J,O)}else{const A=Z.wireframe===!0;(u.geometry!==te.id||u.program!==J.id||u.wireframe!==A)&&(u.geometry=te.id,u.program=J.id,u.wireframe=A,Q=!0)}O!==null&&t.update(O,34963),(Q||d)&&(d=!1,M(V,Z,J,te),O!==null&&n.bindBuffer(34963,t.get(O).buffer))}function f(){return r.isWebGL2?n.createVertexArray():i.createVertexArrayOES()}function m(V){return r.isWebGL2?n.bindVertexArray(V):i.bindVertexArrayOES(V)}function x(V){return r.isWebGL2?n.deleteVertexArray(V):i.deleteVertexArrayOES(V)}function g(V,Z,J){const te=J.wireframe===!0;let O=o[V.id];O===void 0&&(O={},o[V.id]=O);let Q=O[Z.id];Q===void 0&&(Q={},O[Z.id]=Q);let A=Q[te];return A===void 0&&(A=y(f()),Q[te]=A),A}function y(V){const Z=[],J=[],te=[];for(let O=0;O<s;O++)Z[O]=0,J[O]=0,te[O]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:Z,enabledAttributes:J,attributeDivisors:te,object:V,attributes:{},index:null}}function v(V,Z,J,te){const O=u.attributes,Q=Z.attributes;let A=0;const K=J.getAttributes();for(const $ in K)if(K[$].location>=0){const oe=O[$];let Y=Q[$];if(Y===void 0&&($==="instanceMatrix"&&V.instanceMatrix&&(Y=V.instanceMatrix),$==="instanceColor"&&V.instanceColor&&(Y=V.instanceColor)),oe===void 0||oe.attribute!==Y||Y&&oe.data!==Y.data)return!0;A++}return u.attributesNum!==A||u.index!==te}function w(V,Z,J,te){const O={},Q=Z.attributes;let A=0;const K=J.getAttributes();for(const $ in K)if(K[$].location>=0){let oe=Q[$];oe===void 0&&($==="instanceMatrix"&&V.instanceMatrix&&(oe=V.instanceMatrix),$==="instanceColor"&&V.instanceColor&&(oe=V.instanceColor));const Y={};Y.attribute=oe,oe&&oe.data&&(Y.data=oe.data),O[$]=Y,A++}u.attributes=O,u.attributesNum=A,u.index=te}function I(){const V=u.newAttributes;for(let Z=0,J=V.length;Z<J;Z++)V[Z]=0}function T(V){C(V,0)}function C(V,Z){const J=u.newAttributes,te=u.enabledAttributes,O=u.attributeDivisors;J[V]=1,te[V]===0&&(n.enableVertexAttribArray(V),te[V]=1),O[V]!==Z&&((r.isWebGL2?n:e.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](V,Z),O[V]=Z)}function E(){const V=u.newAttributes,Z=u.enabledAttributes;for(let J=0,te=Z.length;J<te;J++)Z[J]!==V[J]&&(n.disableVertexAttribArray(J),Z[J]=0)}function L(V,Z,J,te,O,Q){r.isWebGL2===!0&&(J===5124||J===5125)?n.vertexAttribIPointer(V,Z,J,O,Q):n.vertexAttribPointer(V,Z,J,te,O,Q)}function M(V,Z,J,te){if(r.isWebGL2===!1&&(V.isInstancedMesh||te.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;I();const O=te.attributes,Q=J.getAttributes(),A=Z.defaultAttributeValues;for(const K in Q){const $=Q[K];if($.location>=0){let re=O[K];if(re===void 0&&(K==="instanceMatrix"&&V.instanceMatrix&&(re=V.instanceMatrix),K==="instanceColor"&&V.instanceColor&&(re=V.instanceColor)),re!==void 0){const oe=re.normalized,Y=re.itemSize,ge=t.get(re);if(ge===void 0)continue;const ye=ge.buffer,ve=ge.type,Ce=ge.bytesPerElement;if(re.isInterleavedBufferAttribute){const De=re.data,We=De.stride,Ze=re.offset;if(De.isInstancedInterleavedBuffer){for(let ot=0;ot<$.locationSize;ot++)C($.location+ot,De.meshPerAttribute);V.isInstancedMesh!==!0&&te._maxInstanceCount===void 0&&(te._maxInstanceCount=De.meshPerAttribute*De.count)}else for(let ot=0;ot<$.locationSize;ot++)T($.location+ot);n.bindBuffer(34962,ye);for(let ot=0;ot<$.locationSize;ot++)L($.location+ot,Y/$.locationSize,ve,oe,We*Ce,(Ze+Y/$.locationSize*ot)*Ce)}else{if(re.isInstancedBufferAttribute){for(let De=0;De<$.locationSize;De++)C($.location+De,re.meshPerAttribute);V.isInstancedMesh!==!0&&te._maxInstanceCount===void 0&&(te._maxInstanceCount=re.meshPerAttribute*re.count)}else for(let De=0;De<$.locationSize;De++)T($.location+De);n.bindBuffer(34962,ye);for(let De=0;De<$.locationSize;De++)L($.location+De,Y/$.locationSize,ve,oe,Y*Ce,Y/$.locationSize*De*Ce)}}else if(A!==void 0){const oe=A[K];if(oe!==void 0)switch(oe.length){case 2:n.vertexAttrib2fv($.location,oe);break;case 3:n.vertexAttrib3fv($.location,oe);break;case 4:n.vertexAttrib4fv($.location,oe);break;default:n.vertexAttrib1fv($.location,oe)}}}}E()}function R(){U();for(const V in o){const Z=o[V];for(const J in Z){const te=Z[J];for(const O in te)x(te[O].object),delete te[O];delete Z[J]}delete o[V]}}function z(V){if(o[V.id]===void 0)return;const Z=o[V.id];for(const J in Z){const te=Z[J];for(const O in te)x(te[O].object),delete te[O];delete Z[J]}delete o[V.id]}function X(V){for(const Z in o){const J=o[Z];if(J[V.id]===void 0)continue;const te=J[V.id];for(const O in te)x(te[O].object),delete te[O];delete J[V.id]}}function U(){G(),d=!0,u!==l&&(u=l,m(u.object))}function G(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:h,reset:U,resetDefaultState:G,dispose:R,releaseStatesOfGeometry:z,releaseStatesOfProgram:X,initAttributes:I,enableAttribute:T,disableUnusedAttributes:E}}function NU(n,e,t,r){const s=r.isWebGL2;let i;function a(u){i=u}function o(u,d){n.drawArrays(i,u,d),t.update(d,i,1)}function l(u,d,h){if(h===0)return;let f,m;if(s)f=n,m="drawArraysInstanced";else if(f=e.get("ANGLE_instanced_arrays"),m="drawArraysInstancedANGLE",f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[m](i,u,d,h),t.update(d,i,h)}this.setMode=a,this.render=o,this.renderInstances=l}function EU(n,e,t){let r;function s(){if(r!==void 0)return r;if(e.has("EXT_texture_filter_anisotropic")===!0){const L=e.get("EXT_texture_filter_anisotropic");r=n.getParameter(L.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r}function i(L){if(L==="highp"){if(n.getShaderPrecisionFormat(35633,36338).precision>0&&n.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";L="mediump"}return L==="mediump"&&n.getShaderPrecisionFormat(35633,36337).precision>0&&n.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext<"u"&&n instanceof WebGL2RenderingContext;let o=t.precision!==void 0?t.precision:"highp";const l=i(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const u=a||e.has("WEBGL_draw_buffers"),d=t.logarithmicDepthBuffer===!0,h=n.getParameter(34930),f=n.getParameter(35660),m=n.getParameter(3379),x=n.getParameter(34076),g=n.getParameter(34921),y=n.getParameter(36347),v=n.getParameter(36348),w=n.getParameter(36349),I=f>0,T=a||e.has("OES_texture_float"),C=I&&T,E=a?n.getParameter(36183):0;return{isWebGL2:a,drawBuffers:u,getMaxAnisotropy:s,getMaxPrecision:i,precision:o,logarithmicDepthBuffer:d,maxTextures:h,maxVertexTextures:f,maxTextureSize:m,maxCubemapSize:x,maxAttributes:g,maxVertexUniforms:y,maxVaryings:v,maxFragmentUniforms:w,vertexTextures:I,floatFragmentTextures:T,floatVertexTextures:C,maxSamples:E}}function RU(n){const e=this;let t=null,r=0,s=!1,i=!1;const a=new Ul,o=new cs,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,f){const m=h.length!==0||f||r!==0||s;return s=f,r=h.length,m},this.beginShadows=function(){i=!0,d(null)},this.endShadows=function(){i=!1},this.setGlobalState=function(h,f){t=d(h,f,0)},this.setState=function(h,f,m){const x=h.clippingPlanes,g=h.clipIntersection,y=h.clipShadows,v=n.get(h);if(!s||x===null||x.length===0||i&&!y)i?d(null):u();else{const w=i?0:r,I=w*4;let T=v.clippingState||null;l.value=T,T=d(x,f,I,m);for(let C=0;C!==I;++C)T[C]=t[C];v.clippingState=T,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=w}};function u(){l.value!==t&&(l.value=t,l.needsUpdate=r>0),e.numPlanes=r,e.numIntersection=0}function d(h,f,m,x){const g=h!==null?h.length:0;let y=null;if(g!==0){if(y=l.value,x!==!0||y===null){const v=m+g*4,w=f.matrixWorldInverse;o.getNormalMatrix(w),(y===null||y.length<v)&&(y=new Float32Array(v));for(let I=0,T=m;I!==g;++I,T+=4)a.copy(h[I]).applyMatrix4(w,o),a.normal.toArray(y,T),y[T+3]=a.constant}l.value=y,l.needsUpdate=!0}return e.numPlanes=g,e.numIntersection=0,y}}function LU(n){let e=new WeakMap;function t(a,o){return o===TS?a.mapping=nd:o===IS&&(a.mapping=rd),a}function r(a){if(a&&a.isTexture&&a.isRenderTargetTexture===!1){const o=a.mapping;if(o===TS||o===IS)if(e.has(a)){const l=e.get(a).texture;return t(l,a.mapping)}else{const l=a.image;if(l&&l.height>0){const u=new U$(l.height/2);return u.fromEquirectangularTexture(n,a),e.set(a,u),a.addEventListener("dispose",s),t(u.texture,a.mapping)}else return null}}return a}function s(a){const o=a.target;o.removeEventListener("dispose",s);const l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}function i(){e=new WeakMap}return{get:r,dispose:i}}class AU extends QR{constructor(e=-1,t=1,r=1,s=-1,i=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=r,this.bottom=s,this.near=i,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,r,s,i,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=s,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let i=r-e,a=r+e,o=s+t,l=s-t;if(this.view!==null&&this.view.enabled){const u=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=u*this.view.offsetX,a=i+u*this.view.width,o-=d*this.view.offsetY,l=o-d*this.view.height}this.projectionMatrix.makeOrthographic(i,a,o,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const Zc=4,fE=[.125,.215,.35,.446,.526,.582],Yl=20,Fw=new AU,mE=new _n;let Gw=null;const Zl=(1+Math.sqrt(5))/2,Gc=1/Zl,gE=[new we(1,1,1),new we(-1,1,1),new we(1,1,-1),new we(-1,1,-1),new we(0,Zl,Gc),new we(0,Zl,-Gc),new we(Gc,0,Zl),new we(-Gc,0,Zl),new we(Zl,Gc,0),new we(-Zl,Gc,0)];class yE{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,r=.1,s=100){Gw=this._renderer.getRenderTarget(),this._setSize(256);const i=this._allocateTargets();return i.depthBuffer=!0,this._sceneToCubeUV(e,r,s,i),t>0&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=vE(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=xE(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Gw),e.scissorTest=!1,Gy(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===nd||e.mapping===rd?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Gw=this._renderer.getRenderTarget();const r=t||this._allocateTargets();return this._textureToCubeUV(e,r),this._applyPMREM(r),this._cleanup(r),r}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,r={magFilter:yi,minFilter:yi,generateMipmaps:!1,type:ef,format:Wi,encoding:mu,depthBuffer:!1},s=bE(e,t,r);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=bE(e,t,r);const{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=zU(i)),this._blurMaterial=DU(i,e,t)}return s}_compileMaterial(e){const t=new ja(this._lodPlanes[0],e);this._renderer.compile(t,Fw)}_sceneToCubeUV(e,t,r,s){const o=new bi(90,1,t,r),l=[1,-1,1,1,1,1],u=[1,1,1,-1,-1,-1],d=this._renderer,h=d.autoClear,f=d.toneMapping;d.getClearColor(mE),d.toneMapping=Qa,d.autoClear=!1;const m=new R2({name:"PMREM.Background",side:Js,depthWrite:!1,depthTest:!1}),x=new ja(new kf,m);let g=!1;const y=e.background;y?y.isColor&&(m.color.copy(y),e.background=null,g=!0):(m.color.copy(mE),g=!0);for(let v=0;v<6;v++){const w=v%3;w===0?(o.up.set(0,l[v],0),o.lookAt(u[v],0,0)):w===1?(o.up.set(0,0,l[v]),o.lookAt(0,u[v],0)):(o.up.set(0,l[v],0),o.lookAt(0,0,u[v]));const I=this._cubeSize;Gy(s,w*I,v>2?I:0,I,I),d.setRenderTarget(s),g&&d.render(x,o),d.render(e,o)}x.geometry.dispose(),x.material.dispose(),d.toneMapping=f,d.autoClear=h,e.background=y}_textureToCubeUV(e,t){const r=this._renderer,s=e.mapping===nd||e.mapping===rd;s?(this._cubemapMaterial===null&&(this._cubemapMaterial=vE()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=xE());const i=s?this._cubemapMaterial:this._equirectMaterial,a=new ja(this._lodPlanes[0],i),o=i.uniforms;o.envMap.value=e;const l=this._cubeSize;Gy(t,0,0,3*l,2*l),r.setRenderTarget(t),r.render(a,Fw)}_applyPMREM(e){const t=this._renderer,r=t.autoClear;t.autoClear=!1;for(let s=1;s<this._lodPlanes.length;s++){const i=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),a=gE[(s-1)%gE.length];this._blur(e,s-1,s,i,a)}t.autoClear=r}_blur(e,t,r,s,i){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,r,s,"latitudinal",i),this._halfBlur(a,e,r,r,s,"longitudinal",i)}_halfBlur(e,t,r,s,i,a,o){const l=this._renderer,u=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const d=3,h=new ja(this._lodPlanes[s],u),f=u.uniforms,m=this._sizeLods[r]-1,x=isFinite(i)?Math.PI/(2*m):2*Math.PI/(2*Yl-1),g=i/x,y=isFinite(i)?1+Math.floor(d*g):Yl;y>Yl&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${y} samples when the maximum is set to ${Yl}`);const v=[];let w=0;for(let L=0;L<Yl;++L){const M=L/g,R=Math.exp(-M*M/2);v.push(R),L===0?w+=R:L<y&&(w+=2*R)}for(let L=0;L<v.length;L++)v[L]=v[L]/w;f.envMap.value=e.texture,f.samples.value=y,f.weights.value=v,f.latitudinal.value=a==="latitudinal",o&&(f.poleAxis.value=o);const{_lodMax:I}=this;f.dTheta.value=x,f.mipInt.value=I-r;const T=this._sizeLods[s],C=3*T*(s>I-Zc?s-I+Zc:0),E=4*(this._cubeSize-T);Gy(t,C,E,3*T,2*T),l.setRenderTarget(t),l.render(h,Fw)}}function zU(n){const e=[],t=[],r=[];let s=n;const i=n-Zc+1+fE.length;for(let a=0;a<i;a++){const o=Math.pow(2,s);t.push(o);let l=1/o;a>n-Zc?l=fE[a-n+Zc-1]:a===0&&(l=0),r.push(l);const u=1/(o-2),d=-u,h=1+u,f=[d,d,h,d,h,h,d,d,h,h,d,h],m=6,x=6,g=3,y=2,v=1,w=new Float32Array(g*x*m),I=new Float32Array(y*x*m),T=new Float32Array(v*x*m);for(let E=0;E<m;E++){const L=E%3*2/3-1,M=E>2?0:-1,R=[L,M,0,L+2/3,M,0,L+2/3,M+1,0,L,M,0,L+2/3,M+1,0,L,M+1,0];w.set(R,g*x*E),I.set(f,y*x*E);const z=[E,E,E,E,E,E];T.set(z,v*x*E)}const C=new Fu;C.setAttribute("position",new xa(w,g)),C.setAttribute("uv",new xa(I,y)),C.setAttribute("faceIndex",new xa(T,v)),e.push(C),s>Zc&&s--}return{lodPlanes:e,sizeLods:t,sigmas:r}}function bE(n,e,t){const r=new gu(n,e,t);return r.texture.mapping=K0,r.texture.name="PMREM.cubeUv",r.scissorTest=!0,r}function Gy(n,e,t,r,s){n.viewport.set(e,t,r,s),n.scissor.set(e,t,r,s)}function DU(n,e,t){const r=new Float32Array(Yl),s=new we(0,1,0);return new yu({name:"SphericalGaussianBlur",defines:{n:Yl,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:r},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:s}},vertexShader:L2(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Qo,depthTest:!1,depthWrite:!1})}function xE(){return new yu({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:L2(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Qo,depthTest:!1,depthWrite:!1})}function vE(){return new yu({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:L2(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Qo,depthTest:!1,depthWrite:!1})}function L2(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function PU(n){let e=new WeakMap,t=null;function r(o){if(o&&o.isTexture){const l=o.mapping,u=l===TS||l===IS,d=l===nd||l===rd;if(u||d)if(o.isRenderTargetTexture&&o.needsPMREMUpdate===!0){o.needsPMREMUpdate=!1;let h=e.get(o);return t===null&&(t=new yE(n)),h=u?t.fromEquirectangular(o,h):t.fromCubemap(o,h),e.set(o,h),h.texture}else{if(e.has(o))return e.get(o).texture;{const h=o.image;if(u&&h&&h.height>0||d&&h&&s(h)){t===null&&(t=new yE(n));const f=u?t.fromEquirectangular(o):t.fromCubemap(o);return e.set(o,f),o.addEventListener("dispose",i),f.texture}else return null}}}return o}function s(o){let l=0;const u=6;for(let d=0;d<u;d++)o[d]!==void 0&&l++;return l===u}function i(o){const l=o.target;l.removeEventListener("dispose",i);const u=e.get(l);u!==void 0&&(e.delete(l),u.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:r,dispose:a}}function FU(n){const e={};function t(r){if(e[r]!==void 0)return e[r];let s;switch(r){case"WEBGL_depth_texture":s=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":s=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":s=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":s=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:s=n.getExtension(r)}return e[r]=s,s}return{has:function(r){return t(r)!==null},init:function(r){r.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(r){const s=t(r);return s===null&&console.warn("THREE.WebGLRenderer: "+r+" extension not supported."),s}}}function GU(n,e,t,r){const s={},i=new WeakMap;function a(h){const f=h.target;f.index!==null&&e.remove(f.index);for(const x in f.attributes)e.remove(f.attributes[x]);f.removeEventListener("dispose",a),delete s[f.id];const m=i.get(f);m&&(e.remove(m),i.delete(f)),r.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,t.memory.geometries--}function o(h,f){return s[f.id]===!0||(f.addEventListener("dispose",a),s[f.id]=!0,t.memory.geometries++),f}function l(h){const f=h.attributes;for(const x in f)e.update(f[x],34962);const m=h.morphAttributes;for(const x in m){const g=m[x];for(let y=0,v=g.length;y<v;y++)e.update(g[y],34962)}}function u(h){const f=[],m=h.index,x=h.attributes.position;let g=0;if(m!==null){const w=m.array;g=m.version;for(let I=0,T=w.length;I<T;I+=3){const C=w[I+0],E=w[I+1],L=w[I+2];f.push(C,E,E,L,L,C)}}else{const w=x.array;g=x.version;for(let I=0,T=w.length/3-1;I<T;I+=3){const C=I+0,E=I+1,L=I+2;f.push(C,E,E,L,L,C)}}const y=new($R(f)?YR:KR)(f,1);y.version=g;const v=i.get(h);v&&e.remove(v),i.set(h,y)}function d(h){const f=i.get(h);if(f){const m=h.index;m!==null&&f.version<m.version&&u(h)}else u(h);return i.get(h)}return{get:o,update:l,getWireframeAttribute:d}}function OU(n,e,t,r){const s=r.isWebGL2;let i;function a(f){i=f}let o,l;function u(f){o=f.type,l=f.bytesPerElement}function d(f,m){n.drawElements(i,m,o,f*l),t.update(m,i,1)}function h(f,m,x){if(x===0)return;let g,y;if(s)g=n,y="drawElementsInstanced";else if(g=e.get("ANGLE_instanced_arrays"),y="drawElementsInstancedANGLE",g===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[y](i,m,o,f*l,x),t.update(m,i,x)}this.setMode=a,this.setIndex=u,this.render=d,this.renderInstances=h}function WU(n){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function r(i,a,o){switch(t.calls++,a){case 4:t.triangles+=o*(i/3);break;case 1:t.lines+=o*(i/2);break;case 3:t.lines+=o*(i-1);break;case 2:t.lines+=o*i;break;case 0:t.points+=o*i;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function s(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:s,update:r}}function VU(n,e){return n[0]-e[0]}function $U(n,e){return Math.abs(e[1])-Math.abs(n[1])}function BU(n,e,t){const r={},s=new Float32Array(8),i=new WeakMap,a=new Or,o=[];for(let u=0;u<8;u++)o[u]=[u,0];function l(u,d,h){const f=u.morphTargetInfluences;if(e.isWebGL2===!0){const x=d.morphAttributes.position||d.morphAttributes.normal||d.morphAttributes.color,g=x!==void 0?x.length:0;let y=i.get(d);if(y===void 0||y.count!==g){let Z=function(){G.dispose(),i.delete(d),d.removeEventListener("dispose",Z)};var m=Z;y!==void 0&&y.texture.dispose();const I=d.morphAttributes.position!==void 0,T=d.morphAttributes.normal!==void 0,C=d.morphAttributes.color!==void 0,E=d.morphAttributes.position||[],L=d.morphAttributes.normal||[],M=d.morphAttributes.color||[];let R=0;I===!0&&(R=1),T===!0&&(R=2),C===!0&&(R=3);let z=d.attributes.position.count*R,X=1;z>e.maxTextureSize&&(X=Math.ceil(z/e.maxTextureSize),z=e.maxTextureSize);const U=new Float32Array(z*X*4*g),G=new UR(U,z,X,g);G.type=ru,G.needsUpdate=!0;const V=R*4;for(let J=0;J<g;J++){const te=E[J],O=L[J],Q=M[J],A=z*X*4*J;for(let K=0;K<te.count;K++){const $=K*V;I===!0&&(a.fromBufferAttribute(te,K),U[A+$+0]=a.x,U[A+$+1]=a.y,U[A+$+2]=a.z,U[A+$+3]=0),T===!0&&(a.fromBufferAttribute(O,K),U[A+$+4]=a.x,U[A+$+5]=a.y,U[A+$+6]=a.z,U[A+$+7]=0),C===!0&&(a.fromBufferAttribute(Q,K),U[A+$+8]=a.x,U[A+$+9]=a.y,U[A+$+10]=a.z,U[A+$+11]=Q.itemSize===4?a.w:1)}}y={count:g,texture:G,size:new Tn(z,X)},i.set(d,y),d.addEventListener("dispose",Z)}let v=0;for(let I=0;I<f.length;I++)v+=f[I];const w=d.morphTargetsRelative?1:1-v;h.getUniforms().setValue(n,"morphTargetBaseInfluence",w),h.getUniforms().setValue(n,"morphTargetInfluences",f),h.getUniforms().setValue(n,"morphTargetsTexture",y.texture,t),h.getUniforms().setValue(n,"morphTargetsTextureSize",y.size)}else{const x=f===void 0?0:f.length;let g=r[d.id];if(g===void 0||g.length!==x){g=[];for(let T=0;T<x;T++)g[T]=[T,0];r[d.id]=g}for(let T=0;T<x;T++){const C=g[T];C[0]=T,C[1]=f[T]}g.sort($U);for(let T=0;T<8;T++)T<x&&g[T][1]?(o[T][0]=g[T][0],o[T][1]=g[T][1]):(o[T][0]=Number.MAX_SAFE_INTEGER,o[T][1]=0);o.sort(VU);const y=d.morphAttributes.position,v=d.morphAttributes.normal;let w=0;for(let T=0;T<8;T++){const C=o[T],E=C[0],L=C[1];E!==Number.MAX_SAFE_INTEGER&&L?(y&&d.getAttribute("morphTarget"+T)!==y[E]&&d.setAttribute("morphTarget"+T,y[E]),v&&d.getAttribute("morphNormal"+T)!==v[E]&&d.setAttribute("morphNormal"+T,v[E]),s[T]=L,w+=L):(y&&d.hasAttribute("morphTarget"+T)===!0&&d.deleteAttribute("morphTarget"+T),v&&d.hasAttribute("morphNormal"+T)===!0&&d.deleteAttribute("morphNormal"+T),s[T]=0)}const I=d.morphTargetsRelative?1:1-w;h.getUniforms().setValue(n,"morphTargetBaseInfluence",I),h.getUniforms().setValue(n,"morphTargetInfluences",s)}}return{update:l}}function XU(n,e,t,r){let s=new WeakMap;function i(l){const u=r.render.frame,d=l.geometry,h=e.get(l,d);return s.get(h)!==u&&(e.update(h),s.set(h,u)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),t.update(l.instanceMatrix,34962),l.instanceColor!==null&&t.update(l.instanceColor,34962)),h}function a(){s=new WeakMap}function o(l){const u=l.target;u.removeEventListener("dispose",o),t.remove(u.instanceMatrix),u.instanceColor!==null&&t.remove(u.instanceColor)}return{update:i,dispose:a}}const tL=new qs,nL=new UR,rL=new M$,sL=new JR,wE=[],SE=[],TE=new Float32Array(16),IE=new Float32Array(9),kE=new Float32Array(4);function Sd(n,e,t){const r=n[0];if(r<=0||r>0)return n;const s=e*t;let i=wE[s];if(i===void 0&&(i=new Float32Array(s),wE[s]=i),e!==0){r.toArray(i,0);for(let a=1,o=0;a!==e;++a)o+=t,n[a].toArray(i,o)}return i}function pr(n,e){if(n.length!==e.length)return!1;for(let t=0,r=n.length;t<r;t++)if(n[t]!==e[t])return!1;return!0}function fr(n,e){for(let t=0,r=e.length;t<r;t++)n[t]=e[t]}function J0(n,e){let t=SE[e];t===void 0&&(t=new Int32Array(e),SE[e]=t);for(let r=0;r!==e;++r)t[r]=n.allocateTextureUnit();return t}function UU(n,e){const t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function ZU(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(pr(t,e))return;n.uniform2fv(this.addr,e),fr(t,e)}}function HU(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(pr(t,e))return;n.uniform3fv(this.addr,e),fr(t,e)}}function KU(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(pr(t,e))return;n.uniform4fv(this.addr,e),fr(t,e)}}function YU(n,e){const t=this.cache,r=e.elements;if(r===void 0){if(pr(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),fr(t,e)}else{if(pr(t,r))return;kE.set(r),n.uniformMatrix2fv(this.addr,!1,kE),fr(t,r)}}function jU(n,e){const t=this.cache,r=e.elements;if(r===void 0){if(pr(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),fr(t,e)}else{if(pr(t,r))return;IE.set(r),n.uniformMatrix3fv(this.addr,!1,IE),fr(t,r)}}function QU(n,e){const t=this.cache,r=e.elements;if(r===void 0){if(pr(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),fr(t,e)}else{if(pr(t,r))return;TE.set(r),n.uniformMatrix4fv(this.addr,!1,TE),fr(t,r)}}function JU(n,e){const t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function qU(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(pr(t,e))return;n.uniform2iv(this.addr,e),fr(t,e)}}function e4(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(pr(t,e))return;n.uniform3iv(this.addr,e),fr(t,e)}}function t4(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(pr(t,e))return;n.uniform4iv(this.addr,e),fr(t,e)}}function n4(n,e){const t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function r4(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(pr(t,e))return;n.uniform2uiv(this.addr,e),fr(t,e)}}function s4(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(pr(t,e))return;n.uniform3uiv(this.addr,e),fr(t,e)}}function i4(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(pr(t,e))return;n.uniform4uiv(this.addr,e),fr(t,e)}}function a4(n,e,t){const r=this.cache,s=t.allocateTextureUnit();r[0]!==s&&(n.uniform1i(this.addr,s),r[0]=s),t.setTexture2D(e||tL,s)}function o4(n,e,t){const r=this.cache,s=t.allocateTextureUnit();r[0]!==s&&(n.uniform1i(this.addr,s),r[0]=s),t.setTexture3D(e||rL,s)}function l4(n,e,t){const r=this.cache,s=t.allocateTextureUnit();r[0]!==s&&(n.uniform1i(this.addr,s),r[0]=s),t.setTextureCube(e||sL,s)}function u4(n,e,t){const r=this.cache,s=t.allocateTextureUnit();r[0]!==s&&(n.uniform1i(this.addr,s),r[0]=s),t.setTexture2DArray(e||nL,s)}function c4(n){switch(n){case 5126:return UU;case 35664:return ZU;case 35665:return HU;case 35666:return KU;case 35674:return YU;case 35675:return jU;case 35676:return QU;case 5124:case 35670:return JU;case 35667:case 35671:return qU;case 35668:case 35672:return e4;case 35669:case 35673:return t4;case 5125:return n4;case 36294:return r4;case 36295:return s4;case 36296:return i4;case 35678:case 36198:case 36298:case 36306:case 35682:return a4;case 35679:case 36299:case 36307:return o4;case 35680:case 36300:case 36308:case 36293:return l4;case 36289:case 36303:case 36311:case 36292:return u4}}function d4(n,e){n.uniform1fv(this.addr,e)}function h4(n,e){const t=Sd(e,this.size,2);n.uniform2fv(this.addr,t)}function p4(n,e){const t=Sd(e,this.size,3);n.uniform3fv(this.addr,t)}function f4(n,e){const t=Sd(e,this.size,4);n.uniform4fv(this.addr,t)}function m4(n,e){const t=Sd(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function g4(n,e){const t=Sd(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function y4(n,e){const t=Sd(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function b4(n,e){n.uniform1iv(this.addr,e)}function x4(n,e){n.uniform2iv(this.addr,e)}function v4(n,e){n.uniform3iv(this.addr,e)}function w4(n,e){n.uniform4iv(this.addr,e)}function S4(n,e){n.uniform1uiv(this.addr,e)}function T4(n,e){n.uniform2uiv(this.addr,e)}function I4(n,e){n.uniform3uiv(this.addr,e)}function k4(n,e){n.uniform4uiv(this.addr,e)}function C4(n,e,t){const r=this.cache,s=e.length,i=J0(t,s);pr(r,i)||(n.uniform1iv(this.addr,i),fr(r,i));for(let a=0;a!==s;++a)t.setTexture2D(e[a]||tL,i[a])}function _4(n,e,t){const r=this.cache,s=e.length,i=J0(t,s);pr(r,i)||(n.uniform1iv(this.addr,i),fr(r,i));for(let a=0;a!==s;++a)t.setTexture3D(e[a]||rL,i[a])}function M4(n,e,t){const r=this.cache,s=e.length,i=J0(t,s);pr(r,i)||(n.uniform1iv(this.addr,i),fr(r,i));for(let a=0;a!==s;++a)t.setTextureCube(e[a]||sL,i[a])}function N4(n,e,t){const r=this.cache,s=e.length,i=J0(t,s);pr(r,i)||(n.uniform1iv(this.addr,i),fr(r,i));for(let a=0;a!==s;++a)t.setTexture2DArray(e[a]||nL,i[a])}function E4(n){switch(n){case 5126:return d4;case 35664:return h4;case 35665:return p4;case 35666:return f4;case 35674:return m4;case 35675:return g4;case 35676:return y4;case 5124:case 35670:return b4;case 35667:case 35671:return x4;case 35668:case 35672:return v4;case 35669:case 35673:return w4;case 5125:return S4;case 36294:return T4;case 36295:return I4;case 36296:return k4;case 35678:case 36198:case 36298:case 36306:case 35682:return C4;case 35679:case 36299:case 36307:return _4;case 35680:case 36300:case 36308:case 36293:return M4;case 36289:case 36303:case 36311:case 36292:return N4}}class R4{constructor(e,t,r){this.id=e,this.addr=r,this.cache=[],this.setValue=c4(t.type)}}class L4{constructor(e,t,r){this.id=e,this.addr=r,this.cache=[],this.size=t.size,this.setValue=E4(t.type)}}class A4{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,r){const s=this.seq;for(let i=0,a=s.length;i!==a;++i){const o=s[i];o.setValue(e,t[o.id],r)}}}const Ow=/(\w+)(\])?(\[|\.)?/g;function CE(n,e){n.seq.push(e),n.map[e.id]=e}function z4(n,e,t){const r=n.name,s=r.length;for(Ow.lastIndex=0;;){const i=Ow.exec(r),a=Ow.lastIndex;let o=i[1];const l=i[2]==="]",u=i[3];if(l&&(o=o|0),u===void 0||u==="["&&a+2===s){CE(t,u===void 0?new R4(o,n,e):new L4(o,n,e));break}else{let h=t.map[o];h===void 0&&(h=new A4(o),CE(t,h)),t=h}}}class r0{constructor(e,t){this.seq=[],this.map={};const r=e.getProgramParameter(t,35718);for(let s=0;s<r;++s){const i=e.getActiveUniform(t,s),a=e.getUniformLocation(t,i.name);z4(i,a,this)}}setValue(e,t,r,s){const i=this.map[t];i!==void 0&&i.setValue(e,r,s)}setOptional(e,t,r){const s=t[r];s!==void 0&&this.setValue(e,r,s)}static upload(e,t,r,s){for(let i=0,a=t.length;i!==a;++i){const o=t[i],l=r[o.id];l.needsUpdate!==!1&&o.setValue(e,l.value,s)}}static seqWithValue(e,t){const r=[];for(let s=0,i=e.length;s!==i;++s){const a=e[s];a.id in t&&r.push(a)}return r}}function _E(n,e,t){const r=n.createShader(e);return n.shaderSource(r,t),n.compileShader(r),r}let D4=0;function P4(n,e){const t=n.split(`
`),r=[],s=Math.max(e-6,0),i=Math.min(e+6,t.length);for(let a=s;a<i;a++){const o=a+1;r.push(`${o===e?">":" "} ${o}: ${t[a]}`)}return r.join(`
`)}function F4(n){switch(n){case mu:return["Linear","( value )"];case fn:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",n),["Linear","( value )"]}}function ME(n,e,t){const r=n.getShaderParameter(e,35713),s=n.getShaderInfoLog(e).trim();if(r&&s==="")return"";const i=/ERROR: 0:(\d+)/.exec(s);if(i){const a=parseInt(i[1]);return t.toUpperCase()+`

`+s+`

`+P4(n.getShaderSource(e),a)}else return s}function G4(n,e){const t=F4(e);return"vec4 "+n+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function O4(n,e){let t;switch(e){case HV:t="Linear";break;case KV:t="Reinhard";break;case YV:t="OptimizedCineon";break;case jV:t="ACESFilmic";break;case QV:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function W4(n){return[n.extensionDerivatives||n.envMapCubeUVHeight||n.bumpMap||n.tangentSpaceNormalMap||n.clearcoatNormalMap||n.flatShading||n.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(n.extensionFragDepth||n.logarithmicDepthBuffer)&&n.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",n.extensionDrawBuffers&&n.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(n.extensionShaderTextureLOD||n.envMap||n.transmission)&&n.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Vp).join(`
`)}function V4(n){const e=[];for(const t in n){const r=n[t];r!==!1&&e.push("#define "+t+" "+r)}return e.join(`
`)}function $4(n,e){const t={},r=n.getProgramParameter(e,35721);for(let s=0;s<r;s++){const i=n.getActiveAttrib(e,s),a=i.name;let o=1;i.type===35674&&(o=2),i.type===35675&&(o=3),i.type===35676&&(o=4),t[a]={type:i.type,location:n.getAttribLocation(e,a),locationSize:o}}return t}function Vp(n){return n!==""}function NE(n,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function EE(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const B4=/^[ \t]*#include +<([\w\d./]+)>/gm;function MS(n){return n.replace(B4,X4)}function X4(n,e){const t=Pt[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return MS(t)}const U4=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function RE(n){return n.replace(U4,Z4)}function Z4(n,e,t,r){let s="";for(let i=parseInt(e);i<parseInt(t);i++)s+=r.replace(/\[\s*i\s*\]/g,"[ "+i+" ]").replace(/UNROLLED_LOOP_INDEX/g,i);return s}function LE(n){let e="precision "+n.precision+` float;
precision `+n.precision+" int;";return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function H4(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===DR?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===kV?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===Wp&&(e="SHADOWMAP_TYPE_VSM"),e}function K4(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case nd:case rd:e="ENVMAP_TYPE_CUBE";break;case K0:e="ENVMAP_TYPE_CUBE_UV";break}return e}function Y4(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case rd:e="ENVMAP_MODE_REFRACTION";break}return e}function j4(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case GR:e="ENVMAP_BLENDING_MULTIPLY";break;case UV:e="ENVMAP_BLENDING_MIX";break;case ZV:e="ENVMAP_BLENDING_ADD";break}return e}function Q4(n){const e=n.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,r=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:r,maxMip:t}}function J4(n,e,t,r){const s=n.getContext(),i=t.defines;let a=t.vertexShader,o=t.fragmentShader;const l=H4(t),u=K4(t),d=Y4(t),h=j4(t),f=Q4(t),m=t.isWebGL2?"":W4(t),x=V4(i),g=s.createProgram();let y,v,w=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(y=[x].filter(Vp).join(`
`),y.length>0&&(y+=`
`),v=[m,x].filter(Vp).join(`
`),v.length>0&&(v+=`
`)):(y=[LE(t),"#define SHADER_NAME "+t.shaderName,x,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Vp).join(`
`),v=[m,LE(t),"#define SHADER_NAME "+t.shaderName,x,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.envMap?"#define "+d:"",t.envMap?"#define "+h:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Qa?"#define TONE_MAPPING":"",t.toneMapping!==Qa?Pt.tonemapping_pars_fragment:"",t.toneMapping!==Qa?O4("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Pt.encodings_pars_fragment,G4("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Vp).join(`
`)),a=MS(a),a=NE(a,t),a=EE(a,t),o=MS(o),o=NE(o,t),o=EE(o,t),a=RE(a),o=RE(o),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(w=`#version 300 es
`,y=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+y,v=["#define varying in",t.glslVersion===eE?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===eE?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const I=w+y+a,T=w+v+o,C=_E(s,35633,I),E=_E(s,35632,T);if(s.attachShader(g,C),s.attachShader(g,E),t.index0AttributeName!==void 0?s.bindAttribLocation(g,0,t.index0AttributeName):t.morphTargets===!0&&s.bindAttribLocation(g,0,"position"),s.linkProgram(g),n.debug.checkShaderErrors){const R=s.getProgramInfoLog(g).trim(),z=s.getShaderInfoLog(C).trim(),X=s.getShaderInfoLog(E).trim();let U=!0,G=!0;if(s.getProgramParameter(g,35714)===!1){U=!1;const V=ME(s,C,"vertex"),Z=ME(s,E,"fragment");console.error("THREE.WebGLProgram: Shader Error "+s.getError()+" - VALIDATE_STATUS "+s.getProgramParameter(g,35715)+`

Program Info Log: `+R+`
`+V+`
`+Z)}else R!==""?console.warn("THREE.WebGLProgram: Program Info Log:",R):(z===""||X==="")&&(G=!1);G&&(this.diagnostics={runnable:U,programLog:R,vertexShader:{log:z,prefix:y},fragmentShader:{log:X,prefix:v}})}s.deleteShader(C),s.deleteShader(E);let L;this.getUniforms=function(){return L===void 0&&(L=new r0(s,g)),L};let M;return this.getAttributes=function(){return M===void 0&&(M=$4(s,g)),M},this.destroy=function(){r.releaseStatesOfProgram(this),s.deleteProgram(g),this.program=void 0},this.name=t.shaderName,this.id=D4++,this.cacheKey=e,this.usedTimes=1,this.program=g,this.vertexShader=C,this.fragmentShader=E,this}let q4=0;class e5{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,r=e.fragmentShader,s=this._getShaderStage(t),i=this._getShaderStage(r),a=this._getShaderCacheForMaterial(e);return a.has(s)===!1&&(a.add(s),s.usedTimes++),a.has(i)===!1&&(a.add(i),i.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const r of t)r.usedTimes--,r.usedTimes===0&&this.shaderCache.delete(r.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let r=t.get(e);return r===void 0&&(r=new Set,t.set(e,r)),r}_getShaderStage(e){const t=this.shaderCache;let r=t.get(e);return r===void 0&&(r=new t5(e),t.set(e,r)),r}}class t5{constructor(e){this.id=q4++,this.code=e,this.usedTimes=0}}function n5(n,e,t,r,s,i,a){const o=new ZR,l=new e5,u=[],d=s.isWebGL2,h=s.logarithmicDepthBuffer,f=s.vertexTextures;let m=s.precision;const x={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(M,R,z,X,U){const G=X.fog,V=U.geometry,Z=M.isMeshStandardMaterial?X.environment:null,J=(M.isMeshStandardMaterial?t:e).get(M.envMap||Z),te=J&&J.mapping===K0?J.image.height:null,O=x[M.type];M.precision!==null&&(m=s.getMaxPrecision(M.precision),m!==M.precision&&console.warn("THREE.WebGLProgram.getParameters:",M.precision,"not supported, using",m,"instead."));const Q=V.morphAttributes.position||V.morphAttributes.normal||V.morphAttributes.color,A=Q!==void 0?Q.length:0;let K=0;V.morphAttributes.position!==void 0&&(K=1),V.morphAttributes.normal!==void 0&&(K=2),V.morphAttributes.color!==void 0&&(K=3);let $,re,oe,Y;if(O){const We=ha[O];$=We.vertexShader,re=We.fragmentShader}else $=M.vertexShader,re=M.fragmentShader,l.update(M),oe=l.getVertexShaderID(M),Y=l.getFragmentShaderID(M);const ge=n.getRenderTarget(),ye=M.alphaTest>0,ve=M.clearcoat>0,Ce=M.iridescence>0;return{isWebGL2:d,shaderID:O,shaderName:M.type,vertexShader:$,fragmentShader:re,defines:M.defines,customVertexShaderID:oe,customFragmentShaderID:Y,isRawShaderMaterial:M.isRawShaderMaterial===!0,glslVersion:M.glslVersion,precision:m,instancing:U.isInstancedMesh===!0,instancingColor:U.isInstancedMesh===!0&&U.instanceColor!==null,supportsVertexTextures:f,outputEncoding:ge===null?n.outputEncoding:ge.isXRRenderTarget===!0?ge.texture.encoding:mu,map:!!M.map,matcap:!!M.matcap,envMap:!!J,envMapMode:J&&J.mapping,envMapCubeUVHeight:te,lightMap:!!M.lightMap,aoMap:!!M.aoMap,emissiveMap:!!M.emissiveMap,bumpMap:!!M.bumpMap,normalMap:!!M.normalMap,objectSpaceNormalMap:M.normalMapType===y$,tangentSpaceNormalMap:M.normalMapType===g$,decodeVideoTexture:!!M.map&&M.map.isVideoTexture===!0&&M.map.encoding===fn,clearcoat:ve,clearcoatMap:ve&&!!M.clearcoatMap,clearcoatRoughnessMap:ve&&!!M.clearcoatRoughnessMap,clearcoatNormalMap:ve&&!!M.clearcoatNormalMap,iridescence:Ce,iridescenceMap:Ce&&!!M.iridescenceMap,iridescenceThicknessMap:Ce&&!!M.iridescenceThicknessMap,displacementMap:!!M.displacementMap,roughnessMap:!!M.roughnessMap,metalnessMap:!!M.metalnessMap,specularMap:!!M.specularMap,specularIntensityMap:!!M.specularIntensityMap,specularColorMap:!!M.specularColorMap,opaque:M.transparent===!1&&M.blending===Yc,alphaMap:!!M.alphaMap,alphaTest:ye,gradientMap:!!M.gradientMap,sheen:M.sheen>0,sheenColorMap:!!M.sheenColorMap,sheenRoughnessMap:!!M.sheenRoughnessMap,transmission:M.transmission>0,transmissionMap:!!M.transmissionMap,thicknessMap:!!M.thicknessMap,combine:M.combine,vertexTangents:!!M.normalMap&&!!V.attributes.tangent,vertexColors:M.vertexColors,vertexAlphas:M.vertexColors===!0&&!!V.attributes.color&&V.attributes.color.itemSize===4,vertexUvs:!!M.map||!!M.bumpMap||!!M.normalMap||!!M.specularMap||!!M.alphaMap||!!M.emissiveMap||!!M.roughnessMap||!!M.metalnessMap||!!M.clearcoatMap||!!M.clearcoatRoughnessMap||!!M.clearcoatNormalMap||!!M.iridescenceMap||!!M.iridescenceThicknessMap||!!M.displacementMap||!!M.transmissionMap||!!M.thicknessMap||!!M.specularIntensityMap||!!M.specularColorMap||!!M.sheenColorMap||!!M.sheenRoughnessMap,uvsVertexOnly:!(M.map||M.bumpMap||M.normalMap||M.specularMap||M.alphaMap||M.emissiveMap||M.roughnessMap||M.metalnessMap||M.clearcoatNormalMap||M.iridescenceMap||M.iridescenceThicknessMap||M.transmission>0||M.transmissionMap||M.thicknessMap||M.specularIntensityMap||M.specularColorMap||M.sheen>0||M.sheenColorMap||M.sheenRoughnessMap)&&!!M.displacementMap,fog:!!G,useFog:M.fog===!0,fogExp2:G&&G.isFogExp2,flatShading:!!M.flatShading,sizeAttenuation:M.sizeAttenuation,logarithmicDepthBuffer:h,skinning:U.isSkinnedMesh===!0,morphTargets:V.morphAttributes.position!==void 0,morphNormals:V.morphAttributes.normal!==void 0,morphColors:V.morphAttributes.color!==void 0,morphTargetsCount:A,morphTextureStride:K,numDirLights:R.directional.length,numPointLights:R.point.length,numSpotLights:R.spot.length,numSpotLightMaps:R.spotLightMap.length,numRectAreaLights:R.rectArea.length,numHemiLights:R.hemi.length,numDirLightShadows:R.directionalShadowMap.length,numPointLightShadows:R.pointShadowMap.length,numSpotLightShadows:R.spotShadowMap.length,numSpotLightShadowsWithMaps:R.numSpotLightShadowsWithMaps,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:M.dithering,shadowMapEnabled:n.shadowMap.enabled&&z.length>0,shadowMapType:n.shadowMap.type,toneMapping:M.toneMapped?n.toneMapping:Qa,useLegacyLights:n.useLegacyLights,premultipliedAlpha:M.premultipliedAlpha,doubleSided:M.side===Uo,flipSided:M.side===Js,useDepthPacking:!!M.depthPacking,depthPacking:M.depthPacking||0,index0AttributeName:M.index0AttributeName,extensionDerivatives:M.extensions&&M.extensions.derivatives,extensionFragDepth:M.extensions&&M.extensions.fragDepth,extensionDrawBuffers:M.extensions&&M.extensions.drawBuffers,extensionShaderTextureLOD:M.extensions&&M.extensions.shaderTextureLOD,rendererExtensionFragDepth:d||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:d||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:d||r.has("EXT_shader_texture_lod"),customProgramCacheKey:M.customProgramCacheKey()}}function y(M){const R=[];if(M.shaderID?R.push(M.shaderID):(R.push(M.customVertexShaderID),R.push(M.customFragmentShaderID)),M.defines!==void 0)for(const z in M.defines)R.push(z),R.push(M.defines[z]);return M.isRawShaderMaterial===!1&&(v(R,M),w(R,M),R.push(n.outputEncoding)),R.push(M.customProgramCacheKey),R.join()}function v(M,R){M.push(R.precision),M.push(R.outputEncoding),M.push(R.envMapMode),M.push(R.envMapCubeUVHeight),M.push(R.combine),M.push(R.vertexUvs),M.push(R.fogExp2),M.push(R.sizeAttenuation),M.push(R.morphTargetsCount),M.push(R.morphAttributeCount),M.push(R.numDirLights),M.push(R.numPointLights),M.push(R.numSpotLights),M.push(R.numSpotLightMaps),M.push(R.numHemiLights),M.push(R.numRectAreaLights),M.push(R.numDirLightShadows),M.push(R.numPointLightShadows),M.push(R.numSpotLightShadows),M.push(R.numSpotLightShadowsWithMaps),M.push(R.shadowMapType),M.push(R.toneMapping),M.push(R.numClippingPlanes),M.push(R.numClipIntersection),M.push(R.depthPacking)}function w(M,R){o.disableAll(),R.isWebGL2&&o.enable(0),R.supportsVertexTextures&&o.enable(1),R.instancing&&o.enable(2),R.instancingColor&&o.enable(3),R.map&&o.enable(4),R.matcap&&o.enable(5),R.envMap&&o.enable(6),R.lightMap&&o.enable(7),R.aoMap&&o.enable(8),R.emissiveMap&&o.enable(9),R.bumpMap&&o.enable(10),R.normalMap&&o.enable(11),R.objectSpaceNormalMap&&o.enable(12),R.tangentSpaceNormalMap&&o.enable(13),R.clearcoat&&o.enable(14),R.clearcoatMap&&o.enable(15),R.clearcoatRoughnessMap&&o.enable(16),R.clearcoatNormalMap&&o.enable(17),R.iridescence&&o.enable(18),R.iridescenceMap&&o.enable(19),R.iridescenceThicknessMap&&o.enable(20),R.displacementMap&&o.enable(21),R.specularMap&&o.enable(22),R.roughnessMap&&o.enable(23),R.metalnessMap&&o.enable(24),R.gradientMap&&o.enable(25),R.alphaMap&&o.enable(26),R.alphaTest&&o.enable(27),R.vertexColors&&o.enable(28),R.vertexAlphas&&o.enable(29),R.vertexUvs&&o.enable(30),R.vertexTangents&&o.enable(31),R.uvsVertexOnly&&o.enable(32),M.push(o.mask),o.disableAll(),R.fog&&o.enable(0),R.useFog&&o.enable(1),R.flatShading&&o.enable(2),R.logarithmicDepthBuffer&&o.enable(3),R.skinning&&o.enable(4),R.morphTargets&&o.enable(5),R.morphNormals&&o.enable(6),R.morphColors&&o.enable(7),R.premultipliedAlpha&&o.enable(8),R.shadowMapEnabled&&o.enable(9),R.useLegacyLights&&o.enable(10),R.doubleSided&&o.enable(11),R.flipSided&&o.enable(12),R.useDepthPacking&&o.enable(13),R.dithering&&o.enable(14),R.specularIntensityMap&&o.enable(15),R.specularColorMap&&o.enable(16),R.transmission&&o.enable(17),R.transmissionMap&&o.enable(18),R.thicknessMap&&o.enable(19),R.sheen&&o.enable(20),R.sheenColorMap&&o.enable(21),R.sheenRoughnessMap&&o.enable(22),R.decodeVideoTexture&&o.enable(23),R.opaque&&o.enable(24),M.push(o.mask)}function I(M){const R=x[M.type];let z;if(R){const X=ha[R];z=V$.clone(X.uniforms)}else z=M.uniforms;return z}function T(M,R){let z;for(let X=0,U=u.length;X<U;X++){const G=u[X];if(G.cacheKey===R){z=G,++z.usedTimes;break}}return z===void 0&&(z=new J4(n,R,M,i),u.push(z)),z}function C(M){if(--M.usedTimes===0){const R=u.indexOf(M);u[R]=u[u.length-1],u.pop(),M.destroy()}}function E(M){l.remove(M)}function L(){l.dispose()}return{getParameters:g,getProgramCacheKey:y,getUniforms:I,acquireProgram:T,releaseProgram:C,releaseShaderCache:E,programs:u,dispose:L}}function r5(){let n=new WeakMap;function e(i){let a=n.get(i);return a===void 0&&(a={},n.set(i,a)),a}function t(i){n.delete(i)}function r(i,a,o){n.get(i)[a]=o}function s(){n=new WeakMap}return{get:e,remove:t,update:r,dispose:s}}function s5(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function AE(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function zE(){const n=[];let e=0;const t=[],r=[],s=[];function i(){e=0,t.length=0,r.length=0,s.length=0}function a(h,f,m,x,g,y){let v=n[e];return v===void 0?(v={id:h.id,object:h,geometry:f,material:m,groupOrder:x,renderOrder:h.renderOrder,z:g,group:y},n[e]=v):(v.id=h.id,v.object=h,v.geometry=f,v.material=m,v.groupOrder=x,v.renderOrder=h.renderOrder,v.z=g,v.group=y),e++,v}function o(h,f,m,x,g,y){const v=a(h,f,m,x,g,y);m.transmission>0?r.push(v):m.transparent===!0?s.push(v):t.push(v)}function l(h,f,m,x,g,y){const v=a(h,f,m,x,g,y);m.transmission>0?r.unshift(v):m.transparent===!0?s.unshift(v):t.unshift(v)}function u(h,f){t.length>1&&t.sort(h||s5),r.length>1&&r.sort(f||AE),s.length>1&&s.sort(f||AE)}function d(){for(let h=e,f=n.length;h<f;h++){const m=n[h];if(m.id===null)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.group=null}}return{opaque:t,transmissive:r,transparent:s,init:i,push:o,unshift:l,finish:d,sort:u}}function i5(){let n=new WeakMap;function e(r,s){const i=n.get(r);let a;return i===void 0?(a=new zE,n.set(r,[a])):s>=i.length?(a=new zE,i.push(a)):a=i[s],a}function t(){n=new WeakMap}return{get:e,dispose:t}}function a5(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new we,color:new _n};break;case"SpotLight":t={position:new we,direction:new we,color:new _n,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new we,color:new _n,distance:0,decay:0};break;case"HemisphereLight":t={direction:new we,skyColor:new _n,groundColor:new _n};break;case"RectAreaLight":t={color:new _n,position:new we,halfWidth:new we,halfHeight:new we};break}return n[e.id]=t,t}}}function o5(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Tn};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Tn};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Tn,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}let l5=0;function u5(n,e){return(e.castShadow?2:0)-(n.castShadow?2:0)+(e.map?1:0)-(n.map?1:0)}function c5(n,e){const t=new a5,r=o5(),s={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let d=0;d<9;d++)s.probe.push(new we);const i=new we,a=new Fn,o=new Fn;function l(d,h){let f=0,m=0,x=0;for(let X=0;X<9;X++)s.probe[X].set(0,0,0);let g=0,y=0,v=0,w=0,I=0,T=0,C=0,E=0,L=0,M=0;d.sort(u5);const R=h===!0?Math.PI:1;for(let X=0,U=d.length;X<U;X++){const G=d[X],V=G.color,Z=G.intensity,J=G.distance,te=G.shadow&&G.shadow.map?G.shadow.map.texture:null;if(G.isAmbientLight)f+=V.r*Z*R,m+=V.g*Z*R,x+=V.b*Z*R;else if(G.isLightProbe)for(let O=0;O<9;O++)s.probe[O].addScaledVector(G.sh.coefficients[O],Z);else if(G.isDirectionalLight){const O=t.get(G);if(O.color.copy(G.color).multiplyScalar(G.intensity*R),G.castShadow){const Q=G.shadow,A=r.get(G);A.shadowBias=Q.bias,A.shadowNormalBias=Q.normalBias,A.shadowRadius=Q.radius,A.shadowMapSize=Q.mapSize,s.directionalShadow[g]=A,s.directionalShadowMap[g]=te,s.directionalShadowMatrix[g]=G.shadow.matrix,T++}s.directional[g]=O,g++}else if(G.isSpotLight){const O=t.get(G);O.position.setFromMatrixPosition(G.matrixWorld),O.color.copy(V).multiplyScalar(Z*R),O.distance=J,O.coneCos=Math.cos(G.angle),O.penumbraCos=Math.cos(G.angle*(1-G.penumbra)),O.decay=G.decay,s.spot[v]=O;const Q=G.shadow;if(G.map&&(s.spotLightMap[L]=G.map,L++,Q.updateMatrices(G),G.castShadow&&M++),s.spotLightMatrix[v]=Q.matrix,G.castShadow){const A=r.get(G);A.shadowBias=Q.bias,A.shadowNormalBias=Q.normalBias,A.shadowRadius=Q.radius,A.shadowMapSize=Q.mapSize,s.spotShadow[v]=A,s.spotShadowMap[v]=te,E++}v++}else if(G.isRectAreaLight){const O=t.get(G);O.color.copy(V).multiplyScalar(Z),O.halfWidth.set(G.width*.5,0,0),O.halfHeight.set(0,G.height*.5,0),s.rectArea[w]=O,w++}else if(G.isPointLight){const O=t.get(G);if(O.color.copy(G.color).multiplyScalar(G.intensity*R),O.distance=G.distance,O.decay=G.decay,G.castShadow){const Q=G.shadow,A=r.get(G);A.shadowBias=Q.bias,A.shadowNormalBias=Q.normalBias,A.shadowRadius=Q.radius,A.shadowMapSize=Q.mapSize,A.shadowCameraNear=Q.camera.near,A.shadowCameraFar=Q.camera.far,s.pointShadow[y]=A,s.pointShadowMap[y]=te,s.pointShadowMatrix[y]=G.shadow.matrix,C++}s.point[y]=O,y++}else if(G.isHemisphereLight){const O=t.get(G);O.skyColor.copy(G.color).multiplyScalar(Z*R),O.groundColor.copy(G.groundColor).multiplyScalar(Z*R),s.hemi[I]=O,I++}}w>0&&(e.isWebGL2||n.has("OES_texture_float_linear")===!0?(s.rectAreaLTC1=Ue.LTC_FLOAT_1,s.rectAreaLTC2=Ue.LTC_FLOAT_2):n.has("OES_texture_half_float_linear")===!0?(s.rectAreaLTC1=Ue.LTC_HALF_1,s.rectAreaLTC2=Ue.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),s.ambient[0]=f,s.ambient[1]=m,s.ambient[2]=x;const z=s.hash;(z.directionalLength!==g||z.pointLength!==y||z.spotLength!==v||z.rectAreaLength!==w||z.hemiLength!==I||z.numDirectionalShadows!==T||z.numPointShadows!==C||z.numSpotShadows!==E||z.numSpotMaps!==L)&&(s.directional.length=g,s.spot.length=v,s.rectArea.length=w,s.point.length=y,s.hemi.length=I,s.directionalShadow.length=T,s.directionalShadowMap.length=T,s.pointShadow.length=C,s.pointShadowMap.length=C,s.spotShadow.length=E,s.spotShadowMap.length=E,s.directionalShadowMatrix.length=T,s.pointShadowMatrix.length=C,s.spotLightMatrix.length=E+L-M,s.spotLightMap.length=L,s.numSpotLightShadowsWithMaps=M,z.directionalLength=g,z.pointLength=y,z.spotLength=v,z.rectAreaLength=w,z.hemiLength=I,z.numDirectionalShadows=T,z.numPointShadows=C,z.numSpotShadows=E,z.numSpotMaps=L,s.version=l5++)}function u(d,h){let f=0,m=0,x=0,g=0,y=0;const v=h.matrixWorldInverse;for(let w=0,I=d.length;w<I;w++){const T=d[w];if(T.isDirectionalLight){const C=s.directional[f];C.direction.setFromMatrixPosition(T.matrixWorld),i.setFromMatrixPosition(T.target.matrixWorld),C.direction.sub(i),C.direction.transformDirection(v),f++}else if(T.isSpotLight){const C=s.spot[x];C.position.setFromMatrixPosition(T.matrixWorld),C.position.applyMatrix4(v),C.direction.setFromMatrixPosition(T.matrixWorld),i.setFromMatrixPosition(T.target.matrixWorld),C.direction.sub(i),C.direction.transformDirection(v),x++}else if(T.isRectAreaLight){const C=s.rectArea[g];C.position.setFromMatrixPosition(T.matrixWorld),C.position.applyMatrix4(v),o.identity(),a.copy(T.matrixWorld),a.premultiply(v),o.extractRotation(a),C.halfWidth.set(T.width*.5,0,0),C.halfHeight.set(0,T.height*.5,0),C.halfWidth.applyMatrix4(o),C.halfHeight.applyMatrix4(o),g++}else if(T.isPointLight){const C=s.point[m];C.position.setFromMatrixPosition(T.matrixWorld),C.position.applyMatrix4(v),m++}else if(T.isHemisphereLight){const C=s.hemi[y];C.direction.setFromMatrixPosition(T.matrixWorld),C.direction.transformDirection(v),y++}}}return{setup:l,setupView:u,state:s}}function DE(n,e){const t=new c5(n,e),r=[],s=[];function i(){r.length=0,s.length=0}function a(h){r.push(h)}function o(h){s.push(h)}function l(h){t.setup(r,h)}function u(h){t.setupView(r,h)}return{init:i,state:{lightsArray:r,shadowsArray:s,lights:t},setupLights:l,setupLightsView:u,pushLight:a,pushShadow:o}}function d5(n,e){let t=new WeakMap;function r(i,a=0){const o=t.get(i);let l;return o===void 0?(l=new DE(n,e),t.set(i,[l])):a>=o.length?(l=new DE(n,e),o.push(l)):l=o[a],l}function s(){t=new WeakMap}return{get:r,dispose:s}}class h5 extends j0{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=f$,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class p5 extends j0{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new we,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const f5=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,m5=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function g5(n,e,t){let r=new qR;const s=new Tn,i=new Tn,a=new Or,o=new h5({depthPacking:m$}),l=new p5,u={},d=t.maxTextureSize,h={[nl]:Js,[Js]:nl,[Uo]:Uo},f=new yu({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Tn},radius:{value:4}},vertexShader:f5,fragmentShader:m5}),m=f.clone();m.defines.HORIZONTAL_PASS=1;const x=new Fu;x.setAttribute("position",new xa(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new ja(x,f),y=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=DR,this.render=function(T,C,E){if(y.enabled===!1||y.autoUpdate===!1&&y.needsUpdate===!1||T.length===0)return;const L=n.getRenderTarget(),M=n.getActiveCubeFace(),R=n.getActiveMipmapLevel(),z=n.state;z.setBlending(Qo),z.buffers.color.setClear(1,1,1,1),z.buffers.depth.setTest(!0),z.setScissorTest(!1);for(let X=0,U=T.length;X<U;X++){const G=T[X],V=G.shadow;if(V===void 0){console.warn("THREE.WebGLShadowMap:",G,"has no shadow.");continue}if(V.autoUpdate===!1&&V.needsUpdate===!1)continue;s.copy(V.mapSize);const Z=V.getFrameExtents();if(s.multiply(Z),i.copy(V.mapSize),(s.x>d||s.y>d)&&(s.x>d&&(i.x=Math.floor(d/Z.x),s.x=i.x*Z.x,V.mapSize.x=i.x),s.y>d&&(i.y=Math.floor(d/Z.y),s.y=i.y*Z.y,V.mapSize.y=i.y)),V.map===null){const te=this.type!==Wp?{minFilter:ls,magFilter:ls}:{};V.map=new gu(s.x,s.y,te),V.map.texture.name=G.name+".shadowMap",V.camera.updateProjectionMatrix()}n.setRenderTarget(V.map),n.clear();const J=V.getViewportCount();for(let te=0;te<J;te++){const O=V.getViewport(te);a.set(i.x*O.x,i.y*O.y,i.x*O.z,i.y*O.w),z.viewport(a),V.updateMatrices(G,te),r=V.getFrustum(),I(C,E,V.camera,G,this.type)}V.isPointLightShadow!==!0&&this.type===Wp&&v(V,E),V.needsUpdate=!1}y.needsUpdate=!1,n.setRenderTarget(L,M,R)};function v(T,C){const E=e.update(g);f.defines.VSM_SAMPLES!==T.blurSamples&&(f.defines.VSM_SAMPLES=T.blurSamples,m.defines.VSM_SAMPLES=T.blurSamples,f.needsUpdate=!0,m.needsUpdate=!0),T.mapPass===null&&(T.mapPass=new gu(s.x,s.y)),f.uniforms.shadow_pass.value=T.map.texture,f.uniforms.resolution.value=T.mapSize,f.uniforms.radius.value=T.radius,n.setRenderTarget(T.mapPass),n.clear(),n.renderBufferDirect(C,null,E,f,g,null),m.uniforms.shadow_pass.value=T.mapPass.texture,m.uniforms.resolution.value=T.mapSize,m.uniforms.radius.value=T.radius,n.setRenderTarget(T.map),n.clear(),n.renderBufferDirect(C,null,E,m,g,null)}function w(T,C,E,L,M,R){let z=null;const X=E.isPointLight===!0?T.customDistanceMaterial:T.customDepthMaterial;if(X!==void 0)z=X;else if(z=E.isPointLight===!0?l:o,n.localClippingEnabled&&C.clipShadows===!0&&Array.isArray(C.clippingPlanes)&&C.clippingPlanes.length!==0||C.displacementMap&&C.displacementScale!==0||C.alphaMap&&C.alphaTest>0||C.map&&C.alphaTest>0){const U=z.uuid,G=C.uuid;let V=u[U];V===void 0&&(V={},u[U]=V);let Z=V[G];Z===void 0&&(Z=z.clone(),V[G]=Z),z=Z}return z.visible=C.visible,z.wireframe=C.wireframe,R===Wp?z.side=C.shadowSide!==null?C.shadowSide:C.side:z.side=C.shadowSide!==null?C.shadowSide:h[C.side],z.alphaMap=C.alphaMap,z.alphaTest=C.alphaTest,z.map=C.map,z.clipShadows=C.clipShadows,z.clippingPlanes=C.clippingPlanes,z.clipIntersection=C.clipIntersection,z.displacementMap=C.displacementMap,z.displacementScale=C.displacementScale,z.displacementBias=C.displacementBias,z.wireframeLinewidth=C.wireframeLinewidth,z.linewidth=C.linewidth,E.isPointLight===!0&&z.isMeshDistanceMaterial===!0&&(z.referencePosition.setFromMatrixPosition(E.matrixWorld),z.nearDistance=L,z.farDistance=M),z}function I(T,C,E,L,M){if(T.visible===!1)return;if(T.layers.test(C.layers)&&(T.isMesh||T.isLine||T.isPoints)&&(T.castShadow||T.receiveShadow&&M===Wp)&&(!T.frustumCulled||r.intersectsObject(T))){T.modelViewMatrix.multiplyMatrices(E.matrixWorldInverse,T.matrixWorld);const X=e.update(T),U=T.material;if(Array.isArray(U)){const G=X.groups;for(let V=0,Z=G.length;V<Z;V++){const J=G[V],te=U[J.materialIndex];if(te&&te.visible){const O=w(T,te,L,E.near,E.far,M);n.renderBufferDirect(E,null,X,O,T,J)}}}else if(U.visible){const G=w(T,U,L,E.near,E.far,M);n.renderBufferDirect(E,null,X,G,T,null)}}const z=T.children;for(let X=0,U=z.length;X<U;X++)I(z[X],C,E,L,M)}}function y5(n,e,t){const r=t.isWebGL2;function s(){let ce=!1;const ke=new Or;let Ae=null;const He=new Or(0,0,0,0);return{setMask:function(nt){Ae!==nt&&!ce&&(n.colorMask(nt,nt,nt,nt),Ae=nt)},setLocked:function(nt){ce=nt},setClear:function(nt,an,Hn,xr,Os){Os===!0&&(nt*=xr,an*=xr,Hn*=xr),ke.set(nt,an,Hn,xr),He.equals(ke)===!1&&(n.clearColor(nt,an,Hn,xr),He.copy(ke))},reset:function(){ce=!1,Ae=null,He.set(-1,0,0,0)}}}function i(){let ce=!1,ke=null,Ae=null,He=null;return{setTest:function(nt){nt?ye(2929):ve(2929)},setMask:function(nt){ke!==nt&&!ce&&(n.depthMask(nt),ke=nt)},setFunc:function(nt){if(Ae!==nt){switch(nt){case GV:n.depthFunc(512);break;case OV:n.depthFunc(519);break;case WV:n.depthFunc(513);break;case SS:n.depthFunc(515);break;case VV:n.depthFunc(514);break;case $V:n.depthFunc(518);break;case BV:n.depthFunc(516);break;case XV:n.depthFunc(517);break;default:n.depthFunc(515)}Ae=nt}},setLocked:function(nt){ce=nt},setClear:function(nt){He!==nt&&(n.clearDepth(nt),He=nt)},reset:function(){ce=!1,ke=null,Ae=null,He=null}}}function a(){let ce=!1,ke=null,Ae=null,He=null,nt=null,an=null,Hn=null,xr=null,Os=null;return{setTest:function(yn){ce||(yn?ye(2960):ve(2960))},setMask:function(yn){ke!==yn&&!ce&&(n.stencilMask(yn),ke=yn)},setFunc:function(yn,rs,$r){(Ae!==yn||He!==rs||nt!==$r)&&(n.stencilFunc(yn,rs,$r),Ae=yn,He=rs,nt=$r)},setOp:function(yn,rs,$r){(an!==yn||Hn!==rs||xr!==$r)&&(n.stencilOp(yn,rs,$r),an=yn,Hn=rs,xr=$r)},setLocked:function(yn){ce=yn},setClear:function(yn){Os!==yn&&(n.clearStencil(yn),Os=yn)},reset:function(){ce=!1,ke=null,Ae=null,He=null,nt=null,an=null,Hn=null,xr=null,Os=null}}}const o=new s,l=new i,u=new a,d=new WeakMap,h=new WeakMap;let f={},m={},x=new WeakMap,g=[],y=null,v=!1,w=null,I=null,T=null,C=null,E=null,L=null,M=null,R=!1,z=null,X=null,U=null,G=null,V=null;const Z=n.getParameter(35661);let J=!1,te=0;const O=n.getParameter(7938);O.indexOf("WebGL")!==-1?(te=parseFloat(/^WebGL (\d)/.exec(O)[1]),J=te>=1):O.indexOf("OpenGL ES")!==-1&&(te=parseFloat(/^OpenGL ES (\d)/.exec(O)[1]),J=te>=2);let Q=null,A={};const K=n.getParameter(3088),$=n.getParameter(2978),re=new Or().fromArray(K),oe=new Or().fromArray($);function Y(ce,ke,Ae){const He=new Uint8Array(4),nt=n.createTexture();n.bindTexture(ce,nt),n.texParameteri(ce,10241,9728),n.texParameteri(ce,10240,9728);for(let an=0;an<Ae;an++)n.texImage2D(ke+an,0,6408,1,1,0,6408,5121,He);return nt}const ge={};ge[3553]=Y(3553,3553,1),ge[34067]=Y(34067,34069,6),o.setClear(0,0,0,1),l.setClear(1),u.setClear(0),ye(2929),l.setFunc(SS),_t(!1),Tt(TN),ye(2884),St(Qo);function ye(ce){f[ce]!==!0&&(n.enable(ce),f[ce]=!0)}function ve(ce){f[ce]!==!1&&(n.disable(ce),f[ce]=!1)}function Ce(ce,ke){return m[ce]!==ke?(n.bindFramebuffer(ce,ke),m[ce]=ke,r&&(ce===36009&&(m[36160]=ke),ce===36160&&(m[36009]=ke)),!0):!1}function De(ce,ke){let Ae=g,He=!1;if(ce)if(Ae=x.get(ke),Ae===void 0&&(Ae=[],x.set(ke,Ae)),ce.isWebGLMultipleRenderTargets){const nt=ce.texture;if(Ae.length!==nt.length||Ae[0]!==36064){for(let an=0,Hn=nt.length;an<Hn;an++)Ae[an]=36064+an;Ae.length=nt.length,He=!0}}else Ae[0]!==36064&&(Ae[0]=36064,He=!0);else Ae[0]!==1029&&(Ae[0]=1029,He=!0);He&&(t.isWebGL2?n.drawBuffers(Ae):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(Ae))}function We(ce){return y!==ce?(n.useProgram(ce),y=ce,!0):!1}const Ze={[$c]:32774,[_V]:32778,[MV]:32779};if(r)Ze[_N]=32775,Ze[MN]=32776;else{const ce=e.get("EXT_blend_minmax");ce!==null&&(Ze[_N]=ce.MIN_EXT,Ze[MN]=ce.MAX_EXT)}const ot={[NV]:0,[EV]:1,[RV]:768,[PR]:770,[FV]:776,[DV]:774,[AV]:772,[LV]:769,[FR]:771,[PV]:775,[zV]:773};function St(ce,ke,Ae,He,nt,an,Hn,xr){if(ce===Qo){v===!0&&(ve(3042),v=!1);return}if(v===!1&&(ye(3042),v=!0),ce!==CV){if(ce!==w||xr!==R){if((I!==$c||E!==$c)&&(n.blendEquation(32774),I=$c,E=$c),xr)switch(ce){case Yc:n.blendFuncSeparate(1,771,1,771);break;case IN:n.blendFunc(1,1);break;case kN:n.blendFuncSeparate(0,769,0,1);break;case CN:n.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",ce);break}else switch(ce){case Yc:n.blendFuncSeparate(770,771,1,771);break;case IN:n.blendFunc(770,1);break;case kN:n.blendFuncSeparate(0,769,0,1);break;case CN:n.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",ce);break}T=null,C=null,L=null,M=null,w=ce,R=xr}return}nt=nt||ke,an=an||Ae,Hn=Hn||He,(ke!==I||nt!==E)&&(n.blendEquationSeparate(Ze[ke],Ze[nt]),I=ke,E=nt),(Ae!==T||He!==C||an!==L||Hn!==M)&&(n.blendFuncSeparate(ot[Ae],ot[He],ot[an],ot[Hn]),T=Ae,C=He,L=an,M=Hn),w=ce,R=!1}function Rt(ce,ke){ce.side===Uo?ve(2884):ye(2884);let Ae=ce.side===Js;ke&&(Ae=!Ae),_t(Ae),ce.blending===Yc&&ce.transparent===!1?St(Qo):St(ce.blending,ce.blendEquation,ce.blendSrc,ce.blendDst,ce.blendEquationAlpha,ce.blendSrcAlpha,ce.blendDstAlpha,ce.premultipliedAlpha),l.setFunc(ce.depthFunc),l.setTest(ce.depthTest),l.setMask(ce.depthWrite),o.setMask(ce.colorWrite);const He=ce.stencilWrite;u.setTest(He),He&&(u.setMask(ce.stencilWriteMask),u.setFunc(ce.stencilFunc,ce.stencilRef,ce.stencilFuncMask),u.setOp(ce.stencilFail,ce.stencilZFail,ce.stencilZPass)),Ot(ce.polygonOffset,ce.polygonOffsetFactor,ce.polygonOffsetUnits),ce.alphaToCoverage===!0?ye(32926):ve(32926)}function _t(ce){z!==ce&&(ce?n.frontFace(2304):n.frontFace(2305),z=ce)}function Tt(ce){ce!==TV?(ye(2884),ce!==X&&(ce===TN?n.cullFace(1029):ce===IV?n.cullFace(1028):n.cullFace(1032))):ve(2884),X=ce}function vt(ce){ce!==U&&(J&&n.lineWidth(ce),U=ce)}function Ot(ce,ke,Ae){ce?(ye(32823),(G!==ke||V!==Ae)&&(n.polygonOffset(ke,Ae),G=ke,V=Ae)):ve(32823)}function jt(ce){ce?ye(3089):ve(3089)}function sn(ce){ce===void 0&&(ce=33984+Z-1),Q!==ce&&(n.activeTexture(ce),Q=ce)}function H(ce,ke,Ae){Ae===void 0&&(Q===null?Ae=33984+Z-1:Ae=Q);let He=A[Ae];He===void 0&&(He={type:void 0,texture:void 0},A[Ae]=He),(He.type!==ce||He.texture!==ke)&&(Q!==Ae&&(n.activeTexture(Ae),Q=Ae),n.bindTexture(ce,ke||ge[ce]),He.type=ce,He.texture=ke)}function W(){const ce=A[Q];ce!==void 0&&ce.type!==void 0&&(n.bindTexture(ce.type,null),ce.type=void 0,ce.texture=void 0)}function Te(){try{n.compressedTexImage2D.apply(n,arguments)}catch(ce){console.error("THREE.WebGLState:",ce)}}function Pe(){try{n.compressedTexImage3D.apply(n,arguments)}catch(ce){console.error("THREE.WebGLState:",ce)}}function Fe(){try{n.texSubImage2D.apply(n,arguments)}catch(ce){console.error("THREE.WebGLState:",ce)}}function $e(){try{n.texSubImage3D.apply(n,arguments)}catch(ce){console.error("THREE.WebGLState:",ce)}}function rt(){try{n.compressedTexSubImage2D.apply(n,arguments)}catch(ce){console.error("THREE.WebGLState:",ce)}}function Ke(){try{n.compressedTexSubImage3D.apply(n,arguments)}catch(ce){console.error("THREE.WebGLState:",ce)}}function Me(){try{n.texStorage2D.apply(n,arguments)}catch(ce){console.error("THREE.WebGLState:",ce)}}function pt(){try{n.texStorage3D.apply(n,arguments)}catch(ce){console.error("THREE.WebGLState:",ce)}}function st(){try{n.texImage2D.apply(n,arguments)}catch(ce){console.error("THREE.WebGLState:",ce)}}function ft(){try{n.texImage3D.apply(n,arguments)}catch(ce){console.error("THREE.WebGLState:",ce)}}function mt(ce){re.equals(ce)===!1&&(n.scissor(ce.x,ce.y,ce.z,ce.w),re.copy(ce))}function dt(ce){oe.equals(ce)===!1&&(n.viewport(ce.x,ce.y,ce.z,ce.w),oe.copy(ce))}function Xt(ce,ke){let Ae=h.get(ke);Ae===void 0&&(Ae=new WeakMap,h.set(ke,Ae));let He=Ae.get(ce);He===void 0&&(He=n.getUniformBlockIndex(ke,ce.name),Ae.set(ce,He))}function un(ce,ke){const He=h.get(ke).get(ce);d.get(ke)!==He&&(n.uniformBlockBinding(ke,He,ce.__bindingPointIndex),d.set(ke,He))}function Gn(){n.disable(3042),n.disable(2884),n.disable(2929),n.disable(32823),n.disable(3089),n.disable(2960),n.disable(32926),n.blendEquation(32774),n.blendFunc(1,0),n.blendFuncSeparate(1,0,1,0),n.colorMask(!0,!0,!0,!0),n.clearColor(0,0,0,0),n.depthMask(!0),n.depthFunc(513),n.clearDepth(1),n.stencilMask(4294967295),n.stencilFunc(519,0,4294967295),n.stencilOp(7680,7680,7680),n.clearStencil(0),n.cullFace(1029),n.frontFace(2305),n.polygonOffset(0,0),n.activeTexture(33984),n.bindFramebuffer(36160,null),r===!0&&(n.bindFramebuffer(36009,null),n.bindFramebuffer(36008,null)),n.useProgram(null),n.lineWidth(1),n.scissor(0,0,n.canvas.width,n.canvas.height),n.viewport(0,0,n.canvas.width,n.canvas.height),f={},Q=null,A={},m={},x=new WeakMap,g=[],y=null,v=!1,w=null,I=null,T=null,C=null,E=null,L=null,M=null,R=!1,z=null,X=null,U=null,G=null,V=null,re.set(0,0,n.canvas.width,n.canvas.height),oe.set(0,0,n.canvas.width,n.canvas.height),o.reset(),l.reset(),u.reset()}return{buffers:{color:o,depth:l,stencil:u},enable:ye,disable:ve,bindFramebuffer:Ce,drawBuffers:De,useProgram:We,setBlending:St,setMaterial:Rt,setFlipSided:_t,setCullFace:Tt,setLineWidth:vt,setPolygonOffset:Ot,setScissorTest:jt,activeTexture:sn,bindTexture:H,unbindTexture:W,compressedTexImage2D:Te,compressedTexImage3D:Pe,texImage2D:st,texImage3D:ft,updateUBOMapping:Xt,uniformBlockBinding:un,texStorage2D:Me,texStorage3D:pt,texSubImage2D:Fe,texSubImage3D:$e,compressedTexSubImage2D:rt,compressedTexSubImage3D:Ke,scissor:mt,viewport:dt,reset:Gn}}function b5(n,e,t,r,s,i,a){const o=s.isWebGL2,l=s.maxTextures,u=s.maxCubemapSize,d=s.maxTextureSize,h=s.maxSamples,f=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,m=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),x=new WeakMap;let g;const y=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function w(H,W){return v?new OffscreenCanvas(H,W):p0("canvas")}function I(H,W,Te,Pe){let Fe=1;if((H.width>Pe||H.height>Pe)&&(Fe=Pe/Math.max(H.width,H.height)),Fe<1||W===!0)if(typeof HTMLImageElement<"u"&&H instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&H instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&H instanceof ImageBitmap){const $e=W?v$:Math.floor,rt=$e(Fe*H.width),Ke=$e(Fe*H.height);g===void 0&&(g=w(rt,Ke));const Me=Te?w(rt,Ke):g;return Me.width=rt,Me.height=Ke,Me.getContext("2d").drawImage(H,0,0,rt,Ke),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+H.width+"x"+H.height+") to ("+rt+"x"+Ke+")."),Me}else return"data"in H&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+H.width+"x"+H.height+")."),H;return H}function T(H){return nE(H.width)&&nE(H.height)}function C(H){return o?!1:H.wrapS!==Oi||H.wrapT!==Oi||H.minFilter!==ls&&H.minFilter!==yi}function E(H,W){return H.generateMipmaps&&W&&H.minFilter!==ls&&H.minFilter!==yi}function L(H){n.generateMipmap(H)}function M(H,W,Te,Pe,Fe=!1){if(o===!1)return W;if(H!==null){if(n[H]!==void 0)return n[H];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+H+"'")}let $e=W;return W===6403&&(Te===5126&&($e=33326),Te===5131&&($e=33325),Te===5121&&($e=33321)),W===33319&&(Te===5126&&($e=33328),Te===5131&&($e=33327),Te===5121&&($e=33323)),W===6408&&(Te===5126&&($e=34836),Te===5131&&($e=34842),Te===5121&&($e=Pe===fn&&Fe===!1?35907:32856),Te===32819&&($e=32854),Te===32820&&($e=32855)),($e===33325||$e===33326||$e===33327||$e===33328||$e===34842||$e===34836)&&e.get("EXT_color_buffer_float"),$e}function R(H,W,Te){return E(H,Te)===!0||H.isFramebufferTexture&&H.minFilter!==ls&&H.minFilter!==yi?Math.log2(Math.max(W.width,W.height))+1:H.mipmaps!==void 0&&H.mipmaps.length>0?H.mipmaps.length:H.isCompressedTexture&&Array.isArray(H.image)?W.mipmaps.length:1}function z(H){return H===ls||H===NN||H===uw?9728:9729}function X(H){const W=H.target;W.removeEventListener("dispose",X),G(W),W.isVideoTexture&&x.delete(W)}function U(H){const W=H.target;W.removeEventListener("dispose",U),Z(W)}function G(H){const W=r.get(H);if(W.__webglInit===void 0)return;const Te=H.source,Pe=y.get(Te);if(Pe){const Fe=Pe[W.__cacheKey];Fe.usedTimes--,Fe.usedTimes===0&&V(H),Object.keys(Pe).length===0&&y.delete(Te)}r.remove(H)}function V(H){const W=r.get(H);n.deleteTexture(W.__webglTexture);const Te=H.source,Pe=y.get(Te);delete Pe[W.__cacheKey],a.memory.textures--}function Z(H){const W=H.texture,Te=r.get(H),Pe=r.get(W);if(Pe.__webglTexture!==void 0&&(n.deleteTexture(Pe.__webglTexture),a.memory.textures--),H.depthTexture&&H.depthTexture.dispose(),H.isWebGLCubeRenderTarget)for(let Fe=0;Fe<6;Fe++)n.deleteFramebuffer(Te.__webglFramebuffer[Fe]),Te.__webglDepthbuffer&&n.deleteRenderbuffer(Te.__webglDepthbuffer[Fe]);else{if(n.deleteFramebuffer(Te.__webglFramebuffer),Te.__webglDepthbuffer&&n.deleteRenderbuffer(Te.__webglDepthbuffer),Te.__webglMultisampledFramebuffer&&n.deleteFramebuffer(Te.__webglMultisampledFramebuffer),Te.__webglColorRenderbuffer)for(let Fe=0;Fe<Te.__webglColorRenderbuffer.length;Fe++)Te.__webglColorRenderbuffer[Fe]&&n.deleteRenderbuffer(Te.__webglColorRenderbuffer[Fe]);Te.__webglDepthRenderbuffer&&n.deleteRenderbuffer(Te.__webglDepthRenderbuffer)}if(H.isWebGLMultipleRenderTargets)for(let Fe=0,$e=W.length;Fe<$e;Fe++){const rt=r.get(W[Fe]);rt.__webglTexture&&(n.deleteTexture(rt.__webglTexture),a.memory.textures--),r.remove(W[Fe])}r.remove(W),r.remove(H)}let J=0;function te(){J=0}function O(){const H=J;return H>=l&&console.warn("THREE.WebGLTextures: Trying to use "+H+" texture units while this GPU supports only "+l),J+=1,H}function Q(H){const W=[];return W.push(H.wrapS),W.push(H.wrapT),W.push(H.wrapR||0),W.push(H.magFilter),W.push(H.minFilter),W.push(H.anisotropy),W.push(H.internalFormat),W.push(H.format),W.push(H.type),W.push(H.generateMipmaps),W.push(H.premultiplyAlpha),W.push(H.flipY),W.push(H.unpackAlignment),W.push(H.encoding),W.join()}function A(H,W){const Te=r.get(H);if(H.isVideoTexture&&jt(H),H.isRenderTargetTexture===!1&&H.version>0&&Te.__version!==H.version){const Pe=H.image;if(Pe===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Pe.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ve(Te,H,W);return}}t.bindTexture(3553,Te.__webglTexture,33984+W)}function K(H,W){const Te=r.get(H);if(H.version>0&&Te.__version!==H.version){ve(Te,H,W);return}t.bindTexture(35866,Te.__webglTexture,33984+W)}function $(H,W){const Te=r.get(H);if(H.version>0&&Te.__version!==H.version){ve(Te,H,W);return}t.bindTexture(32879,Te.__webglTexture,33984+W)}function re(H,W){const Te=r.get(H);if(H.version>0&&Te.__version!==H.version){Ce(Te,H,W);return}t.bindTexture(34067,Te.__webglTexture,33984+W)}const oe={[kS]:10497,[Oi]:33071,[CS]:33648},Y={[ls]:9728,[NN]:9984,[uw]:9986,[yi]:9729,[JV]:9985,[qp]:9987};function ge(H,W,Te){if(Te?(n.texParameteri(H,10242,oe[W.wrapS]),n.texParameteri(H,10243,oe[W.wrapT]),(H===32879||H===35866)&&n.texParameteri(H,32882,oe[W.wrapR]),n.texParameteri(H,10240,Y[W.magFilter]),n.texParameteri(H,10241,Y[W.minFilter])):(n.texParameteri(H,10242,33071),n.texParameteri(H,10243,33071),(H===32879||H===35866)&&n.texParameteri(H,32882,33071),(W.wrapS!==Oi||W.wrapT!==Oi)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),n.texParameteri(H,10240,z(W.magFilter)),n.texParameteri(H,10241,z(W.minFilter)),W.minFilter!==ls&&W.minFilter!==yi&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const Pe=e.get("EXT_texture_filter_anisotropic");if(W.magFilter===ls||W.minFilter!==uw&&W.minFilter!==qp||W.type===ru&&e.has("OES_texture_float_linear")===!1||o===!1&&W.type===ef&&e.has("OES_texture_half_float_linear")===!1)return;(W.anisotropy>1||r.get(W).__currentAnisotropy)&&(n.texParameterf(H,Pe.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(W.anisotropy,s.getMaxAnisotropy())),r.get(W).__currentAnisotropy=W.anisotropy)}}function ye(H,W){let Te=!1;H.__webglInit===void 0&&(H.__webglInit=!0,W.addEventListener("dispose",X));const Pe=W.source;let Fe=y.get(Pe);Fe===void 0&&(Fe={},y.set(Pe,Fe));const $e=Q(W);if($e!==H.__cacheKey){Fe[$e]===void 0&&(Fe[$e]={texture:n.createTexture(),usedTimes:0},a.memory.textures++,Te=!0),Fe[$e].usedTimes++;const rt=Fe[H.__cacheKey];rt!==void 0&&(Fe[H.__cacheKey].usedTimes--,rt.usedTimes===0&&V(W)),H.__cacheKey=$e,H.__webglTexture=Fe[$e].texture}return Te}function ve(H,W,Te){let Pe=3553;(W.isDataArrayTexture||W.isCompressedArrayTexture)&&(Pe=35866),W.isData3DTexture&&(Pe=32879);const Fe=ye(H,W),$e=W.source;t.bindTexture(Pe,H.__webglTexture,33984+Te);const rt=r.get($e);if($e.version!==rt.__version||Fe===!0){t.activeTexture(33984+Te),n.pixelStorei(37440,W.flipY),n.pixelStorei(37441,W.premultiplyAlpha),n.pixelStorei(3317,W.unpackAlignment),n.pixelStorei(37443,0);const Ke=C(W)&&T(W.image)===!1;let Me=I(W.image,Ke,!1,d);Me=sn(W,Me);const pt=T(Me)||o,st=i.convert(W.format,W.encoding);let ft=i.convert(W.type),mt=M(W.internalFormat,st,ft,W.encoding,W.isVideoTexture);ge(Pe,W,pt);let dt;const Xt=W.mipmaps,un=o&&W.isVideoTexture!==!0,Gn=rt.__version===void 0||Fe===!0,ce=R(W,Me,pt);if(W.isDepthTexture)mt=6402,o?W.type===ru?mt=36012:W.type===nu?mt=33190:W.type===jc?mt=35056:mt=33189:W.type===ru&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),W.format===ou&&mt===6402&&W.type!==WR&&W.type!==nu&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),W.type=nu,ft=i.convert(W.type)),W.format===sd&&mt===6402&&(mt=34041,W.type!==jc&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),W.type=jc,ft=i.convert(W.type))),Gn&&(un?t.texStorage2D(3553,1,mt,Me.width,Me.height):t.texImage2D(3553,0,mt,Me.width,Me.height,0,st,ft,null));else if(W.isDataTexture)if(Xt.length>0&&pt){un&&Gn&&t.texStorage2D(3553,ce,mt,Xt[0].width,Xt[0].height);for(let ke=0,Ae=Xt.length;ke<Ae;ke++)dt=Xt[ke],un?t.texSubImage2D(3553,ke,0,0,dt.width,dt.height,st,ft,dt.data):t.texImage2D(3553,ke,mt,dt.width,dt.height,0,st,ft,dt.data);W.generateMipmaps=!1}else un?(Gn&&t.texStorage2D(3553,ce,mt,Me.width,Me.height),t.texSubImage2D(3553,0,0,0,Me.width,Me.height,st,ft,Me.data)):t.texImage2D(3553,0,mt,Me.width,Me.height,0,st,ft,Me.data);else if(W.isCompressedTexture)if(W.isCompressedArrayTexture){un&&Gn&&t.texStorage3D(35866,ce,mt,Xt[0].width,Xt[0].height,Me.depth);for(let ke=0,Ae=Xt.length;ke<Ae;ke++)dt=Xt[ke],W.format!==Wi?st!==null?un?t.compressedTexSubImage3D(35866,ke,0,0,0,dt.width,dt.height,Me.depth,st,dt.data,0,0):t.compressedTexImage3D(35866,ke,mt,dt.width,dt.height,Me.depth,0,dt.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):un?t.texSubImage3D(35866,ke,0,0,0,dt.width,dt.height,Me.depth,st,ft,dt.data):t.texImage3D(35866,ke,mt,dt.width,dt.height,Me.depth,0,st,ft,dt.data)}else{un&&Gn&&t.texStorage2D(3553,ce,mt,Xt[0].width,Xt[0].height);for(let ke=0,Ae=Xt.length;ke<Ae;ke++)dt=Xt[ke],W.format!==Wi?st!==null?un?t.compressedTexSubImage2D(3553,ke,0,0,dt.width,dt.height,st,dt.data):t.compressedTexImage2D(3553,ke,mt,dt.width,dt.height,0,dt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):un?t.texSubImage2D(3553,ke,0,0,dt.width,dt.height,st,ft,dt.data):t.texImage2D(3553,ke,mt,dt.width,dt.height,0,st,ft,dt.data)}else if(W.isDataArrayTexture)un?(Gn&&t.texStorage3D(35866,ce,mt,Me.width,Me.height,Me.depth),t.texSubImage3D(35866,0,0,0,0,Me.width,Me.height,Me.depth,st,ft,Me.data)):t.texImage3D(35866,0,mt,Me.width,Me.height,Me.depth,0,st,ft,Me.data);else if(W.isData3DTexture)un?(Gn&&t.texStorage3D(32879,ce,mt,Me.width,Me.height,Me.depth),t.texSubImage3D(32879,0,0,0,0,Me.width,Me.height,Me.depth,st,ft,Me.data)):t.texImage3D(32879,0,mt,Me.width,Me.height,Me.depth,0,st,ft,Me.data);else if(W.isFramebufferTexture){if(Gn)if(un)t.texStorage2D(3553,ce,mt,Me.width,Me.height);else{let ke=Me.width,Ae=Me.height;for(let He=0;He<ce;He++)t.texImage2D(3553,He,mt,ke,Ae,0,st,ft,null),ke>>=1,Ae>>=1}}else if(Xt.length>0&&pt){un&&Gn&&t.texStorage2D(3553,ce,mt,Xt[0].width,Xt[0].height);for(let ke=0,Ae=Xt.length;ke<Ae;ke++)dt=Xt[ke],un?t.texSubImage2D(3553,ke,0,0,st,ft,dt):t.texImage2D(3553,ke,mt,st,ft,dt);W.generateMipmaps=!1}else un?(Gn&&t.texStorage2D(3553,ce,mt,Me.width,Me.height),t.texSubImage2D(3553,0,0,0,st,ft,Me)):t.texImage2D(3553,0,mt,st,ft,Me);E(W,pt)&&L(Pe),rt.__version=$e.version,W.onUpdate&&W.onUpdate(W)}H.__version=W.version}function Ce(H,W,Te){if(W.image.length!==6)return;const Pe=ye(H,W),Fe=W.source;t.bindTexture(34067,H.__webglTexture,33984+Te);const $e=r.get(Fe);if(Fe.version!==$e.__version||Pe===!0){t.activeTexture(33984+Te),n.pixelStorei(37440,W.flipY),n.pixelStorei(37441,W.premultiplyAlpha),n.pixelStorei(3317,W.unpackAlignment),n.pixelStorei(37443,0);const rt=W.isCompressedTexture||W.image[0].isCompressedTexture,Ke=W.image[0]&&W.image[0].isDataTexture,Me=[];for(let ke=0;ke<6;ke++)!rt&&!Ke?Me[ke]=I(W.image[ke],!1,!0,u):Me[ke]=Ke?W.image[ke].image:W.image[ke],Me[ke]=sn(W,Me[ke]);const pt=Me[0],st=T(pt)||o,ft=i.convert(W.format,W.encoding),mt=i.convert(W.type),dt=M(W.internalFormat,ft,mt,W.encoding),Xt=o&&W.isVideoTexture!==!0,un=$e.__version===void 0||Pe===!0;let Gn=R(W,pt,st);ge(34067,W,st);let ce;if(rt){Xt&&un&&t.texStorage2D(34067,Gn,dt,pt.width,pt.height);for(let ke=0;ke<6;ke++){ce=Me[ke].mipmaps;for(let Ae=0;Ae<ce.length;Ae++){const He=ce[Ae];W.format!==Wi?ft!==null?Xt?t.compressedTexSubImage2D(34069+ke,Ae,0,0,He.width,He.height,ft,He.data):t.compressedTexImage2D(34069+ke,Ae,dt,He.width,He.height,0,He.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Xt?t.texSubImage2D(34069+ke,Ae,0,0,He.width,He.height,ft,mt,He.data):t.texImage2D(34069+ke,Ae,dt,He.width,He.height,0,ft,mt,He.data)}}}else{ce=W.mipmaps,Xt&&un&&(ce.length>0&&Gn++,t.texStorage2D(34067,Gn,dt,Me[0].width,Me[0].height));for(let ke=0;ke<6;ke++)if(Ke){Xt?t.texSubImage2D(34069+ke,0,0,0,Me[ke].width,Me[ke].height,ft,mt,Me[ke].data):t.texImage2D(34069+ke,0,dt,Me[ke].width,Me[ke].height,0,ft,mt,Me[ke].data);for(let Ae=0;Ae<ce.length;Ae++){const nt=ce[Ae].image[ke].image;Xt?t.texSubImage2D(34069+ke,Ae+1,0,0,nt.width,nt.height,ft,mt,nt.data):t.texImage2D(34069+ke,Ae+1,dt,nt.width,nt.height,0,ft,mt,nt.data)}}else{Xt?t.texSubImage2D(34069+ke,0,0,0,ft,mt,Me[ke]):t.texImage2D(34069+ke,0,dt,ft,mt,Me[ke]);for(let Ae=0;Ae<ce.length;Ae++){const He=ce[Ae];Xt?t.texSubImage2D(34069+ke,Ae+1,0,0,ft,mt,He.image[ke]):t.texImage2D(34069+ke,Ae+1,dt,ft,mt,He.image[ke])}}}E(W,st)&&L(34067),$e.__version=Fe.version,W.onUpdate&&W.onUpdate(W)}H.__version=W.version}function De(H,W,Te,Pe,Fe){const $e=i.convert(Te.format,Te.encoding),rt=i.convert(Te.type),Ke=M(Te.internalFormat,$e,rt,Te.encoding);r.get(W).__hasExternalTextures||(Fe===32879||Fe===35866?t.texImage3D(Fe,0,Ke,W.width,W.height,W.depth,0,$e,rt,null):t.texImage2D(Fe,0,Ke,W.width,W.height,0,$e,rt,null)),t.bindFramebuffer(36160,H),Ot(W)?f.framebufferTexture2DMultisampleEXT(36160,Pe,Fe,r.get(Te).__webglTexture,0,vt(W)):(Fe===3553||Fe>=34069&&Fe<=34074)&&n.framebufferTexture2D(36160,Pe,Fe,r.get(Te).__webglTexture,0),t.bindFramebuffer(36160,null)}function We(H,W,Te){if(n.bindRenderbuffer(36161,H),W.depthBuffer&&!W.stencilBuffer){let Pe=33189;if(Te||Ot(W)){const Fe=W.depthTexture;Fe&&Fe.isDepthTexture&&(Fe.type===ru?Pe=36012:Fe.type===nu&&(Pe=33190));const $e=vt(W);Ot(W)?f.renderbufferStorageMultisampleEXT(36161,$e,Pe,W.width,W.height):n.renderbufferStorageMultisample(36161,$e,Pe,W.width,W.height)}else n.renderbufferStorage(36161,Pe,W.width,W.height);n.framebufferRenderbuffer(36160,36096,36161,H)}else if(W.depthBuffer&&W.stencilBuffer){const Pe=vt(W);Te&&Ot(W)===!1?n.renderbufferStorageMultisample(36161,Pe,35056,W.width,W.height):Ot(W)?f.renderbufferStorageMultisampleEXT(36161,Pe,35056,W.width,W.height):n.renderbufferStorage(36161,34041,W.width,W.height),n.framebufferRenderbuffer(36160,33306,36161,H)}else{const Pe=W.isWebGLMultipleRenderTargets===!0?W.texture:[W.texture];for(let Fe=0;Fe<Pe.length;Fe++){const $e=Pe[Fe],rt=i.convert($e.format,$e.encoding),Ke=i.convert($e.type),Me=M($e.internalFormat,rt,Ke,$e.encoding),pt=vt(W);Te&&Ot(W)===!1?n.renderbufferStorageMultisample(36161,pt,Me,W.width,W.height):Ot(W)?f.renderbufferStorageMultisampleEXT(36161,pt,Me,W.width,W.height):n.renderbufferStorage(36161,Me,W.width,W.height)}}n.bindRenderbuffer(36161,null)}function Ze(H,W){if(W&&W.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,H),!(W.depthTexture&&W.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!r.get(W.depthTexture).__webglTexture||W.depthTexture.image.width!==W.width||W.depthTexture.image.height!==W.height)&&(W.depthTexture.image.width=W.width,W.depthTexture.image.height=W.height,W.depthTexture.needsUpdate=!0),A(W.depthTexture,0);const Pe=r.get(W.depthTexture).__webglTexture,Fe=vt(W);if(W.depthTexture.format===ou)Ot(W)?f.framebufferTexture2DMultisampleEXT(36160,36096,3553,Pe,0,Fe):n.framebufferTexture2D(36160,36096,3553,Pe,0);else if(W.depthTexture.format===sd)Ot(W)?f.framebufferTexture2DMultisampleEXT(36160,33306,3553,Pe,0,Fe):n.framebufferTexture2D(36160,33306,3553,Pe,0);else throw new Error("Unknown depthTexture format")}function ot(H){const W=r.get(H),Te=H.isWebGLCubeRenderTarget===!0;if(H.depthTexture&&!W.__autoAllocateDepthBuffer){if(Te)throw new Error("target.depthTexture not supported in Cube render targets");Ze(W.__webglFramebuffer,H)}else if(Te){W.__webglDepthbuffer=[];for(let Pe=0;Pe<6;Pe++)t.bindFramebuffer(36160,W.__webglFramebuffer[Pe]),W.__webglDepthbuffer[Pe]=n.createRenderbuffer(),We(W.__webglDepthbuffer[Pe],H,!1)}else t.bindFramebuffer(36160,W.__webglFramebuffer),W.__webglDepthbuffer=n.createRenderbuffer(),We(W.__webglDepthbuffer,H,!1);t.bindFramebuffer(36160,null)}function St(H,W,Te){const Pe=r.get(H);W!==void 0&&De(Pe.__webglFramebuffer,H,H.texture,36064,3553),Te!==void 0&&ot(H)}function Rt(H){const W=H.texture,Te=r.get(H),Pe=r.get(W);H.addEventListener("dispose",U),H.isWebGLMultipleRenderTargets!==!0&&(Pe.__webglTexture===void 0&&(Pe.__webglTexture=n.createTexture()),Pe.__version=W.version,a.memory.textures++);const Fe=H.isWebGLCubeRenderTarget===!0,$e=H.isWebGLMultipleRenderTargets===!0,rt=T(H)||o;if(Fe){Te.__webglFramebuffer=[];for(let Ke=0;Ke<6;Ke++)Te.__webglFramebuffer[Ke]=n.createFramebuffer()}else{if(Te.__webglFramebuffer=n.createFramebuffer(),$e)if(s.drawBuffers){const Ke=H.texture;for(let Me=0,pt=Ke.length;Me<pt;Me++){const st=r.get(Ke[Me]);st.__webglTexture===void 0&&(st.__webglTexture=n.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&H.samples>0&&Ot(H)===!1){const Ke=$e?W:[W];Te.__webglMultisampledFramebuffer=n.createFramebuffer(),Te.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,Te.__webglMultisampledFramebuffer);for(let Me=0;Me<Ke.length;Me++){const pt=Ke[Me];Te.__webglColorRenderbuffer[Me]=n.createRenderbuffer(),n.bindRenderbuffer(36161,Te.__webglColorRenderbuffer[Me]);const st=i.convert(pt.format,pt.encoding),ft=i.convert(pt.type),mt=M(pt.internalFormat,st,ft,pt.encoding,H.isXRRenderTarget===!0),dt=vt(H);n.renderbufferStorageMultisample(36161,dt,mt,H.width,H.height),n.framebufferRenderbuffer(36160,36064+Me,36161,Te.__webglColorRenderbuffer[Me])}n.bindRenderbuffer(36161,null),H.depthBuffer&&(Te.__webglDepthRenderbuffer=n.createRenderbuffer(),We(Te.__webglDepthRenderbuffer,H,!0)),t.bindFramebuffer(36160,null)}}if(Fe){t.bindTexture(34067,Pe.__webglTexture),ge(34067,W,rt);for(let Ke=0;Ke<6;Ke++)De(Te.__webglFramebuffer[Ke],H,W,36064,34069+Ke);E(W,rt)&&L(34067),t.unbindTexture()}else if($e){const Ke=H.texture;for(let Me=0,pt=Ke.length;Me<pt;Me++){const st=Ke[Me],ft=r.get(st);t.bindTexture(3553,ft.__webglTexture),ge(3553,st,rt),De(Te.__webglFramebuffer,H,st,36064+Me,3553),E(st,rt)&&L(3553)}t.unbindTexture()}else{let Ke=3553;(H.isWebGL3DRenderTarget||H.isWebGLArrayRenderTarget)&&(o?Ke=H.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Ke,Pe.__webglTexture),ge(Ke,W,rt),De(Te.__webglFramebuffer,H,W,36064,Ke),E(W,rt)&&L(Ke),t.unbindTexture()}H.depthBuffer&&ot(H)}function _t(H){const W=T(H)||o,Te=H.isWebGLMultipleRenderTargets===!0?H.texture:[H.texture];for(let Pe=0,Fe=Te.length;Pe<Fe;Pe++){const $e=Te[Pe];if(E($e,W)){const rt=H.isWebGLCubeRenderTarget?34067:3553,Ke=r.get($e).__webglTexture;t.bindTexture(rt,Ke),L(rt),t.unbindTexture()}}}function Tt(H){if(o&&H.samples>0&&Ot(H)===!1){const W=H.isWebGLMultipleRenderTargets?H.texture:[H.texture],Te=H.width,Pe=H.height;let Fe=16384;const $e=[],rt=H.stencilBuffer?33306:36096,Ke=r.get(H),Me=H.isWebGLMultipleRenderTargets===!0;if(Me)for(let pt=0;pt<W.length;pt++)t.bindFramebuffer(36160,Ke.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(36160,36064+pt,36161,null),t.bindFramebuffer(36160,Ke.__webglFramebuffer),n.framebufferTexture2D(36009,36064+pt,3553,null,0);t.bindFramebuffer(36008,Ke.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,Ke.__webglFramebuffer);for(let pt=0;pt<W.length;pt++){$e.push(36064+pt),H.depthBuffer&&$e.push(rt);const st=Ke.__ignoreDepthValues!==void 0?Ke.__ignoreDepthValues:!1;if(st===!1&&(H.depthBuffer&&(Fe|=256),H.stencilBuffer&&(Fe|=1024)),Me&&n.framebufferRenderbuffer(36008,36064,36161,Ke.__webglColorRenderbuffer[pt]),st===!0&&(n.invalidateFramebuffer(36008,[rt]),n.invalidateFramebuffer(36009,[rt])),Me){const ft=r.get(W[pt]).__webglTexture;n.framebufferTexture2D(36009,36064,3553,ft,0)}n.blitFramebuffer(0,0,Te,Pe,0,0,Te,Pe,Fe,9728),m&&n.invalidateFramebuffer(36008,$e)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),Me)for(let pt=0;pt<W.length;pt++){t.bindFramebuffer(36160,Ke.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(36160,36064+pt,36161,Ke.__webglColorRenderbuffer[pt]);const st=r.get(W[pt]).__webglTexture;t.bindFramebuffer(36160,Ke.__webglFramebuffer),n.framebufferTexture2D(36009,36064+pt,3553,st,0)}t.bindFramebuffer(36009,Ke.__webglMultisampledFramebuffer)}}function vt(H){return Math.min(h,H.samples)}function Ot(H){const W=r.get(H);return o&&H.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&W.__useRenderToTexture!==!1}function jt(H){const W=a.render.frame;x.get(H)!==W&&(x.set(H,W),H.update())}function sn(H,W){const Te=H.encoding,Pe=H.format,Fe=H.type;return H.isCompressedTexture===!0||H.isVideoTexture===!0||H.format===_S||Te!==mu&&(Te===fn?o===!1?e.has("EXT_sRGB")===!0&&Pe===Wi?(H.format=_S,H.minFilter=yi,H.generateMipmaps=!1):W=BR.sRGBToLinear(W):(Pe!==Wi||Fe!==fu)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",Te)),W}this.allocateTextureUnit=O,this.resetTextureUnits=te,this.setTexture2D=A,this.setTexture2DArray=K,this.setTexture3D=$,this.setTextureCube=re,this.rebindTextures=St,this.setupRenderTarget=Rt,this.updateRenderTargetMipmap=_t,this.updateMultisampleRenderTarget=Tt,this.setupDepthRenderbuffer=ot,this.setupFrameBufferTexture=De,this.useMultisampledRTT=Ot}function x5(n,e,t){const r=t.isWebGL2;function s(i,a=null){let o;if(i===fu)return 5121;if(i===n$)return 32819;if(i===r$)return 32820;if(i===qV)return 5120;if(i===e$)return 5122;if(i===WR)return 5123;if(i===t$)return 5124;if(i===nu)return 5125;if(i===ru)return 5126;if(i===ef)return r?5131:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(i===s$)return 6406;if(i===Wi)return 6408;if(i===i$)return 6409;if(i===a$)return 6410;if(i===ou)return 6402;if(i===sd)return 34041;if(i===_S)return o=e.get("EXT_sRGB"),o!==null?o.SRGB_ALPHA_EXT:null;if(i===o$)return 6403;if(i===l$)return 36244;if(i===u$)return 33319;if(i===c$)return 33320;if(i===d$)return 36249;if(i===cw||i===dw||i===hw||i===pw)if(a===fn)if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(i===cw)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===dw)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===hw)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===pw)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(i===cw)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===dw)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===hw)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===pw)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===EN||i===RN||i===LN||i===AN)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(i===EN)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===RN)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===LN)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===AN)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===h$)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(i===zN||i===DN)if(o=e.get("WEBGL_compressed_texture_etc"),o!==null){if(i===zN)return a===fn?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(i===DN)return a===fn?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===PN||i===FN||i===GN||i===ON||i===WN||i===VN||i===$N||i===BN||i===XN||i===UN||i===ZN||i===HN||i===KN||i===YN)if(o=e.get("WEBGL_compressed_texture_astc"),o!==null){if(i===PN)return a===fn?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===FN)return a===fn?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===GN)return a===fn?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===ON)return a===fn?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===WN)return a===fn?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===VN)return a===fn?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===$N)return a===fn?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===BN)return a===fn?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===XN)return a===fn?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===UN)return a===fn?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===ZN)return a===fn?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===HN)return a===fn?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===KN)return a===fn?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===YN)return a===fn?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===fw)if(o=e.get("EXT_texture_compression_bptc"),o!==null){if(i===fw)return a===fn?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(i===p$||i===jN||i===QN||i===JN)if(o=e.get("EXT_texture_compression_rgtc"),o!==null){if(i===fw)return o.COMPRESSED_RED_RGTC1_EXT;if(i===jN)return o.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===QN)return o.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===JN)return o.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===jc?r?34042:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null):n[i]!==void 0?n[i]:null}return{convert:s}}class v5 extends bi{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Hc extends ei{constructor(){super(),this.isGroup=!0,this.type="Group"}}const w5={type:"move"};class Ww{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Hc,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Hc,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new we,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new we),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Hc,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new we,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new we),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const r of e.hand.values())this._getHandJoint(t,r)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,r){let s=null,i=null,a=null;const o=this._targetRay,l=this._grip,u=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(u&&e.hand){a=!0;for(const g of e.hand.values()){const y=t.getJointPose(g,r),v=this._getHandJoint(u,g);y!==null&&(v.matrix.fromArray(y.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.jointRadius=y.radius),v.visible=y!==null}const d=u.joints["index-finger-tip"],h=u.joints["thumb-tip"],f=d.position.distanceTo(h.position),m=.02,x=.005;u.inputState.pinching&&f>m+x?(u.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!u.inputState.pinching&&f<=m-x&&(u.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(i=t.getPose(e.gripSpace,r),i!==null&&(l.matrix.fromArray(i.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),i.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(i.linearVelocity)):l.hasLinearVelocity=!1,i.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(i.angularVelocity)):l.hasAngularVelocity=!1));o!==null&&(s=t.getPose(e.targetRaySpace,r),s===null&&i!==null&&(s=i),s!==null&&(o.matrix.fromArray(s.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),s.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(s.linearVelocity)):o.hasLinearVelocity=!1,s.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(s.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(w5)))}return o!==null&&(o.visible=s!==null),l!==null&&(l.visible=i!==null),u!==null&&(u.visible=a!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const r=new Hc;r.matrixAutoUpdate=!1,r.visible=!1,e.joints[t.jointName]=r,e.add(r)}return e.joints[t.jointName]}}class S5 extends qs{constructor(e,t,r,s,i,a,o,l,u,d){if(d=d!==void 0?d:ou,d!==ou&&d!==sd)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");r===void 0&&d===ou&&(r=nu),r===void 0&&d===sd&&(r=jc),super(null,s,i,a,o,l,d,r,u),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=o!==void 0?o:ls,this.minFilter=l!==void 0?l:ls,this.flipY=!1,this.generateMipmaps=!1}}class T5 extends wd{constructor(e,t){super();const r=this;let s=null,i=1,a=null,o="local-floor",l=1,u=null,d=null,h=null,f=null,m=null,x=null;const g=t.getContextAttributes();let y=null,v=null;const w=[],I=[],T=new Set,C=new Map,E=new bi;E.layers.enable(1),E.viewport=new Or;const L=new bi;L.layers.enable(2),L.viewport=new Or;const M=[E,L],R=new v5;R.layers.enable(1),R.layers.enable(2);let z=null,X=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function($){let re=w[$];return re===void 0&&(re=new Ww,w[$]=re),re.getTargetRaySpace()},this.getControllerGrip=function($){let re=w[$];return re===void 0&&(re=new Ww,w[$]=re),re.getGripSpace()},this.getHand=function($){let re=w[$];return re===void 0&&(re=new Ww,w[$]=re),re.getHandSpace()};function U($){const re=I.indexOf($.inputSource);if(re===-1)return;const oe=w[re];oe!==void 0&&oe.dispatchEvent({type:$.type,data:$.inputSource})}function G(){s.removeEventListener("select",U),s.removeEventListener("selectstart",U),s.removeEventListener("selectend",U),s.removeEventListener("squeeze",U),s.removeEventListener("squeezestart",U),s.removeEventListener("squeezeend",U),s.removeEventListener("end",G),s.removeEventListener("inputsourceschange",V);for(let $=0;$<w.length;$++){const re=I[$];re!==null&&(I[$]=null,w[$].disconnect(re))}z=null,X=null,e.setRenderTarget(y),m=null,f=null,h=null,s=null,v=null,K.stop(),r.isPresenting=!1,r.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function($){i=$,r.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function($){o=$,r.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return u||a},this.setReferenceSpace=function($){u=$},this.getBaseLayer=function(){return f!==null?f:m},this.getBinding=function(){return h},this.getFrame=function(){return x},this.getSession=function(){return s},this.setSession=async function($){if(s=$,s!==null){if(y=e.getRenderTarget(),s.addEventListener("select",U),s.addEventListener("selectstart",U),s.addEventListener("selectend",U),s.addEventListener("squeeze",U),s.addEventListener("squeezestart",U),s.addEventListener("squeezeend",U),s.addEventListener("end",G),s.addEventListener("inputsourceschange",V),g.xrCompatible!==!0&&await t.makeXRCompatible(),s.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const re={antialias:s.renderState.layers===void 0?g.antialias:!0,alpha:g.alpha,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:i};m=new XRWebGLLayer(s,t,re),s.updateRenderState({baseLayer:m}),v=new gu(m.framebufferWidth,m.framebufferHeight,{format:Wi,type:fu,encoding:e.outputEncoding,stencilBuffer:g.stencil})}else{let re=null,oe=null,Y=null;g.depth&&(Y=g.stencil?35056:33190,re=g.stencil?sd:ou,oe=g.stencil?jc:nu);const ge={colorFormat:32856,depthFormat:Y,scaleFactor:i};h=new XRWebGLBinding(s,t),f=h.createProjectionLayer(ge),s.updateRenderState({layers:[f]}),v=new gu(f.textureWidth,f.textureHeight,{format:Wi,type:fu,depthTexture:new S5(f.textureWidth,f.textureHeight,oe,void 0,void 0,void 0,void 0,void 0,void 0,re),stencilBuffer:g.stencil,encoding:e.outputEncoding,samples:g.antialias?4:0});const ye=e.properties.get(v);ye.__ignoreDepthValues=f.ignoreDepthValues}v.isXRRenderTarget=!0,this.setFoveation(l),u=null,a=await s.requestReferenceSpace(o),K.setContext(s),K.start(),r.isPresenting=!0,r.dispatchEvent({type:"sessionstart"})}};function V($){for(let re=0;re<$.removed.length;re++){const oe=$.removed[re],Y=I.indexOf(oe);Y>=0&&(I[Y]=null,w[Y].disconnect(oe))}for(let re=0;re<$.added.length;re++){const oe=$.added[re];let Y=I.indexOf(oe);if(Y===-1){for(let ye=0;ye<w.length;ye++)if(ye>=I.length){I.push(oe),Y=ye;break}else if(I[ye]===null){I[ye]=oe,Y=ye;break}if(Y===-1)break}const ge=w[Y];ge&&ge.connect(oe)}}const Z=new we,J=new we;function te($,re,oe){Z.setFromMatrixPosition(re.matrixWorld),J.setFromMatrixPosition(oe.matrixWorld);const Y=Z.distanceTo(J),ge=re.projectionMatrix.elements,ye=oe.projectionMatrix.elements,ve=ge[14]/(ge[10]-1),Ce=ge[14]/(ge[10]+1),De=(ge[9]+1)/ge[5],We=(ge[9]-1)/ge[5],Ze=(ge[8]-1)/ge[0],ot=(ye[8]+1)/ye[0],St=ve*Ze,Rt=ve*ot,_t=Y/(-Ze+ot),Tt=_t*-Ze;re.matrixWorld.decompose($.position,$.quaternion,$.scale),$.translateX(Tt),$.translateZ(_t),$.matrixWorld.compose($.position,$.quaternion,$.scale),$.matrixWorldInverse.copy($.matrixWorld).invert();const vt=ve+_t,Ot=Ce+_t,jt=St-Tt,sn=Rt+(Y-Tt),H=De*Ce/Ot*vt,W=We*Ce/Ot*vt;$.projectionMatrix.makePerspective(jt,sn,H,W,vt,Ot)}function O($,re){re===null?$.matrixWorld.copy($.matrix):$.matrixWorld.multiplyMatrices(re.matrixWorld,$.matrix),$.matrixWorldInverse.copy($.matrixWorld).invert()}this.updateCamera=function($){if(s===null)return;R.near=L.near=E.near=$.near,R.far=L.far=E.far=$.far,(z!==R.near||X!==R.far)&&(s.updateRenderState({depthNear:R.near,depthFar:R.far}),z=R.near,X=R.far);const re=$.parent,oe=R.cameras;O(R,re);for(let ge=0;ge<oe.length;ge++)O(oe[ge],re);R.matrixWorld.decompose(R.position,R.quaternion,R.scale),$.matrix.copy(R.matrix),$.matrix.decompose($.position,$.quaternion,$.scale);const Y=$.children;for(let ge=0,ye=Y.length;ge<ye;ge++)Y[ge].updateMatrixWorld(!0);oe.length===2?te(R,E,L):R.projectionMatrix.copy(E.projectionMatrix)},this.getCamera=function(){return R},this.getFoveation=function(){if(!(f===null&&m===null))return l},this.setFoveation=function($){l=$,f!==null&&(f.fixedFoveation=$),m!==null&&m.fixedFoveation!==void 0&&(m.fixedFoveation=$)},this.getPlanes=function(){return T};let Q=null;function A($,re){if(d=re.getViewerPose(u||a),x=re,d!==null){const oe=d.views;m!==null&&(e.setRenderTargetFramebuffer(v,m.framebuffer),e.setRenderTarget(v));let Y=!1;oe.length!==R.cameras.length&&(R.cameras.length=0,Y=!0);for(let ge=0;ge<oe.length;ge++){const ye=oe[ge];let ve=null;if(m!==null)ve=m.getViewport(ye);else{const De=h.getViewSubImage(f,ye);ve=De.viewport,ge===0&&(e.setRenderTargetTextures(v,De.colorTexture,f.ignoreDepthValues?void 0:De.depthStencilTexture),e.setRenderTarget(v))}let Ce=M[ge];Ce===void 0&&(Ce=new bi,Ce.layers.enable(ge),Ce.viewport=new Or,M[ge]=Ce),Ce.matrix.fromArray(ye.transform.matrix),Ce.projectionMatrix.fromArray(ye.projectionMatrix),Ce.viewport.set(ve.x,ve.y,ve.width,ve.height),ge===0&&R.matrix.copy(Ce.matrix),Y===!0&&R.cameras.push(Ce)}}for(let oe=0;oe<w.length;oe++){const Y=I[oe],ge=w[oe];Y!==null&&ge!==void 0&&ge.update(Y,re,u||a)}if(Q&&Q($,re),re.detectedPlanes){r.dispatchEvent({type:"planesdetected",data:re.detectedPlanes});let oe=null;for(const Y of T)re.detectedPlanes.has(Y)||(oe===null&&(oe=[]),oe.push(Y));if(oe!==null)for(const Y of oe)T.delete(Y),C.delete(Y),r.dispatchEvent({type:"planeremoved",data:Y});for(const Y of re.detectedPlanes)if(!T.has(Y))T.add(Y),C.set(Y,re.lastChangedTime),r.dispatchEvent({type:"planeadded",data:Y});else{const ge=C.get(Y);Y.lastChangedTime>ge&&(C.set(Y,Y.lastChangedTime),r.dispatchEvent({type:"planechanged",data:Y}))}}x=null}const K=new eL;K.setAnimationLoop(A),this.setAnimationLoop=function($){Q=$},this.dispose=function(){}}}function I5(n,e){function t(g,y){y.color.getRGB(g.fogColor.value,jR(n)),y.isFog?(g.fogNear.value=y.near,g.fogFar.value=y.far):y.isFogExp2&&(g.fogDensity.value=y.density)}function r(g,y,v,w,I){y.isMeshBasicMaterial||y.isMeshLambertMaterial?s(g,y):y.isMeshToonMaterial?(s(g,y),d(g,y)):y.isMeshPhongMaterial?(s(g,y),u(g,y)):y.isMeshStandardMaterial?(s(g,y),h(g,y),y.isMeshPhysicalMaterial&&f(g,y,I)):y.isMeshMatcapMaterial?(s(g,y),m(g,y)):y.isMeshDepthMaterial?s(g,y):y.isMeshDistanceMaterial?(s(g,y),x(g,y)):y.isMeshNormalMaterial?s(g,y):y.isLineBasicMaterial?(i(g,y),y.isLineDashedMaterial&&a(g,y)):y.isPointsMaterial?o(g,y,v,w):y.isSpriteMaterial?l(g,y):y.isShadowMaterial?(g.color.value.copy(y.color),g.opacity.value=y.opacity):y.isShaderMaterial&&(y.uniformsNeedUpdate=!1)}function s(g,y){g.opacity.value=y.opacity,y.color&&g.diffuse.value.copy(y.color),y.emissive&&g.emissive.value.copy(y.emissive).multiplyScalar(y.emissiveIntensity),y.map&&(g.map.value=y.map),y.alphaMap&&(g.alphaMap.value=y.alphaMap),y.bumpMap&&(g.bumpMap.value=y.bumpMap,g.bumpScale.value=y.bumpScale,y.side===Js&&(g.bumpScale.value*=-1)),y.displacementMap&&(g.displacementMap.value=y.displacementMap,g.displacementScale.value=y.displacementScale,g.displacementBias.value=y.displacementBias),y.emissiveMap&&(g.emissiveMap.value=y.emissiveMap),y.normalMap&&(g.normalMap.value=y.normalMap,g.normalScale.value.copy(y.normalScale),y.side===Js&&g.normalScale.value.negate()),y.specularMap&&(g.specularMap.value=y.specularMap),y.alphaTest>0&&(g.alphaTest.value=y.alphaTest);const v=e.get(y).envMap;if(v&&(g.envMap.value=v,g.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=y.reflectivity,g.ior.value=y.ior,g.refractionRatio.value=y.refractionRatio),y.lightMap){g.lightMap.value=y.lightMap;const T=n.useLegacyLights===!0?Math.PI:1;g.lightMapIntensity.value=y.lightMapIntensity*T}y.aoMap&&(g.aoMap.value=y.aoMap,g.aoMapIntensity.value=y.aoMapIntensity);let w;y.map?w=y.map:y.specularMap?w=y.specularMap:y.displacementMap?w=y.displacementMap:y.normalMap?w=y.normalMap:y.bumpMap?w=y.bumpMap:y.roughnessMap?w=y.roughnessMap:y.metalnessMap?w=y.metalnessMap:y.alphaMap?w=y.alphaMap:y.emissiveMap?w=y.emissiveMap:y.clearcoatMap?w=y.clearcoatMap:y.clearcoatNormalMap?w=y.clearcoatNormalMap:y.clearcoatRoughnessMap?w=y.clearcoatRoughnessMap:y.iridescenceMap?w=y.iridescenceMap:y.iridescenceThicknessMap?w=y.iridescenceThicknessMap:y.specularIntensityMap?w=y.specularIntensityMap:y.specularColorMap?w=y.specularColorMap:y.transmissionMap?w=y.transmissionMap:y.thicknessMap?w=y.thicknessMap:y.sheenColorMap?w=y.sheenColorMap:y.sheenRoughnessMap&&(w=y.sheenRoughnessMap),w!==void 0&&(w.isWebGLRenderTarget&&(w=w.texture),w.matrixAutoUpdate===!0&&w.updateMatrix(),g.uvTransform.value.copy(w.matrix));let I;y.aoMap?I=y.aoMap:y.lightMap&&(I=y.lightMap),I!==void 0&&(I.isWebGLRenderTarget&&(I=I.texture),I.matrixAutoUpdate===!0&&I.updateMatrix(),g.uv2Transform.value.copy(I.matrix))}function i(g,y){g.diffuse.value.copy(y.color),g.opacity.value=y.opacity}function a(g,y){g.dashSize.value=y.dashSize,g.totalSize.value=y.dashSize+y.gapSize,g.scale.value=y.scale}function o(g,y,v,w){g.diffuse.value.copy(y.color),g.opacity.value=y.opacity,g.size.value=y.size*v,g.scale.value=w*.5,y.map&&(g.map.value=y.map),y.alphaMap&&(g.alphaMap.value=y.alphaMap),y.alphaTest>0&&(g.alphaTest.value=y.alphaTest);let I;y.map?I=y.map:y.alphaMap&&(I=y.alphaMap),I!==void 0&&(I.matrixAutoUpdate===!0&&I.updateMatrix(),g.uvTransform.value.copy(I.matrix))}function l(g,y){g.diffuse.value.copy(y.color),g.opacity.value=y.opacity,g.rotation.value=y.rotation,y.map&&(g.map.value=y.map),y.alphaMap&&(g.alphaMap.value=y.alphaMap),y.alphaTest>0&&(g.alphaTest.value=y.alphaTest);let v;y.map?v=y.map:y.alphaMap&&(v=y.alphaMap),v!==void 0&&(v.matrixAutoUpdate===!0&&v.updateMatrix(),g.uvTransform.value.copy(v.matrix))}function u(g,y){g.specular.value.copy(y.specular),g.shininess.value=Math.max(y.shininess,1e-4)}function d(g,y){y.gradientMap&&(g.gradientMap.value=y.gradientMap)}function h(g,y){g.roughness.value=y.roughness,g.metalness.value=y.metalness,y.roughnessMap&&(g.roughnessMap.value=y.roughnessMap),y.metalnessMap&&(g.metalnessMap.value=y.metalnessMap),e.get(y).envMap&&(g.envMapIntensity.value=y.envMapIntensity)}function f(g,y,v){g.ior.value=y.ior,y.sheen>0&&(g.sheenColor.value.copy(y.sheenColor).multiplyScalar(y.sheen),g.sheenRoughness.value=y.sheenRoughness,y.sheenColorMap&&(g.sheenColorMap.value=y.sheenColorMap),y.sheenRoughnessMap&&(g.sheenRoughnessMap.value=y.sheenRoughnessMap)),y.clearcoat>0&&(g.clearcoat.value=y.clearcoat,g.clearcoatRoughness.value=y.clearcoatRoughness,y.clearcoatMap&&(g.clearcoatMap.value=y.clearcoatMap),y.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=y.clearcoatRoughnessMap),y.clearcoatNormalMap&&(g.clearcoatNormalScale.value.copy(y.clearcoatNormalScale),g.clearcoatNormalMap.value=y.clearcoatNormalMap,y.side===Js&&g.clearcoatNormalScale.value.negate())),y.iridescence>0&&(g.iridescence.value=y.iridescence,g.iridescenceIOR.value=y.iridescenceIOR,g.iridescenceThicknessMinimum.value=y.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=y.iridescenceThicknessRange[1],y.iridescenceMap&&(g.iridescenceMap.value=y.iridescenceMap),y.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=y.iridescenceThicknessMap)),y.transmission>0&&(g.transmission.value=y.transmission,g.transmissionSamplerMap.value=v.texture,g.transmissionSamplerSize.value.set(v.width,v.height),y.transmissionMap&&(g.transmissionMap.value=y.transmissionMap),g.thickness.value=y.thickness,y.thicknessMap&&(g.thicknessMap.value=y.thicknessMap),g.attenuationDistance.value=y.attenuationDistance,g.attenuationColor.value.copy(y.attenuationColor)),g.specularIntensity.value=y.specularIntensity,g.specularColor.value.copy(y.specularColor),y.specularIntensityMap&&(g.specularIntensityMap.value=y.specularIntensityMap),y.specularColorMap&&(g.specularColorMap.value=y.specularColorMap)}function m(g,y){y.matcap&&(g.matcap.value=y.matcap)}function x(g,y){g.referencePosition.value.copy(y.referencePosition),g.nearDistance.value=y.nearDistance,g.farDistance.value=y.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:r}}function k5(n,e,t,r){let s={},i={},a=[];const o=t.isWebGL2?n.getParameter(35375):0;function l(w,I){const T=I.program;r.uniformBlockBinding(w,T)}function u(w,I){let T=s[w.id];T===void 0&&(x(w),T=d(w),s[w.id]=T,w.addEventListener("dispose",y));const C=I.program;r.updateUBOMapping(w,C);const E=e.render.frame;i[w.id]!==E&&(f(w),i[w.id]=E)}function d(w){const I=h();w.__bindingPointIndex=I;const T=n.createBuffer(),C=w.__size,E=w.usage;return n.bindBuffer(35345,T),n.bufferData(35345,C,E),n.bindBuffer(35345,null),n.bindBufferBase(35345,I,T),T}function h(){for(let w=0;w<o;w++)if(a.indexOf(w)===-1)return a.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(w){const I=s[w.id],T=w.uniforms,C=w.__cache;n.bindBuffer(35345,I);for(let E=0,L=T.length;E<L;E++){const M=T[E];if(m(M,E,C)===!0){const R=M.__offset,z=Array.isArray(M.value)?M.value:[M.value];let X=0;for(let U=0;U<z.length;U++){const G=z[U],V=g(G);typeof G=="number"?(M.__data[0]=G,n.bufferSubData(35345,R+X,M.__data)):G.isMatrix3?(M.__data[0]=G.elements[0],M.__data[1]=G.elements[1],M.__data[2]=G.elements[2],M.__data[3]=G.elements[0],M.__data[4]=G.elements[3],M.__data[5]=G.elements[4],M.__data[6]=G.elements[5],M.__data[7]=G.elements[0],M.__data[8]=G.elements[6],M.__data[9]=G.elements[7],M.__data[10]=G.elements[8],M.__data[11]=G.elements[0]):(G.toArray(M.__data,X),X+=V.storage/Float32Array.BYTES_PER_ELEMENT)}n.bufferSubData(35345,R,M.__data)}}n.bindBuffer(35345,null)}function m(w,I,T){const C=w.value;if(T[I]===void 0){if(typeof C=="number")T[I]=C;else{const E=Array.isArray(C)?C:[C],L=[];for(let M=0;M<E.length;M++)L.push(E[M].clone());T[I]=L}return!0}else if(typeof C=="number"){if(T[I]!==C)return T[I]=C,!0}else{const E=Array.isArray(T[I])?T[I]:[T[I]],L=Array.isArray(C)?C:[C];for(let M=0;M<E.length;M++){const R=E[M];if(R.equals(L[M])===!1)return R.copy(L[M]),!0}}return!1}function x(w){const I=w.uniforms;let T=0;const C=16;let E=0;for(let L=0,M=I.length;L<M;L++){const R=I[L],z={boundary:0,storage:0},X=Array.isArray(R.value)?R.value:[R.value];for(let U=0,G=X.length;U<G;U++){const V=X[U],Z=g(V);z.boundary+=Z.boundary,z.storage+=Z.storage}if(R.__data=new Float32Array(z.storage/Float32Array.BYTES_PER_ELEMENT),R.__offset=T,L>0){E=T%C;const U=C-E;E!==0&&U-z.boundary<0&&(T+=C-E,R.__offset=T)}T+=z.storage}return E=T%C,E>0&&(T+=C-E),w.__size=T,w.__cache={},this}function g(w){const I={boundary:0,storage:0};return typeof w=="number"?(I.boundary=4,I.storage=4):w.isVector2?(I.boundary=8,I.storage=8):w.isVector3||w.isColor?(I.boundary=16,I.storage=12):w.isVector4?(I.boundary=16,I.storage=16):w.isMatrix3?(I.boundary=48,I.storage=48):w.isMatrix4?(I.boundary=64,I.storage=64):w.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",w),I}function y(w){const I=w.target;I.removeEventListener("dispose",y);const T=a.indexOf(I.__bindingPointIndex);a.splice(T,1),n.deleteBuffer(s[I.id]),delete s[I.id],delete i[I.id]}function v(){for(const w in s)n.deleteBuffer(s[w]);a=[],s={},i={}}return{bind:l,update:u,dispose:v}}function C5(){const n=p0("canvas");return n.style.display="block",n}function A2(n={}){this.isWebGLRenderer=!0;const e=n.canvas!==void 0?n.canvas:C5(),t=n.context!==void 0?n.context:null,r=n.depth!==void 0?n.depth:!0,s=n.stencil!==void 0?n.stencil:!0,i=n.antialias!==void 0?n.antialias:!1,a=n.premultipliedAlpha!==void 0?n.premultipliedAlpha:!0,o=n.preserveDrawingBuffer!==void 0?n.preserveDrawingBuffer:!1,l=n.powerPreference!==void 0?n.powerPreference:"default",u=n.failIfMajorPerformanceCaveat!==void 0?n.failIfMajorPerformanceCaveat:!1;let d;t!==null?d=t.getContextAttributes().alpha:d=n.alpha!==void 0?n.alpha:!1;let h=null,f=null;const m=[],x=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=mu,this.useLegacyLights=!0,this.toneMapping=Qa,this.toneMappingExposure=1;const g=this;let y=!1,v=0,w=0,I=null,T=-1,C=null;const E=new Or,L=new Or;let M=null,R=e.width,z=e.height,X=1,U=null,G=null;const V=new Or(0,0,R,z),Z=new Or(0,0,R,z);let J=!1;const te=new qR;let O=!1,Q=!1,A=null;const K=new Fn,$=new we,re={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function oe(){return I===null?X:1}let Y=t;function ge(B,me){for(let Ie=0;Ie<B.length;Ie++){const pe=B[Ie],_e=e.getContext(pe,me);if(_e!==null)return _e}return null}try{const B={alpha:!0,depth:r,stencil:s,antialias:i,premultipliedAlpha:a,preserveDrawingBuffer:o,powerPreference:l,failIfMajorPerformanceCaveat:u};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${N2}`),e.addEventListener("webglcontextlost",ft,!1),e.addEventListener("webglcontextrestored",mt,!1),e.addEventListener("webglcontextcreationerror",dt,!1),Y===null){const me=["webgl2","webgl","experimental-webgl"];if(g.isWebGL1Renderer===!0&&me.shift(),Y=ge(me,B),Y===null)throw ge(me)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}Y.getShaderPrecisionFormat===void 0&&(Y.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(B){throw console.error("THREE.WebGLRenderer: "+B.message),B}let ye,ve,Ce,De,We,Ze,ot,St,Rt,_t,Tt,vt,Ot,jt,sn,H,W,Te,Pe,Fe,$e,rt,Ke,Me;function pt(){ye=new FU(Y),ve=new EU(Y,ye,n),ye.init(ve),rt=new x5(Y,ye,ve),Ce=new y5(Y,ye,ve),De=new WU,We=new r5,Ze=new b5(Y,ye,Ce,We,ve,rt,De),ot=new LU(g),St=new PU(g),Rt=new K$(Y,ve),Ke=new MU(Y,ye,Rt,ve),_t=new GU(Y,Rt,De,Ke),Tt=new XU(Y,_t,Rt,De),Pe=new BU(Y,ve,Ze),H=new RU(We),vt=new n5(g,ot,St,ye,ve,Ke,H),Ot=new I5(g,We),jt=new i5,sn=new d5(ye,ve),Te=new _U(g,ot,St,Ce,Tt,d,a),W=new g5(g,Tt,ve),Me=new k5(Y,De,ve,Ce),Fe=new NU(Y,ye,De,ve),$e=new OU(Y,ye,De,ve),De.programs=vt.programs,g.capabilities=ve,g.extensions=ye,g.properties=We,g.renderLists=jt,g.shadowMap=W,g.state=Ce,g.info=De}pt();const st=new T5(g,Y);this.xr=st,this.getContext=function(){return Y},this.getContextAttributes=function(){return Y.getContextAttributes()},this.forceContextLoss=function(){const B=ye.get("WEBGL_lose_context");B&&B.loseContext()},this.forceContextRestore=function(){const B=ye.get("WEBGL_lose_context");B&&B.restoreContext()},this.getPixelRatio=function(){return X},this.setPixelRatio=function(B){B!==void 0&&(X=B,this.setSize(R,z,!1))},this.getSize=function(B){return B.set(R,z)},this.setSize=function(B,me,Ie=!0){if(st.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}R=B,z=me,e.width=Math.floor(B*X),e.height=Math.floor(me*X),Ie===!0&&(e.style.width=B+"px",e.style.height=me+"px"),this.setViewport(0,0,B,me)},this.getDrawingBufferSize=function(B){return B.set(R*X,z*X).floor()},this.setDrawingBufferSize=function(B,me,Ie){R=B,z=me,X=Ie,e.width=Math.floor(B*Ie),e.height=Math.floor(me*Ie),this.setViewport(0,0,B,me)},this.getCurrentViewport=function(B){return B.copy(E)},this.getViewport=function(B){return B.copy(V)},this.setViewport=function(B,me,Ie,pe){B.isVector4?V.set(B.x,B.y,B.z,B.w):V.set(B,me,Ie,pe),Ce.viewport(E.copy(V).multiplyScalar(X).floor())},this.getScissor=function(B){return B.copy(Z)},this.setScissor=function(B,me,Ie,pe){B.isVector4?Z.set(B.x,B.y,B.z,B.w):Z.set(B,me,Ie,pe),Ce.scissor(L.copy(Z).multiplyScalar(X).floor())},this.getScissorTest=function(){return J},this.setScissorTest=function(B){Ce.setScissorTest(J=B)},this.setOpaqueSort=function(B){U=B},this.setTransparentSort=function(B){G=B},this.getClearColor=function(B){return B.copy(Te.getClearColor())},this.setClearColor=function(){Te.setClearColor.apply(Te,arguments)},this.getClearAlpha=function(){return Te.getClearAlpha()},this.setClearAlpha=function(){Te.setClearAlpha.apply(Te,arguments)},this.clear=function(B=!0,me=!0,Ie=!0){let pe=0;B&&(pe|=16384),me&&(pe|=256),Ie&&(pe|=1024),Y.clear(pe)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",ft,!1),e.removeEventListener("webglcontextrestored",mt,!1),e.removeEventListener("webglcontextcreationerror",dt,!1),jt.dispose(),sn.dispose(),We.dispose(),ot.dispose(),St.dispose(),Tt.dispose(),Ke.dispose(),Me.dispose(),vt.dispose(),st.dispose(),st.removeEventListener("sessionstart",Ae),st.removeEventListener("sessionend",He),A&&(A.dispose(),A=null),nt.stop()};function ft(B){B.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),y=!0}function mt(){console.log("THREE.WebGLRenderer: Context Restored."),y=!1;const B=De.autoReset,me=W.enabled,Ie=W.autoUpdate,pe=W.needsUpdate,_e=W.type;pt(),De.autoReset=B,W.enabled=me,W.autoUpdate=Ie,W.needsUpdate=pe,W.type=_e}function dt(B){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",B.statusMessage)}function Xt(B){const me=B.target;me.removeEventListener("dispose",Xt),un(me)}function un(B){Gn(B),We.remove(B)}function Gn(B){const me=We.get(B).programs;me!==void 0&&(me.forEach(function(Ie){vt.releaseProgram(Ie)}),B.isShaderMaterial&&vt.releaseShaderCache(B))}this.renderBufferDirect=function(B,me,Ie,pe,_e,gt){me===null&&(me=re);const Mt=_e.isMesh&&_e.matrixWorld.determinant()<0,It=Vh(B,me,Ie,pe,_e);Ce.setMaterial(pe,Mt);let Dt=Ie.index,Zt=1;pe.wireframe===!0&&(Dt=_t.getWireframeAttribute(Ie),Zt=2);const Ut=Ie.drawRange,Wt=Ie.attributes.position;let Ln=Ut.start*Zt,Br=(Ut.start+Ut.count)*Zt;gt!==null&&(Ln=Math.max(Ln,gt.start*Zt),Br=Math.min(Br,(gt.start+gt.count)*Zt)),Dt!==null?(Ln=Math.max(Ln,0),Br=Math.min(Br,Dt.count)):Wt!=null&&(Ln=Math.max(Ln,0),Br=Math.min(Br,Wt.count));const ai=Br-Ln;if(ai<0||ai===1/0)return;Ke.setup(_e,pe,It,Ie,Dt);let Ea,On=Fe;if(Dt!==null&&(Ea=Rt.get(Dt),On=$e,On.setIndex(Ea)),_e.isMesh)pe.wireframe===!0?(Ce.setLineWidth(pe.wireframeLinewidth*oe()),On.setMode(1)):On.setMode(4);else if(_e.isLine){let ht=pe.linewidth;ht===void 0&&(ht=1),Ce.setLineWidth(ht*oe()),_e.isLineSegments?On.setMode(1):_e.isLineLoop?On.setMode(2):On.setMode(3)}else _e.isPoints?On.setMode(0):_e.isSprite&&On.setMode(4);if(_e.isInstancedMesh)On.renderInstances(Ln,ai,_e.count);else if(Ie.isInstancedBufferGeometry){const ht=Ie._maxInstanceCount!==void 0?Ie._maxInstanceCount:1/0,$h=Math.min(Ie.instanceCount,ht);On.renderInstances(Ln,ai,$h)}else On.render(Ln,ai)},this.compile=function(B,me){function Ie(pe,_e,gt){pe.transparent===!0&&pe.side===Uo&&pe.forceSinglePass===!1?(pe.side=Js,pe.needsUpdate=!0,rs(pe,_e,gt),pe.side=nl,pe.needsUpdate=!0,rs(pe,_e,gt),pe.side=Uo):rs(pe,_e,gt)}f=sn.get(B),f.init(),x.push(f),B.traverseVisible(function(pe){pe.isLight&&pe.layers.test(me.layers)&&(f.pushLight(pe),pe.castShadow&&f.pushShadow(pe))}),f.setupLights(g.useLegacyLights),B.traverse(function(pe){const _e=pe.material;if(_e)if(Array.isArray(_e))for(let gt=0;gt<_e.length;gt++){const Mt=_e[gt];Ie(Mt,B,pe)}else Ie(_e,B,pe)}),x.pop(),f=null};let ce=null;function ke(B){ce&&ce(B)}function Ae(){nt.stop()}function He(){nt.start()}const nt=new eL;nt.setAnimationLoop(ke),typeof self<"u"&&nt.setContext(self),this.setAnimationLoop=function(B){ce=B,st.setAnimationLoop(B),B===null?nt.stop():nt.start()},st.addEventListener("sessionstart",Ae),st.addEventListener("sessionend",He),this.render=function(B,me){if(me!==void 0&&me.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(y===!0)return;B.matrixWorldAutoUpdate===!0&&B.updateMatrixWorld(),me.parent===null&&me.matrixWorldAutoUpdate===!0&&me.updateMatrixWorld(),st.enabled===!0&&st.isPresenting===!0&&(st.cameraAutoUpdate===!0&&st.updateCamera(me),me=st.getCamera()),B.isScene===!0&&B.onBeforeRender(g,B,me,I),f=sn.get(B,x.length),f.init(),x.push(f),K.multiplyMatrices(me.projectionMatrix,me.matrixWorldInverse),te.setFromProjectionMatrix(K),Q=this.localClippingEnabled,O=H.init(this.clippingPlanes,Q),h=jt.get(B,m.length),h.init(),m.push(h),an(B,me,0,g.sortObjects),h.finish(),g.sortObjects===!0&&h.sort(U,G),O===!0&&H.beginShadows();const Ie=f.state.shadowsArray;if(W.render(Ie,B,me),O===!0&&H.endShadows(),this.info.autoReset===!0&&this.info.reset(),Te.render(h,B),f.setupLights(g.useLegacyLights),me.isArrayCamera){const pe=me.cameras;for(let _e=0,gt=pe.length;_e<gt;_e++){const Mt=pe[_e];Hn(h,B,Mt,Mt.viewport)}}else Hn(h,B,me);I!==null&&(Ze.updateMultisampleRenderTarget(I),Ze.updateRenderTargetMipmap(I)),B.isScene===!0&&B.onAfterRender(g,B,me),Ke.resetDefaultState(),T=-1,C=null,x.pop(),x.length>0?f=x[x.length-1]:f=null,m.pop(),m.length>0?h=m[m.length-1]:h=null};function an(B,me,Ie,pe){if(B.visible===!1)return;if(B.layers.test(me.layers)){if(B.isGroup)Ie=B.renderOrder;else if(B.isLOD)B.autoUpdate===!0&&B.update(me);else if(B.isLight)f.pushLight(B),B.castShadow&&f.pushShadow(B);else if(B.isSprite){if(!B.frustumCulled||te.intersectsSprite(B)){pe&&$.setFromMatrixPosition(B.matrixWorld).applyMatrix4(K);const Mt=Tt.update(B),It=B.material;It.visible&&h.push(B,Mt,It,Ie,$.z,null)}}else if((B.isMesh||B.isLine||B.isPoints)&&(B.isSkinnedMesh&&B.skeleton.frame!==De.render.frame&&(B.skeleton.update(),B.skeleton.frame=De.render.frame),!B.frustumCulled||te.intersectsObject(B))){pe&&$.setFromMatrixPosition(B.matrixWorld).applyMatrix4(K);const Mt=Tt.update(B),It=B.material;if(Array.isArray(It)){const Dt=Mt.groups;for(let Zt=0,Ut=Dt.length;Zt<Ut;Zt++){const Wt=Dt[Zt],Ln=It[Wt.materialIndex];Ln&&Ln.visible&&h.push(B,Mt,Ln,Ie,$.z,Wt)}}else It.visible&&h.push(B,Mt,It,Ie,$.z,null)}}const gt=B.children;for(let Mt=0,It=gt.length;Mt<It;Mt++)an(gt[Mt],me,Ie,pe)}function Hn(B,me,Ie,pe){const _e=B.opaque,gt=B.transmissive,Mt=B.transparent;f.setupLightsView(Ie),O===!0&&H.setGlobalState(g.clippingPlanes,Ie),gt.length>0&&xr(_e,me,Ie),pe&&Ce.viewport(E.copy(pe)),_e.length>0&&Os(_e,me,Ie),gt.length>0&&Os(gt,me,Ie),Mt.length>0&&Os(Mt,me,Ie),Ce.buffers.depth.setTest(!0),Ce.buffers.depth.setMask(!0),Ce.buffers.color.setMask(!0),Ce.setPolygonOffset(!1)}function xr(B,me,Ie){const pe=ve.isWebGL2;A===null&&(A=new gu(1024,1024,{generateMipmaps:!0,type:ye.has("EXT_color_buffer_half_float")?ef:fu,minFilter:qp,samples:pe&&i===!0?4:0}));const _e=g.getRenderTarget();g.setRenderTarget(A),g.clear();const gt=g.toneMapping;g.toneMapping=Qa,Os(B,me,Ie),g.toneMapping=gt,Ze.updateMultisampleRenderTarget(A),Ze.updateRenderTargetMipmap(A),g.setRenderTarget(_e)}function Os(B,me,Ie){const pe=me.isScene===!0?me.overrideMaterial:null;for(let _e=0,gt=B.length;_e<gt;_e++){const Mt=B[_e],It=Mt.object,Dt=Mt.geometry,Zt=pe===null?Mt.material:pe,Ut=Mt.group;It.layers.test(Ie.layers)&&yn(It,me,Ie,Dt,Zt,Ut)}}function yn(B,me,Ie,pe,_e,gt){B.onBeforeRender(g,me,Ie,pe,_e,gt),B.modelViewMatrix.multiplyMatrices(Ie.matrixWorldInverse,B.matrixWorld),B.normalMatrix.getNormalMatrix(B.modelViewMatrix),_e.onBeforeRender(g,me,Ie,pe,B,gt),_e.transparent===!0&&_e.side===Uo&&_e.forceSinglePass===!1?(_e.side=Js,_e.needsUpdate=!0,g.renderBufferDirect(Ie,me,pe,_e,B,gt),_e.side=nl,_e.needsUpdate=!0,g.renderBufferDirect(Ie,me,pe,_e,B,gt),_e.side=Uo):g.renderBufferDirect(Ie,me,pe,_e,B,gt),B.onAfterRender(g,me,Ie,pe,_e,gt)}function rs(B,me,Ie){me.isScene!==!0&&(me=re);const pe=We.get(B),_e=f.state.lights,gt=f.state.shadowsArray,Mt=_e.state.version,It=vt.getParameters(B,_e.state,gt,me,Ie),Dt=vt.getProgramCacheKey(It);let Zt=pe.programs;pe.environment=B.isMeshStandardMaterial?me.environment:null,pe.fog=me.fog,pe.envMap=(B.isMeshStandardMaterial?St:ot).get(B.envMap||pe.environment),Zt===void 0&&(B.addEventListener("dispose",Xt),Zt=new Map,pe.programs=Zt);let Ut=Zt.get(Dt);if(Ut!==void 0){if(pe.currentProgram===Ut&&pe.lightsStateVersion===Mt)return $r(B,It),Ut}else It.uniforms=vt.getUniforms(B),B.onBuild(Ie,It,g),B.onBeforeCompile(It,g),Ut=vt.acquireProgram(It,Dt),Zt.set(Dt,Ut),pe.uniforms=It.uniforms;const Wt=pe.uniforms;(!B.isShaderMaterial&&!B.isRawShaderMaterial||B.clipping===!0)&&(Wt.clippingPlanes=H.uniform),$r(B,It),pe.needsLights=Tv(B),pe.lightsStateVersion=Mt,pe.needsLights&&(Wt.ambientLightColor.value=_e.state.ambient,Wt.lightProbe.value=_e.state.probe,Wt.directionalLights.value=_e.state.directional,Wt.directionalLightShadows.value=_e.state.directionalShadow,Wt.spotLights.value=_e.state.spot,Wt.spotLightShadows.value=_e.state.spotShadow,Wt.rectAreaLights.value=_e.state.rectArea,Wt.ltc_1.value=_e.state.rectAreaLTC1,Wt.ltc_2.value=_e.state.rectAreaLTC2,Wt.pointLights.value=_e.state.point,Wt.pointLightShadows.value=_e.state.pointShadow,Wt.hemisphereLights.value=_e.state.hemi,Wt.directionalShadowMap.value=_e.state.directionalShadowMap,Wt.directionalShadowMatrix.value=_e.state.directionalShadowMatrix,Wt.spotShadowMap.value=_e.state.spotShadowMap,Wt.spotLightMatrix.value=_e.state.spotLightMatrix,Wt.spotLightMap.value=_e.state.spotLightMap,Wt.pointShadowMap.value=_e.state.pointShadowMap,Wt.pointShadowMatrix.value=_e.state.pointShadowMatrix);const Ln=Ut.getUniforms(),Br=r0.seqWithValue(Ln.seq,Wt);return pe.currentProgram=Ut,pe.uniformsList=Br,Ut}function $r(B,me){const Ie=We.get(B);Ie.outputEncoding=me.outputEncoding,Ie.instancing=me.instancing,Ie.skinning=me.skinning,Ie.morphTargets=me.morphTargets,Ie.morphNormals=me.morphNormals,Ie.morphColors=me.morphColors,Ie.morphTargetsCount=me.morphTargetsCount,Ie.numClippingPlanes=me.numClippingPlanes,Ie.numIntersection=me.numClipIntersection,Ie.vertexAlphas=me.vertexAlphas,Ie.vertexTangents=me.vertexTangents,Ie.toneMapping=me.toneMapping}function Vh(B,me,Ie,pe,_e){me.isScene!==!0&&(me=re),Ze.resetTextureUnits();const gt=me.fog,Mt=pe.isMeshStandardMaterial?me.environment:null,It=I===null?g.outputEncoding:I.isXRRenderTarget===!0?I.texture.encoding:mu,Dt=(pe.isMeshStandardMaterial?St:ot).get(pe.envMap||Mt),Zt=pe.vertexColors===!0&&!!Ie.attributes.color&&Ie.attributes.color.itemSize===4,Ut=!!pe.normalMap&&!!Ie.attributes.tangent,Wt=!!Ie.morphAttributes.position,Ln=!!Ie.morphAttributes.normal,Br=!!Ie.morphAttributes.color,ai=pe.toneMapped?g.toneMapping:Qa,Ea=Ie.morphAttributes.position||Ie.morphAttributes.normal||Ie.morphAttributes.color,On=Ea!==void 0?Ea.length:0,ht=We.get(pe),$h=f.state.lights;if(O===!0&&(Q===!0||B!==C)){const bn=B===C&&pe.id===T;H.setState(pe,B,bn)}let Wn=!1;pe.version===ht.__version?(ht.needsLights&&ht.lightsStateVersion!==$h.state.version||ht.outputEncoding!==It||_e.isInstancedMesh&&ht.instancing===!1||!_e.isInstancedMesh&&ht.instancing===!0||_e.isSkinnedMesh&&ht.skinning===!1||!_e.isSkinnedMesh&&ht.skinning===!0||ht.envMap!==Dt||pe.fog===!0&&ht.fog!==gt||ht.numClippingPlanes!==void 0&&(ht.numClippingPlanes!==H.numPlanes||ht.numIntersection!==H.numIntersection)||ht.vertexAlphas!==Zt||ht.vertexTangents!==Ut||ht.morphTargets!==Wt||ht.morphNormals!==Ln||ht.morphColors!==Br||ht.toneMapping!==ai||ve.isWebGL2===!0&&ht.morphTargetsCount!==On)&&(Wn=!0):(Wn=!0,ht.__version=pe.version);let ea=ht.currentProgram;Wn===!0&&(ea=rs(pe,me,_e));let Cl=!1,_l=!1,rc=!1;const er=ea.getUniforms(),vr=ht.uniforms;if(Ce.useProgram(ea.program)&&(Cl=!0,_l=!0,rc=!0),pe.id!==T&&(T=pe.id,_l=!0),Cl||C!==B){if(er.setValue(Y,"projectionMatrix",B.projectionMatrix),ve.logarithmicDepthBuffer&&er.setValue(Y,"logDepthBufFC",2/(Math.log(B.far+1)/Math.LN2)),C!==B&&(C=B,_l=!0,rc=!0),pe.isShaderMaterial||pe.isMeshPhongMaterial||pe.isMeshToonMaterial||pe.isMeshStandardMaterial||pe.envMap){const bn=er.map.cameraPosition;bn!==void 0&&bn.setValue(Y,$.setFromMatrixPosition(B.matrixWorld))}(pe.isMeshPhongMaterial||pe.isMeshToonMaterial||pe.isMeshLambertMaterial||pe.isMeshBasicMaterial||pe.isMeshStandardMaterial||pe.isShaderMaterial)&&er.setValue(Y,"isOrthographic",B.isOrthographicCamera===!0),(pe.isMeshPhongMaterial||pe.isMeshToonMaterial||pe.isMeshLambertMaterial||pe.isMeshBasicMaterial||pe.isMeshStandardMaterial||pe.isShaderMaterial||pe.isShadowMaterial||_e.isSkinnedMesh)&&er.setValue(Y,"viewMatrix",B.matrixWorldInverse)}if(_e.isSkinnedMesh){er.setOptional(Y,_e,"bindMatrix"),er.setOptional(Y,_e,"bindMatrixInverse");const bn=_e.skeleton;bn&&(ve.floatVertexTextures?(bn.boneTexture===null&&bn.computeBoneTexture(),er.setValue(Y,"boneTexture",bn.boneTexture,Ze),er.setValue(Y,"boneTextureSize",bn.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Bh=Ie.morphAttributes;if((Bh.position!==void 0||Bh.normal!==void 0||Bh.color!==void 0&&ve.isWebGL2===!0)&&Pe.update(_e,Ie,ea),(_l||ht.receiveShadow!==_e.receiveShadow)&&(ht.receiveShadow=_e.receiveShadow,er.setValue(Y,"receiveShadow",_e.receiveShadow)),pe.isMeshGouraudMaterial&&pe.envMap!==null&&(vr.envMap.value=Dt,vr.flipEnvMap.value=Dt.isCubeTexture&&Dt.isRenderTargetTexture===!1?-1:1),_l&&(er.setValue(Y,"toneMappingExposure",g.toneMappingExposure),ht.needsLights&&kl(vr,rc),gt&&pe.fog===!0&&Ot.refreshFogUniforms(vr,gt),Ot.refreshMaterialUniforms(vr,pe,X,z,A),r0.upload(Y,ht.uniformsList,vr,Ze)),pe.isShaderMaterial&&pe.uniformsNeedUpdate===!0&&(r0.upload(Y,ht.uniformsList,vr,Ze),pe.uniformsNeedUpdate=!1),pe.isSpriteMaterial&&er.setValue(Y,"center",_e.center),er.setValue(Y,"modelViewMatrix",_e.modelViewMatrix),er.setValue(Y,"normalMatrix",_e.normalMatrix),er.setValue(Y,"modelMatrix",_e.matrixWorld),pe.isShaderMaterial||pe.isRawShaderMaterial){const bn=pe.uniformsGroups;for(let Xh=0,Iv=bn.length;Xh<Iv;Xh++)if(ve.isWebGL2){const mg=bn[Xh];Me.update(mg,ea),Me.bind(mg,ea)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return ea}function kl(B,me){B.ambientLightColor.needsUpdate=me,B.lightProbe.needsUpdate=me,B.directionalLights.needsUpdate=me,B.directionalLightShadows.needsUpdate=me,B.pointLights.needsUpdate=me,B.pointLightShadows.needsUpdate=me,B.spotLights.needsUpdate=me,B.spotLightShadows.needsUpdate=me,B.rectAreaLights.needsUpdate=me,B.hemisphereLights.needsUpdate=me}function Tv(B){return B.isMeshLambertMaterial||B.isMeshToonMaterial||B.isMeshPhongMaterial||B.isMeshStandardMaterial||B.isShadowMaterial||B.isShaderMaterial&&B.lights===!0}this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return w},this.getRenderTarget=function(){return I},this.setRenderTargetTextures=function(B,me,Ie){We.get(B.texture).__webglTexture=me,We.get(B.depthTexture).__webglTexture=Ie;const pe=We.get(B);pe.__hasExternalTextures=!0,pe.__hasExternalTextures&&(pe.__autoAllocateDepthBuffer=Ie===void 0,pe.__autoAllocateDepthBuffer||ye.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),pe.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(B,me){const Ie=We.get(B);Ie.__webglFramebuffer=me,Ie.__useDefaultFramebuffer=me===void 0},this.setRenderTarget=function(B,me=0,Ie=0){I=B,v=me,w=Ie;let pe=!0,_e=null,gt=!1,Mt=!1;if(B){const Dt=We.get(B);Dt.__useDefaultFramebuffer!==void 0?(Ce.bindFramebuffer(36160,null),pe=!1):Dt.__webglFramebuffer===void 0?Ze.setupRenderTarget(B):Dt.__hasExternalTextures&&Ze.rebindTextures(B,We.get(B.texture).__webglTexture,We.get(B.depthTexture).__webglTexture);const Zt=B.texture;(Zt.isData3DTexture||Zt.isDataArrayTexture||Zt.isCompressedArrayTexture)&&(Mt=!0);const Ut=We.get(B).__webglFramebuffer;B.isWebGLCubeRenderTarget?(_e=Ut[me],gt=!0):ve.isWebGL2&&B.samples>0&&Ze.useMultisampledRTT(B)===!1?_e=We.get(B).__webglMultisampledFramebuffer:_e=Ut,E.copy(B.viewport),L.copy(B.scissor),M=B.scissorTest}else E.copy(V).multiplyScalar(X).floor(),L.copy(Z).multiplyScalar(X).floor(),M=J;if(Ce.bindFramebuffer(36160,_e)&&ve.drawBuffers&&pe&&Ce.drawBuffers(B,_e),Ce.viewport(E),Ce.scissor(L),Ce.setScissorTest(M),gt){const Dt=We.get(B.texture);Y.framebufferTexture2D(36160,36064,34069+me,Dt.__webglTexture,Ie)}else if(Mt){const Dt=We.get(B.texture),Zt=me||0;Y.framebufferTextureLayer(36160,36064,Dt.__webglTexture,Ie||0,Zt)}T=-1},this.readRenderTargetPixels=function(B,me,Ie,pe,_e,gt,Mt){if(!(B&&B.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let It=We.get(B).__webglFramebuffer;if(B.isWebGLCubeRenderTarget&&Mt!==void 0&&(It=It[Mt]),It){Ce.bindFramebuffer(36160,It);try{const Dt=B.texture,Zt=Dt.format,Ut=Dt.type;if(Zt!==Wi&&rt.convert(Zt)!==Y.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Wt=Ut===ef&&(ye.has("EXT_color_buffer_half_float")||ve.isWebGL2&&ye.has("EXT_color_buffer_float"));if(Ut!==fu&&rt.convert(Ut)!==Y.getParameter(35738)&&!(Ut===ru&&(ve.isWebGL2||ye.has("OES_texture_float")||ye.has("WEBGL_color_buffer_float")))&&!Wt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}me>=0&&me<=B.width-pe&&Ie>=0&&Ie<=B.height-_e&&Y.readPixels(me,Ie,pe,_e,rt.convert(Zt),rt.convert(Ut),gt)}finally{const Dt=I!==null?We.get(I).__webglFramebuffer:null;Ce.bindFramebuffer(36160,Dt)}}},this.copyFramebufferToTexture=function(B,me,Ie=0){const pe=Math.pow(2,-Ie),_e=Math.floor(me.image.width*pe),gt=Math.floor(me.image.height*pe);Ze.setTexture2D(me,0),Y.copyTexSubImage2D(3553,Ie,0,0,B.x,B.y,_e,gt),Ce.unbindTexture()},this.copyTextureToTexture=function(B,me,Ie,pe=0){const _e=me.image.width,gt=me.image.height,Mt=rt.convert(Ie.format),It=rt.convert(Ie.type);Ze.setTexture2D(Ie,0),Y.pixelStorei(37440,Ie.flipY),Y.pixelStorei(37441,Ie.premultiplyAlpha),Y.pixelStorei(3317,Ie.unpackAlignment),me.isDataTexture?Y.texSubImage2D(3553,pe,B.x,B.y,_e,gt,Mt,It,me.image.data):me.isCompressedTexture?Y.compressedTexSubImage2D(3553,pe,B.x,B.y,me.mipmaps[0].width,me.mipmaps[0].height,Mt,me.mipmaps[0].data):Y.texSubImage2D(3553,pe,B.x,B.y,Mt,It,me.image),pe===0&&Ie.generateMipmaps&&Y.generateMipmap(3553),Ce.unbindTexture()},this.copyTextureToTexture3D=function(B,me,Ie,pe,_e=0){if(g.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const gt=B.max.x-B.min.x+1,Mt=B.max.y-B.min.y+1,It=B.max.z-B.min.z+1,Dt=rt.convert(pe.format),Zt=rt.convert(pe.type);let Ut;if(pe.isData3DTexture)Ze.setTexture3D(pe,0),Ut=32879;else if(pe.isDataArrayTexture)Ze.setTexture2DArray(pe,0),Ut=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}Y.pixelStorei(37440,pe.flipY),Y.pixelStorei(37441,pe.premultiplyAlpha),Y.pixelStorei(3317,pe.unpackAlignment);const Wt=Y.getParameter(3314),Ln=Y.getParameter(32878),Br=Y.getParameter(3316),ai=Y.getParameter(3315),Ea=Y.getParameter(32877),On=Ie.isCompressedTexture?Ie.mipmaps[0]:Ie.image;Y.pixelStorei(3314,On.width),Y.pixelStorei(32878,On.height),Y.pixelStorei(3316,B.min.x),Y.pixelStorei(3315,B.min.y),Y.pixelStorei(32877,B.min.z),Ie.isDataTexture||Ie.isData3DTexture?Y.texSubImage3D(Ut,_e,me.x,me.y,me.z,gt,Mt,It,Dt,Zt,On.data):Ie.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Y.compressedTexSubImage3D(Ut,_e,me.x,me.y,me.z,gt,Mt,It,Dt,On.data)):Y.texSubImage3D(Ut,_e,me.x,me.y,me.z,gt,Mt,It,Dt,Zt,On),Y.pixelStorei(3314,Wt),Y.pixelStorei(32878,Ln),Y.pixelStorei(3316,Br),Y.pixelStorei(3315,ai),Y.pixelStorei(32877,Ea),_e===0&&pe.generateMipmaps&&Y.generateMipmap(Ut),Ce.unbindTexture()},this.initTexture=function(B){B.isCubeTexture?Ze.setTextureCube(B,0):B.isData3DTexture?Ze.setTexture3D(B,0):B.isDataArrayTexture||B.isCompressedArrayTexture?Ze.setTexture2DArray(B,0):Ze.setTexture2D(B,0),Ce.unbindTexture()},this.resetState=function(){v=0,w=0,I=null,Ce.reset(),Ke.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}Object.defineProperties(A2.prototype,{physicallyCorrectLights:{get:function(){return console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights},set:function(n){console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!n}}});class _5 extends A2{}_5.prototype.isWebGL1Renderer=!0;class PE extends ei{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:N2}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=N2);const FE=(n,e)=>{const t=2*Math.PI*e*n;return t/(t+1)},GE=(n,e,t)=>n*e+(1-n)*t;class M5{constructor({minCutOff:e,beta:t}){this.minCutOff=e,this.beta=t,this.dCutOff=.001,this.xPrev=null,this.dxPrev=null,this.tPrev=null,this.initialized=!1}reset(){this.initialized=!1}filter(e,t){if(!this.initialized)return this.initialized=!0,this.xPrev=t,this.dxPrev=t.map(()=>0),this.tPrev=e,t;const{xPrev:r,tPrev:s,dxPrev:i}=this,a=e-s,o=FE(a,this.dCutOff),l=[],u=[],d=[];for(let h=0;h<t.length;h++){l[h]=(t[h]-r[h])/a,u[h]=GE(o,l[h],i[h]);const f=this.minCutOff+this.beta*Math.abs(u[h]),m=FE(a,f);d[h]=GE(m,t[h],r[h])}return this.xPrev=d,this.dxPrev=u,this.tPrev=e,d}}const N5=`<div class="mindar-ui-overlay mindar-ui-loading">
  <div class="loader"/>
</div>
`,E5=`<div class="mindar-ui-overlay mindar-ui-compatibility">
  <div class="content">
    <h1>Failed to launch :(</h1>
    <p>
      Looks like your device/browser is not compatible.
    </p>

    <br/>
    <br/>
    <p>
      Please try the following recommended browsers:
    </p>
    <p>
      For Android device - Chrome
    </p>
    <p>
      For iOS device - Safari
    </p>
  </div>
</div>
`,R5=`<div class="mindar-ui-overlay mindar-ui-scanning">
  <div class="scanning">
    <div class="inner">
      <div class="scanline"/>
    </div>
  </div>
</div>
`,L5=".mindar-ui-overlay{display:flex;align-items:center;justify-content:center;position:absolute;left:0;right:0;top:0;bottom:0;background:transparent;z-index:2}.mindar-ui-overlay.hidden{display:none}.mindar-ui-loading .loader{border:16px solid #222;border-top:16px solid white;opacity:.8;border-radius:50%;width:120px;height:120px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}.mindar-ui-compatibility .content{background:black;color:#fff;opacity:.8;text-align:center;margin:20px;padding:20px;min-height:50vh}@media (min-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:50vh;height:50vh}}@media (max-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:80vw;height:80vw}}.mindar-ui-scanning .scanning .inner{position:relative;width:100%;height:100%;opacity:.8;background:linear-gradient(to right,white 10px,transparent 10px) 0 0,linear-gradient(to right,white 10px,transparent 10px) 0 100%,linear-gradient(to left,white 10px,transparent 10px) 100% 0,linear-gradient(to left,white 10px,transparent 10px) 100% 100%,linear-gradient(to bottom,white 10px,transparent 10px) 0 0,linear-gradient(to bottom,white 10px,transparent 10px) 100% 0,linear-gradient(to top,white 10px,transparent 10px) 0 100%,linear-gradient(to top,white 10px,transparent 10px) 100% 100%;background-repeat:no-repeat;background-size:40px 40px}.mindar-ui-scanning .scanning .inner .scanline{position:absolute;width:100%;height:10px;background:white;animation:move 2s linear infinite}@keyframes move{0%,to{top:0%}50%{top:calc(100% - 10px)}}";class A5{constructor({uiLoading:e,uiScanning:t,uiError:r}){const s=document.createElement("style");s.innerText=L5,document.head.appendChild(s),e==="yes"?this.loadingModal=this._loadHTML(N5):e!=="no"&&(this.loadingModal=document.querySelector(e)),r==="yes"?this.compatibilityModal=this._loadHTML(E5):r!=="no"&&(this.compatibilityModal=document.querySelector(r)),t==="yes"?this.scanningMask=this._loadHTML(R5):t!=="no"&&(this.scanningMask=document.querySelector(t)),this.hideLoading(),this.hideCompatibility(),this.hideScanning()}showLoading(){this.loadingModal&&this.loadingModal.classList.remove("hidden")}hideLoading(){this.loadingModal&&this.loadingModal.classList.add("hidden")}showCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.remove("hidden")}hideCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.add("hidden")}showScanning(){this.scanningMask&&this.scanningMask.classList.remove("hidden")}hideScanning(){this.scanningMask&&this.scanningMask.classList.add("hidden")}_loadHTML(e){const t=document.createElement("template");t.innerHTML=e.trim();const r=t.content.firstChild;return document.getElementsByTagName("body")[0].appendChild(r),r}}var z2={};function z5(n,e){for(var t=0;t<e.length;t++){const r=e[t];if(typeof r!="string"&&!Array.isArray(r)){for(const s in r)if(s!=="default"&&!(s in n)){const i=Object.getOwnPropertyDescriptor(r,s);i&&Object.defineProperty(n,s,i.get?i:{enumerable:!0,get:()=>r[s]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D5=1e-7,P5=1e-4;let D2=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}};class q0{refCount(e){return _s("refCount")}incRef(e){return _s("incRef")}timerAvailable(){return!0}time(e){return _s("time")}read(e){return _s("read")}readSync(e){return _s("readSync")}readToGPU(e,t){return _s("readToGPU")}numDataIds(){return _s("numDataIds")}disposeData(e,t){return _s("disposeData")}write(e,t,r){return _s("write")}move(e,t,r,s,i){return _s("move")}createTensorFromGPUData(e,t,r){return _s("createTensorFromGPUData")}memory(){return _s("memory")}floatPrecision(){return _s("floatPrecision")}epsilon(){return this.floatPrecision()===32?D5:P5}dispose(){return _s("dispose")}}function _s(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P2(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,Ka(n,e,t)}function F5(n,e){if(n.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${n.length}Second array length was ${e.length}`);let t=n.length,r=0;for(;t>0;)r=Math.random()*t|0,t--,Ka(n,t,r),Ka(e,t,r)}function rl(n,e,t){return Math.max(n,Math.min(e,t))}function eb(n){return n%2===0?n:n+1}function Ka(n,e,t){const r=n[e];n[e]=n[t],n[t]=r}function iL(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function G5(n,e){const t=Math.random();return e*t+(1-t)*n}function O5(n,e){let t=0;for(let r=0;r<n.length;r++){const s=Number(n[r])-Number(e[r]);t+=s*s}return t}function P(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function Lr(n,e,t=""){P(Ft(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function Gu(n){P(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function be(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function W5(n){return n.length===0}function aL(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==null&&e[t]!==null&&n[t]!==e[t])return!1;return!0}function Ft(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function bu(n){return n%1===0}function V5(n){if(Math.tanh!=null)return Math.tanh(n);if(n===1/0)return 1;if(n===-1/0)return-1;{const e=Math.exp(2*n);return(e-1)/(e+1)}}function f0(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function $5(n){const e=new Uint32Array(n);for(let t=0;t<n;++t)e[t]=t;return P2(e),e}function uu(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function NS(n,e=s=>0,t,r){return new Promise((s,i)=>{let a=0;const o=()=>{if(n()){s();return}a++;const l=e(a);if(t!=null&&a>=t){i();return}r!=null?r(o,l):setTimeout(o,l)};o()})}function F2(n,e){let t=1,r=-1;for(let i=0;i<n.length;++i)if(n[i]>=0)t*=n[i];else if(n[i]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${i}`);r=i}else if(n[i]<0)throw Error(`Shapes can not be < 0. Found ${n[i]} at dim ${i}`);if(r===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const s=n.slice();return s[r]=e/t,s}function At(n,e){const t=e.length;return n=n==null?e.map((r,s)=>s):[].concat(n),P(n.every(r=>r>=-t&&r<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),P(n.every(r=>bu(r)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(r=>r<0?t+r:r)}function lo(n,e){const t=[],r=[],s=e!=null&&Array.isArray(e)&&e.length===0,i=e==null||s?null:At(e,n).sort();let a=0;for(let o=0;o<n.length;++o){if(i!=null){if(i[a]===o&&n[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${n[o]}' is not 1`);(i[a]==null||i[a]>o)&&n[o]===1&&(t.push(n[o]),r.push(o)),i[a]<=o&&a++}n[o]!==1&&(t.push(n[o]),r.push(o))}return{newShape:t,keptDims:r}}function mr(n,e){return Dn(n,e)}function Dn(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function oL(n,e){for(let t=0;t<n.length;t++){const r=n[t];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function lL(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function G2(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function nf(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function uL(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function ma(n){return typeof n=="string"||n instanceof String}function cL(n){return typeof n=="boolean"}function m0(n){return typeof n=="number"}function Ou(n){return Array.isArray(n)?Ou(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":m0(n)?"float32":ma(n)?"string":cL(n)?"bool":"float32"}function sl(n){return!!(n&&n.constructor&&n.call&&n.apply)}function g0(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function ut(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let r=e-3;r>=0;--r)t[r]=t[r+1]*n[r+1];return t}function dL(n,e,t,r=!1){const s=new Array;if(e.length===1){const i=e[0]*(r?2:1);for(let a=0;a<i;a++)s[a]=t[n+a]}else{const i=e[0],a=e.slice(1),o=a.reduce((l,u)=>l*u)*(r?2:1);for(let l=0;l<i;l++)s[l]=dL(n+l*o,a,t,r)}return s}function ti(n,e,t=!1){if(n.length===0)return e[0];const r=n.reduce((s,i)=>s*i)*(t?2:1);if(r===0)return[];if(r!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return dL(0,n,e,t)}function hL(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function tb(n,e){const t=Er(n,e);for(let r=0;r<t.length;r++)t[r]=1;return t}function Er(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function O2(n,e){const t=n.reduce((r,s)=>r*s,1);if(e==null||e==="float32")return ti(n,new Float32Array(t));if(e==="int32")return ti(n,new Int32Array(t));if(e==="bool")return ti(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function Fs(n){n.forEach(e=>{P(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Vi(n,e,t){if(e===0)return 0;if(e===1)return n[0];let r=n[n.length-1];for(let s=0;s<n.length-1;++s)r+=t[s]*n[s];return r}function Wu(n,e,t){if(e===0)return[];if(e===1)return[n];const r=new Array(e);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(n/t[s]),n-=r[s]*t[s];return r[r.length-1]=n,r}function qa(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OE="tfjsflags";class pL{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=B5,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(de().getBool("IS_TEST")||de().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,r){if(this.flagRegistry[e]={evaluationFn:t,setHook:r},this.urlFlags[e]!=null){const s=this.urlFlags[e];de().getBool("IS_TEST")||de().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(qa(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);OE in e&&e[OE].split(",").forEach(t=>{const[r,s]=t.split(":");this.urlFlags[r]=U5(r,s)})}}function B5(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...r)=>(X5(e,r[0],r[1]),r.join("="))),e}function X5(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function U5(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function de(){return W2}let W2=null;function Z5(n){W2=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Vw;function fL(){if(Vw==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");Vw=n}return Vw}function H5(){const n=fL();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function V2(n,e){const t=H5();if(t.has(n))return t.get(n);{const r=e();return t.set(n,r),t.get(n)}}const Cf="Abs",Td="Acos",Id="Acosh",Vu="Add",_f="AddN",nb="All",rb="Any",Mf="ArgMax",Nf="ArgMin",kd="Asin",Cd="Asinh",_d="Atan",Md="Atanh",Nd="Atan2",Ef="AvgPool",sb="AvgPoolGrad",Rf="AvgPool3D",ib="AvgPool3DGrad",Lf="BatchMatMul",Af="BatchToSpaceND",ab="Bincount",zf="BitwiseAnd",mL="BroadcastTo",ob="BroadcastArgs",Ed="Cast",Rd="Ceil",Ld="ClipByValue",lb="Complex",Df="ComplexAbs",Pf="Concat",Ff="Conv2D",ub="Conv2DBackpropFilter",Gf="Conv2DBackpropInput",Of="Conv3D",cb="Conv3DBackpropFilterV2",db="Conv3DBackpropInputV2",Ad="Cos",zd="Cosh",hb="Cumprod",Wf="Cumsum",pb="CropAndResize",fb="DenseBincount",mb="DepthToSpace",Vf="DepthwiseConv2dNative",gb="DepthwiseConv2dNativeBackpropFilter",yb="DepthwiseConv2dNativeBackpropInput",bb="Diag",$f="Dilation2D",y0="Dilation2DBackpropInput",b0="Dilation2DBackpropFilter",xb="Draw",Dd="RealDiv",vb="Einsum",Pd="Elu",wb="EluGrad",Fd="Erf",Bf="Equal",Gd="Exp",Xf="ExpandDims",Od="Expm1",Sb="FFT",Tb="Fill",Ib="FlipLeftRight",Wd="Floor",Vd="FloorDiv",Uf="FusedBatchNorm",Zf="GatherV2",kb="GatherNd",Hf="Greater",$d="GreaterEqual",Bd="Identity",Cb="IFFT",_b="Imag",Xd="IsFinite",Ud="IsInf",Zd="IsNan",Kf="LeakyRelu",Yf="Less",jf="LessEqual",Mb="LinSpace",Hd="Log",Kd="Log1p",Qf="LogicalAnd",Jf="LogicalNot",qf="LogicalOr",K5="LogicalXor",gL="LogSoftmax",Y5="LowerBound",em="LRN",Nb="LRNGrad",j5="MatrixBandPart",tm="Max",Yd="Maximum",nm="MaxPool",Eb="MaxPoolGrad",rm="MaxPool3D",Rb="MaxPool3DGrad",Lb="MaxPoolWithArgmax",sm="Mean",im="Min",jd="Minimum",am="MirrorPad",Qd="Mod",Ab="Multinomial",Jd="Multiply",om="Neg",lm="NotEqual",zb="NonMaxSuppressionV3",Db="NonMaxSuppressionV4",Pb="NonMaxSuppressionV5",um="OnesLike",cm="OneHot",dm="Pack",hm="PadV2",Q5="Pool",qd="Pow",pm="Prelu",fm="Prod",Fb="RaggedGather",Gb="RaggedRange",Ob="RaggedTensorToTensor",Wb="Range",Vb="Real",eh="Reciprocal",th="Relu",mm="Reshape",gm="ResizeNearestNeighbor",$b="ResizeNearestNeighborGrad",ym="ResizeBilinear",Bb="ResizeBilinearGrad",nh="Relu6",bm="Reverse",rh="Round",sh="Rsqrt",Xb="ScatterNd",Ub="TensorScatterUpdate",Zb="SearchSorted",xm="Select",ih="Selu",vm="Slice",ah="Sin",oh="Sinh",lh="Sign",uh="Sigmoid",ch="Softplus",dh="Sqrt",wm="Sum",Sm="SpaceToBatchND",Tm="SplitV",Im="Softmax",Hb="SparseFillEmptyRows",Kb="SparseReshape",Yb="SparseSegmentMean",jb="SparseSegmentSum",Qb="SparseToDense",hh="SquaredDifference",Jb="Square",km="StaticRegexReplace",qb="StridedSlice",ex="StringNGrams",tx="StringSplit",nx="StringToHashBucketFast",ph="Sub",fh="Tan",mh="Tanh",gh="Tile",rx="TopK",sx="Transform",cu="Transpose",ix="Unique",Cm="Unpack",_m="UnsortedSegmentSum",J5="UpperBound",Mm="ZerosLike",yh="Step",x0="FromPixels",ax="RotateWithOffset",rf="_FusedMatMul",sf="FusedConv2D",af="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ks(...n){de().getBool("IS_TEST")||de().getBool("PROD")||console.warn(...n)}function q5(...n){de().getBool("IS_TEST")||de().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ad=V2("kernelRegistry",()=>new Map),of=V2("gradRegistry",()=>new Map);function lf(n,e){const t=$2(n,e);return ad.get(t)}function ES(n){return of.get(n)}function v0(n){const e=ad.entries(),t=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[i,a]=s,[o]=i.split("_");o===n&&t.push(a)}return t}function xs(n){const{kernelName:e,backendName:t}=n,r=$2(e,t);ad.has(r)&&Ks(`The kernel '${e}' for backend '${t}' is already registered`),ad.set(r,n)}function yL(n){const{kernelName:e}=n;of.has(e)&&de().getBool("DEBUG")&&Ks(`Overriding the gradient for '${e}'`),of.set(e,n)}function eZ(n,e){const t=$2(n,e);if(!ad.has(t))throw new Error(`The kernel '${n}' for backend '${e}' is not registered`);ad.delete(t)}function tZ(n){if(!of.has(n))throw new Error(`The gradient '${n}' for backend is not registered`);of.delete(n)}function nZ(n,e){v0(n).forEach(t=>{const r=Object.assign({},t,{backendName:e});xs(r)})}function $2(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bL(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var $u=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function rZ(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function sZ(n){if(n.__esModule)return n;var e=n.default;if(typeof e=="function"){var t=function r(){return this instanceof r?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(r){var s=Object.getOwnPropertyDescriptor(n,r);Object.defineProperty(t,r,s.get?s:{enumerable:!0,get:function(){return n[r]}})}),t}var xL=mn,xi=null;try{xi=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function mn(n,e,t){this.low=n|0,this.high=e|0,this.unsigned=!!t}mn.prototype.__isLong__;Object.defineProperty(mn.prototype,"__isLong__",{value:!0});function Gs(n){return(n&&n.__isLong__)===!0}mn.isLong=Gs;var WE={},VE={};function Bu(n,e){var t,r,s;return e?(n>>>=0,(s=0<=n&&n<256)&&(r=VE[n],r)?r:(t=gn(n,(n|0)<0?-1:0,!0),s&&(VE[n]=t),t)):(n|=0,(s=-128<=n&&n<128)&&(r=WE[n],r)?r:(t=gn(n,n<0?-1:0,!1),s&&(WE[n]=t),t))}mn.fromInt=Bu;function vi(n,e){if(isNaN(n))return e?su:wi;if(e){if(n<0)return su;if(n>=vL)return TL}else{if(n<=-BE)return Ls;if(n+1>=BE)return SL}return n<0?vi(-n,e).neg():gn(n%od|0,n/od|0,e)}mn.fromNumber=vi;function gn(n,e,t){return new mn(n,e,t)}mn.fromBits=gn;var w0=Math.pow;function B2(n,e,t){if(n.length===0)throw Error("empty string");if(n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return wi;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var r;if((r=n.indexOf("-"))>0)throw Error("interior hyphen");if(r===0)return B2(n.substring(1),e,t).neg();for(var s=vi(w0(t,8)),i=wi,a=0;a<n.length;a+=8){var o=Math.min(8,n.length-a),l=parseInt(n.substring(a,a+o),t);if(o<8){var u=vi(w0(t,o));i=i.mul(u).add(vi(l))}else i=i.mul(s),i=i.add(vi(l))}return i.unsigned=e,i}mn.fromString=B2;function Yi(n,e){return typeof n=="number"?vi(n,e):typeof n=="string"?B2(n,e):gn(n.low,n.high,typeof e=="boolean"?e:n.unsigned)}mn.fromValue=Yi;var $E=65536,iZ=1<<24,od=$E*$E,vL=od*od,BE=vL/2,XE=Bu(iZ),wi=Bu(0);mn.ZERO=wi;var su=Bu(0,!0);mn.UZERO=su;var Kc=Bu(1);mn.ONE=Kc;var wL=Bu(1,!0);mn.UONE=wL;var RS=Bu(-1);mn.NEG_ONE=RS;var SL=gn(-1,2147483647,!1);mn.MAX_VALUE=SL;var TL=gn(-1,-1,!0);mn.MAX_UNSIGNED_VALUE=TL;var Ls=gn(0,-2147483648,!1);mn.MIN_VALUE=Ls;var Xe=mn.prototype;Xe.toInt=function(){return this.unsigned?this.low>>>0:this.low};Xe.toNumber=function(){return this.unsigned?(this.high>>>0)*od+(this.low>>>0):this.high*od+(this.low>>>0)};Xe.toString=function(n){if(n=n||10,n<2||36<n)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(Ls)){var e=vi(n),t=this.div(e),r=t.mul(e).sub(this);return t.toString(n)+r.toInt().toString(n)}else return"-"+this.neg().toString(n);for(var s=vi(w0(n,6),this.unsigned),i=this,a="";;){var o=i.div(s),l=i.sub(o.mul(s)).toInt()>>>0,u=l.toString(n);if(i=o,i.isZero())return u+a;for(;u.length<6;)u="0"+u;a=""+u+a}};Xe.getHighBits=function(){return this.high};Xe.getHighBitsUnsigned=function(){return this.high>>>0};Xe.getLowBits=function(){return this.low};Xe.getLowBitsUnsigned=function(){return this.low>>>0};Xe.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Ls)?64:this.neg().getNumBitsAbs();for(var n=this.high!=0?this.high:this.low,e=31;e>0&&!(n&1<<e);e--);return this.high!=0?e+33:e+1};Xe.isZero=function(){return this.high===0&&this.low===0};Xe.eqz=Xe.isZero;Xe.isNegative=function(){return!this.unsigned&&this.high<0};Xe.isPositive=function(){return this.unsigned||this.high>=0};Xe.isOdd=function(){return(this.low&1)===1};Xe.isEven=function(){return(this.low&1)===0};Xe.equals=function(n){return Gs(n)||(n=Yi(n)),this.unsigned!==n.unsigned&&this.high>>>31===1&&n.high>>>31===1?!1:this.high===n.high&&this.low===n.low};Xe.eq=Xe.equals;Xe.notEquals=function(n){return!this.eq(n)};Xe.neq=Xe.notEquals;Xe.ne=Xe.notEquals;Xe.lessThan=function(n){return this.comp(n)<0};Xe.lt=Xe.lessThan;Xe.lessThanOrEqual=function(n){return this.comp(n)<=0};Xe.lte=Xe.lessThanOrEqual;Xe.le=Xe.lessThanOrEqual;Xe.greaterThan=function(n){return this.comp(n)>0};Xe.gt=Xe.greaterThan;Xe.greaterThanOrEqual=function(n){return this.comp(n)>=0};Xe.gte=Xe.greaterThanOrEqual;Xe.ge=Xe.greaterThanOrEqual;Xe.compare=function(n){if(Gs(n)||(n=Yi(n)),this.eq(n))return 0;var e=this.isNegative(),t=n.isNegative();return e&&!t?-1:!e&&t?1:this.unsigned?n.high>>>0>this.high>>>0||n.high===this.high&&n.low>>>0>this.low>>>0?-1:1:this.sub(n).isNegative()?-1:1};Xe.comp=Xe.compare;Xe.negate=function(){return!this.unsigned&&this.eq(Ls)?Ls:this.not().add(Kc)};Xe.neg=Xe.negate;Xe.add=function(n){Gs(n)||(n=Yi(n));var e=this.high>>>16,t=this.high&65535,r=this.low>>>16,s=this.low&65535,i=n.high>>>16,a=n.high&65535,o=n.low>>>16,l=n.low&65535,u=0,d=0,h=0,f=0;return f+=s+l,h+=f>>>16,f&=65535,h+=r+o,d+=h>>>16,h&=65535,d+=t+a,u+=d>>>16,d&=65535,u+=e+i,u&=65535,gn(h<<16|f,u<<16|d,this.unsigned)};Xe.subtract=function(n){return Gs(n)||(n=Yi(n)),this.add(n.neg())};Xe.sub=Xe.subtract;Xe.multiply=function(n){if(this.isZero())return wi;if(Gs(n)||(n=Yi(n)),xi){var e=xi.mul(this.low,this.high,n.low,n.high);return gn(e,xi.get_high(),this.unsigned)}if(n.isZero())return wi;if(this.eq(Ls))return n.isOdd()?Ls:wi;if(n.eq(Ls))return this.isOdd()?Ls:wi;if(this.isNegative())return n.isNegative()?this.neg().mul(n.neg()):this.neg().mul(n).neg();if(n.isNegative())return this.mul(n.neg()).neg();if(this.lt(XE)&&n.lt(XE))return vi(this.toNumber()*n.toNumber(),this.unsigned);var t=this.high>>>16,r=this.high&65535,s=this.low>>>16,i=this.low&65535,a=n.high>>>16,o=n.high&65535,l=n.low>>>16,u=n.low&65535,d=0,h=0,f=0,m=0;return m+=i*u,f+=m>>>16,m&=65535,f+=s*u,h+=f>>>16,f&=65535,f+=i*l,h+=f>>>16,f&=65535,h+=r*u,d+=h>>>16,h&=65535,h+=s*l,d+=h>>>16,h&=65535,h+=i*o,d+=h>>>16,h&=65535,d+=t*u+r*l+s*o+i*a,d&=65535,gn(f<<16|m,d<<16|h,this.unsigned)};Xe.mul=Xe.multiply;Xe.divide=function(n){if(Gs(n)||(n=Yi(n)),n.isZero())throw Error("division by zero");if(xi){if(!this.unsigned&&this.high===-2147483648&&n.low===-1&&n.high===-1)return this;var e=(this.unsigned?xi.div_u:xi.div_s)(this.low,this.high,n.low,n.high);return gn(e,xi.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?su:wi;var t,r,s;if(this.unsigned){if(n.unsigned||(n=n.toUnsigned()),n.gt(this))return su;if(n.gt(this.shru(1)))return wL;s=su}else{if(this.eq(Ls)){if(n.eq(Kc)||n.eq(RS))return Ls;if(n.eq(Ls))return Kc;var i=this.shr(1);return t=i.div(n).shl(1),t.eq(wi)?n.isNegative()?Kc:RS:(r=this.sub(n.mul(t)),s=t.add(r.div(n)),s)}else if(n.eq(Ls))return this.unsigned?su:wi;if(this.isNegative())return n.isNegative()?this.neg().div(n.neg()):this.neg().div(n).neg();if(n.isNegative())return this.div(n.neg()).neg();s=wi}for(r=this;r.gte(n);){t=Math.max(1,Math.floor(r.toNumber()/n.toNumber()));for(var a=Math.ceil(Math.log(t)/Math.LN2),o=a<=48?1:w0(2,a-48),l=vi(t),u=l.mul(n);u.isNegative()||u.gt(r);)t-=o,l=vi(t,this.unsigned),u=l.mul(n);l.isZero()&&(l=Kc),s=s.add(l),r=r.sub(u)}return s};Xe.div=Xe.divide;Xe.modulo=function(n){if(Gs(n)||(n=Yi(n)),xi){var e=(this.unsigned?xi.rem_u:xi.rem_s)(this.low,this.high,n.low,n.high);return gn(e,xi.get_high(),this.unsigned)}return this.sub(this.div(n).mul(n))};Xe.mod=Xe.modulo;Xe.rem=Xe.modulo;Xe.not=function(){return gn(~this.low,~this.high,this.unsigned)};Xe.and=function(n){return Gs(n)||(n=Yi(n)),gn(this.low&n.low,this.high&n.high,this.unsigned)};Xe.or=function(n){return Gs(n)||(n=Yi(n)),gn(this.low|n.low,this.high|n.high,this.unsigned)};Xe.xor=function(n){return Gs(n)||(n=Yi(n)),gn(this.low^n.low,this.high^n.high,this.unsigned)};Xe.shiftLeft=function(n){return Gs(n)&&(n=n.toInt()),(n&=63)===0?this:n<32?gn(this.low<<n,this.high<<n|this.low>>>32-n,this.unsigned):gn(0,this.low<<n-32,this.unsigned)};Xe.shl=Xe.shiftLeft;Xe.shiftRight=function(n){return Gs(n)&&(n=n.toInt()),(n&=63)===0?this:n<32?gn(this.low>>>n|this.high<<32-n,this.high>>n,this.unsigned):gn(this.high>>n-32,this.high>=0?0:-1,this.unsigned)};Xe.shr=Xe.shiftRight;Xe.shiftRightUnsigned=function(n){if(Gs(n)&&(n=n.toInt()),n&=63,n===0)return this;var e=this.high;if(n<32){var t=this.low;return gn(t>>>n|e<<32-n,e>>>n,this.unsigned)}else return n===32?gn(e,0,this.unsigned):gn(e>>>n-32,0,this.unsigned)};Xe.shru=Xe.shiftRightUnsigned;Xe.shr_u=Xe.shiftRightUnsigned;Xe.toSigned=function(){return this.unsigned?gn(this.low,this.high,!1):this};Xe.toUnsigned=function(){return this.unsigned?this:gn(this.low,this.high,!0)};Xe.toBytes=function(n){return n?this.toBytesLE():this.toBytesBE()};Xe.toBytesLE=function(){var n=this.high,e=this.low;return[e&255,e>>>8&255,e>>>16&255,e>>>24,n&255,n>>>8&255,n>>>16&255,n>>>24]};Xe.toBytesBE=function(){var n=this.high,e=this.low;return[n>>>24,n>>>16&255,n>>>8&255,n&255,e>>>24,e>>>16&255,e>>>8&255,e&255]};mn.fromBytes=function(n,e,t){return t?mn.fromBytesLE(n,e):mn.fromBytesBE(n,e)};mn.fromBytesLE=function(n,e){return new mn(n[0]|n[1]<<8|n[2]<<16|n[3]<<24,n[4]|n[5]<<8|n[6]<<16|n[7]<<24,e)};mn.fromBytesBE=function(n,e){return new mn(n[4]<<24|n[5]<<16|n[6]<<8|n[7],n[0]<<24|n[1]<<16|n[2]<<8|n[3],e)};const IL=rZ(xL),aZ=z5({__proto__:null,default:IL},[xL]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jl=IL||aZ;function Nm(n){return jl.fromString(n,!0,16)}const kL=Nm("c3a5c85c97cb3127"),Hl=Nm("b492b66fbe98f273"),jr=Nm("9ae16a3b2f90404f");function LS(n){return n.xor(n.shru(47))}function CL(n,e,t){const r=n.slice(e,e+t);return jl.fromBytes(Array.from(r),!0,!0)}function cn(n,e){return CL(n,e,8)}function UE(n,e){return CL(n,e,4)}function cr(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function Jo(n,e,t=Nm("9ddfea08eb382d69")){let r=n.xor(e).mul(t);r=r.xor(r.shru(47));let s=e.xor(r).mul(t);return s=s.xor(s.shru(47)),s=s.mul(t),s}function oZ(n,e,t,r,s,i){s=s.add(n),i=cr(i.add(s).add(r),21);const a=s;return s=s.add(e),s=s.add(t),i=i.add(cr(s,44)),[s.add(r),i.add(a)]}function Oy(n,e,t,r){return oZ(cn(n,e),cn(n,e+8),cn(n,e+16),cn(n,e+24),t,r)}function lZ(n,e=n.length){if(e>=8){const t=jr.add(e*2),r=cn(n,0).add(jr),s=cn(n,e-8),i=cr(s,37).mul(t).add(r),a=cr(r,25).add(s).mul(t);return Jo(i,a,t)}if(e>=4){const t=jr.add(e*2),r=UE(n,0);return Jo(r.shl(3).add(e),UE(n,e-4),t)}if(e>0){const t=n[0],r=n[e>>1],s=n[e-1],i=t+(r<<8),a=e+(s<<2);return LS(jr.mul(i).xor(kL.mul(a))).mul(jr)}return jr}function uZ(n,e=n.length){const t=jr.add(e*2),r=cn(n,0).mul(Hl),s=cn(n,8),i=cn(n,e-8).mul(t),a=cn(n,e-16).mul(jr);return Jo(cr(r.add(s),43).add(cr(i,30)).add(a),r.add(cr(s.add(jr),18)).add(i),t)}function cZ(n,e=n.length){const t=jr.add(e*2),r=cn(n,0).mul(jr),s=cn(n,8),i=cn(n,e-8).mul(t),a=cn(n,e-16).mul(jr),o=cr(r.add(s),43).add(cr(i,30)).add(a),l=Jo(o,r.add(cr(s.add(jr),18)).add(i),t),u=cn(n,16).mul(t),d=cn(n,24),h=o.add(cn(n,e-32)).mul(t),f=l.add(cn(n,e-24)).mul(t);return Jo(cr(u.add(d),43).add(cr(h,30)).add(f),u.add(cr(d.add(r),18)).add(h),t)}function _L(n,e=n.length){const t=jl.fromNumber(81,!0);if(e<=32)return e<=16?lZ(n,e):uZ(n,e);if(e<=64)return cZ(n,e);let r=t,s=t.mul(Hl).add(113),i=LS(s.mul(jr).add(113)).mul(jr),a=[jl.UZERO,jl.UZERO],o=[jl.UZERO,jl.UZERO];r=r.mul(jr).add(cn(n,0));let l=0;const u=(e-1>>6)*64,d=u+(e-1&63)-63;do r=cr(r.add(s).add(a[0]).add(cn(n,l+8)),37).mul(Hl),s=cr(s.add(a[1]).add(cn(n,l+48)),42).mul(Hl),r=r.xor(o[1]),s=s.add(a[0]).add(cn(n,l+40)),i=cr(i.add(o[0]),33).mul(Hl),a=Oy(n,l,a[1].mul(Hl),r.add(o[0])),o=Oy(n,l+32,i.add(o[1]),s.add(cn(n,l+16))),[i,r]=[r,i],l+=64;while(l!==u);const h=Hl.add(i.and(255).shl(1));return l=d,o[0]=o[0].add(e-1&63),a[0]=a[0].add(o[0]),o[0]=o[0].add(a[0]),r=cr(r.add(s).add(a[0]).add(cn(n,l+8)),37).mul(h),s=cr(s.add(a[1]).add(cn(n,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),s=s.add(a[0].mul(9).add(cn(n,l+40))),i=cr(i.add(o[0]),33).mul(h),a=Oy(n,l,a[1].mul(h),r.add(o[0])),o=Oy(n,l+32,i.add(o[1]),s.add(cn(n,l+16))),[i,r]=[r,i],Jo(Jo(a[0],o[0],h).add(LS(s).mul(kL)).add(i),Jo(a[1],o[1],h).add(r),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uo(n,e){return e==="string"?va(n):ml([n],e)}function dZ(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function ml(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=Ia(n)),de().getBool("DEBUG")&&oL(n,e),dZ(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let r=0;r<t.length;++r)Math.round(n[r])!==0&&(t[r]=1);return t}else throw new Error(`Unknown data type ${e}`)}function kr(){return de().platform.now()}function ML(n,e){return de().platform.fetch(n,e)}function va(n,e="utf-8"){return e=e||"utf-8",de().platform.encode(n,e)}function eo(n,e="utf-8"){return e=e||"utf-8",de().platform.decode(n,e)}function rr(n){return de().platform.isTypedArray!=null?de().platform.isTypedArray(n):bL(n)}function Ia(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||qa(n)||n==null||rr(n)&&t)e.push(n);else if(Array.isArray(n)||rr(n))for(let r=0;r<n.length;++r)Ia(n[r],e,t);else{let r=-1;for(const s of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(s)&&(r=Math.max(r,Number(s)));for(let s=0;s<=r;s++)Ia(n[s],e,t)}return e}const hZ=Object.freeze(Object.defineProperty({__proto__:null,arraysEqual:Ft,arraysEqualWithNull:aL,assert:P,assertNonNegativeIntegerDimensions:Fs,assertNonNull:Gu,assertShapesMatch:Lr,bytesFromStringArray:uL,bytesPerElement:nf,checkConversionForErrors:oL,clamp:rl,computeStrides:ut,convertBackendValuesAndArrayBuffer:hL,createScalarValue:uo,createShuffledIndices:$5,decodeString:eo,distSquared:O5,encodeString:va,fetch:ML,fingerPrint64:_L,flatten:Ia,getArrayFromDType:Dn,getTypedArrayFromDType:mr,hasEncodingLoss:G2,hexToLong:Nm,indexToLoc:Wu,inferDtype:Ou,inferFromImplicitShape:F2,isBoolean:cL,isFunction:sl,isInt:bu,isNumber:m0,isPromise:qa,isScalarShape:W5,isString:ma,isTypedArray:rr,isValidDtype:lL,locToIndex:Vi,makeOnesTypedArray:tb,makeZerosNestedTypedArray:O2,makeZerosTypedArray:Er,nearestDivisor:g0,nearestLargerEven:eb,now:kr,parseAxisParam:At,randUniform:G5,repeatedTry:NS,rightPad:uu,shuffle:P2,shuffleCombo:F5,sizeFromShape:be,sizeToSquarishShape:f0,squeezeShape:lo,sum:iL,swap:Ka,tanh:V5,toNestedArray:ti,toTypedArray:ml},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pZ{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new mZ)}profileKernel(e,t,r){let s;const i=()=>{s=r()};let a;const o=kr();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(i);else{i();for(const l of s)l.dataSync();a=Promise.resolve({kernelMs:kr()-o})}if(de().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<s.length;l++){const u=s[l];u.data().then(d=>{fZ(d,u.dtype,e)})}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:r,timeMs:s,inputs:i,extraInfo:a}=e;r.forEach(o=>{Promise.all([o.data(),s,a]).then(l=>{this.logger.logKernelProfile(t,o,l[0],l[1],i,l[2])})})}}function fZ(n,e,t){if(e!=="float32")return!1;for(let r=0;r<n.length;r++){const s=n[r];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${t}'`),!0}return!1}class mZ{logKernelProfile(e,t,r,s,i,a){const o=typeof s=="number"?uu(`${s}ms`,9):s.error,l=uu(e,25),u=t.rank,d=t.size,h=uu(t.shape.toString(),14);let f="";for(const m in i){const x=i[m];if(x!=null){const g=x.shape||t.shape,y=g.length;f+=`${m}: ${y}D ${y>0?g:""} `}}console.log(`%c${l}	%c${o}	%c${u}D ${h}	%c${d}	%c${f}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gZ(n,e,t){const r={},s={};for(let l=0;l<e.length;l++)r[e[l].id]=!0;for(let l=0;l<n.length;l++){const u=n[l],d=u.inputs;for(const h in d){const f=d[h];let m=!1;for(let x=0;x<e.length;x++)if(r[f.id]){u.outputs.forEach(g=>r[g.id]=!0),m=!0,s[u.id]=!0;break}if(m)break}}const i={};i[t.id]=!0;const a={};for(let l=n.length-1;l>=0;l--){const u=n[l],d=u.inputs;for(let h=0;h<u.outputs.length;h++)if(i[u.outputs[h].id]){for(const f in d)i[d[f].id]=!0,a[u.id]=!0;break}}const o=[];for(let l=0;l<n.length;l++){const u=n[l];if(s[u.id]&&a[u.id]){const d={};for(const f in u.inputs){const m=u.inputs[f];r[m.id]&&(d[f]=m)}const h=Object.assign({},u);h.inputs=d,h.outputs=u.outputs,o.push(h)}}return o}function yZ(n,e,t,r){for(let s=e.length-1;s>=0;s--){const i=e[s],a=[];if(i.outputs.forEach(l=>{const u=n[l.id];u!=null?a.push(u):a.push(null)}),i.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const l in i.inputs){if(!(l in o))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(o)}.`);const u=t(()=>o[l]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${u.dtype}'`);const d=i.inputs[l];if(!Ft(u.shape,d.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${l}' has shape '${u.shape}', which does not match the shape of the input '${d.shape}'`);if(n[d.id]==null)n[d.id]=u;else{const h=n[d.id];n[d.id]=r(h,u),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZE=20,Lp=3,$w=7;function bZ(n,e,t,r){const s=ut(e),i=xZ(n,e,t,s),a=e.length,o=s0(n,e,t,s,i),l=["Tensor"];return r&&(l.push(`  dtype: ${t}`),l.push(`  rank: ${a}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(o.map(u=>"    "+u).join(`
`)),l.join(`
`)}function xZ(n,e,t,r){const s=be(e),i=r[r.length-1],a=new Array(i).fill(0),o=e.length,l=t==="complex64"?Bp(n):n;if(o>1)for(let u=0;u<s/i;u++){const d=u*i;for(let h=0;h<i;h++)a[h]=Math.max(a[h],$p(l[d+h],0,t).length)}return a}function $p(n,e,t){let r;return Array.isArray(n)?r=`${parseFloat(n[0].toFixed($w))} + ${parseFloat(n[1].toFixed($w))}j`:ma(n)?r=`'${n}'`:t==="bool"?r=NL(n):r=parseFloat(n.toFixed($w)).toString(),uu(r,e)}function NL(n){return n===0?"false":"true"}function s0(n,e,t,r,s,i=!0){const a=t==="complex64"?2:1,o=e[0],l=e.length;if(l===0){if(t==="complex64"){const g=Bp(n);return[$p(g[0],0,t)]}return t==="bool"?[NL(n[0])]:[n[0].toString()]}if(l===1){if(o>ZE){const g=Lp*a;let y=Array.from(n.slice(0,g)),v=Array.from(n.slice((o-Lp)*a,o*a));return t==="complex64"&&(y=Bp(y),v=Bp(v)),["["+y.map((w,I)=>$p(w,s[I],t)).join(", ")+", ..., "+v.map((w,I)=>$p(w,s[o-Lp+I],t)).join(", ")+"]"]}return["["+(t==="complex64"?Bp(n):Array.from(n)).map((g,y)=>$p(g,s[y],t)).join(", ")+"]"]}const u=e.slice(1),d=r.slice(1),h=r[0]*a,f=[];if(o>ZE){for(let g=0;g<Lp;g++){const y=g*h,v=y+h;f.push(...s0(n.slice(y,v),u,t,d,s,!1))}f.push("...");for(let g=o-Lp;g<o;g++){const y=g*h,v=y+h;f.push(...s0(n.slice(y,v),u,t,d,s,g===o-1))}}else for(let g=0;g<o;g++){const y=g*h,v=y+h;f.push(...s0(n.slice(y,v),u,t,d,s,g===o-1))}const m=l===2?",":"";f[0]="["+(o>0?f[0]+m:"");for(let g=1;g<f.length-1;g++)f[g]=" "+f[g]+m;let x=`,
`;for(let g=2;g<l;g++)x+=`
`;return f[f.length-1]=" "+f[f.length-1]+"]"+(i?"":x),f}function Bp(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jn{constructor(e,t,r){if(this.dtype=t,this.shape=e.slice(),this.size=be(e),r!=null){const s=r.length;P(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||Dn(t,this.size),this.strides=ut(e)}set(e,...t){t.length===0&&(t=[0]),P(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const r=this.locToIndex(t);this.values[r]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const s of e){if(s<0||s>=this.shape[t]){const i=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(i)}t++}let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=this.strides[s]*e[s];return this.values[r]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let r=0;r<e.length-1;++r)t+=this.strides[r]*e[r];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let r=0;r<t.length-1;++r)t[r]=Math.floor(e/this.strides[r]),e-=t[r]*this.strides[r];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Fi().makeTensor(this.values,this.shape,this.dtype)}}let Fi=null,Bc=null;function vZ(n){Fi=n}function wZ(n){Bc=n}class Ht{constructor(e,t,r,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=be(e),this.strides=ut(e),this.dataId=r,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Bc.buffer(this.shape,this.dtype,e)}bufferSync(){return Bc.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return ti(this.shape,e,this.dtype==="complex64")}arraySync(){return ti(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=Fi().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(r=>eo(r))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Fi().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Fi().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>eo(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Fi().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Fi().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Bc.print(this,e)}clone(){return this.throwIfDisposed(),Bc.clone(this)}toString(e=!1){const t=this.dataSync();return bZ(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Bc.cast(this,e)}variable(e=!0,t,r){return this.throwIfDisposed(),Fi().makeVariable(this,e,t,r)}}Object.defineProperty(Ht,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function Se(){return V2("Tensor",()=>Ht)}Se();class uf extends Ht{constructor(e,t,r,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=r}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Ft(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Fi().disposeTensor(this),this.dataId=e.dataId,Fi().incRef(this,null)}dispose(){Fi().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(uf,Symbol.hasInstance,{value:n=>n instanceof Ht&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var AS;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(AS||(AS={}));var zS;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(zS||(zS={}));var DS;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(DS||(DS={}));var PS;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(PS||(PS={}));var FS;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(FS||(FS={}));const SZ={float32:PS,int32:zS,bool:DS,complex64:FS};function ps(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return SZ[n][e]}function ox(n){return ps(n,"int32")}function EL(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function RL(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function En(n,e){if(n.dtype===e.dtype)return[n,e];const t=ps(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function LL(n,e){P(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}function lx(n,e){return e.some(t=>t.id===n.id)}function to(n){const e=[];return AL(n,e,new Set),e}function AL(n,e,t){if(n==null)return;if(n instanceof Ht){e.push(n);return}if(!TZ(n))return;const r=n;for(const s in r){const i=r[s];t.has(i)||(t.add(i),AL(i,e,t))}}function TZ(n){return Array.isArray(n)||typeof n=="object"}const IZ=Object.freeze(Object.defineProperty({__proto__:null,assertTypesMatch:LL,getTensorsInContainer:to,isTensorInList:lx,makeTypesMatch:En},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bw(n){return n.kernelName!=null}class HE{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class ld{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new HE}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const r=e[t];if(await this.initializeBackend(r).success){await this.setBackend(r);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,r=1){return e in this.registryFactory?(Ks(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:r},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:r}=this.initializeBackend(e);if(!(r?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new pZ(this.backendInstance),!0}setupRegisteredKernels(){v0(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){v0(e).forEach(t=>{t.disposeFunc!=null&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=t.factory();if(r&&!(r instanceof q0)&&typeof r.then=="function"){const s=++this.pendingBackendInitId,i=r.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,Ks(`Initialization of backend ${e} failed`),Ks(a.stack||a.message)),!1));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}else return this.registry[e]=r,{success:!0,asyncInit:!1}}catch(r){return Ks(`Initialization of backend ${e} failed`),Ks(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const r=e[t],{success:s,asyncInit:i}=this.initializeBackend(r);if(i||s)return{name:r,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const r=this.state.tensorInfo.get(t),s=r.backend,i=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),r.backend=e,e.move(t,i,r.shape,r.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let r=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}let s;return this.scopedRun(()=>this.startScope(r),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,r){e();try{const s=r();return t(),s}catch(s){throw t(),s}}nextTensorId(){return ld.nextTensorId++}nextVariableId(){return ld.nextVariableId++}clone(e){const t=q.runKernel(Bd,{x:e}),r={x:e},s=a=>({x:()=>{const o="float32",l={x:a},u={dtype:o};return q.runKernel(Ed,l,u)}}),i=[];return this.addTapeNode(this.state.activeScope.name,r,[t],s,i,{}),t}runKernel(e,t,r){if(this.backendName==null&&this.backend,lf(e,this.backendName)==null)throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,r){const s=this.backend.numDataIds();let i=0;r.forEach(l=>{i+=l.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=s-t-i-a;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,r=[];const s=this.isTapeOn(),i=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let o;this.backendName==null&&this.backend;let l;const u=Bw(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Bw(e)){const{kernelName:x,inputs:g,attrs:y}=e;this.backendName==null&&this.backend;const v=lf(x,this.backendName);P(v!=null,()=>`Cannot find registered kernel '${x}' for backend '${this.backendName}'`),o=()=>{const w=this.backend.numDataIds();l=v.kernelFunc({inputs:g,attrs:y,backend:this.backend});const I=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(x,w,I);const T=I.map(C=>C.rank!=null?C:this.makeTensorFromTensorInfo(C));if(s){const C=this.getTensorsForGradient(x,g,T);r=this.saveTensorsForBackwardMode(C)}return T}}else{const{forwardFunc:x}=e,g=y=>{s&&(r=y.map(v=>this.keep(this.clone(v))))};o=()=>{const y=this.backend.numDataIds();l=this.tidy(()=>x(this.backend,g));const v=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,y,v),v}}const{inputs:d,attrs:h}=e,f=Bw(e)?null:e.backwardsFunc;let m;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=o():(m=this.profiler.profileKernel(u,d,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(m),t=m.outputs)}),s&&this.addTapeNode(u,d,t,f,r,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map(x=>d[x]!=null?d[x].shape:null),outputShapes:t.map(x=>x.shape),kernelTimeMs:m.timeMs,extraInfo:m.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(e,t,r){const s=ES(e);if(s!=null){const i=s.inputsToSave||[],a=s.outputsToSave||[];let o;s.saveAllInputs?(P(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(t).map(u=>t[u])):o=i.map(u=>t[u]);const l=r.filter((u,d)=>a[d]);return o.concat(l)}return[]}makeTensor(e,t,r,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",s=s||this.backend;let i=e;r==="string"&&ma(e[0])&&(i=e.map(l=>va(l)));const a=s.write(i,t,r),o=new Ht(t,r,a,this.nextTensorId());if(this.trackTensor(o,s),r==="string"){const l=this.state.tensorInfo.get(a),u=uL(i);this.state.numBytes+=u-l.bytes,l.bytes=u}return o}makeTensorFromDataId(e,t,r,s){r=r||"float32";const i={dataId:e,shape:t,dtype:r};return this.makeTensorFromTensorInfo(i,s)}makeTensorFromTensorInfo(e,t){const{dataId:r,shape:s,dtype:i}=e,a=new Ht(s,i,r,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,r,s){r=r||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));const i=new uf(e,t,r,this.nextTensorId());if(this.state.registeredVariables[i.name]!=null)throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let r=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(r=e.size*nf(e.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:r})),e instanceof uf||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const r=e.size*nf(e.dtype);this.state.numBytes-=r}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-r;for(const s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,r,s,i,a){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:r,saved:i},l=ES(e);l!=null&&(s=l.gradFunc),s!=null&&(o.gradient=u=>(u=u.map((d,h)=>{if(d==null){const f=r[h],m=Er(f.size,f.dtype);return this.makeTensor(m,f.shape,f.dtype)}return d}),s(u.length>1?u:u[0],i,a))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=to(e),r=new Set(t.map(i=>i.id));for(let i=0;i<this.state.activeScope.track.length;i++){const a=this.state.activeScope.track[i];!a.kept&&!r.has(a.id)&&a.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(i=>{!i.kept&&i.scopeId===s.id&&this.track(i)})}gradients(e,t,r,s=!1){if(P(t.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);const i=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));P(i instanceof Ht,()=>"The result y returned by f() must be a tensor.");const a=gZ(this.state.activeTape,t,i);if(!s&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const o={};o[i.id]=r??kZ(i.shape),yZ(o,a,u=>this.tidy(u),CZ);const l=t.map(u=>o[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(const d of u.saved)d.dispose()}),this.state.activeTape=null),{value:i,grads:l}})}customGrad(e){return P(sl(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{P(t.every(o=>o instanceof Ht),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r;const s={};t.forEach((o,l)=>{s[l]=o});const i=(o,l)=>(r=e(...t,l),P(r.value instanceof Ht,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),P(sl(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),a=(o,l)=>{const u=r.gradFunc(o,l),d=Array.isArray(u)?u:[u];P(d.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),P(d.every(f=>f instanceof Ht),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return d.forEach((f,m)=>{h[m]=()=>f}),h};return this.runKernelFunc({forwardFunc:i,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=kr(),r=await this.backend.time(e);return r.wallMs=kr()-t,r}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new HE;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}ld.nextTensorId=0;ld.nextVariableId=0;function kZ(n){const e=tb(be(n),"float32");return q.makeTensor(e,n,"float32")}function zL(){const n=fL();if(n._tfengine==null){const e=new pL(n);n._tfengine=new ld(e)}return Z5(n._tfengine.ENV),vZ(()=>n._tfengine),n._tfengine}const q=zL();function CZ(n,e){const t={a:n,b:e};return q.runKernel(Vu,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Z(){return typeof navigator<"u"&&navigator!=null}let GS;function MZ(n){GS=n}function X2(n){if(GS!==void 0)return GS;if(n||_Z()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function U2(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}const NZ=Object.freeze(Object.defineProperty({__proto__:null,isBrowser:U2,isMobile:X2,mockIsMobile:MZ},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fs=de();fs.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});fs.registerFlag("IS_BROWSER",()=>U2());fs.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");fs.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));fs.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));fs.registerFlag("PROD",()=>!1);fs.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>fs.getBool("DEBUG"));fs.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);fs.registerFlag("IS_TEST",()=>!1);fs.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>fs.getBool("DEBUG"));fs.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);fs.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);fs.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ka(n,e){let t=n;if(rr(n))return e==="string"?[]:[n.length];if(EL(n)){const s=n.channels||"RGBA";return[n.height,n.width*s.length]}else if(RL(n))return[n.buffer.size/(e==null?4:nf(e))];if(!Array.isArray(n))return[];const r=[];for(;Array.isArray(t)||rr(t)&&e!=="string";)r.push(t.length),t=t[0];return Array.isArray(n)&&de().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&DL(n,r,[]),r}function DL(n,e,t){if(t=t||[],!Array.isArray(n)&&!rr(n)){P(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}P(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),P(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const r=e.slice(1);for(let s=0;s<n.length;++s)DL(n[s],r,t.concat(s))}function KE(n,e,t,r){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${r}' must be ${n} tensor, but got ${e} tensor`)}}function F(n,e,t,r="numeric"){if(n instanceof Se())return KE(r,n.dtype,e,t),n;let s=Ou(n);if(s!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),KE(r,s,e,t),n==null||!rr(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const o=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${o}'`)}const i=ka(n,s);!rr(n)&&!Array.isArray(n)&&(n=[n]);const a=s!=="string"?ml(n,s):Ia(n,[],!0);return q.makeTensor(a,i,s)}function cf(n,e,t,r="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((s,i)=>F(s,`${e}[${i}]`,t,r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z2="__op";function ee(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const r=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+Z2;const s=(...i)=>{q.startScope(t);try{const a=r(...i);return qa(a)&&console.error("Cannot return a Promise inside of tidy."),q.endScope(a),a}catch(a){throw q.endScope(null),a}};return Object.defineProperty(s,"name",{value:t,configurable:!0}),s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EZ(n,e){const t=F(n,"real","complex"),r=F(e,"imag","complex");Lr(t.shape,r.shape,`real and imag shapes, ${t.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:t,imag:r};return q.runKernel(lb,s)}const no=ee({complex_:EZ});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gl(n,e,t,r){if(r==null)r=Ou(n);else if(r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(RL(n)||EL(n)){if(r!=="float32"&&r!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return q.backend.createTensorFromGPUData(n,e||t,r)}if(!rr(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){Fs(e);const s=be(e),i=be(t);P(s===i,()=>`Based on the provided shape, [${e}], the tensor should have ${s} values but has ${i}`);for(let a=0;a<t.length;++a){const o=t[a],l=a===t.length-1?o!==be(e.slice(a)):!0;P(t[a]===e[a]||!l,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!rr(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=r!=="string"?ml(n,r):Ia(n,[],!0),q.makeTensor(n,e,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wn(n,e,t){const r=ka(n,t);return gl(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xu={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class ji{static join(e){return new ji(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(r=>rr(r)?r.buffer:r),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let r=0;r<e.length;r++){const s=e[r];r!==e.length-1&&s.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const i=t+s.byteLength;this.shards.push({buffer:s,start:t,end:i}),t=i}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const r=this.findShardForByte(e);if(r===-1)throw new Error(`Could not find start shard for byte ${e}`);const s=t-e,i=new ArrayBuffer(s),a=new Uint8Array(i);let o=0;for(let l=r;l<this.shards.length;l++){const u=this.shards[l],d=e+o-u.start,h=o,f=Math.min(t,u.end)-u.start,m=new Uint8Array(u.buffer,d,f-d);if(a.set(m,h),o+=m.length,t<u.end)break}return i}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(s){return e<s.start?-1:e>=s.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const r=RZ(this.shards,t);return r===-1?-1:(this.previousShardIndex=r,this.previousShardIndex)}}function RZ(n,e){let t=0,r=n.length;for(;t<=r;){const s=Math.floor((r-t)/2)+t,i=e(n[s]);if(i===0)return s;i<0?r=s:t=s+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LZ(){de().set("PROD",!0)}function AZ(){de().set("DEBUG",!0)}function zZ(){de().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function DZ(n){de().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function PZ(){q.disposeVariables()}function on(){return q}function S0(){return q.memory()}function FZ(n){return q.profile(n)}function le(n,e){return q.tidy(n,e)}function kt(n){to(n).forEach(e=>e.dispose())}function Pn(n){return q.keep(n)}function GZ(n){return q.time(n)}function OZ(n){return q.setBackend(n)}function WZ(){return q.ready()}function PL(){return q.backendName}function VZ(n){q.removeBackend(n)}function $Z(n){return q.findBackend(n)}function BZ(n){return q.findBackendFactory(n)}function H2(n,e,t=1){return q.registerBackend(n,e,t)}function ga(){return q.backend}function XZ(n,e){de().setPlatform(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const il=4;async function OS(n,e){const t=[],r=[],s=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<s.length;++a){const o=s[a],l=Array.isArray(n)?n[a].tensor:n[o];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${l.dtype}`);const u={name:o,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const d=new Promise(async h=>{const f=await l.bytes(),m=f.reduce((y,v)=>y+v.length,0)+il*f.length,x=new Uint8Array(m);let g=0;for(let y=0;y<f.length;y++){const v=f[y],w=new Uint8Array(new Uint32Array([v.length]).buffer);x.set(w,g),g+=il,x.set(v,g),g+=v.length}h(x)});r.push(d)}else r.push(l.data());e!=null&&(u.group=e),t.push(u)}const i=await Promise.all(r);return{data:HZ(i),specs:t}}function K2(n,e){const t=new ji(n),r={};let s=0;for(const i of e){const a=UZ(i,(o,l)=>t.slice(s+o,s+l));r[i.name]=FL(i,t.slice(s,s+a)),s+=a}return r}function UZ(n,e){const t=be(n.shape);let r;if("quantization"in n){const s=n.quantization;r=xu[s.dtype]}else if(n.dtype==="string"){let s=0;for(let i=0;i<t;i++)s+=il+new Uint32Array(e(s,s+il))[0];return s}else r=xu[n.dtype];return t*r}async function ZZ(n,e){const t=be(n.shape);let r;if("quantization"in n){const s=n.quantization;r=xu[s.dtype]}else if(n.dtype==="string"){let s=0;for(let i=0;i<t;i++)s+=il+new Uint32Array(await e(s,s+il))[0];return s}else r=xu[n.dtype];return t*r}function FL(n,e){const t=n.name,r=n.dtype,s=n.shape,i=be(s);let a,o=0;if("quantization"in n){const l=n.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${n.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(r!=="float32")throw new Error(`Weight ${n.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${r}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const u=xu[l.dtype],d=l.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(r==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){a=new Float32Array(d.length);for(let h=0;h<d.length;h++){const f=d[h];a[h]=f*l.scale+l.min}}else if(l.dtype==="float16")a=qZ()(d);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(r==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);a=new Int32Array(d.length);for(let h=0;h<d.length;h++){const f=d[h];a[h]=Math.round(f*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${r}`);o+=i*u}else if(r==="string"){const l=be(n.shape);a=[];for(let u=0;u<l;u++){const d=new Uint32Array(e.slice(o,o+il))[0];o+=il;const h=new Uint8Array(e.slice(o,o+d));a.push(h),o+=d}}else{const l=xu[r];if(r==="float32")a=new Float32Array(e);else if(r==="int32")a=new Int32Array(e);else if(r==="bool")a=new Uint8Array(e);else if(r==="complex64"){a=new Float32Array(e);const u=new Float32Array(a.length/2),d=new Float32Array(a.length/2);for(let x=0;x<u.length;x++)u[x]=a[x*2],d[x]=a[x*2+1];const h=wn(u,s,"float32"),f=wn(d,s,"float32"),m=no(h,f);return h.dispose(),f.dispose(),m}else throw new Error(`Unsupported dtype in weight '${t}': ${r}`);o+=i*l}return wn(a,s,r)}async function YE(n,e,t){let r=new Uint8Array(e);for(;r.byteLength<t;){const{done:s,value:i}=await n.read();if(s&&i==null){const o=t-r.byteLength;throw new Error(`Reader is done but ${o} bytes are still expected`)}const a=new Uint8Array(r.length+i.byteLength);a.set(r,0),a.set(new Uint8Array(i),r.length),r=a}return r.buffer}async function GL(n,e){const t={},r=n.getReader();let s=new ArrayBuffer(0);for(const i of e){const a=await ZZ(i,async(u,d)=>(s=await YE(r,s,d),s.slice(u,d)));s=await YE(r,s,a);const o=s.slice(0,a);s=s.slice(a);const l=FL(i,o);if(t[i.name]=l,PL()==="webgpu"){const u=ga();"uploadToGPU"in u&&be(l.shape)>=de().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&u.uploadToGPU(l.dataId)}}return t}function HZ(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(i=>{if(e+=i.byteLength,t.push(i.byteLength===i.buffer.byteLength?i:new i.constructor(i)),!(i instanceof Float32Array||i instanceof Int32Array||i instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${i.constructor.name}`)});const r=new Uint8Array(e);let s=0;return t.forEach(i=>{r.set(new Uint8Array(i.buffer),s),s+=i.byteLength}),r.buffer}const Y2=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function jE(n){return Y2?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function KZ(n){if(Y2)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let r=0,s=e.length;r<s;r++)t+=String.fromCharCode(e[r]);return btoa(t)}function YZ(n){if(Y2){const r=Buffer.from(n,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let r=0;r<e.length;++r)t.set([e.charCodeAt(r)],r);return t.buffer}function OL(n){return ji.join(n)}function QE(n){for(n=n.trim();n.endsWith("/");)n=n.slice(0,n.length-1);const t=n.split("/");return t[t.length-1]}function WL(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function j2(n,e,t){const r={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(r.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=e,r.weightData=t}return n.signature!=null&&(r.signature=n.signature),n.userDefinedMetadata!=null&&(r.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(r.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(r.initializerSignature=n.initializerSignature),r}async function Q2(n,e){let t,r;return n.weightsManifest!=null&&([t,r]=await e(n.weightsManifest)),j2(n,t,r)}function Em(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:jE(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:jE(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new ji(n.weightData).byteLength}}function T0(n){const e=[];for(const t of n)e.push(...t.weights);return e}function jZ(){const n=t=>{let r=t<<13,s=0;for(;!(r&8388608);)s-=8388608,r<<=1;return r&=-8388609,s+=947912704,r|s},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function QZ(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function JZ(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function qZ(){const n=jZ(),e=QZ(),t=JZ();return r=>{const s=new ArrayBuffer(4*r.length),i=new Uint32Array(s);for(let a=0;a<r.length;a++){const o=r[a],l=n[t[o>>10]+(o&1023)]+e[o>>10];i[a]=l}return new Float32Array(s)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cn{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Cn.instance==null&&(Cn.instance=new Cn),Cn.instance}static registerSaveRouter(e){Cn.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Cn.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Cn.getHandlers(e,"save")}static getLoadHandlers(e,t){return Cn.getHandlers(e,"load",t)}static getHandlers(e,t,r){const s=[];return(t==="load"?Cn.getInstance().loadRouters:Cn.getInstance().saveRouters).forEach(i=>{const a=i(e,r);a!==null&&s.push(a)}),s}}const eH=n=>Cn.registerSaveRouter(n),tH=n=>Cn.registerLoadRouter(n),VL=n=>Cn.getSaveHandlers(n),$L=(n,e)=>Cn.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WS="tensorflowjs",VS=1,iu="models_store",Ho="model_info_store";function BL(){if(!de().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function $S(n){const e=n.result;e.createObjectStore(iu,{keyPath:"modelPath"}),e.createObjectStore(Ho,{keyPath:"modelPath"})}class vu{constructor(e){if(this.indexedDB=BL(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((r,s)=>{const i=this.indexedDB.open(WS,VS);i.onupgradeneeded=()=>$S(i),i.onsuccess=()=>{const a=i.result;if(t==null){const o=a.transaction(iu,"readonly"),l=o.objectStore(iu).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(l.result.modelArtifacts)},l.onerror=u=>(a.close(),s(l.error)),o.oncomplete=()=>a.close()}else{t.weightData=ji.join(t.weightData);const o=Em(t),l=a.transaction(Ho,"readwrite");let u=l.objectStore(Ho),d;try{d=u.put({modelPath:this.modelPath,modelArtifactsInfo:o})}catch(f){return s(f)}let h;d.onsuccess=()=>{h=a.transaction(iu,"readwrite");const f=h.objectStore(iu);let m;try{m=f.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:o})}catch(x){return s(x)}m.onsuccess=()=>r({modelArtifactsInfo:o}),m.onerror=x=>{u=l.objectStore(Ho);const g=u.delete(this.modelPath);g.onsuccess=()=>(a.close(),s(m.error)),g.onerror=y=>(a.close(),s(m.error))}},d.onerror=f=>(a.close(),s(d.error)),l.oncomplete=()=>{h==null?a.close():h.oncomplete=()=>a.close()}}},i.onerror=a=>s(i.error)})}}vu.URL_SCHEME="indexeddb://";const XL=n=>de().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(vu.URL_SCHEME)?nH(n.slice(vu.URL_SCHEME.length)):null;Cn.registerSaveRouter(XL);Cn.registerLoadRouter(XL);function nH(n){return new vu(n)}function rH(n){return n.startsWith(vu.URL_SCHEME)?n.slice(vu.URL_SCHEME.length):n}class sH{constructor(){this.indexedDB=BL()}async listModels(){return new Promise((e,t)=>{const r=this.indexedDB.open(WS,VS);r.onupgradeneeded=()=>$S(r),r.onsuccess=()=>{const s=r.result,i=s.transaction(Ho,"readonly"),a=i.objectStore(Ho).getAll();a.onsuccess=()=>{const o={};for(const l of a.result)o[l.modelPath]=l.modelArtifactsInfo;e(o)},a.onerror=o=>(s.close(),t(a.error)),i.oncomplete=()=>s.close()},r.onerror=s=>t(r.error)})}async removeModel(e){return e=rH(e),new Promise((t,r)=>{const s=this.indexedDB.open(WS,VS);s.onupgradeneeded=()=>$S(s),s.onsuccess=()=>{const i=s.result,a=i.transaction(Ho,"readwrite"),o=a.objectStore(Ho),l=o.get(e);let u;l.onsuccess=()=>{if(l.result==null)return i.close(),r(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const d=o.delete(e),h=()=>{u=i.transaction(iu,"readwrite");const f=u.objectStore(iu).delete(e);f.onsuccess=()=>t(l.result.modelArtifactsInfo),f.onerror=m=>r(l.error)};d.onsuccess=h,d.onerror=f=>(h(),i.close(),r(l.error))}},l.onerror=d=>(i.close(),r(l.error)),a.oncomplete=()=>{u==null?i.close():u.oncomplete=()=>i.close()}},s.onerror=i=>r(s.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ya="/",Xc="tensorflowjs_models",UL="info",iH="model_topology",aH="weight_specs",oH="weight_data",lH="model_metadata";function ZL(n){return{info:[Xc,n,UL].join(Ya),topology:[Xc,n,iH].join(Ya),weightSpecs:[Xc,n,aH].join(Ya),weightData:[Xc,n,oH].join(Ya),modelMetadata:[Xc,n,lH].join(Ya)}}function HL(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function uH(n){const e=n.split(Ya);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(Ya)}function cH(n){return n.startsWith(wu.URL_SCHEME)?n.slice(wu.URL_SCHEME.length):n}class wu{constructor(e){if(!de().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ZL(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=Em(e),i=ji.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,KZ(i));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:s}}catch{throw HL(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(r==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=r;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const i=this.LS.getItem(this.keys.modelMetadata);if(i!=null){const o=JSON.parse(i);t.format=o.format,t.generatedBy=o.generatedBy,t.convertedBy=o.convertedBy,o.signature!=null&&(t.signature=o.signature),o.userDefinedMetadata!=null&&(t.userDefinedMetadata=o.userDefinedMetadata),o.modelInitializer!=null&&(t.modelInitializer=o.modelInitializer),o.initializerSignature!=null&&(t.initializerSignature=o.initializerSignature),o.trainingConfig!=null&&(t.trainingConfig=o.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=YZ(a),t}}wu.URL_SCHEME="localstorage://";const KL=n=>de().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(wu.URL_SCHEME)?dH(n.slice(wu.URL_SCHEME.length)):null;Cn.registerSaveRouter(KL);Cn.registerLoadRouter(KL);function dH(n){return new wu(n)}class hH{constructor(){P(de().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),P(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Xc+Ya,r=Ya+UL;for(let s=0;s<this.LS.length;++s){const i=this.LS.key(s);if(i.startsWith(t)&&i.endsWith(r)){const a=uH(i);e[a]=JSON.parse(this.LS.getItem(i))}}return e}async removeModel(e){e=cH(e);const t=ZL(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(t.info));return HL(t),r}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jc="://";let al=class Vo{constructor(){this.managers={}}static getInstance(){return Vo.instance==null&&(Vo.instance=new Vo),Vo.instance}static registerManager(e,t){P(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Jc)&&(e=e.slice(0,e.indexOf(Jc))),P(e.length>0,()=>"scheme must not be an empty string.");const r=Vo.getInstance();P(r.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),r.managers[e]=t}static getManager(e){const t=Vo.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Vo.getInstance().managers)}};function i0(n){if(n.indexOf(Jc)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${al.getSchemes().join(",")}`);return{scheme:n.split(Jc)[0],path:n.split(Jc)[1]}}async function YL(n,e,t=!1){P(n!==e,()=>`Old path and new path are the same: '${n}'`);const r=Cn.getLoadHandlers(n);P(r.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),P(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${n}.`);const s=r[0],i=Cn.getSaveHandlers(e);P(i.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),P(i.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`);const a=i[0],o=i0(n).scheme,l=i0(n).path,u=o===i0(n).scheme,d=await s.load();t&&u&&await al.getManager(o).removeModel(l);const h=await a.save(d);return t&&!u&&await al.getManager(o).removeModel(l),h.modelArtifactsInfo}async function pH(){const n=al.getSchemes(),e={};for(const t of n){const r=await al.getManager(t).listModels();for(const s in r){const i=t+Jc+s;e[i]=r[s]}}return e}async function fH(n){const e=i0(n);return al.getManager(e.scheme).removeModel(e.path)}async function mH(n,e){return YL(n,e,!1)}async function gH(n,e){return YL(n,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yH{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!de().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",r=>{if(r.source===window&&r.data.name===this.messageName){r.stopPropagation();const s=this.functionRefs[r.data.index];s(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return bL(e)}}if(de().get("IS_BROWSER")){de().setPlatform("browser",new yH);try{al.registerManager(wu.URL_SCHEME,new hH)}catch{}try{al.registerManager(vu.URL_SCHEME,new sH)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bH={importFetch:()=>require("node-fetch")};let Xw;class xH{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return de().global.fetch!=null?de().global.fetch(e,t):(Xw==null&&(Xw=bH.importFetch()),Xw(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}de().get("IS_NODE")&&!de().get("IS_BROWSER")&&de().setPlatform("node",new xH);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Et(n,e="float32",t){return e=e||"float32",Fs(n),new Jn(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vH(n,e){const t=F(n,"x","cast");if(!lL(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const r={x:t},s={dtype:e};return q.runKernel(Ed,r,s)}const Oe=ee({cast_:vH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wH(n){const e={x:F(n,"x","clone","string_or_numeric")};return q.runKernel(Bd,e)}const wa=ee({clone_:wH});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J2(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */zL();const SH={buffer:Et,cast:Oe,clone:wa,print:J2};wZ(SH);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TH(n,e){let t=F(n,"a","add"),r=F(e,"b","add");[t,r]=En(t,r);const s={a:t,b:r};return q.runKernel(Vu,s)}const Ne=ee({add_:TH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IH(n,e){let t=F(n,"a","floorDiv"),r=F(e,"b","floorDiv");[t,r]=En(t,r);const s={a:t,b:r};return q.runKernel(Vd,s)}const ux=ee({floorDiv_:IH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kH(n,e){let t=F(n,"a","div"),r=F(e,"b","div");if([t,r]=En(t,r),t.dtype==="int32"&&r.dtype==="int32")return ux(t,r);const s={a:t,b:r},i={};return q.runKernel(Dd,s,i)}const at=ee({div_:kH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CH(n,e){let t=F(n,"a","mul"),r=F(e,"b","mul");[t,r]=En(t,r);const s={a:t,b:r};return q.runKernel(Jd,s)}const ne=ee({mul_:CH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _H(n){const e=F(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return q.runKernel(Df,t)}else{const t={x:e};return q.runKernel(Cf,t)}}const Yn=ee({abs_:_H});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MH(n){const e={x:F(n,"x","acos")};return q.runKernel(Td,e)}const q2=ee({acos_:MH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NH(n){const e={x:F(n,"x","acosh")};return q.runKernel(Id,e)}const eT=ee({acosh_:NH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EH(n,e=null,t=!1){const r={x:F(n,"x","all","bool")},s={axis:e,keepDims:t};return q.runKernel(nb,r,s)}const cx=ee({all_:EH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RH(n,e=null,t=!1){const r={x:F(n,"x","any","bool")},s={axis:e,keepDims:t};return q.runKernel(rb,r,s)}const df=ee({any_:RH});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LH(n,e=0){const t={x:F(n,"x","argMax")},r={axis:e};return q.runKernel(Mf,t,r)}const Su=ee({argMax_:LH});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AH(n,e=0){const t={x:F(n,"x","argMin")},r={axis:e};return q.runKernel(Nf,t,r)}const tT=ee({argMin_:AH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zH(n){const e={x:F(n,"x","asin")};return q.runKernel(kd,e)}const nT=ee({asin_:zH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DH(n){const e={x:F(n,"x","asinh")};return q.runKernel(Cd,e)}const rT=ee({asinh_:DH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PH(n){const e={x:F(n,"x","atan")};return q.runKernel(_d,e)}const sT=ee({atan_:PH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FH(n,e){let t=F(n,"a","atan2"),r=F(e,"b","atan2");[t,r]=En(t,r);const s={a:t,b:r};return q.runKernel(Nd,s)}const iT=ee({atan2_:FH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GH(n){const e={x:F(n,"x","atanh")};return q.runKernel(Md,e)}const aT=ee({atanh_:GH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rm(n,e,t,r,s="NHWC",i){const a=n[3],o=[...e,a],l=ho(s);return yr(n,o,t,i,r,null,null,l)}function Ii(n,e,t,r,s,i,a="channelsLast"){const[o,l]=hf(e);let u;if(a==="channelsLast")u=[o,l,n[3],n[3]];else if(a==="channelsFirst")u=[o,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return yr(n,u,t,r,s,i,!1,a)}function co(n,e,t,r,s,i,a="NDHWC"){const[o,l,u]=BS(e);let d,h;if(a==="NDHWC")h="channelsLast",d=[o,l,u,n[4],n[4]];else if(a==="NCDHW")h="channelsFirst",d=[o,l,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return yl(n,d,t,r,s,!1,h,i)}function yr(n,e,t,r,s,i,a=!1,o="channelsLast"){let[l,u,d,h]=[-1,-1,-1,-1];if(o==="channelsLast")[l,u,d,h]=n;else if(o==="channelsFirst")[l,h,u,d]=n;else throw new Error(`Unknown dataFormat ${o}`);const[f,m,,x]=e,[g,y]=hf(t),[v,w]=hf(r),I=qc(f,v),T=qc(m,w),{padInfo:C,outHeight:E,outWidth:L}=VH(s,u,d,g,y,I,T,i,o),M=a?x*h:x;let R;return o==="channelsFirst"?R=[l,M,E,L]:o==="channelsLast"&&(R=[l,E,L,M]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:d,inChannels:h,outHeight:E,outWidth:L,outChannels:M,padInfo:C,strideHeight:g,strideWidth:y,filterHeight:f,filterWidth:m,effectiveFilterHeight:I,effectiveFilterWidth:T,dilationHeight:v,dilationWidth:w,inShape:n,outShape:R,filterShape:e}}function yl(n,e,t,r,s,i=!1,a="channelsLast",o){let[l,u,d,h,f]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[l,u,d,h,f]=n;else if(a==="channelsFirst")[l,f,u,d,h]=n;else throw new Error(`Unknown dataFormat ${a}`);const[m,x,g,,y]=e,[v,w,I]=BS(t),[T,C,E]=BS(r),L=qc(m,T),M=qc(x,C),R=qc(g,E),{padInfo:z,outDepth:X,outHeight:U,outWidth:G}=$H(s,u,d,h,v,w,I,L,M,R,o),V=i?y*f:y;let Z;return a==="channelsFirst"?Z=[l,V,X,U,G]:a==="channelsLast"&&(Z=[l,X,U,G,V]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:d,inWidth:h,inChannels:f,outDepth:X,outHeight:U,outWidth:G,outChannels:V,padInfo:z,strideDepth:v,strideHeight:w,strideWidth:I,filterDepth:m,filterHeight:x,filterWidth:g,effectiveFilterDepth:L,effectiveFilterHeight:M,effectiveFilterWidth:R,dilationDepth:T,dilationHeight:C,dilationWidth:E,inShape:n,outShape:Z,filterShape:e}}function OH(n,e,t,r,s){r==null&&(r=oT(n,e,t));const i=n[0],a=n[1],o=pf((i-e+2*r)/t+1,s),l=pf((a-e+2*r)/t+1,s);return[o,l]}function WH(n,e,t,r,s,i){s==null&&(s=oT(n,e[0],r[0]));const a=[0,0,0,t];for(let o=0;o<3;o++)n[o]+2*s>=e[o]&&(a[o]=pf((n[o]-e[o]+2*s)/r[o]+1,i));return a}function oT(n,e,t,r=1){const s=qc(e,r);return Math.floor((n[0]*(t-1)-t+s)/2)}function hf(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function BS(n){return typeof n=="number"?[n,n,n]:n}function qc(n,e){return e<=1?n:n+(n-1)*(e-1)}function VH(n,e,t,r,s,i,a,o,l){let u,d,h;if(typeof n=="number"){u={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const f=OH([e,t],i,r,n,o);d=f[0],h=f[1]}else if(n==="same"){d=Math.ceil(e/r),h=Math.ceil(t/s);const f=Math.max(0,(d-1)*r+i-e),m=Math.max(0,(h-1)*s+a-t),x=Math.floor(f/2),g=f-x,y=Math.floor(m/2),v=m-y;u={top:x,bottom:g,left:y,right:v,type:"SAME"}}else if(n==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((e-i+1)/r),h=Math.ceil((t-a+1)/s);else if(typeof n=="object"){const f=l==="channelsLast"?n[1][0]:n[2][0],m=l==="channelsLast"?n[1][1]:n[2][1],x=l==="channelsLast"?n[2][0]:n[3][0],g=l==="channelsLast"?n[2][1]:n[3][1];u={top:f,bottom:m,left:x,right:g,type:f===0&&m===0&&x===0&&g===0?"VALID":"EXPLICIT"},d=pf((e-i+f+m)/r+1,o),h=pf((t-a+x+g)/s+1,o)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:u,outHeight:d,outWidth:h}}function $H(n,e,t,r,s,i,a,o,l,u,d){let h,f,m,x;if(n==="valid"&&(n=0),typeof n=="number"){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const g=WH([e,t,r,1],[o,l,u],1,[s,i,a],n,d);f=g[0],m=g[1],x=g[2]}else if(n==="same"){f=Math.ceil(e/s),m=Math.ceil(t/i),x=Math.ceil(r/a);const g=(f-1)*s+o-e,y=(m-1)*i+l-t,v=(x-1)*a+u-r,w=Math.floor(g/2),I=g-w,T=Math.floor(y/2),C=y-T,E=Math.floor(v/2),L=v-E;h={top:T,bottom:C,left:E,right:L,front:w,back:I,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outDepth:f,outHeight:m,outWidth:x}}function pf(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function ol(n){const[e,t,r]=hf(n);return e===1&&t===1&&r===1}function Ar(n,e){return ol(n)||ol(e)}function Tu(n){return hf(n).every(e=>e>0)}function ho(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function es(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")P(bu(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(r=>{r.forEach(s=>{P(bu(s),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${s}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BH(n,e){const t={x:F(n,"x","reshape","string_or_numeric")},r={shape:e};return q.runKernel(mm,t,r)}const se=ee({reshape_:BH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XH(n,e,t,r,s){const i=F(n,"x","avgPool","float32"),a=1;P(Ar(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let o=i,l=!1;i.rank===3&&(l=!0,o=se(i,[1,i.shape[0],i.shape[1],i.shape[2]])),P(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),es("avgPool",r,s);const u={x:o},d={filterSize:e,strides:t,pad:r,dimRoundingMode:s};let h=q.runKernel(Ef,u,d);return h=Oe(h,i.dtype),l?se(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Lm=ee({avgPool_:XH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UH(n,e,t,r,s,i="NDHWC"){const a=F(n,"x","avgPool3d","float32");let o=a,l=!1;a.rank===4&&(l=!0,o=se(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),P(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),P(i==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),P(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),es("avgPool3d",r,s);const u={x:o},d={filterSize:e,strides:t,pad:r,dimRoundingMode:s,dataFormat:i};let h=q.runKernel(Rf,u,d);return h=Oe(h,o.dtype),l?se(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const lT=ee({avgPool3d_:UH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZH(n,e=0){P(n.length>=1,()=>"Pass at least one tensor to concat");const t=cf(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(i=>{if(i.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${i.dtype}. `)}),t.length===1)return wa(t[0]);const r=t,s={axis:e};return q.runKernel(Pf,r,s)}const $n=ee({concat_:ZH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HH(n,e,t=!1,r=!1){let s=F(n,"a","matMul"),i=F(e,"b","matMul");[s,i]=En(s,i);const a={a:s,b:i},o={transposeA:t,transposeB:r};return q.runKernel(Lf,a,o)}const Lt=ee({matMul_:HH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KH(n){const e={x:F(n,"x","sigmoid","float32")};return q.runKernel(uh,e)}const $i=ee({sigmoid_:KH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YH(n,e,t){const r=F(n,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");const s={x:r},i={begin:e,size:t};return q.runKernel(vm,s,i)}const $t=ee({slice_:YH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jH(n){const e={x:F(n,"x","tanh","float32")};return q.runKernel(mh,e)}const Iu=ee({tanh_:jH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QH(n,e,t){const r=F(n,"x","batchToSpaceND"),s=e.reduce((o,l)=>o*l);P(r.rank>=1+e.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`),P(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),P(r.shape[0]%s===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`);const i={x:r},a={blockShape:e,crops:t};return q.runKernel(Af,i,a)}const Am=ee({batchToSpaceND_:QH});function JH(n){let e;return n.rank===0||n.rank===1?e=se(n,[1,1,1,n.size]):n.rank===2?e=se(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=se(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qH(n,e,t,r,s,i){i==null&&(i=.001);const a=F(n,"x","batchNorm"),o=F(e,"mean","batchNorm"),l=F(t,"variance","batchNorm");let u;s!=null&&(u=F(s,"scale","batchNorm"));let d;r!=null&&(d=F(r,"offset","batchNorm")),P(o.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(d==null||o.rank===d.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(u==null||o.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h={x:JH(a),scale:u,offset:d,mean:o,variance:l},f={varianceEpsilon:i},m=q.runKernel(Uf,h,f);return se(m,a.shape)}const bh=ee({batchNorm_:qH});function eK(n,e,t,r,s,i){const a=F(n,"x","batchNorm"),o=F(e,"mean","batchNorm"),l=F(t,"variance","batchNorm");let u;s!=null&&(u=F(s,"scale","batchNorm"));let d;return r!=null&&(d=F(r,"offset","batchNorm")),P(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),P(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),P(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),u!=null&&P(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),d!=null&&P(d.rank===2||d.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${d.rank}.`),bh(a,o,l,d,u,i)}const uT=ee({batchNorm2d_:eK});function tK(n,e,t,r,s,i){const a=F(n,"x","batchNorm"),o=F(e,"mean","batchNorm"),l=F(t,"variance","batchNorm");let u;s!=null&&(u=F(s,"scale","batchNorm"));let d;return r!=null&&(d=F(r,"offset","batchNorm")),P(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),P(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),P(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),u!=null&&P(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),d!=null&&P(d.rank===3||d.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${d.rank}.`),bh(a,o,l,d,u,i)}const cT=ee({batchNorm3d_:tK});function nK(n,e,t,r,s,i){const a=F(n,"x","batchNorm"),o=F(e,"mean","batchNorm"),l=F(t,"variance","batchNorm");let u;s!=null&&(u=F(s,"scale","batchNorm"));let d;return r!=null&&(d=F(r,"offset","batchNorm")),P(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),P(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),P(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),u!=null&&P(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),d!=null&&P(d.rank===4||d.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${d.rank}.`),bh(a,o,l,d,u,i)}const dT=ee({batchNorm4d_:nK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rK(n,e,t){const r=F(n,"x","bincount"),s=F(e,"weights","bincount");P(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),P(t>=0,()=>`size must be non-negative, but got ${t}.`),P(s.size===r.size||s.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`);const i={x:r,weights:s},a={size:t};return q.runKernel(ab,i,a)}const hT=ee({bincount_:rK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sK(n,e){let t=F(n,"broadcastTo","x");const r=t.shape;if(Fs(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const l=t.shape.slice();for(;l.length<e.length;)l.unshift(1);t=se(t,l)}const s=t.shape,i=Array.from(e);for(let l=e.length-1;l>=0;l--)if(s[l]===e[l])i[l]=1;else if(t.shape[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(i.map((l,u)=>l>1?u:-1).filter(l=>l>=0).length===0)return wa(t);const a={x:t},o={reps:i};return q.runKernel(gh,a,o)}const du=ee({broadcastTo_:sK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iK(n){const e={x:F(n,"x","ceil","float32")};return q.runKernel(Rd,e)}const pT=ee({ceil_:iK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xu(n,e,t){Fs(n),t=t||Ou(e);const r={shape:n,value:e,dtype:t};return q.runKernel(Tb,{},r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aK(n,e,t){const r=F(n,"x","clipByValue");if(P(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return Xu(r.shape,e,r.dtype);const s={x:r},i={clipValueMin:e,clipValueMax:t};return q.runKernel(Ld,s,i)}const ms=ee({clipByValue_:aK});function oK(n){return $n(n,0)}const fT=ee({concat1d_:oK});function lK(n,e){return $n(n,e)}const mT=ee({concat2d_:lK});function uK(n,e){return $n(n,e)}const gT=ee({concat3d_:uK});function cK(n,e){return $n(n,e)}const yT=ee({concat4d_:cK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dK(n,e,t,r,s="NHWC",i=[1,1],a){const o=F(n,"x","conv2d","float32"),l=F(e,"filter","conv2d","float32");let u=o,d=!1;o.rank===3&&(d=!0,u=se(o,[1,o.shape[0],o.shape[1],o.shape[2]])),P(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),P(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),es("conv2d",r,a);const h=s==="NHWC"?u.shape[3]:u.shape[1];P(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),P(Ar(t,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),P(Tu(i),()=>"Error in conv2D: Dilated rates should be larger than 0."),P(Tu(t),()=>"Error in conv2D: Strides should be larger than 0.");const f={x:u,filter:l},m={strides:t,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},x=q.runKernel(Ff,f,m);return d?se(x,[x.shape[1],x.shape[2],x.shape[3]]):x}const ro=ee({conv2d_:dK});function hK(n,e,t,r,s="NWC",i=1,a){const o=F(n,"x","conv1d"),l=F(e,"filter","conv1d");let u=o,d=!1;o.rank===2&&(d=!0,u=se(o,[1,o.shape[0],o.shape[1]])),P(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),P(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),es("conv1d",r,a),P(u.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`),P(Ar(t,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${i}'`),P(Tu(i),()=>"Error in conv1D: Dilated rates should be larger than 0."),P(Tu(t),()=>"Error in conv1D: Stride should be larger than 0."),P(s==="NWC",()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const h=se(l,[1,l.shape[0],l.shape[1],l.shape[2]]),f=se(u,[u.shape[0],1,u.shape[1],u.shape[2]]),m=ro(f,h,[1,t],r,"NHWC",[1,i],a);return d?se(m,[m.shape[2],m.shape[3]]):se(m,[m.shape[0],m.shape[2],m.shape[3]])}const dx=ee({conv1d_:hK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pK(n,e,t,r,s,i="NHWC",a){P(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let o=n,l=e,u=!1;e.rank===3&&(u=!0,l=se(e,[1,e.shape[0],e.shape[1],e.shape[2]]),o=[1,n[0],n[1],n[2]]),P(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),P(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),P(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const d=i==="NHWC"?o[3]:o[1],h=i==="NHWC"?l.shape[3]:l.shape[1];P(d===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${d}) must match input depth for filter ${t.shape[2]}.`),P(h===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${t.shape[3]}.`),es("conv2dDerInput",s,a);const f={dy:l,filter:t},m={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,inputShape:o},x=q.runKernel(Gf,f,m);return u?se(x,[x.shape[1],x.shape[2],x.shape[3]]):x}const bT=ee({conv2DBackpropInput_:pK});function fK(n,e,t,r,s,i){const a=F(n,"x","conv2dTranspose"),o=F(e,"filter","conv2dTranspose");return bT(t,a,o,r,s,"NHWC",i)}const hx=ee({conv2dTranspose_:fK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mK(n,e,t,r,s="NDHWC",i=[1,1,1]){const a=F(n,"x","conv3d"),o=F(e,"filter","conv3d");let l=a,u=!1;a.rank===4&&(u=!0,l=se(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),P(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),P(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),P(l.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`),P(Ar(t,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),P(s==="NDHWC",()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`),P(Tu(i),()=>"Error in conv3D: Dilated rates should be larger than 0."),P(Tu(t),()=>"Error in conv3D: Strides should be larger than 0.");const d={x:l,filter:o},h={strides:t,pad:r,dataFormat:s,dilations:i},f=q.runKernel(Of,d,h);return u?se(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const xT=ee({conv3d_:mK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gK(n,e,t,r,s){P(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let i=n,a=e,o=!1;e.rank===4&&(o=!0,a=se(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,n[0],n[1],n[2],n[3]]);const l=i[4],u=a.shape[4];P(i.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),P(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),P(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),P(l===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[3]}.`),P(u===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${t.shape[4]}.`);const d={dy:a,filter:t},h={pad:s,strides:r,inputShape:i},f=q.runKernel(db,d,h);return o?se(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const jL=ee({conv3DBackpropInput_:gK});function yK(n,e,t,r,s){const i=F(n,"x","conv3dTranspose"),a=F(e,"filter","conv3dTranspose");return jL(t,i,a,r,s)}const vT=ee({conv3dTranspose_:yK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bK(n){const e={x:F(n,"x","cos","float32")};return q.runKernel(Ad,e)}const zm=ee({cos_:bK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xK(n){const e={x:F(n,"x","cosh","float32")};return q.runKernel(zd,e)}const px=ee({cosh_:xK});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vK(n,e=0,t=!1,r=!1){const s={x:F(n,"x","cumprod")},i={axis:e,exclusive:t,reverse:r};return q.runKernel(hb,s,i)}const ff=ee({cumprod_:vK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wK(n,e=0,t=!1,r=!1){const s={x:F(n,"x","cumsum")},i={axis:e,exclusive:t,reverse:r};return q.runKernel(Wf,s,i)}const fx=ee({cumsum_:wK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SK(n,e,t,r=!1){const s=F(n,"x","denseBincount"),i=F(e,"weights","denseBincount");P(s.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),P(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),P(t>=0,()=>`size must be non-negative, but got ${t}.`),P(i.size===s.size||i.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${i.shape}.`);const a={x:s,weights:i},o={size:t,binaryOutput:r};return q.runKernel(fb,a,o)}const I0=ee({denseBincount_:SK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TK(n,e,t="NHWC"){const r=F(n,"x","depthToSpace","float32"),s=t==="NHWC"?r.shape[1]:r.shape[2],i=t==="NHWC"?r.shape[2]:r.shape[3],a=t==="NHWC"?r.shape[3]:r.shape[1];P(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),P(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e}  for depthToSpace with input shape
    ${r.shape}`),P(i*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${e} for depthToSpace with input shape
        ${r.shape}`),P(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${r.shape}`);const o={x:r},l={blockSize:e,dataFormat:t};return q.runKernel(mb,o,l)}const wT=ee({depthToSpace_:TK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IK(n,e,t,r,s="NHWC",i=[1,1],a){const o=F(n,"x","depthwiseConv2d","float32"),l=F(e,"filter","depthwiseConv2d","float32");let u=o,d=!1;o.rank===3&&(d=!0,u=se(o,[1,o.shape[0],o.shape[1],o.shape[2]])),P(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),P(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h=s==="NHWC"?u.shape[3]:u.shape[1];P(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),es("depthwiseConv2d",r,a);const f={x:u,filter:l},m={strides:t,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},x=q.runKernel(Vf,f,m);return d?se(x,[x.shape[1],x.shape[2],x.shape[3]]):x}const xh=ee({depthwiseConv2d_:IK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kK(n,e,t,r,s=[1,1],i="NHWC"){const a=F(n,"x","dilation2d"),o=F(e,"filter","dilation2d");P(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),P(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),P(i==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let l=a,u=!1;a.rank===3&&(l=se(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0),P(l.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`);const d={x:l,filter:o},h={strides:t,pad:r,dilations:s},f=q.runKernel($f,d,h);return u?se(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const ST=ee({dilation2d_:kK});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ku(n,e){const t=n.length,r=[];for(let s=0;s<t;s++){const i=t-1-s,a=n[i]||1;(e[e.length-1-s]||1)>1&&a===1&&r.unshift(i)}return r}function qn(n,e){const t=[];for(let r=0;r<e.length;r++){const s=n[n.length-r-1],i=e.length-r-1,a=e[i];(s==null||s===1&&a>1)&&t.unshift(i)}return t}function Ct(n,e){const t=Math.max(n.length,e.length),r=new Array(t);for(let s=0;s<t;s++){let i=n[n.length-s-1];i==null&&(i=1);let a=e[e.length-s-1];if(a==null&&(a=1),i===1)r[t-s-1]=a;else if(a===1)r[t-s-1]=i;else if(i!==a){const o=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(o)}else r[t-s-1]=i}return r}const CK=Object.freeze(Object.defineProperty({__proto__:null,assertAndGetBroadcastShape:Ct,getBroadcastDims:ku,getReductionAxes:qn},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _K(n,e){let t=F(n,"a","equal","string_or_numeric"),r=F(e,"b","equal","string_or_numeric");[t,r]=En(t,r),Ct(t.shape,r.shape);const s={a:t,b:r};return q.runKernel(Bf,s)}const As=ee({equal_:_K});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MK(n,e,t){const r=F(e,"a","where"),s=F(t,"b","where"),i=F(n,"condition","where","bool"),a=Ct(Ct(i.shape,r.shape),s.shape),o=du(i,a),l=du(r,a),u=du(s,a),d={condition:o,t:l,e:u};return q.runKernel(xm,d)}const hr=ee({where_:MK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NK(n){const e={x:F(n,"x","zerosLike")};return q.runKernel(Mm,e)}const Bt=ee({zerosLike_:NK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EK(n,e){let t=F(n,"a","div"),r=F(e,"b","div");[t,r]=En(t,r);const s=at(t,r),i=Bt(s),a=As(r,i);return hr(a,i,s)}const TT=ee({divNoNan_:EK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RK(n,e){const t=F(n,"t1","dot"),r=F(e,"t2","dot");P((t.rank===1||t.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${r.rank}.`);const s=t.rank===1?t.size:t.shape[1],i=r.rank===1?r.size:r.shape[0];if(P(s===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${i}.`),t.rank===1&&r.rank===1){const a=se(t,[1,-1]),o=se(r,[-1,1]),l=Lt(a,o);return se(l,[])}else if(t.rank===1&&r.rank===2){const a=se(t,[1,-1]),o=se(r,[r.shape[0],r.shape[1]]),l=Lt(a,o);return se(l,[l.size])}else if(t.rank===2&&r.rank===1){const a=se(r,[-1,1]),o=Lt(t,a);return se(o,[o.size])}else{const a=se(r,[r.shape[0],r.shape[1]]);return Lt(t,a)}}const IT=ee({dot_:RK});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LK(n,...e){const t=e.map((s,i)=>F(s,`tensors${i}`,"einsum")),r={equation:n};return q.runKernel(vb,t,r)}const Ql=ee({einsum_:LK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AK(n){const e={x:F(n,"x","elu","float32")};return q.runKernel(Pd,e)}const vh=ee({elu_:AK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zK(n){let e=F(n,"x","erf");P(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=Oe(e,"float32"));const t={x:e};return q.runKernel(Fd,t)}const kT=ee({erf_:zK});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CT(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function QL(n,e,t){const r=n.length+e.length,s=[];let i=0,a=0;for(let o=0;o<r;o++)t.indexOf(o)===-1?s.push(n[i++]):s.push(e[a++]);return s}function br(n,e){const t=[],r=n.length;for(let i=0;i<r;i++)e.indexOf(i)===-1&&t.push(n[i]);const s=e.map(i=>n[i]);return[t,s]}function Bn(n,e){const t=e.map(r=>1);return QL(n,t,e)}function zr(n,e,t){P(CT(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function Rn(n,e){if(CT(n,e))return null;const t=[];for(let r=0;r<e;++r)n.indexOf(r)===-1&&t.push(r);return n.forEach(r=>t.push(r)),t}function bl(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function Xn(n,e){const t=[];for(let r=e-n;r<e;++r)t.push(r);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DK(n,e=null,t=!1){const r={x:F(n,"x","max")},s={reductionIndices:e,keepDims:t};return q.runKernel(tm,r,s)}const ni=ee({max_:DK});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PK(n,e=null,t=!1){const r={x:F(n,"x","min")},s={axis:e,keepDims:t};return q.runKernel(im,r,s)}const ud=ee({min_:PK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FK(n,e){let t=F(n,"base","pow"),r=F(e,"exp","pow");[t,r]=En(t,r);const s={a:t,b:r};return q.runKernel(qd,s)}const so=ee({pow_:FK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ct(n,e){if((rr(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&rr(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return gl(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GK(n){const e={x:F(n,"x","sqrt","float32")};return q.runKernel(dh,e)}const Rr=ee({sqrt_:GK});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OK(n){const e=F(n,"x","square"),t={};return q.runKernel("Square",{x:e},t)}const nn=ee({square_:OK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WK(n,e=null,t=!1){let r=F(n,"x","sum");r.dtype==="bool"&&(r=Oe(r,"int32"));const s={x:r},i={axis:e,keepDims:t};return q.runKernel(wm,s,i)}const Qe=ee({sum_:WK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VK(n,e="euclidean",t=null,r=!1){n=F(n,"x","norm");const s=JL(n,e,t);let i=s.shape;if(r){const a=At(t,n.shape);i=Bn(s.shape,a)}return se(s,i)}function JL(n,e,t=null){if(n.rank===0)return Yn(n);if(n.rank!==1&&t===null)return JL(se(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return Qe(Yn(n),t);if(e===1/0)return ni(Yn(n),t);if(e===-1/0)return ud(Yn(n),t);if(e==="euclidean"||e===2)return Rr(Qe(so(Yn(n),ct(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return ni(Qe(Yn(n),t[0]),t[1]-1);if(e===1/0)return ni(Qe(Yn(n),t[1]),t[0]);if(e===-1/0)return ud(Qe(Yn(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return Rr(Qe(nn(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const wh=ee({norm_:VK});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $K(n,e=null,t=!1){return wh(n,"euclidean",e,t)}const _T=ee({euclideanNorm_:$K});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BK(n){const e={x:F(n,"x","exp")};return q.runKernel(Gd,e)}const gs=ee({exp_:BK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XK(n,e=0){const t=F(n,"x","expandDims","string_or_numeric");P(e<=t.rank,()=>"Axis must be <= rank of the tensor");const r={input:t},s={dim:e};return q.runKernel(Xf,r,s)}const Cr=ee({expandDims_:XK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UK(n){const e={x:F(n,"x","expm1")};return q.runKernel(Od,e)}const MT=ee({expm1_:UK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZK(n,e){const t=F(n,"x","tile","string_or_numeric");P(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const r={x:t},s={reps:e};return q.runKernel(gh,r,s)}const Ys=ee({tile_:ZK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HK(n,e,t,r="float32"){e==null&&(e=n);const s=Et([n,e],r),i=n<=e?n:e;for(let o=0;o<i;++o)s.set(1,o,o);const a=se(s.toTensor(),[n,e]);if(t==null)return a;if(t.length===1)return Ys(Cr(a,0),[t[0],1,1]);if(t.length===2)return Ys(Cr(Cr(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return Ys(Cr(Cr(Cr(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const mx=ee({eye_:HK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KK(n){const e={x:F(n,"x","floor","float32")};return q.runKernel(Wd,e)}const Sh=ee({floor_:KK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YK(n,e,t=0,r=0){const s=F(n,"x","gather"),i=F(e,"indices","gather","int32"),a={x:s,indices:i},o={axis:t,batchDims:r};return q.runKernel(Zf,a,o)}const Th=ee({gather_:YK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jK(n,e){let t=F(n,"a","greater","string_or_numeric"),r=F(e,"b","greater","string_or_numeric");[t,r]=En(t,r),Ct(t.shape,r.shape);const s={a:t,b:r};return q.runKernel(Hf,s)}const ts=ee({greater_:jK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QK(n,e){let t=F(n,"a","greaterEqual","string_or_numeric"),r=F(e,"b","greaterEqual","string_or_numeric");[t,r]=En(t,r),Ct(t.shape,r.shape);const s={a:t,b:r};return q.runKernel($d,s)}const po=ee({greaterEqual_:QK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JK(n){const e={input:F(n,"input","imag")};return q.runKernel(_b,e)}const Dm=ee({imag_:JK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qK(n){const e={x:F(n,"x","isFinite")};return q.runKernel(Xd,e)}const NT=ee({isFinite_:qK});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e9(n){const e={x:F(n,"x","isInf")};return q.runKernel(Ud,e)}const ET=ee({isInf_:e9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t9(n){const e={x:F(n,"x","isNaN")};return q.runKernel(Zd,e)}const RT=ee({isNaN_:t9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n9(n,e=.2){const t={x:F(n,"x","leakyRelu")},r={alpha:e};return q.runKernel(Kf,t,r)}const Pm=ee({leakyRelu_:n9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r9(n,e){let t=F(n,"a","less","string_or_numeric"),r=F(e,"b","less","string_or_numeric");[t,r]=En(t,r),Ct(t.shape,r.shape);const s={a:t,b:r};return q.runKernel(Yf,s)}const cd=ee({less_:r9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s9(n,e){let t=F(n,"a","lessEqual","string_or_numeric"),r=F(e,"b","lessEqual","string_or_numeric");[t,r]=En(t,r),Ct(t.shape,r.shape);const s={a:t,b:r};return q.runKernel(jf,s)}const xl=ee({lessEqual_:s9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i9(n,e=5,t=1,r=1,s=.5){const i=F(n,"x","localResponseNormalization");P(i.rank===4||i.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${i.rank}.`),P(bu(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=i,o=!1;i.rank===3&&(o=!0,a=se(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:a},u={depthRadius:e,bias:t,alpha:r,beta:s},d=q.runKernel(em,l,u);return o?se(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const LT=ee({localResponseNormalization_:i9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a9(n){const e={x:F(n,"x","log","float32")};return q.runKernel(Hd,e)}const zs=ee({log_:a9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o9(n){const e={x:F(n,"x","log1p")};return q.runKernel(Kd,e)}const Fm=ee({log1p_:o9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l9(n){return P(sl(n),()=>"The f passed in grad(f) must be a function"),(e,t)=>{const r=F(e,"x","tf.grad","string_or_numeric"),s=t!=null?F(t,"dy","tf.grad"):null;return q.tidy(()=>{const{value:i,grads:a}=q.gradients(()=>n(r),[r],s);return s!=null&&Lr(i.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),gx(a),a[0]})}}function u9(n){return P(sl(n),()=>"The f passed in grads(f) must be a function"),(e,t)=>{P(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=cf(e,"args","tf.grads","string_or_numeric"),s=t!=null?F(t,"dy","tf.grads"):null;return q.tidy(()=>{const{value:i,grads:a}=q.gradients(()=>n(...r),r,s);return s!=null&&Lr(i.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),gx(a),a})}}function c9(n){return P(sl(n),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{P(e instanceof Ht,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),P(t==null||t instanceof Ht,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:s}=q.gradients(()=>n(e),[e],t);return gx(r),{grad:r[0],value:s}}}function d9(n){return P(sl(n),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{P(Array.isArray(e)&&e.every(s=>s instanceof Ht),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),P(t==null||t instanceof Ht,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=q.gradients(()=>n(...e),e,t);return t!=null&&Lr(r.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),gx(r.grads),r}}function qL(n,e){P(sl(n),()=>"The f passed in variableGrads(f) must be a function"),P(e==null||Array.isArray(e)&&e.every(u=>u instanceof uf),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const u in q.registeredVariables)e.push(q.registeredVariables[u])}const r=t?e.filter(u=>!u.trainable):null,s=e.length;e=e.filter(u=>u.trainable),P(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const i=!0,{value:a,grads:o}=q.gradients(n,e,null,i);P(o.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),P(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const l={};return e.forEach((u,d)=>{o[d]!=null&&(l[u.name]=o[d])}),r?.forEach(u=>l[u.name]=null),{value:a,grads:l}}function Ca(n){return q.customGrad(n)}function gx(n){if(n.filter(e=>e==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h9(n){const e={x:F(n,"x","neg")};return q.runKernel(om,e)}const dn=ee({neg_:h9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p9(n){const e={x:F(n,"x","softplus")};return q.runKernel(ch,e)}const Uu=ee({softplus_:p9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f9(n){const e=F(n,"x","logSigmoid");return Ca(t=>({value:dn(Uu(dn(t))),gradFunc:r=>ne(r,$i(dn(t)))}))(e)}const AT=ee({logSigmoid_:f9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m9(n,e){let t=F(n,"a","sub"),r=F(e,"b","sub");[t,r]=En(t,r);const s={a:t,b:r};return q.runKernel(ph,s)}const Ye=ee({sub_:m9});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g9(n,e=-1){const t=F(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return Ca((r,s)=>{const i=ni(r,e,!0),a=Ye(r,i),o=Ye(Oe(a,"float32"),zs(Qe(gs(a),e,!0)));return s([o]),{value:o,gradFunc:(l,u)=>{const[d]=u,h=!0,f=gs(d);return Ye(l,ne(Qe(l,e,h),f))}}})(t)}const yx=ee({logSoftmax_:g9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y9(n,e=null,t=!1){const r=F(n,"x","logSumExp"),s=At(e,r.shape),i=ni(r,s,!0),a=Ye(r,i),o=gs(a),l=Qe(o,s),u=zs(l),d=Ne(se(i,u.shape),u);if(t){const h=Bn(d.shape,s);return se(d,h)}return d}const Gm=ee({logSumExp_:y9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b9(n,e){const t=F(n,"a","logicalAnd","bool"),r=F(e,"b","logicalAnd","bool");Ct(t.shape,r.shape);const s={a:t,b:r};return q.runKernel(Qf,s)}const Ti=ee({logicalAnd_:b9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x9(n){const e={x:F(n,"x","logicalNot","bool")};return q.runKernel(Jf,e)}const Om=ee({logicalNot_:x9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v9(n,e){const t=F(n,"a","logicalOr","bool"),r=F(e,"b","logicalOr","bool");Ct(t.shape,r.shape);const s={a:t,b:r};return q.runKernel(qf,s)}const bx=ee({logicalOr_:v9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w9(n,e){const t=F(n,"a","logicalXor","bool"),r=F(e,"b","logicalXor","bool");return Ct(t.shape,r.shape),Ti(bx(n,e),Om(Ti(n,e)))}const zT=ee({logicalXor_:w9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S9(n,e,t,r,s){const i=F(n,"x","maxPool"),a=1;let o=i,l=!1;i.rank===3&&(l=!0,o=se(i,[1,i.shape[0],i.shape[1],i.shape[2]])),P(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),P(Ar(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),es("maxPool",r,s);const u={x:o},d={filterSize:e,strides:t,pad:r,dimRoundingMode:s},h=q.runKernel(nm,u,d);return l?se(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Wm=ee({maxPool_:S9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T9(n,e=[1,1,1],t,r,s,i="NDHWC"){const a=F(n,"x","maxPool3d");let o=a,l=!1;a.rank===4&&(l=!0,o=se(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),P(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),P(i==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),es("maxPool3d",r,s);const u={x:o},d={filterSize:e,strides:t,pad:r,dimRoundingMode:s,dataFormat:i},h=q.runKernel(rm,u,d);return l?se(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const DT=ee({maxPool3d_:T9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I9(n,e){let t=F(n,"a","maximum"),r=F(e,"b","maximum");[t,r]=En(t,r),t.dtype==="bool"&&(t=Oe(t,"int32"),r=Oe(r,"int32")),Ct(t.shape,r.shape);const s={a:t,b:r};return q.runKernel(Yd,s)}const Ma=ee({maximum_:I9});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k9(n,e=null,t=!1){const r={x:F(n,"x","mean")},s={axis:e,keepDims:t};return q.runKernel(sm,r,s)}const Mn=ee({mean_:k9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jn(n,e="float32"){if(Fs(n),e==="complex64"){const r=jn(n,"float32"),s=jn(n,"float32");return no(r,s)}const t=Er(be(n),e);return q.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ds(n,e="float32"){if(Fs(n),e==="complex64"){const r=ds(n,"float32"),s=jn(n,"float32");return no(r,s)}const t=tb(be(n),e);return q.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C9(n,e){let t=F(n,"a","minimum"),r=F(e,"b","minimum");[t,r]=En(t,r),t.dtype==="bool"&&(t=Oe(t,"int32"),r=Oe(r,"int32")),Ct(t.shape,r.shape);const s={a:t,b:r};return q.runKernel(jd,s)}const ll=ee({minimum_:C9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _9(n,e,t){P(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const r=F(n,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");P(e.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`);const s=t==="reflect"?1:0;for(let o=0;o<r.rank;o++)P(e[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),P(e[o][0]>=0&&e[o][0]<=r.shape[o]-s&&e[o][1]>=0&&e[o][1]<=r.shape[o]-s,()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-s} or less than 0 for input of shape ${r.shape}`);const i={paddings:e,mode:t},a={x:r};return q.runKernel(am,a,i)}const PT=ee({mirrorPad_:_9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M9(n,e){let t=F(n,"a","mod"),r=F(e,"b","mod");[t,r]=En(t,r);const s={a:t,b:r};return q.runKernel(Qd,s)}const FT=ee({mod_:M9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N9(n,e=null,t=!1){n=F(n,"x","moments");const r=At(e,n.shape),s=Mn(n,r,t);let i=s.shape;t||(i=Bn(s.shape,r));const a=nn(Ye(Oe(n,"float32"),se(s,i))),o=Mn(a,r,t);return{mean:s,variance:o}}const Vm=ee({moments_:N9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E9(n,e){let t=F(n,"a","notEqual","string_or_numeric"),r=F(e,"b","notEqual","string_or_numeric");[t,r]=En(t,r),Ct(t.shape,r.shape);const s={a:t,b:r};return q.runKernel(lm,s)}const Cu=ee({notEqual_:E9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R9(n,e,t=1,r=0,s="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const i={indices:F(n,"indices","oneHot","int32")},a={dtype:s,depth:e,onValue:t,offValue:r};return q.runKernel(cm,i,a)}const dd=ee({oneHot_:R9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L9(n){const e={x:F(n,"x","onesLike")};return q.runKernel(um,e)}const Ds=ee({onesLike_:L9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A9(n,e,t=0){const r=F(n,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:t},i={x:r};return q.runKernel(hm,i,s)}const fo=ee({pad_:A9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z9(n,e,t){const r=F(n,"x","spaceToBatchND");P(r.rank>=1+e.length,()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`),P(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),P(r.shape.reduce((a,o,l)=>l>0&&l<=e.length?a&&(o+t[l-1][0]+t[l-1][1])%e[l-1]===0:a,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const s={x:r},i={blockShape:e,paddings:t};return q.runKernel(Sm,s,i)}const $m=ee({spaceToBatchND_:z9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D9(n,e,t,r,s,i,a){s==null&&(s=[1,1]),i==null&&(i=1),r===0&&(r="valid");const o=F(n,"x","maxPool");let l=o,u=!1;o.rank===3&&(u=!0,l=se(o,[1,o.shape[0],o.shape[1],o.shape[2]])),P(Ar(i,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${s}'`);const d=Ii(l.shape,e,i,s,r),h=[d.dilationHeight,d.dilationWidth];let f;r==="same"?f=F9([d.filterHeight,d.filterWidth],h):f=[[0,0],[0,0]];const m=h[0]===1&&h[1]===1,[x,g]=P9([d.inHeight,d.inWidth],h,f),y=m?r:"valid",v=m?l:$m(l,h,x),w=(t==="avg"?()=>Lm(v,e,i,y,a):()=>Wm(v,e,i,y,a))(),I=m?w:Am(w,h,g);return u?se(I,[I.shape[1],I.shape[2],I.shape[3]]):I}function P9(n,e,t){const r=t.map(d=>d[0]),s=t.map(d=>d[1]),i=n.concat(r,s),a=e.map((d,h)=>(d-i[h]%d)%d),o=s.map((d,h)=>d+a[h]),l=e.map((d,h)=>[r[h],o[h]]),u=e.map((d,h)=>[0,a[h]]);return[l,u]}function F9(n,e){const t=n.map((i,a)=>i+(i-1)*(e[a]-1)).map(i=>i-1),r=t.map(i=>Math.floor(i/2)),s=t.map((i,a)=>i-r[a]);return t.map((i,a)=>[r[a],s[a]])}const GT=ee({pool_:D9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G9(n,e){const t=F(n,"x","prelu"),r=F(e,"alpha","prelu"),s={x:t,alpha:r};return q.runKernel(pm,s)}const Bm=ee({prelu_:G9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O9(n,e=null,t=!1){let r=F(n,"x","prod");r.dtype==="bool"&&(r=Oe(r,"int32"));const s={x:r},i={axis:e,keepDims:t};return q.runKernel(fm,s,i)}const OT=ee({prod_:O9});var eA={exports:{}};(function(n){(function(e,t,r){function s(l){var u=this,d=o();u.next=function(){var h=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=h-(u.c=h|0)},u.c=1,u.s0=d(" "),u.s1=d(" "),u.s2=d(" "),u.s0-=d(l),u.s0<0&&(u.s0+=1),u.s1-=d(l),u.s1<0&&(u.s1+=1),u.s2-=d(l),u.s2<0&&(u.s2+=1),d=null}function i(l,u){return u.c=l.c,u.s0=l.s0,u.s1=l.s1,u.s2=l.s2,u}function a(l,u){var d=new s(l),h=u&&u.state,f=d.next;return f.int32=function(){return d.next()*4294967296|0},f.double=function(){return f()+(f()*2097152|0)*11102230246251565e-32},f.quick=f,h&&(typeof h=="object"&&i(h,d),f.state=function(){return i(d,{})}),f}function o(){var l=4022871197,u=function(d){d=String(d);for(var h=0;h<d.length;h++){l+=d.charCodeAt(h);var f=.02519603282416938*l;l=f>>>0,f-=l,f*=l,l=f>>>0,f-=l,l+=f*4294967296}return(l>>>0)*23283064365386963e-26};return u}t&&t.exports?t.exports=a:this.alea=a})($u,n)})(eA);var W9=eA.exports,tA={exports:{}};(function(n){(function(e,t,r){function s(o){var l=this,u="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},o===(o|0)?l.x=o:u+=o;for(var d=0;d<u.length+64;d++)l.x^=u.charCodeAt(d)|0,l.next()}function i(o,l){return l.x=o.x,l.y=o.y,l.z=o.z,l.w=o.w,l}function a(o,l){var u=new s(o),d=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var f=u.next()>>>11,m=(u.next()>>>0)/4294967296,x=(f+m)/(1<<21);while(x===0);return x},h.int32=u.next,h.quick=h,d&&(typeof d=="object"&&i(d,u),h.state=function(){return i(u,{})}),h}t&&t.exports?t.exports=a:this.xor128=a})($u,n)})(tA);var V9=tA.exports,nA={exports:{}};(function(n){(function(e,t,r){function s(o){var l=this,u="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,o===(o|0)?l.x=o:u+=o;for(var d=0;d<u.length+64;d++)l.x^=u.charCodeAt(d)|0,d==u.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function i(o,l){return l.x=o.x,l.y=o.y,l.z=o.z,l.w=o.w,l.v=o.v,l.d=o.d,l}function a(o,l){var u=new s(o),d=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var f=u.next()>>>11,m=(u.next()>>>0)/4294967296,x=(f+m)/(1<<21);while(x===0);return x},h.int32=u.next,h.quick=h,d&&(typeof d=="object"&&i(d,u),h.state=function(){return i(u,{})}),h}t&&t.exports?t.exports=a:this.xorwow=a})($u,n)})(nA);var $9=nA.exports,rA={exports:{}};(function(n){(function(e,t,r){function s(o){var l=this;l.next=function(){var d=l.x,h=l.i,f,m;return f=d[h],f^=f>>>7,m=f^f<<24,f=d[h+1&7],m^=f^f>>>10,f=d[h+3&7],m^=f^f>>>3,f=d[h+4&7],m^=f^f<<7,f=d[h+7&7],f=f^f<<13,m^=f^f<<9,d[h]=m,l.i=h+1&7,m};function u(d,h){var f,m=[];if(h===(h|0))m[0]=h;else for(h=""+h,f=0;f<h.length;++f)m[f&7]=m[f&7]<<15^h.charCodeAt(f)+m[f+1&7]<<13;for(;m.length<8;)m.push(0);for(f=0;f<8&&m[f]===0;++f);for(f==8?m[7]=-1:m[f],d.x=m,d.i=0,f=256;f>0;--f)d.next()}u(l,o)}function i(o,l){return l.x=o.x.slice(),l.i=o.i,l}function a(o,l){o==null&&(o=+new Date);var u=new s(o),d=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var f=u.next()>>>11,m=(u.next()>>>0)/4294967296,x=(f+m)/(1<<21);while(x===0);return x},h.int32=u.next,h.quick=h,d&&(d.x&&i(d,u),h.state=function(){return i(u,{})}),h}t&&t.exports?t.exports=a:this.xorshift7=a})($u,n)})(rA);var B9=rA.exports,sA={exports:{}};(function(n){(function(e,t,r){function s(o){var l=this;l.next=function(){var d=l.w,h=l.X,f=l.i,m,x;return l.w=d=d+1640531527|0,x=h[f+34&127],m=h[f=f+1&127],x^=x<<13,m^=m<<17,x^=x>>>15,m^=m>>>12,x=h[f]=x^m,l.i=f,x+(d^d>>>16)|0};function u(d,h){var f,m,x,g,y,v=[],w=128;for(h===(h|0)?(m=h,h=null):(h=h+"\0",m=0,w=Math.max(w,h.length)),x=0,g=-32;g<w;++g)h&&(m^=h.charCodeAt((g+32)%h.length)),g===0&&(y=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,g>=0&&(y=y+1640531527|0,f=v[g&127]^=m+y,x=f==0?x+1:0);for(x>=128&&(v[(h&&h.length||0)&127]=-1),x=127,g=512;g>0;--g)m=v[x+34&127],f=v[x=x+1&127],m^=m<<13,f^=f<<17,m^=m>>>15,f^=f>>>12,v[x]=m^f;d.w=y,d.X=v,d.i=x}u(l,o)}function i(o,l){return l.i=o.i,l.w=o.w,l.X=o.X.slice(),l}function a(o,l){o==null&&(o=+new Date);var u=new s(o),d=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var f=u.next()>>>11,m=(u.next()>>>0)/4294967296,x=(f+m)/(1<<21);while(x===0);return x},h.int32=u.next,h.quick=h,d&&(d.X&&i(d,u),h.state=function(){return i(u,{})}),h}t&&t.exports?t.exports=a:this.xor4096=a})($u,n)})(sA);var X9=sA.exports,iA={exports:{}};(function(n){(function(e,t,r){function s(o){var l=this,u="";l.next=function(){var h=l.b,f=l.c,m=l.d,x=l.a;return h=h<<25^h>>>7^f,f=f-m|0,m=m<<24^m>>>8^x,x=x-h|0,l.b=h=h<<20^h>>>12^f,l.c=f=f-m|0,l.d=m<<16^f>>>16^x,l.a=x-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,o===Math.floor(o)?(l.a=o/4294967296|0,l.b=o|0):u+=o;for(var d=0;d<u.length+20;d++)l.b^=u.charCodeAt(d)|0,l.next()}function i(o,l){return l.a=o.a,l.b=o.b,l.c=o.c,l.d=o.d,l}function a(o,l){var u=new s(o),d=l&&l.state,h=function(){return(u.next()>>>0)/4294967296};return h.double=function(){do var f=u.next()>>>11,m=(u.next()>>>0)/4294967296,x=(f+m)/(1<<21);while(x===0);return x},h.int32=u.next,h.quick=h,d&&(typeof d=="object"&&i(d,u),h.state=function(){return i(u,{})}),h}t&&t.exports?t.exports=a:this.tychei=a})($u,n)})(iA);var U9=iA.exports,aA={exports:{}};const Z9={},H9=Object.freeze(Object.defineProperty({__proto__:null,default:Z9},Symbol.toStringTag,{value:"Module"})),K9=sZ(H9);(function(n){(function(e,t,r){var s=256,i=6,a=52,o="random",l=r.pow(s,i),u=r.pow(2,a),d=u*2,h=s-1,f;function m(T,C,E){var L=[];C=C==!0?{entropy:!0}:C||{};var M=v(y(C.entropy?[T,I(t)]:T??w(),3),L),R=new x(L),z=function(){for(var X=R.g(i),U=l,G=0;X<u;)X=(X+G)*s,U*=s,G=R.g(1);for(;X>=d;)X/=2,U/=2,G>>>=1;return(X+G)/U};return z.int32=function(){return R.g(4)|0},z.quick=function(){return R.g(4)/4294967296},z.double=z,v(I(R.S),t),(C.pass||E||function(X,U,G,V){return V&&(V.S&&g(V,R),X.state=function(){return g(R,{})}),G?(r[o]=X,U):X})(z,M,"global"in C?C.global:this==r,C.state)}function x(T){var C,E=T.length,L=this,M=0,R=L.i=L.j=0,z=L.S=[];for(E||(T=[E++]);M<s;)z[M]=M++;for(M=0;M<s;M++)z[M]=z[R=h&R+T[M%E]+(C=z[M])],z[R]=C;(L.g=function(X){for(var U,G=0,V=L.i,Z=L.j,J=L.S;X--;)U=J[V=h&V+1],G=G*s+J[h&(J[V]=J[Z=h&Z+U])+(J[Z]=U)];return L.i=V,L.j=Z,G})(s)}function g(T,C){return C.i=T.i,C.j=T.j,C.S=T.S.slice(),C}function y(T,C){var E=[],L=typeof T,M;if(C&&L=="object")for(M in T)try{E.push(y(T[M],C-1))}catch{}return E.length?E:L=="string"?T:T+"\0"}function v(T,C){for(var E=T+"",L,M=0;M<E.length;)C[h&M]=h&(L^=C[h&M]*19)+E.charCodeAt(M++);return I(C)}function w(){try{var T;return f&&(T=f.randomBytes)?T=T(s):(T=new Uint8Array(s),(e.crypto||e.msCrypto).getRandomValues(T)),I(T)}catch{var C=e.navigator,E=C&&C.plugins;return[+new Date,e,E,e.screen,I(t)]}}function I(T){return String.fromCharCode.apply(0,T)}if(v(r.random(),t),n.exports){n.exports=m;try{f=K9}catch{}}else r["seed"+o]=m})(typeof self<"u"?self:$u,[],Math)})(aA);var Y9=aA.exports,j9=W9,Q9=V9,J9=$9,q9=B9,e6=X9,t6=U9,Zu=Y9;Zu.alea=j9;Zu.xor128=Q9;Zu.xorwow=J9;Zu.xorshift7=q9;Zu.xor4096=e6;Zu.tychei=t6;var Ih=Zu;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WT{constructor(e,t,r,s,i){this.mean=e,this.stdDev=t,this.dtype=r,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=i||Math.random();this.random=Ih.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const s=this.nextVal;return this.nextVal=NaN,s}let e,t,r=!1;for(;!r;){let s,i,a;do s=2*this.random()-1,i=2*this.random()-1,a=s*s+i*i;while(a>=1||a===0);const o=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*o,t=this.mean+this.stdDev*i*o,(!this.truncated||this.isValidTruncated(e))&&(r=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class n6{constructor(e,t,r,s){this.alpha=e,this.beta=1/t,this.dtype=r;const i=s||Math.random();this.randu=Ih.alea(i.toString()),this.randn=new WT(0,1,r,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,r,s,i,a;for(;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,r=.5*e+this.d*(1-a+Math.log(a)),i=this.randu(),i<t||Math.log(i)<r)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class r6{constructor(e=0,t=1,r,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=r,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Ih.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s6(n,e=0,t=1,r,s){if(Fs(n),r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);const i=new WT(e,t,r,!1,s),a=Et(n,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const xx=ee({randomNormal_:s6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i6(n,e=0,t=1,r="float32",s){Fs(n);const i=Et(n,r),a=new r6(e,t,null,s);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}const vl=ee({randomUniform_:i6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _u(n,e,t=1,r="float32"){if(t===0)throw new Error("Cannot have a step of zero");const s={start:n,stop:e,step:t,dtype:r};return q.runKernel(Wb,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a6(n){const e={input:F(n,"input","real")};return q.runKernel(Vb,e)}const hd=ee({real_:a6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o6(n){const e={x:F(n,"x","reciprocal")};return q.runKernel(eh,e)}const VT=ee({reciprocal_:o6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l6(n){const e={x:F(n,"x","relu")};return q.runKernel(th,e)}const Qi=ee({relu_:l6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u6(n){const e={x:F(n,"x","relu6")};return q.runKernel(nh,e)}const vx=ee({relu6_:u6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c6(n,e){const t={x:F(n,"x","reverse")},r={dims:e};return q.runKernel(bm,t,r)}const ri=ee({reverse_:c6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d6(n){const e={x:F(n,"x","round")};return q.runKernel(rh,e)}const wx=ee({round_:d6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h6(n){const e={x:F(n,"x","rsqrt","float32")};return q.runKernel(sh,e)}const Sx=ee({rsqrt_:h6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p6(n){const e={x:F(n,"x","selu")};return q.runKernel(ih,e)}const Tx=ee({selu_:p6});function f6(n,e,t,r,s,i=[1,1],a="NHWC"){const o=F(n,"x","separableConv2d"),l=F(e,"depthwiseFilter","separableConv2d"),u=F(t,"pointwiseFilter","separableConv2d");let d=o,h=!1;if(o.rank===3&&(h=!0,d=se(o,[1,o.shape[0],o.shape[1],o.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");P(d.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${d.rank}.`),P(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),P(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),P(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),P(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const f=l.shape[2],m=l.shape[3];P(u.shape[2]===f*m,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${f*m}, but got ${u.shape[2]}.`);const x=xh(d,l,r,s,a,i),g=ro(x,u,1,"valid",a);return h?se(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const Ix=ee({separableConv2d_:f6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m6(n){const e={x:F(n,"x","sign")};return q.runKernel(lh,e)}const $T=ee({sign_:m6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g6(n){const e={x:F(n,"x","sin","float32")};return q.runKernel(ah,e)}const kx=ee({sin_:g6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y6(n){const e={x:F(n,"x","sinh")};return q.runKernel(oh,e)}const Cx=ee({sinh_:y6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b6(n,e,t){const r=F(n,"x","slice1d");return P(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),$t(r,[e],[t])}const Xm=ee({slice1d_:b6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x6(n,e,t){const r=F(n,"x","slice2d");return P(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),$t(r,e,t)}const _x=ee({slice2d_:x6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v6(n,e,t){const r=F(n,"x","slice3d");return P(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),$t(r,e,t)}const Um=ee({slice3d_:v6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w6(n,e,t){const r=F(n,"x","slice4d");return P(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),$t(r,e,t)}const pd=ee({slice4d_:w6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S6(n,e=-1){const t=F(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const r={logits:t},s={dim:e};return q.runKernel(Im,r,s)}const Zm=ee({softmax_:S6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T6(n){P(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return q.runKernel(Sb,e)}const Hm=ee({fft_:T6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I6(n){P(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return q.runKernel(Cb,e)}const fd=ee({ifft_:I6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k6(n){const e=n.shape[n.shape.length-1],t=n.size/e;let r;if(e<=2){const s=se(n,[t,e]);r=fd(s)}else{const s=[t,2*(e-1)],i=se(hd(n),[t,e]),a=se(Dm(n),[t,e]),o=ri($t(i,[0,1],[t,e-2]),1),l=ne(ri($t(a,[0,1],[t,e-2]),1),ct(-1)),u=$n([i,o],1),d=$n([a,l],1),h=se(no(u,d),[s[0],s[1]]);r=fd(h)}if(r=hd(r),n.rank===3&&n.shape[0]!==0){const s=r,i=n.shape[0];r=se(r,[i,r.shape[0]/i,r.shape[1]]),s.dispose()}return r}const Mx=ee({irfft_:k6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C6(n,e,t=0){const r={x:F(n,"x","split")},s={numOrSizeSplits:e,axis:t};return q.runKernel(Tm,r,s)}const hs=ee({split_:C6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _6(n,e){P(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const r=n.size/t;let s;if(e!=null&&e<t){const x=n.shape.map(y=>0),g=n.shape.map(y=>y);g[n.shape.length-1]=e,s=$t(n,x,g),t=e}else if(e!=null&&e>t){const x=n.shape.map(g=>g);x[n.shape.length-1]=e-t,s=$n([n,jn(x)],n.shape.length-1),t=e}else s=n;const i=Bt(s),a=se(no(s,i),[r,t]),o=Hm(a),l=Math.floor(t/2)+1,u=hd(o),d=Dm(o),h=hs(u,[l,t-l],u.shape.length-1),f=hs(d,[l,t-l],d.shape.length-1),m=s.shape.slice();return m[s.shape.length-1]=l,se(no(h[0],f[0]),m)}const Km=ee({rfft_:_6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M6(n,e){let t=F(n,"a","squaredDifference"),r=F(e,"b","squaredDifference");[t,r]=En(t,r),Ct(t.shape,r.shape);const s={a:t,b:r},i={};return q.runKernel(hh,s,i)}const Nx=ee({squaredDifference_:M6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N6(n,e){const t=F(n,"x","squeeze","string_or_numeric");return se(t,lo(t.shape,e).newShape)}const wl=ee({squeeze_:N6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E6(n,e=0){const t=cf(n,"tensors","stack","string_or_numeric");P(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&P(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const r=t,s={axis:e};return q.runKernel(dm,r,s)}const Wr=ee({stack_:E6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R6(n,e=0){const t={x:F(n,"x","step")},r={alpha:e};return q.runKernel(yh,t,r)}const Hu=ee({step_:R6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L6(n,e,t,r,s=0,i=0,a=0,o=0,l=0){const u={x:F(n,"x","stridedSlice","string_or_numeric")},d={begin:e,end:t,strides:r,beginMask:s,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return q.runKernel(qb,u,d)}const BT=ee({stridedSlice_:L6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A6(n){const e={x:F(n,"x","tan","float32")};return q.runKernel(fh,e)}const XT=ee({tan_:A6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nr(n,e){Gu(n);const t=ka(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return gl(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qo(n,e,t){if(Gu(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const r=ka(n,t);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return gl(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UT(n,e,t){if(Gu(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const r=ka(n,t);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return gl(n,e,r,t)}function ZT(n,e,t){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${r}, and batchDim: ${s}.`;if(t.rank<s)throw new Error(i+` update.rank < ${s}. `);if(n.length<r+(t.rank-s))throw new Error(i+` Output shape length < ${r+(t.rank-s)}`);if(t.rank!==s+n.length-r)throw new Error(i+` update.rank != ${s+n.length-r}`);for(let a=0;a<s;++a)if(t.shape[a]!==e.shape[a])throw new Error(i+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-s;++a)if(t.shape[a+s]!==n[a+r])throw new Error(i+` updates.shape[${a+s}] (${t.shape[a+s]}) != shape[${a+s}] (${n[a+s]})`)}function Ex(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}ZT(t,e,n)}function Sl(n,e,t){const r=e.shape.length,s=r>1?e.shape[r-1]:1,i=t.length;let a=1;for(let h=s;h<i;++h)a*=t[h];const o=s<1?1:s,l=be(e.shape)/o,u=[...ut(t.slice(0,s)),1],d=be(t);return{sliceRank:s,numUpdates:l,sliceSize:a,strides:u,outputSize:d}}const z6=Object.freeze(Object.defineProperty({__proto__:null,calculateShapes:Sl,validateInput:Ex,validateUpdateShape:ZT},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D6(n,e=1,t=!0){const r=F(n,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const i={x:r},a={k:e,sorted:t},[o,l]=q.runKernel(rx,i,a);return{values:o,indices:l}}const HT=ee({topk_:D6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P6(n,e=0,t=1,r,s){if(Fs(n),r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");const i=new WT(e,t,r,!0,s),a=Et(n,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const Rx=ee({truncatedNormal_:P6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F6(n,e=0){const t=F(n,"x","unique","string_or_numeric");P(t.rank>0,()=>"The input tensor must be at least 1D");const r={x:t},s={axis:e},[i,a]=q.runKernel(ix,r,s);return{values:i,indices:a}}const KT=ee({unique_:F6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G6(n,e,t){const r=F(n,"x","unsortedSegmentSum"),s=F(e,"segmentIds","unsortedSegmentSum","int32");P(bu(t),()=>"numSegments must be of dtype int");const i={x:r,segmentIds:s},a={numSegments:t};return q.runKernel(_m,i,a)}const Lx=ee({unsortedSegmentSum_:G6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O6(n,e=0){const t=F(n,"x","unstack","string_or_numeric");P(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const r={value:t},s={axis:e};return q.runKernel(Cm,r,s)}const si=ee({unstack_:O6});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YT(n,e=!0,t,r){return q.makeVariable(n,e,t,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ax(n,e){const t=[];for(let i=0;i<e.length;i++)e[i]&&t.push(i);const r=Et(n,"int32"),s=Et([t.length,n.length],"int32");for(let i=0;i<t.length;i++){const a=r.indexToLoc(t[i]),o=i*n.length;s.values.set(a,o)}return s.toTensor()}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W6(n,e,t){const r=F(n,"x","transpose");if(e==null&&(e=r.shape.map((a,o)=>o).reverse()),P(r.rank===e.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${e}.`),e.forEach(a=>{P(a>=0&&a<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${e}`)}),r.rank<=1)return r.clone();const s={x:r},i={perm:e};return r.dtype==="complex64"?le(()=>{let a=hd(r),o=Dm(r);return a=q.runKernel(cu,{x:a},i),o=q.runKernel(cu,{x:o},i),t&&(o=dn(o)),no(a,o)}):q.runKernel(cu,s,i)}const Gt=ee({transpose_:W6});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V6(n,e){if(e==null)return n.shape.slice();if(Ft(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let r=0;r<n.shape.length;r++)e[r]==null&&n.shape[r]!=null?t.push(n.shape[r]):t.push(e[r]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $6(n,e,t,r){const s=F(n,"x","dropout");if(P(s.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),P(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof Ht?s.clone():s;const i=V6(s,t),a=1-e,o=at(Sh(Ne(vl(i,0,1,"float32",r),a)),a);return ne(s,o)}const jT=ee({dropout_:$6});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QT(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function zx(n,e,t){const r=1-n%2,s=new Float32Array(n);for(let i=0;i<n;++i){const a=2*Math.PI*i/(n+r-1);s[i]=e-t*Math.cos(a)}return Nr(s,"float32")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B6(n,e,t,r,s,i="NHWC",a){let o=n;n.rank===3&&(o=se(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=se(e,[1,e.shape[0],e.shape[1],e.shape[2]])),P(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),P(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),P(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const u=i==="NHWC"?o.shape[3]:o.shape[1],d=i==="NHWC"?l.shape[3]:l.shape[1];P(u===t[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${t[2]}.`),P(d===t[3],()=>`Error in conv2dDerFilter: depth of dy (${d}) must match output depth for filter (${t[3]}).`),es("conv2dDerFilter",s,a);const h={x:o,dy:l},f={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,filterShape:t};return q.runKernel(ub,h,f)}const JT=ee({conv2DBackpropFilter_:B6});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dx(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return ne(n,Hu(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function Px(n,e){let t=e;const r=qn(n.shape,e.shape);return r.length>0&&(t=Qe(t,r)),se(t,n.shape)}function Fx(n,e,t,r){if(e==="linear")return n;if(e==="relu")return Qi(n);if(e==="elu")return vh(n);if(e==="relu6")return vx(n);if(e==="prelu")return Bm(n,t);if(e==="leakyrelu")return Pm(n,r);if(e==="sigmoid")return $i(n);throw new Error(`Unknown fused activation ${e}.`)}const Gx=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X6({x:n,filter:e,strides:t,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:d}){if(l=l||"linear",Gx(q.state.gradientDepth,l)===!1){P(s==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let E=ro(n,e,t,r,s,i,a);return o!=null&&(E=Ne(E,o)),Fx(E,l,u,d)}const h=F(n,"x","conv2d","float32"),f=F(e,"filter","conv2d","float32");let m=h,x=!1;h.rank===3&&(x=!0,m=se(h,[1,h.shape[0],h.shape[1],h.shape[2]])),P(m.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${m.rank}.`),P(f.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${f.rank}.`),es("fused conv2d",r,a);const g=s==="NHWC"?m.shape[3]:m.shape[1];P(f.shape[2]===g,()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${f.shape[2]}.`),P(Ar(t,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);const y=yr(m.shape,f.shape,t,i,r,a);let v;o!=null&&(v=F(o,"bias","fused conv2d"),[v]=En(v,h),s==="NHWC"?Ct(y.outShape,v.shape):(P(v.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${v.shape.length}.`),P(v.shape.length===0||v.shape[0]===y.outChannels||v.shape[0]===1,()=>`Error in fused conv2d: bias shape (${v.shape}) is not compatible with the number of output channels (${y.outChannels})`)));let w;if(u!=null){const E=u.shape;if(P(E.length<=1||E.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${E.length}.`),E.length===1)P(E[0]===1||E[0]===y.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${E}) is not compatible with the number of output channels (${y.outChannels}).`);else if(E.length===3)try{Ct(E,y.outShape)}catch{const L=`Error in fused conv2d: PReLU activation weights (${E}) is not compatible with the output shape of the conv2d (${y.outShape}).`;throw Error(L)}w=F(u,"prelu weights","fused conv2d")}const I=(E,L)=>{P(s==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`);const[M,R,z,X]=L,U=Dx(E,z,l);P(ol(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);const G=bT(R.shape,U,M,t,r),V=JT(R,U,M.shape,t,r),Z=[G,V];if(X!=null){const J=Px(X,U);Z.push(J)}return Z},T={x:m,filter:f,bias:v,preluActivationWeights:w},C={strides:t,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:d};return o==null?Ca((E,L,M)=>{let R=q.runKernel(sf,T,C);return M([L,E,R]),x&&(R=se(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:I}})(m,f):Ca((E,L,M,R)=>{let z=q.runKernel(sf,T,C);return R([L,E,z,M]),x&&(z=se(z,[z.shape[1],z.shape[2],z.shape[3]])),{value:z,gradFunc:I}})(m,f,v)}const oA=ee({fusedConv2d_:X6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U6(n,e,t,r,s,i=[1,1],a){let o=n;n.rank===3&&(o=se(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=se(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:o,dy:l},d={strides:r,pad:s,dimRoundingMode:a,dilations:i,filterShape:t};return q.runKernel(gb,u,d)}const lA=ee({depthwiseConv2dNativeBackpropFilter_:U6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z6(n,e,t,r,s,i=[1,1],a){let o=e,l=!1;e.rank===3&&(l=!0,o=se(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:o,filter:t},d={strides:r,pad:s,dimRoundingMode:a,dilations:i,inputShape:n},h=q.runKernel(yb,u,d);return l?se(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const uA=ee({depthwiseConv2dNativeBackpropInput_:Z6});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H6({a:n,b:e,transposeA:t=!1,transposeB:r=!1,bias:s,activation:i="linear",preluActivationWeights:a,leakyreluAlpha:o=.2}){if(Gx(q.state.gradientDepth,i)===!1){let z=Lt(n,e,t,r);return s!=null&&(z=Ne(z,s)),Fx(z,i,a,o)}let l=F(n,"a","fused matMul"),u=F(e,"b","fused matMul");[l,u]=En(l,u);const d=t?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],f=t?l.shape[l.rank-1]:l.shape[l.rank-2],m=r?u.shape[u.rank-2]:u.shape[u.rank-1],x=l.shape.slice(0,-2),g=u.shape.slice(0,-2),y=be(x),v=be(g);P(d===h,()=>`Error in fused matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${t} and transposeB=${r} must match.`);const w=Ct(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([f,m]),I=t?se(l,[y,d,f]):se(l,[y,f,d]),T=r?se(u,[v,m,h]):se(u,[v,h,m]);let C;s!=null&&(C=F(s,"bias","fused matMul"),[C]=En(C,l),Ct(w,C.shape));let E;a!=null&&(E=F(a,"prelu weights","fused matMul"));const L=(z,X)=>{const[U,G,V,Z]=X,J=Dx(se(z,V.shape),V,i);let te,O;if(!t&&!r?(te=Lt(J,G,!1,!0),O=Lt(U,J,!0,!1)):!t&&r?(te=Lt(J,G,!1,!1),O=Lt(J,U,!0,!1)):t&&!r?(te=Lt(G,J,!1,!0),O=Lt(U,J,!1,!1)):(te=Lt(G,J,!0,!0),O=Lt(J,U,!0,!0)),s!=null){const Q=Px(Z,J);return[te,O,Q]}else return[te,O]},M={a:I,b:T,bias:C,preluActivationWeights:E},R={transposeA:t,transposeB:r,activation:i,leakyreluAlpha:o};return s==null?Ca((z,X,U)=>{const G=q.runKernel(rf,M,R);return U([z,X,G]),{value:se(G,w),gradFunc:L}})(I,T):Ca((z,X,U,G)=>{const V=q.runKernel(rf,M,R);return G([z,X,V,U]),{value:se(V,w),gradFunc:L}})(I,T,C)}const XS=ee({fusedMatMul_:H6});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K6(n){return zx(n,.54,.46)}const Y6=ee({hammingWindow_:K6});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j6(n){return zx(n,.5,.5)}const cA=ee({hannWindow_:j6});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q6(n,e,t,r=!1,s=0){let i=0;const a=[];for(;i+e<=n.size;)a.push($t(n,i,e)),i+=t;if(r)for(;i<n.size;){const o=i+e-n.size,l=$n([$t(n,i,e-o),Xu([o],s)]);a.push(l),i+=t}return a.length===0?qo([],[0,e]):se($n(a),[a.length,e])}const dA=ee({frame_:Q6});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J6(n,e,t,r,s=cA){r==null&&(r=QT(e));const i=dA(n,e,t),a=ne(i,s(e));return Km(a,r)}const q6=ee({stft_:J6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eY(n,e,t,r,s="bilinear",i=0){const a=F(n,"image","cropAndResize"),o=F(e,"boxes","cropAndResize","float32"),l=F(t,"boxInd","cropAndResize","int32"),u=o.shape[0];P(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),P(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`),P(l.rank===1&&l.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`),P(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),P(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),P(s==="bilinear"||s==="nearest",()=>`method must be bilinear or nearest, but was ${s}`);const d={image:a,boxes:o,boxInd:l},h={method:s,extrapolationValue:i,cropSize:r};return q.runKernel(pb,d,h)}const tY=ee({cropAndResize_:eY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nY(n){const e=F(n,"image","flipLeftRight","float32");P(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return q.runKernel(Ib,t,{})}const rY=ee({flipLeftRight_:nY});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sY(n){const e=F(n,"image","grayscaleToRGB"),t=e.rank-1,r=e.shape[t];P(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),P(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const s=new Array(e.rank);return s.fill(1,0,t),s[t]=3,Ys(e,s)}const iY=ee({grayscaleToRGB_:sY});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aY(n){const e=F(n,"image","RGBToGrayscale"),t=e.rank-1,r=e.shape[t];P(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),P(r===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);const s=e.dtype,i=Oe(e,"float32"),a=Nr([.2989,.587,.114]);let o;switch(e.rank){case 2:o=Ql("ij,j->i",i,a);break;case 3:o=Ql("ijk,k->ij",i,a);break;case 4:o=Ql("ijkl,l->ijk",i,a);break;case 5:o=Ql("ijklm,m->ijkl",i,a);break;case 6:o=Ql("ijklmn,n->ijklm",i,a);break;default:throw new Error("Not a valid tensor rank.")}return o=Cr(o,-1),Oe(o,s)}const oY=ee({rgbToGrayscale_:aY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lY(n,e,t=0,r=.5){const s=F(n,"image","rotateWithOffset","float32");P(s.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);const i={image:s},a={radians:e,fillValue:t,center:r};return q.runKernel(ax,i,a)}const uY=ee({rotateWithOffset_:lY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kh(n,e,t,r,s,i){r==null&&(r=.5),s==null&&(s=Number.NEGATIVE_INFINITY),i==null&&(i=0);const a=n.shape[0];return t=Math.min(t,a),P(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),P(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),P(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),P(e.rank===1,()=>"scores must be a 1D tensor"),P(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),P(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:t,iouThreshold:r,scoreThreshold:s,softNmsSigma:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cY(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY){const i=F(n,"boxes","nonMaxSuppression","float32"),a=F(e,"scores","nonMaxSuppression","float32"),o=kh(i,a,t,r,s);t=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l={maxOutputSize:t,iouThreshold:r,scoreThreshold:s};return q.runKernel(zb,{boxes:i,scores:a},l)}const dY=ee({nonMaxSuppression_:cY});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hY(n,e,t){const r=pY(n,e,t),s=r<0?-(r+1):r;n.splice(s,0,e)}function pY(n,e,t){return mY(n,e,t||fY)}function fY(n,e){return n>e?1:n<e?-1:0}function mY(n,e,t){let r=0,s=n.length,i=0,a=!1;for(;r<s;){i=r+(s-r>>>1);const o=t(e,n[i]);o>0?r=i+1:(s=i,a=!o)}return a?r:-r-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ox(n,e,t,r,s){return qT(n,e,t,r,s,0)}function Wx(n,e,t,r,s,i){return qT(n,e,t,r,s,0,!1,i,!0)}function Vx(n,e,t,r,s,i){return qT(n,e,t,r,s,i,!0)}function qT(n,e,t,r,s,i,a=!1,o=!1,l=!1){const u=[];for(let y=0;y<e.length;y++)e[y]>s&&u.push({score:e[y],boxIndex:y,suppressBeginIndex:0});u.sort(JE);const d=i>0?-.5/i:0,h=[],f=[];for(;h.length<t&&u.length>0;){const y=u.pop(),{score:v,boxIndex:w,suppressBeginIndex:I}=y;if(v<s)break;let T=!1;for(let C=h.length-1;C>=I;--C){const E=gY(n,w,h[C]);if(E>=r){T=!0;break}if(y.score=y.score*yY(r,d,E),y.score<=s)break}y.suppressBeginIndex=h.length,T||(y.score===v?(h.push(w),f.push(y.score)):y.score>s&&hY(u,y,JE))}const m=h.length,x=t-m;o&&x>0&&(h.push(...new Array(x).fill(0)),f.push(...new Array(x).fill(0)));const g={selectedIndices:h};return a&&(g.selectedScores=f),l&&(g.validOutputs=m),g}function gY(n,e,t){const r=n.subarray(e*4,e*4+4),s=n.subarray(t*4,t*4+4),i=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),d=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),f=Math.max(s[1],s[3]),m=(o-i)*(l-a),x=(h-u)*(f-d);if(m<=0||x<=0)return 0;const g=Math.max(i,u),y=Math.max(a,d),v=Math.min(o,h),w=Math.min(l,f),I=Math.max(v-g,0)*Math.max(w-y,0);return I/(m+x-I)}function yY(n,e,t){const r=Math.exp(e*t*t);return t<=n?r:0}function JE(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function bY(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY){const i=F(n,"boxes","nonMaxSuppressionAsync"),a=F(e,"scores","nonMaxSuppressionAsync"),o=kh(i,a,t,r,s);t=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l=await Promise.all([i.data(),a.data()]),u=l[0],d=l[1],{selectedIndices:h}=Ox(u,d,t,r,s);return i!==n&&i.dispose(),a!==e&&a.dispose(),Nr(h,"int32")}const xY=bY;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vY(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=F(n,"boxes","nonMaxSuppression"),o=F(e,"scores","nonMaxSuppression"),l=kh(a,o,t,r,s,i);t=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,i=l.softNmsSigma;const u={boxes:a,scores:o},d={maxOutputSize:t,iouThreshold:r,scoreThreshold:s,softNmsSigma:i},h=q.runKernel(Pb,u,d);return{selectedIndices:h[0],selectedScores:h[1]}}const wY=ee({nonMaxSuppressionWithScore_:vY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function SY(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=F(n,"boxes","nonMaxSuppressionAsync"),o=F(e,"scores","nonMaxSuppressionAsync"),l=kh(a,o,t,r,s,i);t=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,i=l.softNmsSigma;const u=await Promise.all([a.data(),o.data()]),d=u[0],h=u[1],{selectedIndices:f,selectedScores:m}=Vx(d,h,t,r,s,i);return a!==n&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:Nr(f,"int32"),selectedScores:Nr(m)}}const TY=SY;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IY(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const a=F(n,"boxes","nonMaxSuppression"),o=F(e,"scores","nonMaxSuppression"),l=kh(a,o,t,r,s,null),u=l.maxOutputSize,d=l.iouThreshold,h=l.scoreThreshold,f={boxes:a,scores:o},m={maxOutputSize:u,iouThreshold:d,scoreThreshold:h,padToMaxOutputSize:i},x=q.runKernel(Db,f,m);return{selectedIndices:x[0],validOutputs:x[1]}}const kY=ee({nonMaxSuppressionPadded_:IY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function CY(n,e,t,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const a=F(n,"boxes","nonMaxSuppressionAsync"),o=F(e,"scores","nonMaxSuppressionAsync"),l=kh(a,o,t,r,s,null),u=l.maxOutputSize,d=l.iouThreshold,h=l.scoreThreshold,[f,m]=await Promise.all([a.data(),o.data()]),{selectedIndices:x,validOutputs:g}=Wx(f,m,u,d,h,i);return a!==n&&a.dispose(),o!==e&&o.dispose(),{selectedIndices:Nr(x,"int32"),validOutputs:ct(g,"int32")}}const _Y=CY;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MY(n,e,t=!1,r=!1){const s=F(n,"images","resizeBilinear");P(s.rank===3||s.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),P(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),P(r===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=s,a=!1;s.rank===3&&(a=!0,i=se(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const o={images:i},l={alignCorners:t,halfPixelCenters:r,size:e},u=q.runKernel(ym,o,l);return a?se(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const hA=ee({resizeBilinear_:MY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NY(n,e,t=!1,r=!1){const s=F(n,"images","resizeNearestNeighbor");P(s.rank===3||s.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),P(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),P(s.dtype==="float32"||s.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),P(r===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=s,a=!1;s.rank===3&&(a=!0,i=se(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const o={images:i},l={alignCorners:t,halfPixelCenters:r,size:e},u=q.runKernel(gm,o,l);return a?se(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const pA=ee({resizeNearestNeighbor_:NY});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EY(n,e="binary",t=!1,r=.5){const s=F(n,"image","threshold"),i=.2989,a=.587,o=.114,l=s.shape[0]*s.shape[1];let u=ne(Nr([r]),255),d,h,f,m;if(P(s.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),P(s.shape[2]===3||s.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),P(s.dtype==="int32"||s.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),P(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),s.shape[2]===3){[d,h,f]=hs(s,[1,1,1],-1);const g=ne(d,i),y=ne(h,a),v=ne(f,o);m=Ne(Ne(g,y),v)}else m=n;if(e==="otsu"){const g=hT(Oe(wx(m),"int32"),wn([]),256);u=RY(g,l)}const x=t?xl(m,u):ts(m,u);return Oe(ne(x,255),"int32")}function RY(n,e){let t=Nr([-1]),r=Nr([0]),s=Nr([0]),i,a,o,l,u,d;for(let h=0;h<n.size-1;h++){i=$t(n,0,h+1),a=$t(n,h+1),u=at(Qe(i),e),d=at(Qe(a),e);const f=Qe(ne(i,_u(0,i.size)));o=at(f,Qe(i));const m=Xu(a.shape,i.size),x=Ne(_u(0,a.size),m),g=ne(a,x);l=at(Qe(g),Qe(a));const y=Ye(o,l),v=Ye(o,l),w=ne(u,d);s=ne(ne(w,y),v);const I=ts(s,r);r=hr(I,s,r),t=hr(I,Nr([h]),t)}return t}const LY=ee({threshold_:EY});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AY(n,e,t="nearest",r="constant",s=0,i){const a=F(n,"image","transform","float32"),o=F(e,"transforms","transform","float32");P(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),P(o.rank===2&&(o.shape[0]===a.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),P(i==null||i.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`);const l={image:a,transforms:o},u={interpolation:t,fillMode:r,fillValue:s,outputShape:i};return q.runKernel(sx,l,u)}const zY=ee({transform_:AY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DY(n,e,t){const r=F(n,"a","bandPart");P(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[i,a]=r.shape.slice(-2);let o,l;typeof e=="number"?(P(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),P(e<=i,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`),o=F(e<0?i:e,"numLower","bandPart")):(P(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),o=hr(cd(e,0),i,ll(e,i))),typeof t=="number"?(P(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),P(t<=a,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`),l=F(t<0?a:t,"numUpper","bandPart")):(P(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=hr(cd(t,0),a,ll(t,a)));const u=se(_u(0,i,1,"int32"),[-1,1]),d=_u(0,a,1,"int32"),h=Ye(u,d),f=Ti(xl(h,o),po(h,dn(l))),m=jn([i,a],r.dtype);return se(Wr(si(se(r,[-1,i,a])).map(x=>hr(f,x,m))),s)}const PY=ee({bandPart_:DY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FY(n){let e;if(Array.isArray(n)){e=!1,P(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const s=n[0].shape[0];for(let i=1;i<n.length;++i)P(n[i].shape[0]===s,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[i].shape[0]} vs. ${s})`)}else e=!0,n=hs(n,n.shape[0],0).map(s=>wl(s,[0]));P(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],r=n;for(let s=0;s<n.length;++s)t.push(q.tidy(()=>{let i=r[s];if(s>0)for(let a=0;a<s;++a){const o=ne(Qe(ne(t[a],i)),t[a]);i=Ye(i,o)}return at(i,wh(i,"euclidean"))}));return e?Wr(t,0):t}const GY=ee({gramSchmidt_:FY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OY(n,e=!1){if(P(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return qE(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((l,u)=>l*u),r=si(se(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),s=[],i=[];r.forEach(l=>{const[u,d]=qE(l,e);s.push(u),i.push(d)});const a=se(Wr(s,0),n.shape),o=se(Wr(i,0),n.shape);return[a,o]}}function qE(n,e=!1){return q.tidy(()=>{P(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],r=n.shape[1];let s=mx(t),i=wa(n);const a=qo([[1]],[1,1]);let o=wa(a);const l=t>=r?r:t;for(let u=0;u<l;++u){const d=i,h=o,f=s;[o,i,s]=q.tidy(()=>{const m=$t(i,[u,u],[t-u,1]),x=wh(m),g=$t(i,[u,u],[1,1]),y=hr(ts(g,0),qo([[-1]]),qo([[1]])),v=Ye(g,ne(y,x)),w=at(m,v);w.shape[0]===1?o=wa(a):o=$n([a,$t(w,[1,0],[w.shape[0]-1,w.shape[1]])],0);const I=dn(at(Lt(y,v),x)),T=$t(i,[u,0],[t-u,r]),C=ne(I,o),E=Gt(o);if(u===0)i=Ye(T,Lt(C,Lt(E,T)));else{const R=Ye(T,Lt(C,Lt(E,T)));i=$n([$t(i,[0,0],[u,r]),R],0)}const L=Gt(C),M=$t(s,[0,u],[t,s.shape[1]-u]);if(u===0)s=Ye(M,Lt(Lt(M,o),L));else{const R=Ye(M,Lt(Lt(M,o),L));s=$n([$t(s,[0,0],[t,u]),R],1)}return[o,i,s]}),kt([d,h,f])}return!e&&t>r&&(s=$t(s,[0,0],[t,r]),i=$t(i,[0,0],[r,r])),[s,i]})}const WY=ee({qr_:OY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Qr;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Qr||(Qr={}));function VY(n,e,t=Qr.SUM_BY_NONZERO_WEIGHTS){const r=F(n,"losses","computeWeightedLoss");let s=null;e!=null&&(s=F(e,"weights","computeWeightedLoss"));const i=s==null?r:ne(r,s);if(t===Qr.NONE)return i;if(t===Qr.SUM)return Qe(i);if(t===Qr.MEAN){if(s==null)return Mn(i);{const a=r.size/s.size,o=at(Qe(i),Qe(s));return a>1?at(o,ct(a)):o}}if(t===Qr.SUM_BY_NONZERO_WEIGHTS){if(s==null)return at(Qe(i),ct(r.size));{const a=ne(s,ds(r.shape)),o=Oe(Qe(Cu(a,ct(0))),"float32");return at(Qe(i),o)}}throw Error(`Unknown reduction: ${t}`)}const mo=ee({computeWeightedLoss_:VY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $Y(n,e,t,r=Qr.SUM_BY_NONZERO_WEIGHTS){const s=F(n,"labels","absoluteDifference"),i=F(e,"predictions","absoluteDifference");let a=null;t!=null&&(a=F(t,"weights","absoluteDifference")),Lr(s.shape,i.shape,"Error in absoluteDifference: ");const o=Yn(Ye(s,i));return mo(o,a,r)}const BY=ee({absoluteDifference_:$Y});function XY(n,e,t,r,s=Qr.SUM_BY_NONZERO_WEIGHTS){const i=F(n,"labels","cosineDistance"),a=F(e,"predictions","cosineDistance");let o=null;r!=null&&(o=F(r,"weights","cosineDistance")),Lr(i.shape,a.shape,"Error in cosineDistance: ");const l=ct(1),u=Ye(l,Qe(ne(i,a),t,!0));return mo(u,o,s)}const UY=ee({cosineDistance_:XY});function ZY(n,e,t,r=Qr.SUM_BY_NONZERO_WEIGHTS){let s=F(n,"labels","hingeLoss");const i=F(e,"predictions","hingeLoss");let a=null;t!=null&&(a=F(t,"weights","hingeLoss")),Lr(s.shape,i.shape,"Error in hingeLoss: ");const o=ct(1);s=Ye(ne(ct(2),s),o);const l=Qi(Ye(o,ne(s,i)));return mo(l,a,r)}const HY=ee({hingeLoss_:ZY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KY(n,e,t,r=1,s=Qr.SUM_BY_NONZERO_WEIGHTS){const i=F(n,"labels","huberLoss"),a=F(e,"predictions","huberLoss");let o=null;t!=null&&(o=F(t,"weights","huberLoss")),Lr(i.shape,a.shape,"Error in huberLoss: ");const l=ct(r),u=Yn(Ye(a,i)),d=ll(u,l),h=Ye(u,d),f=Ne(ne(ct(.5),nn(d)),ne(l,h));return mo(f,o,s)}const YY=ee({huberLoss_:KY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jY(n,e,t,r=1e-7,s=Qr.SUM_BY_NONZERO_WEIGHTS){const i=F(n,"labels","logLoss"),a=F(e,"predictions","logLoss");let o=null;t!=null&&(o=F(t,"weights","logLoss")),Lr(i.shape,a.shape,"Error in logLoss: ");const l=ct(1),u=ct(r),d=dn(ne(i,zs(Ne(a,u)))),h=ne(Ye(l,i),zs(Ne(Ye(l,a),u))),f=Ye(d,h);return mo(f,o,s)}const QY=ee({logLoss_:jY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JY(n,e,t,r=Qr.SUM_BY_NONZERO_WEIGHTS){const s=F(n,"labels","meanSquaredError"),i=F(e,"predictions","meanSquaredError");let a=null;t!=null&&(a=F(t,"weights","meanSquaredError")),Lr(s.shape,i.shape,"Error in meanSquaredError: ");const o=Nx(s,i);return mo(o,a,r)}const qY=ee({meanSquaredError_:JY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ej(n,e){const t=F(n,"labels","sigmoidCrossEntropyWithLogits"),r=F(e,"logits","sigmoidCrossEntropyWithLogits");Lr(t.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Qi(r),i=ne(r,t),a=Fm(gs(dn(Yn(r))));return Ne(Ye(s,i),a)}function tj(n,e,t,r=0,s=Qr.SUM_BY_NONZERO_WEIGHTS){let i=F(n,"multiClassLabels","sigmoidCrossEntropy");const a=F(e,"logits","sigmoidCrossEntropy");let o=null;if(t!=null&&(o=F(t,"weights","sigmoidCrossEntropy")),Lr(i.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const u=ct(r),d=ct(1),h=ct(.5);i=Ne(ne(i,Ye(d,u)),ne(h,u))}const l=ej(i,a);return mo(l,o,s)}const nj=ee({sigmoidCrossEntropy_:tj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rj(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return Ca((r,s,i)=>{const a=Gm(s,[t],!0),o=Ye(Oe(s,"float32"),a);i([r,o]);const l=dn(ne(o,r));return{value:Qe(l,[t]),gradFunc:(u,d)=>{const[h,f]=d,m=Bn(u.shape,[t]);return[ne(se(u,m),Ye(Oe(h,"float32"),gs(f))),ne(se(u,m),Ye(gs(f),Oe(h,"float32")))]}}})(n,e)}function sj(n,e,t,r=0,s=Qr.SUM_BY_NONZERO_WEIGHTS){let i=F(n,"onehotLabels","softmaxCrossEntropy");const a=F(e,"logits","softmaxCrossEntropy");let o=null;if(t!=null&&(o=F(t,"weights","softmaxCrossEntropy")),Lr(i.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const u=ct(r),d=ct(1),h=ct(i.shape[1]);i=Ne(ne(i,Ye(d,u)),at(u,h))}const l=rj(i,a);return mo(l,o,s)}const ij=ee({softmaxCrossEntropy_:sj});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aj(n,e,t,r){const s=F(n,"indices","sparseFillEmptyRows","int32"),i=F(e,"values","sparseFillEmptyRows"),a=F(t,"denseShape","sparseFillEmptyRows","int32"),o=F(r,"defaultValue","sparseFillEmptyRows",i.dtype);if(s.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${s.shape}`);if(i.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:s,values:i,denseShape:a,defaultValue:o},u=q.runKernel(Hb,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}const oj=ee({sparseFillEmptyRows_:aj});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lj(n,e,t){const r=F(n,"inputIndices","sparseReshape","int32"),s=F(e,"inputShape","sparseReshape","int32"),i=F(t,"newShape","sparseReshape","int32");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(s.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(i.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);const a={inputIndices:r,inputShape:s,newShape:i},o=q.runKernel(Kb,a);return{outputIndices:o[0],outputShape:o[1]}}const uj=ee({sparseReshape_:lj});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cj(n,e,t){const r=F(n,"data","sparseSegmentMean"),s=F(e,"indices","sparseSegmentMean","int32"),i=F(t,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${s.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${i.shape}`);const a={data:r,indices:s,segmentIds:i};return q.runKernel(Yb,a)}const dj=ee({sparseSegmentMean_:cj});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hj(n,e,t){const r=F(n,"data","sparseSegmentSum"),s=F(e,"indices","sparseSegmentSum","int32"),i=F(t,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${s.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${i.shape}`);const a={data:r,indices:s,segmentIds:i};return q.runKernel(jb,a)}const pj=ee({sparseSegmentSum_:hj});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fj(n,e,t,r,s,i,a,o){const l=F(n,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=F(e,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const d={separator:t,nGramWidths:r,leftPad:s,rightPad:i,padWidth:a,preserveShortSequences:o},h={data:l,dataSplits:u},f=q.runKernel(ex,h,d);return{nGrams:f[0],nGramsSplits:f[1]}}const mj=ee({stringNGrams_:fj});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gj(n,e,t=!0){const r=F(n,"input","stringSplit","string"),s=F(e,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(s.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const i={skipEmpty:t},a={input:r,delimiter:s},o=q.runKernel(tx,a,i);return{indices:o[0],values:o[1],shape:o[2]}}const yj=ee({stringSplit_:gj});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bj(n,e){const t=F(n,"input","stringToHashBucketFast","string"),r={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const s={input:t};return q.runKernel(nx,s,r)}const xj=ee({stringToHashBucketFast_:bj});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vj(n,e,t,r=!0){const s=F(n,"input","staticRegexReplace","string"),i={pattern:e,rewrite:t,replaceGlobal:r};return q.runKernel(km,{x:s},i)}const wj=ee({staticRegexReplace_:vj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fA={fft:Hm,ifft:fd,rfft:Km,irfft:Mx},mA={hammingWindow:Y6,hannWindow:cA,frame:dA,stft:q6},Si={flipLeftRight:rY,grayscaleToRGB:iY,resizeNearestNeighbor:pA,resizeBilinear:hA,rgbToGrayscale:oY,rotateWithOffset:uY,cropAndResize:tY,nonMaxSuppression:dY,nonMaxSuppressionAsync:xY,nonMaxSuppressionWithScore:wY,nonMaxSuppressionWithScoreAsync:TY,nonMaxSuppressionPadded:kY,nonMaxSuppressionPaddedAsync:_Y,threshold:LY,transform:zY},eI={bandPart:PY,gramSchmidt:GY,qr:WY},gA={absoluteDifference:BY,computeWeightedLoss:mo,cosineDistance:UY,hingeLoss:HY,huberLoss:YY,logLoss:QY,meanSquaredError:qY,sigmoidCrossEntropy:nj,softmaxCrossEntropy:ij},yA={sparseFillEmptyRows:oj,sparseReshape:uj,sparseSegmentMean:dj,sparseSegmentSum:pj},bA={stringNGrams:mj,stringSplit:yj,stringToHashBucketFast:xj,staticRegexReplace:wj};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sj=new Map,US=new Map;class Ku{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}let Yu=class Uc{constructor(){this.classNameMap={}}static getMap(){return Uc.instance==null&&(Uc.instance=new Uc),Uc.instance}static register(e){Uc.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Ee(n,e,t){P(n.className!=null,()=>"Class being registered does not have the static className property defined."),P(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),P(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const r=t,s=e+">"+r;return Yu.register(n),Sj.set(s,n),US.set(n,s),n}function Tj(n){return US.has(n)?US.get(n):n.className}const Ij=Object.freeze(Object.defineProperty({__proto__:null,Serializable:Ku,SerializationMap:Yu,getRegisteredName:Tj,registerClass:Ee},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class go extends Ku{minimize(e,t=!1,r){const{value:s,grads:i}=this.computeGradients(e,r);if(r!=null){const a=r.map(o=>({name:o.name,tensor:i[o.name]}));this.applyGradients(a)}else this.applyGradients(i);return kt(i),t?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return qL(e,t)}dispose(){this.iterations_!=null&&kt(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:ct(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(go,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tI extends go{static get className(){return"Adadelta"}constructor(e,t,r=null){super(),this.learningRate=e,this.rho=t,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],r==null&&(this.epsilon=q.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,r)=>{const s=q.registeredVariables[t],i=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${t}/accum_grad`,variable:le(()=>Bt(s).variable(i))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${t}/accum_var`,variable:le(()=>Bt(s).variable(i))});const a=Array.isArray(e)?e[r].tensor:e[t];if(a==null)return;const o=this.accumulatedGrads[r].variable,l=this.accumulatedUpdates[r].variable;le(()=>{const u=Ne(ne(o,this.rho),ne(nn(a),1-this.rho)),d=ne(at(Rr(Ne(l,this.epsilon)),Rr(Ne(o,this.epsilon))),a),h=Ne(ne(l,this.rho),ne(nn(d),1-this.rho));o.assign(u),l.assign(h);const f=Ne(ne(d,-this.learningRate),s);s.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(kt(this.accumulatedGrads.map(e=>e.variable)),kt(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,r=!1;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedUpdates=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nI extends go{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,r)=>{const s=q.registeredVariables[t];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${t}/accumulator`,variable:le(()=>Xu(s.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(e)?e[r].tensor:e[t];if(i==null)return;const a=this.accumulatedGrads[r].variable;le(()=>{const o=Ne(a,nn(i));a.assign(o);const l=Ne(ne(at(i,Rr(Ne(o,q.backend.epsilon()))),-this.learningRate),s);s.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&kt(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rI extends go{static get className(){return"Adam"}constructor(e,t,r,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],le(()=>{this.accBeta1=ct(t).variable(),this.accBeta2=ct(r).variable()}),s==null&&(this.epsilon=q.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);le(()=>{const r=Ye(1,this.accBeta1),s=Ye(1,this.accBeta2);t.forEach((i,a)=>{const o=q.registeredVariables[i],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${i}/m`,variable:le(()=>Bt(o).variable(l))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${i}/v`,variable:le(()=>Bt(o).variable(l))});const u=Array.isArray(e)?e[a].tensor:e[i];if(u==null)return;const d=this.accumulatedFirstMoment[a].variable,h=this.accumulatedSecondMoment[a].variable,f=Ne(ne(d,this.beta1),ne(u,1-this.beta1)),m=Ne(ne(h,this.beta2),ne(nn(u),1-this.beta2)),x=at(f,r),g=at(m,s);d.assign(f),h.assign(m);const y=Ne(ne(at(x,Ne(Rr(g),this.epsilon)),-this.learningRate),o);o.assign(y)}),this.accBeta1.assign(ne(this.accBeta1,this.beta1)),this.accBeta2.assign(ne(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&kt(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&kt(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),le(()=>{this.accBeta1.assign(so(this.beta1,this.iterations_+1)),this.accBeta2.assign(so(this.beta2,this.iterations_+1))});const t=e.length/2,r=!1;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sI extends go{static get className(){return"Adamax"}constructor(e,t,r,s=null,i=0){super(),this.learningRate=e,this.beta1=t,this.beta2=r,this.epsilon=s,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],le(()=>{this.iteration=ct(0).variable(),this.accBeta1=ct(t).variable()}),s==null&&(this.epsilon=q.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);le(()=>{const r=Ye(1,this.accBeta1),s=at(-this.learningRate,Ne(ne(this.iteration,this.decay),1));t.forEach((i,a)=>{const o=q.registeredVariables[i],l=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${i}/m`,variable:Bt(o).variable(l)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${i}/v`,variable:Bt(o).variable(l)});const u=Array.isArray(e)?e[a].tensor:e[i];if(u==null)return;const d=this.accumulatedFirstMoment[a].variable,h=this.accumulatedWeightedInfNorm[a].variable,f=Ne(ne(d,this.beta1),ne(u,1-this.beta1)),m=ne(h,this.beta2),x=Yn(u),g=Ma(m,x);d.assign(f),h.assign(g);const y=Ne(ne(at(s,r),at(f,Ne(g,this.epsilon))),o);o.assign(y)}),this.iteration.assign(Ne(this.iteration,1)),this.accBeta1.assign(ne(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&kt(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&kt(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $x extends go{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,r)=>{const s=Array.isArray(e)?e[r].tensor:e[t];if(s==null)return;const i=q.registeredVariables[t];le(()=>{const a=Ne(ne(this.c,s),i);i.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Pn(ct(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iI extends $x{static get className(){return"Momentum"}constructor(e,t,r=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=r,this.accumulations=[],this.m=ct(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,r)=>{const s=q.registeredVariables[t];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${t}/momentum`,variable:le(()=>Bt(s).variable(!1))});const i=this.accumulations[r].variable,a=Array.isArray(e)?e[r].tensor:e[t];a!=null&&le(()=>{let o;const l=Ne(ne(this.m,i),a);this.useNesterov?o=Ne(ne(this.c,Ne(a,ne(l,this.m))),s):o=Ne(ne(this.c,l),s),i.assign(l),s.assign(o)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&kt(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(r=>({originalName:r.name,variable:r.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aI extends go{static get className(){return"RMSProp"}constructor(e,t=.9,r=0,s=null,i=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=r,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=i,s==null&&(this.epsilon=q.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,r)=>{const s=q.registeredVariables[t],i=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${t}/rms`,variable:le(()=>Bt(s).variable(i))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${t}/momentum`,variable:le(()=>Bt(s).variable(i))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${t}/mg`,variable:le(()=>Bt(s).variable(i))});const a=Array.isArray(e)?e[r].tensor:e[t];if(a==null)return;const o=this.accumulatedMeanSquares[r].variable,l=this.accumulatedMoments[r].variable;le(()=>{const u=Ne(ne(o,this.decay),ne(nn(a),1-this.decay));if(this.centered){const d=this.accumulatedMeanGrads[r].variable,h=Ne(ne(d,this.decay),ne(a,1-this.decay)),f=at(ne(a,this.learningRate),Rr(Ye(u,Ne(nn(h),this.epsilon)))),m=Ne(ne(l,this.momentum),f);o.assign(u),d.assign(h),l.assign(m);const x=Ye(s,m);s.assign(x)}else{const d=Ne(ne(o,this.decay),ne(nn(a),1-this.decay)),h=Ne(ne(l,this.momentum),at(ne(a,this.learningRate),Rr(Ne(d,this.epsilon))));o.assign(d),l.assign(h);const f=Ye(s,h);s.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&kt(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&kt(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&kt(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,r=!1;this.accumulatedMeanSquares=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedMoments=e.slice(t,t*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kj=[tI,nI,rI,sI,iI,aI,$x];function Cj(){for(const n of kj)Ee(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e3(n,e,t,r){a(n),t=t??0,r=r??1,o(t,r);let s=0;const i=l=>(l.then(u=>{const d=t+ ++s/n.length*(r-t);return e(d),u}),l);function a(l){P(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function o(l,u){P(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),P(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),P(u>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${u}`)}return Promise.all(n.map(i))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function xA(n,e){e==null&&(e={});const t=e.fetchFunc==null?de().platform.fetch:e.fetchFunc,r=n.map(i=>t(i,e.requestInit,{isBinary:!0})),s=(e.onProgress==null?await Promise.all(r):await e3(r,e.onProgress,0,.5)).map(i=>i.arrayBuffer());return e.onProgress==null?await Promise.all(s):await e3(s,e.onProgress,.5,1)}function _j(n,e){var t;const r=e.fetchFunc==null?de().platform.fetch:e.fetchFunc;let s=0,i;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:async a=>{for(var o;s<n.length;){i||(i=(await r(n[s],e.requestInit,{isBinary:!0})).body.getReader());const{done:l,value:u}=await i.read();if(l){s++,i=void 0,(o=e.onProgress)===null||o===void 0||o.call(e,s/n.length);continue}a.enqueue(u);return}a.close()}})}async function vA(n,e="",t,r){return wA(s=>xA(s,{requestInit:r}))(n,e,t)}function wA(n){return async(e,t="",r)=>{const s=e.map(()=>!1),i={},a=r!=null?r.map(()=>!1):[],o=[];if(e.forEach((m,x)=>{let g=0;m.weights.forEach(y=>{const v="quantization"in y?y.quantization.dtype:y.dtype,w=xu[v]*be(y.shape),I=()=>{s[x]=!0,i[x]==null&&(i[x]=[]),i[x].push({manifestEntry:y,groupOffset:g,sizeBytes:w})};r!=null?r.forEach((T,C)=>{T===y.name&&(I(),a[C]=!0)}):I(),o.push(y.name),g+=w})}),!a.every(m=>m)){const m=r.filter((x,g)=>!a[g]);throw new Error(`Could not find weights in manifest with names: ${m.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}const l=s.reduce((m,x,g)=>(x&&m.push(g),m),[]),u=[];l.forEach(m=>{e[m].paths.forEach(x=>{const g=t+(t.endsWith("/")?"":"/")+x;u.push(g)})});const d=await n(u),h={};let f=0;return l.forEach(m=>{const x=e[m].paths.length,g=new ji(d.slice(f,f+x));i[m].forEach(y=>{const v=g.slice(y.groupOffset,y.groupOffset+y.sizeBytes),w=K2(v,[y.manifestEntry]);for(const I in w)h[I]=w[I]}),f+=x}),h}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mj="application/octet-stream",Nj="application/json";class oI{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(P(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=de().platform.fetch,P(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&P(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const r=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=WL(e,r);if(t.body.append("model.json",new Blob([JSON.stringify(s)],{type:Nj}),"model.json"),e.weightData!=null){const a=ji.join(e.weightData);t.body.append("model.weights.bin",new Blob([a],{type:Mj}),"model.weights.bin")}const i=await this.fetch(this.path,t);if(i.ok)return{modelArtifactsInfo:Em(e),responses:[i]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const r=t.modelTopology,s=t.weightsManifest;if(r==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return Q2(e,t=>this.loadWeights(t))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),r=T0(e.weightsManifest),s=()=>_j(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:r,getWeightStream:s})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[r,s]=Ej(t),i=this.weightPathPrefix||r,a=[],o=[];for(const l of e)for(const u of l.paths)this.weightUrlConverter!=null?o.push(this.weightUrlConverter(u)):a.push(i+u+s);return this.weightUrlConverter&&a.push(...await Promise.all(o)),a}async loadWeights(e){const t=await this.getWeightUrls(e),r=T0(e),s=await xA(t,this.loadOptions);return[r,s]}}oI.URL_SCHEME_REGEX=/^https?:\/\//;function Ej(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),r=n.substring(0,e),s=t>e?n.substring(t):"";return[r+"/",s]}function ZS(n){return n.match(oI.URL_SCHEME_REGEX)!=null}const SA=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(r=>ZS(r)):t=ZS(n),t)return lI(n,e)}return null};Cn.registerSaveRouter(SA);Cn.registerLoadRouter(SA);function lI(n,e){return new oI(n,e)}function TA(n,e){return lI(n,e)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Bl,t3=!1;function IA(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,r=!1,s=!1,i=!1,a=!1,o=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)r=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)s=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)i=!0;else if(n.getContext!=null)a=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(lf(x0,q.backendName)!=null){const f={pixels:n},m={numChannels:e};return q.runKernel(x0,f,m)}const[l,u]=s?[n.videoWidth,n.videoHeight]:[n.width,n.height];let d;if(a)d=n.getContext("2d").getImageData(0,0,l,u).data;else if(r||t)d=n.data;else if(i||s||o){if(Bl==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Bl=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Bl=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Bl.canvas.width=l,Bl.canvas.height=u,Bl.drawImage(n,0,0,l,u),d=Bl.getImageData(0,0,l,u).data}let h;if(e===4)h=new Int32Array(d);else{const f=l*u;h=new Int32Array(f*e);for(let m=0;m<f;m++)for(let x=0;x<e;++x)h[m*e+x]=d[m*4+x]}return UT(h,[u,l,e],"int32")}function Rj(n){return n!=null&&n.data instanceof Uint8Array}function Lj(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function Aj(n){return n!=null&&n.width!==0&&n.height!==0}function zj(n){return Lj()&&!(n instanceof ImageBitmap)&&Aj(n)&&!Rj(n)}async function Dj(n,e=3){let t=null;if(de().getBool("WRAP_TO_IMAGEBITMAP")&&zj(n)){let r;try{r=await createImageBitmap(n,{premultiplyAlpha:"none"})}catch{r=null}r!=null&&r.width===n.width&&r.height===n.height?t=r:t=n}else t=n;return IA(t,e)}function kA(n){if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const e=n.rank===2?1:n.shape[2];if(e>4||e===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${e}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`)}function Pj(n){const e=n?.alpha||1;if(e>1||e<0)throw new Error(`Alpha value ${e} is suppoed to be in range [0 - 1].`)}async function Fj(n,e){let t=F(n,"img","toPixels");if(!(n instanceof Ht)){const u=t;t=Oe(u,"int32"),u.dispose()}kA(t);const[r,s]=t.shape.slice(0,2),i=t.rank===2?1:t.shape[2],a=await t.data(),o=t.dtype==="float32"?255:1,l=new Uint8ClampedArray(s*r*4);for(let u=0;u<r*s;++u){const d=[0,0,0,255];for(let f=0;f<i;f++){const m=a[u*i+f];if(t.dtype==="float32"){if(m<0||m>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${m}.`)}else if(t.dtype==="int32"&&(m<0||m>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${m}.`);i===1?(d[0]=m*o,d[1]=m*o,d[2]=m*o):d[f]=m*o}const h=u*4;l[h+0]=Math.round(d[0]),l[h+1]=Math.round(d[1]),l[h+2]=Math.round(d[2]),l[h+3]=Math.round(d[3])}if(e!=null){t3||lf(xb,q.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),t3=!0),e.width=s,e.height=r;const u=e.getContext("2d"),d=new ImageData(l,s,r);u.putImageData(d,0,0)}return t!==n&&t.dispose(),l}function Gj(n,e,t){let r=F(n,"img","draw");if(!(n instanceof Ht)){const a=r;r=Oe(a,"int32"),a.dispose()}kA(r),Pj(t?.imageOptions);const s={image:r},i={canvas:e,options:t};q.runKernel(xb,s,i)}const uI=ee({fromPixels_:IA}),Oj=Object.freeze(Object.defineProperty({__proto__:null,draw:Gj,fromPixels:uI,fromPixelsAsync:Dj,toPixels:Fj},Symbol.toStringTag,{value:"Module"}));function Bx(n,e){const t=n.shape.length,r=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${t}`);if(be(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const s=e.shape,i=s[s.length-1];let a=1;for(let h=0;h<s.length-1;++h)a*=s[h];const o=n.shape,l=s.slice();l.pop();let u=1;for(let h=i;h<t;++h)u*=o[h],l.push(o[h]);const d=[...ut(n.shape).map(h=>h/u),1].slice(0,i);return[l,a,u,d]}const Wj=Object.freeze(Object.defineProperty({__proto__:null,prepareAndValidate:Bx},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HS=-2,Vj=-1;function cI(n,e,t){const r=n.shape.length;P(r===e.length,()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`),P(r===t.length,()=>`Error in slice${r}D: Length of size ${t} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)P(e[s]+t[s]<=n.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+t[s]}) would overflow input.shape[${s}] (${n.shape[s]})`)}function $j(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function dI(n,e,t){const r=[];for(let s=0;s<n.length;s++)r[s]=Math.ceil((e[s]-n[s])/t[s]);return r}function CA(n,e,t,r){const s=[...n];for(let i=s.length;i<r.length;i++)s.push(1);for(let i=0;i<t;i++)i===0?s[e]=1:(s.splice(e,0,1),s.pop());return s}function _A(n,e,t){return t<=n?t:t-(e-1)}function MA(n,e){const t=[];for(let r=0;r<n;r++)t.push(e+r);return t}function Bj(n,e,t,r,s,i,a,o,l){const u=n.length;let d=new Array(u),h=new Array(u),f=new Array(u);if(e.length&&t>0){const m=e[0],x=t+1;d=NA(a,m,x,r,n),h=EA(o,m,x,s,n),f=CA(i,m,x,n)}else for(let m=0;m<u;m++)d[m]=LA(a,r,i,n,m,l),h[m]=AA(o,s,i,n,m,l),f[m]=RA(i,m,l);return{begin:d,end:h,strides:f}}function NA(n,e,t,r,s){const i=[...s],a=MA(t,e);for(let o=0;o<i.length;o++)if(a.indexOf(o)>-1)i[o]=0;else{const l=_A(e,t,o);let u=r[l];n&1<<l&&(u=0),i[o]=u}return i}function EA(n,e,t,r,s){const i=[...s],a=MA(t,e);for(let o=0;o<i.length;o++)if(a.indexOf(o)>-1)i[o]=Number.MAX_SAFE_INTEGER;else{const l=_A(e,t,o);let u=r[l];n&1<<l&&(u=Number.MAX_SAFE_INTEGER),i[o]=u}for(let o=0;o<i.length;o++){const l=s[o];i[o]<0&&(i[o]+=l),i[o]=rl(0,i[o],s[o])}return i}function RA(n,e,t){let r=n[e];return(t&1<<e||r==null)&&(r=1),r}function LA(n,e,t,r,s,i){let a=e[s];const o=t[s]||1;(n&1<<s||i&1<<s||a==null)&&(o>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),a=rl(0,a,l-1),a}function AA(n,e,t,r,s,i){let a=e[s];const o=t[s]||1;(n&1<<s||i&1<<s||a==null)&&(o>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),o>0?a=rl(0,a,l):a=rl(-1,a,l-1),a}function hI(n,e,t){let r=t.length;for(let s=0;s<t.length;s++)if(t[s]>1){r=s;break}for(let s=r+1;s<t.length;s++)if(e[s]>0||t[s]!==n[s])return!1;return!0}function pI(n,e){let t=n.length>0?n[n.length-1]:1;for(let r=0;r<n.length-1;r++)t+=n[r]*e[r];return t}function Xx(n,e,t){let r;const s=n.shape.length;typeof e=="number"?r=[e,...new Array(s-1).fill(0)]:e.length<s?r=e.concat(new Array(s-e.length).fill(0)):r=e.slice(),r.forEach(a=>{P(a!==-1,()=>"slice() does not support negative begin indexing.")});let i;return t==null?i=new Array(s).fill(-1):typeof t=="number"?i=[t,...new Array(s-1).fill(-1)]:t.length<s?i=t.concat(new Array(s-t.length).fill(-1)):i=t,i=i.map((a,o)=>a>=0?a:(P(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${o}.`),n.shape[o]-r[o])),[r,i]}function fI(n,e,t,r,s,i,a,o,l){let u;if(r==null?(u=new Array(e.length),u.fill(1)):u=r,a!=null&&a&a-1)throw new Error("Multiple ellipses in slice is not allowed.");let d=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:u.slice(),beginMask:s,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};for(let w=0;w<h.dims;w++)d&&1<<w&o&&h.numAddAxisAfterEllipsis++,1<<w&a&&(d=!0);d||(h.ellipsisMask|=1<<h.dims,h.dims++);const f={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};Xj(h,f);let m=!0,x=!0,g=!0;const y=[],v=[];for(let w=0;w<n.length;++w){if(f.strides[w]===0)throw Error(`strides[${w}] must be non-zero`);const I=!!(f.shrinkAxisMask&1<<w),T=n[w];if(T===-1){y.push(I?1:-1);continue}const C=[f.beginMask&1<<w,f.endMask&1<<w],E=[f.strides[w]>0?0:-1,f.strides[w]>0?T:T-1];if(I&&f.strides[w]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&f.strides[w]===1;const L=!!(f.beginMask&1<<w&&f.endMask&1<<w);if(f.beginValid&&f.endValid){if(I){const X=f.begin[w]<0?T+f.begin[w]:f.begin[w];if(f.begin[w]=X,f.end[w]=f.begin[w]+1,X<0||X>=T)throw Error(`slice index ${f.begin[w]} of dimension ${w} out of bounds.`)}else f.begin[w]=n3(f.begin[w],0,f.strides[w],T,C,E),f.end[w]=n3(f.end[w],1,f.strides[w],T,C,E);const z=f.strides[w]===1&&f.begin[w]===0&&f.end[w]===T;m=m&&z,x=x&&(w===0&&f.strides[w]===1||z)}else m=m&&f.strides[w]===1&&L,x=x&&(w===0&&f.strides[w]===1||L);let M,R=!1;if(f.beginValid&&f.endValid?(M=f.end[w]-f.begin[w],R=!0):I?(M=1,R=!0):L&&T>=0&&(f.strides[w]<0?M=-T:M=T,R=!0),R){let z;M===0||M<0!=f.strides[w]<0?z=0:z=Math.trunc(M/f.strides[w])+(M%f.strides[w]!==0?1:0),y.push(z)}else y.push(-1)}for(let w=0;w<f.finalShapeGatherIndices.length;++w){const I=f.finalShapeGatherIndices[w];I>=0?v.push(y[I]):I===HS&&v.push(1)}return{finalShapeSparse:v.filter((w,I)=>f.finalShapeGatherIndices[I]!==HS),finalShape:v,isIdentity:m,sliceDim0:x,isSimpleSlice:g,begin:f.begin,end:f.end,strides:f.strides}}function Xj(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<n.dims;r++)if(1<<r&n.ellipsisMask){const s=Math.min(e.dims-(n.dims-r)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<s;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=r}else if(1<<r&n.newAxisMask)e.finalShapeGatherIndices.push(HS),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[r]),n.end!=null&&(e.end[t]=n.end[r]),e.strides[t]=n.strides[r],n.beginMask&1<<r&&(e.beginMask|=1<<t),n.endMask&1<<r&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(Vj),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[t]=r,t++}}function n3(n,e,t,r,s,i){if(s[e])return t>0?i[e]:i[e+1&1];{const a=n<0?r+n:n;return a<i[0]?i[0]:a>i[1]?i[1]:a}}const zA=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:cI,computeFlatOffset:pI,computeOutShape:dI,getNormalizedAxes:Bj,isSliceContinous:hI,maskToAxes:$j,parseSliceParams:Xx,sliceInfo:fI,startForAxis:LA,startIndicesWithElidedDims:NA,stopForAxis:AA,stopIndicesWithElidedDims:EA,stridesForAxis:RA,stridesWithElidedDims:CA},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DA{static sgd(e){return new $x(e)}static momentum(e,t,r=!1){return new iI(e,t,r)}static rmsprop(e,t=.9,r=0,s=null,i=!1){return new aI(e,t,r,s,i)}static adam(e=.001,t=.9,r=.999,s=null){return new rI(e,t,r,s)}static adadelta(e=.001,t=.95,r=null){return new tI(e,t,r)}static adamax(e=.002,t=.9,r=.999,s=null,i=0){return new sI(e,t,r,s,i)}static adagrad(e,t=.1){return new nI(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kl=DA;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uj=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function Ym(){return new Promise(n=>Uj(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mI(n,e){const t=n[0].length;n.forEach((s,i)=>{P(s.length===t,()=>`Error in concat${t}D: rank of tensors[${i}] must be the same as the rank of the rest (${t})`)}),P(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const r=n[0];n.forEach((s,i)=>{for(let a=0;a<t;a++)P(a===e||s[a]===r[a],()=>`Error in concat${t}D: Shape of tensors[${i}] (${s}) does not match the shape of the rest (${r}) along the non-concatenated axis ${i}.`)})}function Sa(n,e){const t=n[0].slice();for(let r=1;r<n.length;r++)t[e]+=n[r][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Gi;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(Gi||(Gi={}));function PA(n,e,t){let r=new Array;if(t==null&&e==null)return r;if(e==null)for(;r.length<n+t.length;)r.push(-1);else r=e.slice();if(t==null)return r;if(n+t.length!==r.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${r.length}`);for(let s=1;s<t.length;++s){const i=t[s],a=r[r.length-t.length+s],o=r[a];if(i>=0)if(o>=0){if(o!==i)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${s+n}] = ${i} but shape[${s+n}] = ${o}`)}else r[a]=i}return r}function FA(n){const e={FIRST_DIM_SIZE:Gi.FIRST_DIM_SIZE,VALUE_ROWIDS:Gi.VALUE_ROWIDS,ROW_LENGTHS:Gi.ROW_LENGTHS,ROW_SPLITS:Gi.ROW_SPLITS,ROW_LIMITS:Gi.ROW_LIMITS,ROW_STARTS:Gi.ROW_STARTS},t=[];for(const r of n)if(r in e)t.push(e[r]);else break;return t}function GA(n){return n.length===0?0:n[0]===Gi.FIRST_DIM_SIZE?n.length-1:n.length}function OA(n,e){if(n==null||e==null)return;const t=n.length,r=e.length;if(t>=r)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(t,r-1);++s){const i=n[s],a=e[s+1];if(i>=0&&a>=0&&i!==1&&i!==a)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${s-n.length}] = ${i} but ragged tensor input.flatValues.shape[${s-n.length}] = ${a}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gI=30;function Ux(n){return n<=gI?n:g0(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yI(n,e,t){const r=t*(typeof n=="number"?n:n[0]),s=e*(typeof n=="number"?n:n[1]);return[r,s]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jm(n,e,t,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(n[0]/t),s=s.concat(n.slice(1));else{s=s.concat(n[0]);const i=e.length;for(let a=0;a<i;++a)s=s.concat([n[a+1]/e[a],e[a]]);s=s.concat(n.slice(i+1))}return s}function Qm(n,e,t=!0){const r=[];if(t){r.push(e);for(let s=e+1;s<n;++s)s<=2*e?(r.push(s),r.push(s-(e+1))):r.push(s)}else{const s=[],i=[];for(let a=1;a<n;++a)a>=e*2+1||a%2===1?i.push(a):s.push(a);r.push(...s),r.push(0),r.push(...i)}return r}function Jm(n,e,t,r=!0){const s=[];r?s.push(n[0]/t):s.push(n[0]*t);for(let i=1;i<n.length;++i)i<=e.length?r?s.push(e[i-1]*n[i]):s.push(n[i]/e[i-1]):s.push(n[i]);return s}function bI(n,e){const t=[0];for(let r=0;r<e;++r)t.push(n[r][0]);return t}function xI(n,e,t){const r=n.slice(0,1);for(let s=0;s<t;++s)r.push(n[s+1]-e[s][0]-e[s][1]);return r}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zx=1.7580993408473768,Hx=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vI=.3275911,wI=.254829592,SI=-.284496736,TI=1.421413741,II=-1.453152027,kI=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function io(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let r=0;r<t.length;r+=2)t[r]=n[r/2],t[r+1]=e[r/2];return t}function WA(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let r=0;r<n.length;r+=2)e[r/2]=n[r],t[r/2]=n[r+1];return{real:e,imag:t}}function VA(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),r=new Float32Array(e);for(let s=0;s<n.length;s+=4)t[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:t,imag:r}}function $A(n){const e=Math.floor(n.length/4),t=new Float32Array(e),r=new Float32Array(e);for(let s=2;s<n.length;s+=4)t[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:t,imag:r}}function CI(n,e){const t=n[e*2],r=n[e*2+1];return{real:t,imag:r}}function BA(n,e,t,r){n[r*2]=e,n[r*2+1]=t}function XA(n,e){const t=new Float32Array(n/2),r=new Float32Array(n/2);for(let s=0;s<Math.ceil(n/2);s++){const i=(e?2:-2)*Math.PI*(s/n);t[s]=Math.cos(i),r[s]=Math.sin(i)}return{real:t,imag:r}}function UA(n,e,t){const r=(t?2:-2)*Math.PI*(n/e),s=Math.cos(r),i=Math.sin(r);return{real:s,imag:i}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uw="->",Zj=/->/g,r3=",",s3="...";function _I(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(Zj,"").length)/Uw.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${Uw}").`);const[r,s]=n.split(Uw);P(r.indexOf(s3)===-1,()=>`The ellipsis notation ("${s3}") is not supported yet.`);const i=r.split(r3),a=i.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let f=0;f<s.length;++f){const m=s[f];if(!i.some(x=>x.indexOf(m)!==-1))throw new Error(`Output subscripts contain the label ${m} not present in the input subscripts.`);o.indexOf(m)===-1&&o.push(m)}for(let f=0;f<r.length;++f){const m=r[f];o.indexOf(m)===-1&&m!==r3&&o.push(m)}const l=new Array(i.length);for(let f=0;f<a;++f){if(new Set(i[f].split("")).size!==i[f].length)throw new Error(`Found duplicate axes in input component ${i[f]}. Support for duplicate axes in input is not implemented yet.`);l[f]=[];for(let m=0;m<i[f].length;++m)l[f].push(o.indexOf(i[f][m]))}const u=o.length,d=s.length,h=[];for(let f=d;f<u;++f)h.push(f);return{allDims:o,summedDims:h,idDims:l}}function MI(n,e){let t=new Array(n);t.fill(-1);for(let s=0;s<e.length;++s)t[e[s]]=s;const r=[];for(let s=0;s<n;++s)t[s]===-1&&r.push(s);return t=t.filter(s=>s!==-1),{permutationIndices:t,expandDims:r}}function NI(n,e,t){const r=new Array(n);for(let s=0;s<t.length;++s){const i=t[s].shape;for(let a=0;a<e[s].length;++a)r[e[s][a]]===void 0?r[e[s][a]]=i[a]:P(r[e[s][a]]===i[a],()=>`Expected dimension ${r[e[s][a]]} at axis ${a} of input shaped ${JSON.stringify(i)}, but got dimension ${i[a]}`)}}function EI(n,e){const t=n,r=[];let s=0;n.length===0&&t.push(-1),s=n.length+1;for(let a=0;a<s;++a)r.push([]);const i=[];for(let a=0;a<t.length;++a){const o=t[a],l=Hj(e,o);for(const u of l)i.indexOf(u)===-1&&(r[a].push(u),i.push(u))}return{path:t,steps:r}}function RI(n){return n.every((e,t)=>e===t)}function Hj(n,e){const t=[];for(let r=0;r<n.length;++r)(n[r].length===0||n[r].indexOf(e)!==-1||e===-1)&&t.push(r);return t}function LI(n,e,t=0){let r=[];if(typeof e=="number")P(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(n.shape[t]/e);else{const s=e.reduce((a,o)=>(o===-1&&(a+=1),a),0);P(s<=1,()=>"There should be only one negative value in split array.");const i=e.indexOf(-1);if(i!==-1){const a=e.reduce((o,l)=>l>0?o+l:o);e[i]=n.shape[t]-a}P(n.shape[t]===e.reduce((a,o)=>a+o),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZA(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function HA(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function KA(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YA(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function jA(n,e){return`size ${n} must be non-negative, not ${e}`}function QA(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function JA(n,e){const t=be(n),r=be(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${n} outputShape= ${e}`}function qA(n,e){const t=be(n),r=be(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${r}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KS(){return"segment ids must be >= 0"}function ez(){return"segment ids are not increasing"}function tz(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function nz(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rz(n,e){let t=!1,r;for(n<=gI?(r=n,t=!0):r=g0(n,Math.floor(Math.sqrt(n)));!t;)r>e||r===n?t=!0:r=g0(n,r+1);return r}function sz(n,e,t){const r=[],s=n.length;for(let i=0;i<s;i++)i!==e?r.push(n[i]):r.push(t);return r}function AI(n,e,t,r){const s=e.shape.length,i=n.shape.length;if(r!==0&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>i)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${i}).`);if(t<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${t}).`);for(let h=0;h<r;++h)if(n.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const a=n.shape[t],o=[];let l=1,u=1,d=1;for(let h=0;h<r;++h)o.push(n.shape[h]),l*=n.shape[h];for(let h=r;h<t;h++)o.push(n.shape[h]),u*=n.shape[h];for(let h=r;h<s;h++)o.push(e.shape[h]);for(let h=t+1;h<i;h++)o.push(n.shape[h]),d*=n.shape[h];return{batchSize:l,sliceSize:d,outerSize:u,dimSize:a,outputShape:o}}const Kj=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:AI,computeOutShape:sz,segOpComputeOptimalWindowSize:rz},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ao(n){try{return n.map(e=>eo(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function iz(n){return n.map(e=>va(e))}const az=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:wI,ERF_A2:SI,ERF_A3:TI,ERF_A4:II,ERF_A5:kI,ERF_P:vI,PARALLELIZE_THRESHOLD:gI,get RowPartitionType(){return Gi},SELU_SCALE:Hx,SELU_SCALEALPHA:Zx,applyActivation:Fx,assertAndGetBroadcastShape:Ct,assertAxesAreInnerMostDims:zr,assertParamsConsistent:mI,assignToTypedArray:BA,axesAreInnerMostDims:CT,calculateShapes:Sl,checkEinsumDimSizes:NI,checkPadOnDimRoundingMode:es,combineLocations:QL,combineRaggedTensorToTensorShapes:PA,complexWithEvenIndex:VA,complexWithOddIndex:$A,computeConv2DInfo:yr,computeConv3DInfo:yl,computeDefaultPad:oT,computeDilation2DInfo:Rm,computeOptimalWindowSize:Ux,computeOutAndReduceShapes:br,computeOutShape:Sa,computePool2DInfo:Ii,computePool3DInfo:co,convertConv2DDataFormat:ho,decodeEinsumEquation:_I,eitherStridesOrDilationsAreOne:Ar,expandShapeToKeepDim:Bn,exponent:UA,exponents:XA,fromStringArrayToUint8:iz,fromUint8ToStringArray:ao,getAxesPermutation:Rn,getBroadcastDims:ku,getComplexWithIndex:CI,getEinsumComputePath:EI,getEinsumPermutation:MI,getFusedBiasGradient:Px,getFusedDyActivation:Dx,getImageCenter:yI,getInnerMostAxes:Xn,getPermuted:Qm,getRaggedRank:GA,getReductionAxes:qn,getReshaped:jm,getReshapedPermuted:Jm,getRowPartitionTypesHelper:FA,getSliceBeginCoords:bI,getSliceSize:xI,getSparseFillEmptyRowsIndicesDenseShapeMismatch:ZA,getSparseFillEmptyRowsNegativeIndexErrorMessage:HA,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:KA,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:QA,getSparseReshapeInputOutputMismatchErrorMessage:qA,getSparseReshapeInputOutputMultipleErrorMessage:JA,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:YA,getSparseReshapeNegativeOutputDimErrorMessage:jA,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:nz,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:KS,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:ez,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:tz,getUndoAxesPermutation:bl,isIdentityPermutation:RI,log:q5,mergeRealAndImagArrays:io,prepareAndValidate:Bx,prepareSplitSize:LI,segment_util:Kj,shouldFuse:Gx,slice_util:zA,splitRealAndImagArrays:WA,stridesOrDilationsArePositive:Tu,tupleValuesAreOne:ol,upcastType:ps,validateDefaultValueShape:OA,validateInput:Ex,validateUpdateShape:ZT,warn:Ks},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Cj();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oz={kernelName:Cf,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ne(n,Hu(Oe(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yj={kernelName:Td,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const r=nn(Oe(t,"float32")),s=Rr(Ye(ct(1),r));return dn(at(n,s))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jj={kernelName:Id,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const r=Rr(Ye(nn(Oe(t,"float32")),1));return at(n,r)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qj={kernelName:Vu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=Ct(t.shape,r.shape);return{a:()=>{let i=n;const a=qn(t.shape,s);return a.length>0&&(i=Qe(i,a)),se(i,t.shape)},b:()=>{let i=n;const a=qn(r.shape,s);return a.length>0&&(i=Qe(i,a)),se(i,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jj={kernelName:_f,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((r,s)=>{t[s]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qj={kernelName:Mf,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Bt(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e8={kernelName:Nf,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Bt(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t8={kernelName:kd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>at(n,Rr(Ye(ct(1),nn(Oe(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n8={kernelName:Cd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const r=Rr(Ne(ct(1),nn(Oe(t,"float32"))));return at(n,r)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r8={kernelName:Nd,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=Ct(t.shape,r.shape);return{a:()=>{const i=Ne(nn(t),nn(r));let a=ne(n,at(r,i));const o=qn(t.shape,s);return o.length>0&&(a=Qe(a,o)),se(a,t.shape)},b:()=>{const i=Ne(nn(t),nn(r));let a=dn(ne(n,at(t,i)));const o=qn(r.shape,s);return o.length>0&&(a=Qe(a,o)),se(a,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s8={kernelName:_d,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>at(n,Ne(nn(Oe(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i8={kernelName:Md,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>at(n,Ye(ct(1),nn(Oe(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a8(n,e,t,r,s,i){const a=F(n,"dy","avgPool3dGrad"),o=F(e,"input","avgPool3dGrad");let l=a,u=o,d=!1;o.rank===4&&(d=!0,l=se(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=se(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),P(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),P(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),es("avgPool3dGrad",s,i);const h={dy:l,input:u},f={filterSize:t,strides:r,pad:s,dimRoundingMode:i},m=q.runKernel(ib,h,f);return d?se(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const o8=ee({avgPool3dGrad_:a8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l8={kernelName:Rf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{filterSize:s,strides:i,pad:a,dimRoundingMode:o}=t;return{x:()=>o8(n,r,s,i,a,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u8(n,e,t,r,s){const i=F(n,"dy","avgPoolGrad"),a=F(e,"input","avgPoolGrad");P(a.rank===i.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`);let o=a,l=i,u=!1;a.rank===3&&(u=!0,o=se(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=se(i,[1,i.shape[0],i.shape[1],i.shape[2]])),P(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),P(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);const d={dy:l,input:o},h={filterSize:t,strides:r,pad:s},f=q.runKernel(sb,d,h);return u?se(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const c8=ee({avgPoolGrad_:u8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d8={kernelName:Ef,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{filterSize:s,strides:i,pad:a}=t;return{x:()=>c8(n,r,s,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h8={kernelName:Lf,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[r,s]=e,{transposeA:i,transposeB:a}=t;return!i&&!a?{a:()=>Lt(n,s,!1,!0),b:()=>Lt(r,n,!0,!1)}:!i&&a?{a:()=>Lt(n,s,!1,!1),b:()=>Lt(n,r,!0,!1)}:i&&!a?{a:()=>Lt(s,n,!1,!0),b:()=>Lt(r,n,!1,!1)}:{a:()=>Lt(s,n,!0,!0),b:()=>Lt(n,r,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p8={kernelName:Af,gradFunc:(n,e,t)=>{const{blockShape:r,crops:s}=t;return{x:()=>$m(n,r,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f8={kernelName:mL,gradFunc:(n,e,t)=>{const r=t,s=r.inputShape,i=r.shape,a=Array.from(i);for(let l=s.length-1;l>=0;l--)if(s[l]===i[l])a[l]=1;else if(s[l]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${i}].`);const o=[];for(let l=0;l<a.length;l++)a[l]>1&&o.push(l);return{x:()=>Qe(n,o,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m8={kernelName:Ed,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g8={kernelName:Rd,gradFunc:n=>({x:()=>Bt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y8={kernelName:Ld,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{clipValueMin:s,clipValueMax:i}=t;return{x:()=>hr(Ti(po(r,s),xl(r,i)),n,Bt(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b8={kernelName:Df,inputsToSave:["x"],gradFunc:oz.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x8={kernelName:Pf,saveAllInputs:!0,gradFunc:(n,e,t)=>{const r=e.map(o=>o.shape),{axis:s}=t,i=At(s,e[0].shape)[0],a=r.map(o=>o[i]);return hs(n,a,i).map(o=>()=>o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v8={kernelName:Ff,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[r,s]=e,{dilations:i,strides:a,pad:o,dataFormat:l}=t;return P(ol(i),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`),{x:()=>bT(r.shape,n,s,a,o,l),filter:()=>JT(r,n,s.shape,a,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w8={kernelName:Gf,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[r,s]=e,{strides:i,pad:a,dataFormat:o,dimRoundingMode:l}=t;return{dy:()=>ro(n,s,i,a,o,1,l),filter:()=>JT(n,r,s.shape,i,a,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S8(n,e,t,r,s){let i=n;n.rank===4&&(i=se(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let a=e;a.rank===4&&(a=se(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),P(i.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`),P(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),P(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),P(i.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${t[3]}.`),P(a.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${t[4]}).`);const o={x:i,dy:a},l={strides:r,pad:s,filterShape:t};return q.runKernel(cb,o,l)}const T8=ee({conv3DBackpropFilter_:S8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I8={kernelName:Of,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:r,strides:s,pad:i}=t;P(ol(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[a,o]=e;return{x:()=>jL(a.shape,n,o,s,i),filter:()=>T8(a,n,o.shape,s,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k8={kernelName:Ad,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ne(dn(kx(Oe(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C8={kernelName:zd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ne(Cx(Oe(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _8={kernelName:Wf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{axis:s,exclusive:i,reverse:a}=t;return{x:()=>{const o=Rn([s],r.rank);let l=fx(n,s,i,!a);return o!=null&&(l=Gt(l,o)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M8={kernelName:Vf,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:r,strides:s,pad:i,dimRoundingMode:a}=t,o=r??[1,1];P(ol(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[l,u]=e;return P(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),P(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),P(l.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),P(Ar(s,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`),es("depthwiseConv2d",i,a),{x:()=>uA(l.shape,n,u,s,i,o,a),filter:()=>lA(l,n,u.shape,s,i,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N8={kernelName:$f,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[r,s]=e,i={x:r,filter:s,dy:n},a={x:r,filter:s,dy:n};return{x:()=>q.runKernel(y0,i,t),filter:()=>q.runKernel(b0,a,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E8={kernelName:Pd,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,r={dy:n,y:t};return{x:()=>q.runKernel(wb,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R8={kernelName:Fd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,r=ne(gs(dn(nn(t))),2/Math.sqrt(Math.PI));return{x:()=>ne(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L8={kernelName:Gd,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ne(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A8={kernelName:Xf,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>se(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z8={kernelName:Od,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ne(n,gs(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D8={kernelName:Wd,gradFunc:n=>({x:()=>Bt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P8={kernelName:Vd,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=Ct(t.shape,r.shape);return{a:()=>{const i=at(n,Oe(r,"float32")),a=qn(t.shape,s);return a.length>0?se(Qe(i,a),t.shape):i},b:()=>{let i=ne(n,Oe(t,"float32"));const a=qn(r.shape,s);a.length>0&&(i=se(Qe(i,a),r.shape));const o=nn(r);return dn(at(i,Oe(o,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F8={kernelName:Uf,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:r}=t,[s,i,a,o]=e,l=o??ct(1),u=qn(i.shape,s.shape),d=[];if(i.rank===1){for(let g=0;g<s.shape.length-1;++g)d.push(s.shape[g]);d.push(1)}const h=Ye(s,i),f=ne(n,l),m=Sx(Ne(a,ct(r))),x=ne(ne(ne(m,m),m),ct(-.5));return{x:()=>i.rank===1?se(ne(ne(n,Ys(se(m,[1,1,1,i.shape[0]]),d)),l),s.shape):se(ne(ne(n,m),l),s.shape),mean:()=>{let g=ne(ne(m,ct(-1)),f);return i.rank===1&&(g=Qe(g,u)),se(g,i.shape)},variance:()=>{let g=ne(ne(x,h),f);return i.rank===1&&(g=Qe(g,u)),se(g,i.shape)},scale:()=>{const g=ne(h,m);let y=ne(n,g);return i.rank===1&&(y=Qe(y,u)),se(y,i.shape)},offset:()=>{let g=n;return i.rank===1&&(g=Qe(g,u)),se(g,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G8={kernelName:Zf,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[r,s]=e,{axis:i,batchDims:a}=t,o=At(i,r.shape)[0],l=(u,d,h)=>()=>{const f=u.shape,m=d.size,x=f.slice(0,o),g=x.length,y=f.slice(i,f.length).slice(1),v=y.length,w=i3(0,g),I=i3(g+1,g+1+v),T=a3([x,[m],y]),C=se(h,T),E=se(d,[m]),L=a3([[g],w,I]),M=Gt(C,L);let R=Lx(M,E,u.shape[o]);const z=bl(L);return R=Gt(R,z),R};if(a===1){const u=r.shape[0],d=r.split(u,0);return{x:()=>Wr(d.map((h,f)=>l(h,s.slice(f,1),n.slice(f,1))())).reshape(r.shape),indices:()=>s}}else return{x:l(r,s,n),indices:()=>s}}};function i3(n,e){const t=[];for(let r=n;r<e;++r)t.push(r);return t}function a3(n){const e=[];for(let t=0;t<n.length;++t)for(let r=0;r<n[t].length;++r)e.push(n[t][r]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O8={kernelName:$d,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e;return{a:()=>Bt(t),b:()=>Bt(r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W8={kernelName:Bd,gradFunc:n=>({x:()=>Oe(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V8={kernelName:Xd,gradFunc:n=>({x:()=>Bt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $8={kernelName:Ud,gradFunc:n=>({x:()=>Bt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B8={kernelName:Zd,gradFunc:n=>({x:()=>Bt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X8={kernelName:Kf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{alpha:s}=t,i=ts(r,0);return{x:()=>hr(i,n,ne(n,s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U8={kernelName:Kd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>at(n,Ne(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z8={kernelName:Hd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>at(n,Oe(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H8={kernelName:gL,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[r]=e,{axis:s}=t;return{logits:()=>{const i=gs(r);return Ye(n,ne(Qe(n,s,!0),i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K8(n,e,t,r=5,s=1,i=1,a=.5){const o={x:n,y:e,dy:t},l={depthRadius:r,bias:s,alpha:i,beta:a};return q.runKernel(Nb,o,l)}const Y8=ee({localResponseNormalizationBackprop_:K8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j8={kernelName:em,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[r,s]=e,{depthRadius:i,bias:a,alpha:o,beta:l}=t;return{x:()=>Y8(r,s,n,i,a,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lz(n,e,t,r){return e.rank<t.rank&&(e=se(e,Bn(e.shape,r))),n.rank<t.rank&&(n=se(n,Bn(n.shape,r))),{x:()=>ne(n,Oe(As(t,e),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o3={kernelName:tm,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const r=t,{reductionIndices:s}=r,i=e[0],a=e[1],o=At(s,i.shape),l=lz(n,a,i,o);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q8={kernelName:Yd,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e;return{a:()=>ne(n,Oe(po(t,r),"float32")),b:()=>ne(n,Oe(cd(t,r),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J8(n,e,t,r,s,i,a){const o=F(n,"dy","maxPool3dGrad"),l=F(e,"input","maxPool3dGrad"),u=F(t,"output","maxPool3dGrad");let d=o,h=l,f=u,m=!1;l.rank===4&&(m=!0,d=se(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=se(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),f=se(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),P(d.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${d.rank}.`),P(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),P(f.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${f.rank}.`),es("maxPool3dGrad",i,a);const x={dy:d,input:h,output:f},g={filterSize:r,strides:s,pad:i,dimRoundingMode:a},y=q.runKernel(Rb,x,g);return m?se(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}const q8=ee({maxPool3dGrad_:J8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e7={kernelName:rm,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[r,s]=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=t;return{x:()=>q8(n,r,s,i,a,o,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t7(n,e,t,r,s,i,a){const o=F(n,"dy","maxPoolGrad"),l=F(e,"input","maxPoolGrad"),u=F(t,"output","maxPoolGrad");P(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`),P(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),P(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),es("maxPoolGrad",i,a);const d={dy:o,input:l,output:u},h={filterSize:r,strides:s,pad:i,dimRoundingMode:a};return q.runKernel(Eb,d,h)}const n7=ee({maxPoolGrad_:t7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r7={kernelName:nm,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[r,s]=e,{filterSize:i,strides:a,pad:o}=t;return{x:()=>n7(n,r,s,i,a,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s7={kernelName:sm,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{axis:s}=t,i=At(s,r.shape),a=br(r.shape,i)[1],o=be(a);return{x:()=>{const l=r.shape.slice();i.forEach(d=>{l[d]=1});const u=se(n,l);return at(ne(u,ds(r.shape,"float32")),o)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i7={kernelName:im,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const r=t,{axis:s}=r,[i,a]=e,o=At(s,i.shape),l=lz(n,a,i,o);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a7={kernelName:jd,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e;return{a:()=>ne(n,Oe(xl(t,r),"float32")),b:()=>ne(n,Oe(ts(t,r),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o7={kernelName:am,inputsToSave:["x"],gradFunc:(n,e,t)=>{const r=e[0],{paddings:s}=t,i=s.map(a=>a[0]);return{x:()=>$t(n,i,r.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l7={kernelName:Qd,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=Ct(t.shape,r.shape);return{a:()=>{const i=qn(t.shape,s);return i.length>0?se(Qe(n,i),t.shape):n},b:()=>{const i=ne(n,dn(Sh(at(t,r)))),a=qn(r.shape,s);return a.length>0?se(Qe(i,a),r.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u7={kernelName:Jd,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=Ct(t.shape,r.shape);return{a:()=>{const i=ne(n,Oe(r,"float32")),a=qn(t.shape,s);return a.length>0?se(Qe(i,a),t.shape):i},b:()=>{const i=ne(n,Oe(t,"float32")),a=qn(r.shape,s);return a.length>0?se(Qe(i,a),r.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c7={kernelName:om,gradFunc:n=>({x:()=>dn(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d7={kernelName:cm,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>jn(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h7={kernelName:um,gradFunc:n=>({x:()=>Bt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p7={kernelName:dm,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:r}=t;return si(n,r).map(s=>()=>s)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l3={kernelName:hm,inputsToSave:["x"],gradFunc:(n,e,t)=>{const r=e[0],{paddings:s}=t,i=s.map(a=>a[0]);return{x:()=>$t(n,i,r.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f7={kernelName:qd,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,r,s]=e,i=t,a=r,o=Ct(i.shape,a.shape);return{a:()=>{const l=Oe(a,"float32");let u=ne(n,ne(l,so(i,Ye(l,ct(1)))));const d=qn(i.shape,o);return d.length>0&&(u=Qe(u,d)),se(u,i.shape)},b:()=>{const l=ts(i,0),u=hr(l,zs(i),Bt(i));let d=ne(n,ne(s,u));const h=qn(a.shape,o);return h.length>0&&(d=Qe(d,h)),se(d,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m7={kernelName:pm,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,r]=e,s=ts(t,0);return{x:()=>hr(s,n,ne(n,r)),alpha:()=>{let i=hr(s,Bt(n),ne(n,t));const a=qn(r.shape,n.shape);return a.length>0&&(i=Qe(i,a)),se(i,r.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g7(n,e,t){const r=n.shape.slice();r[t]=1;const s=se(e,r),i=ff(n,t,!0,!1),a=ff(n,t,!0,!0),o=ne(i,a);return ne(s,o)}function y7(n,e,t){const r=n.shape.length,s=r-t.length,i=Rn(t,r);let a=n;i!=null&&(a=Gt(n,i));const o=a.shape.slice(),l=o.splice(r-t.length,t.length).reduce((h,f)=>h*f,1);o.push(l);const u=a.reshape(o);let d=g7(u,e,s);if(d=d.reshape(a.shape),i!=null){const h=bl(i);d=Gt(d,h)}return d}const b7={kernelName:fm,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{axis:s}=t;let i=[];return s==null?i=r.shape.map((a,o)=>o):typeof s=="number"?i=[s]:i=s,{x:()=>y7(r,n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x7={kernelName:Dd,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=Ct(t.shape,r.shape);return{a:()=>{const i=at(n,Oe(r,"float32")),a=qn(t.shape,s);return a.length>0?se(Qe(i,a),t.shape):i},b:()=>{let i=ne(n,Oe(t,"float32"));const a=qn(r.shape,s);a.length>0&&(i=se(Qe(i,a),r.shape));const o=nn(r);return dn(at(i,Oe(o,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v7={kernelName:eh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>at(n,dn(nn(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w7={kernelName:nh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,r=ne(xl(t,6),Hu(t));return{x:()=>ne(n,Oe(r,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S7={kernelName:th,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ne(n,Oe(Hu(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T7={kernelName:mm,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>se(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I7={kernelName:ym,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[r]=e,s={dy:n,images:r};return{images:()=>q.runKernel(Bb,s,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k7={kernelName:gm,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[r]=e,s={dy:n,images:r};return{images:()=>q.runKernel($b,s,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C7={kernelName:bm,gradFunc:(n,e,t)=>{const{dims:r}=t,s=At(r,n.shape);return{x:()=>ri(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _7={kernelName:rh,gradFunc:n=>({x:()=>Bt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M7={kernelName:sh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>dn(at(n,ne(so(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N7={kernelName:xm,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>Oe(Bt(t),"float32"),t:()=>ne(n,Oe(t,n.dtype)),e:()=>ne(n,Oe(Om(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E7={kernelName:ih,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const r=ts(t,ct(0)),s=ct(Zx),i=ct(Hx),a=ne(n,i),o=ne(ne(n,s),gs(Oe(t,"float32")));return hr(r,a,o)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R7={kernelName:uh,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ne(n,ne(t,Ye(ct(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L7={kernelName:lh,gradFunc:n=>({x:()=>Bt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A7={kernelName:ah,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ne(zm(Oe(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z7={kernelName:oh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ne(px(Oe(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D7={kernelName:vm,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{begin:s,size:i}=t,a=r.shape,[o,l]=Xx(r,s,i),u=[];for(let d=0;d<n.rank;d++)u.push([o[d],a[d]-o[d]-l[d]]);return{x:()=>fo(n,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P7={kernelName:Im,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[r]=e,{dim:s}=t,i=!0,a=ne(n,r);return{logits:()=>Ye(a,ne(Qe(a,[s],i),r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F7={kernelName:ch,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ne(n,$i(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u3={kernelName:Sm,gradFunc:(n,e,t)=>{const{blockShape:r,paddings:s}=t;return{x:()=>Am(n,r,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c3={kernelName:Tm,gradFunc:(n,e,t)=>{const{axis:r}=t;return{x:()=>$n(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G7={kernelName:dh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>at(n,ne(Rr(Oe(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O7={kernelName:Jb,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ne(n,ne(Oe(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W7={kernelName:hh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=ct(2);return{a:()=>ne(n,ne(s,Ye(t,r))),b:()=>ne(n,ne(s,Ye(r,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V7={kernelName:yh,gradFunc:n=>({x:()=>Bt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $7={kernelName:ph,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,r]=e,s=Ct(t.shape,r.shape);return{a:()=>{let i=n;const a=qn(t.shape,s);return a.length>0&&(i=Qe(i,a)),se(i,t.shape)},b:()=>{let i=n;const a=qn(r.shape,s);return a.length>0&&(i=Qe(i,a)),se(dn(i),r.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B7={kernelName:wm,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,s=r.shape.slice(),{axis:i}=t;At(i,r.shape).forEach(l=>{s[l]=1});const a=se(n,s),o=ne(a,ds(r.shape,"float32"));return{x:()=>o}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X7={kernelName:fh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>at(n,nn(zm(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U7={kernelName:mh,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ne(Ye(ct(1),nn(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z7={kernelName:gh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[r]=e,{reps:s}=t;return{x:()=>{let i=Bt(r);if(r.rank===1)for(let a=0;a<s[0];++a)i=Ne(i,$t(n,[a*r.shape[0]],[r.shape[0]]));else if(r.rank===2)for(let a=0;a<s[0];++a)for(let o=0;o<s[1];++o)i=Ne(i,$t(n,[a*r.shape[0],o*r.shape[1]],[r.shape[0],r.shape[1]]));else if(r.rank===3)for(let a=0;a<s[0];++a)for(let o=0;o<s[1];++o)for(let l=0;l<s[2];++l)i=Ne(i,$t(n,[a*r.shape[0],o*r.shape[1],l*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else if(r.rank===4)for(let a=0;a<s[0];++a)for(let o=0;o<s[1];++o)for(let l=0;l<s[2];++l)for(let u=0;u<s[3];++u)i=Ne(i,$t(n,[a*r.shape[0],o*r.shape[1],l*r.shape[2],u*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);return i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H7={kernelName:cu,gradFunc:(n,e,t)=>{const r=t,{perm:s}=r,i=bl(s);return{x:()=>Gt(n,i)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K7={kernelName:Cm,gradFunc:(n,e,t)=>{const r=t,{axis:s}=r;return{value:()=>Wr(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y7={kernelName:_m,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>j7(n,t)}}};function j7(n,e){const t=Ma(e,Bt(e)),r=Th(n,t);let s=po(e,ct(0,"int32"));const i=r.rank-s.rank;for(let o=0;o<i;++o)s=Cr(s,o+1);s=Ti(s,ds(r.shape,"bool"));const a=Bt(r);return hr(s,r,a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q7={kernelName:Mm,gradFunc:n=>({x:()=>Bt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J7=[oz,Yj,jj,Qj,Jj,qj,e8,t8,n8,r8,s8,i8,l8,d8,h8,p8,f8,m8,g8,y8,b8,x8,w8,v8,I8,k8,C8,_8,M8,N8,x7,E8,R8,L8,A8,z8,P8,D8,F8,G8,O8,W8,V8,$8,B8,X8,U8,Z8,H8,j8,o3,o3,Q8,e7,r7,s7,i7,a7,o7,l7,u7,c7,d7,h7,p7,l3,l3,f7,m7,b7,v7,w7,S7,T7,I7,k7,C7,_7,M7,N7,E7,R7,L7,A7,z7,D7,P7,F7,u3,u3,c3,c3,G7,W7,O7,V7,$7,B7,X7,U7,Z7,H7,K7,Y7,Q7];for(const n of J7)yL(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.abs=function(){return this.throwIfDisposed(),Yn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.acos=function(){return this.throwIfDisposed(),q2(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.acosh=function(){return this.throwIfDisposed(),eT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.add=function(n){return this.throwIfDisposed(),Ne(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.all=function(n,e){return this.throwIfDisposed(),cx(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.any=function(n,e){return this.throwIfDisposed(),df(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.argMax=function(n){return this.throwIfDisposed(),Su(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.argMin=function(n){return this.throwIfDisposed(),tT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.asScalar=function(){return this.throwIfDisposed(),P(this.size===1,()=>"The array must have only 1 element."),se(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.asType=function(n){return this.throwIfDisposed(),Oe(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.as1D=function(){return this.throwIfDisposed(),se(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.as2D=function(n,e){return this.throwIfDisposed(),se(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.as3D=function(n,e,t){return this.throwIfDisposed(),se(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.as4D=function(n,e,t,r){return this.throwIfDisposed(),se(this,[n,e,t,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.as5D=function(n,e,t,r,s){return this.throwIfDisposed(),se(this,[n,e,t,r,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.asin=function(){return this.throwIfDisposed(),nT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.asinh=function(){return this.throwIfDisposed(),rT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.atan=function(){return this.throwIfDisposed(),sT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.atan2=function(n){return this.throwIfDisposed(),iT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.atanh=function(){return this.throwIfDisposed(),aT(this)};Se().prototype.avgPool=function(n,e,t,r){return this.throwIfDisposed(),Lm(this,n,e,t,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),Am(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.batchNorm=function(n,e,t,r,s){return this.throwIfDisposed(),bh(this,n,e,t,r,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.broadcastTo=function(n){return this.throwIfDisposed(),du(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.cast=function(n){return this.throwIfDisposed(),Oe(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.ceil=function(){return this.throwIfDisposed(),pT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.clipByValue=function(n,e){return this.throwIfDisposed(),ms(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof Ht&&(n=[n]),$n([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.conv1d=function(n,e,t,r,s,i){return this.throwIfDisposed(),dx(this,n,e,t,r,s,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.conv2dTranspose=function(n,e,t,r,s){return this.throwIfDisposed(),hx(this,n,e,t,r,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.conv2d=function(n,e,t,r,s,i){return this.throwIfDisposed(),ro(this,n,e,t,r,s,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.cos=function(){return this.throwIfDisposed(),zm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.cosh=function(){return this.throwIfDisposed(),px(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.cumprod=function(n,e,t){return this.throwIfDisposed(),ff(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),fx(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),wT(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.depthwiseConv2d=function(n,e,t,r,s,i){return this.throwIfDisposed(),xh(this,n,e,t,r,s,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.dilation2d=function(n,e,t,r,s){return this.throwIfDisposed(),ST(this,n,e,t,r,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.divNoNan=function(n){return this.throwIfDisposed(),TT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.div=function(n){return this.throwIfDisposed(),at(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.dot=function(n){return this.throwIfDisposed(),IT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.elu=function(){return this.throwIfDisposed(),vh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.equal=function(n){return this.throwIfDisposed(),As(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.erf=function(){return this.throwIfDisposed(),kT(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.euclideanNorm=function(n,e){return this.throwIfDisposed(),_T(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.exp=function(){return this.throwIfDisposed(),gs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.expandDims=function(n){return this.throwIfDisposed(),Cr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.expm1=function(){return this.throwIfDisposed(),MT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.fft=function(){return this.throwIfDisposed(),Hm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.flatten=function(){return this.throwIfDisposed(),se(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.floor=function(){return this.throwIfDisposed(),Sh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.floorDiv=function(n){return this.throwIfDisposed(),ux(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.gather=function(n,e,t){return this.throwIfDisposed(),Th(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.greaterEqual=function(n){return this.throwIfDisposed(),po(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.greater=function(n){return this.throwIfDisposed(),ts(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.ifft=function(){return this.throwIfDisposed(),fd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.irfft=function(){return this.throwIfDisposed(),Mx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.isFinite=function(){return this.throwIfDisposed(),NT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.isInf=function(){return this.throwIfDisposed(),ET(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.isNaN=function(){return this.throwIfDisposed(),RT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.leakyRelu=function(n){return this.throwIfDisposed(),Pm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.lessEqual=function(n){return this.throwIfDisposed(),xl(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.less=function(n){return this.throwIfDisposed(),cd(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.localResponseNormalization=function(n,e,t,r){return this.throwIfDisposed(),LT(this,n,e,t,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.logSigmoid=function(){return this.throwIfDisposed(),AT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.logSoftmax=function(n){return this.throwIfDisposed(),yx(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.logSumExp=function(n,e){return this.throwIfDisposed(),Gm(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.log=function(){return this.throwIfDisposed(),zs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.log1p=function(){return this.throwIfDisposed(),Fm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.logicalAnd=function(n){return this.throwIfDisposed(),Ti(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.logicalNot=function(){return this.throwIfDisposed(),Om(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.logicalOr=function(n){return this.throwIfDisposed(),bx(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.logicalXor=function(n){return this.throwIfDisposed(),zT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.matMul=function(n,e,t){return this.throwIfDisposed(),Lt(this,n,e,t)};Se().prototype.maxPool=function(n,e,t,r){return this.throwIfDisposed(),Wm(this,n,e,t,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.max=function(n,e){return this.throwIfDisposed(),ni(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.maximum=function(n){return this.throwIfDisposed(),Ma(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.mean=function(n,e){return this.throwIfDisposed(),Mn(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.min=function(n,e){return this.throwIfDisposed(),ud(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.minimum=function(n){return this.throwIfDisposed(),ll(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),PT(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.mod=function(n){return this.throwIfDisposed(),FT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.mul=function(n){return this.throwIfDisposed(),ne(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.neg=function(){return this.throwIfDisposed(),dn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.norm=function(n,e,t){return this.throwIfDisposed(),wh(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.notEqual=function(n){return this.throwIfDisposed(),Cu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),dd(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.onesLike=function(){return this.throwIfDisposed(),Ds(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.pad=function(n,e){return this.throwIfDisposed(),fo(this,n,e)};Se().prototype.pool=function(n,e,t,r,s,i){return this.throwIfDisposed(),GT(this,n,e,t,r,s,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.pow=function(n){return this.throwIfDisposed(),so(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.prelu=function(n){return this.throwIfDisposed(),Bm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.prod=function(n,e){return this.throwIfDisposed(),OT(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.reciprocal=function(){return this.throwIfDisposed(),VT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.relu=function(){return this.throwIfDisposed(),Qi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.relu6=function(){return this.throwIfDisposed(),vx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.reshapeAs=function(n){return this.throwIfDisposed(),se(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.reshape=function(n){return this.throwIfDisposed(),se(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),hA(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),pA(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.reverse=function(n){return this.throwIfDisposed(),ri(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.rfft=function(){return this.throwIfDisposed(),Km(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.round=function(){return this.throwIfDisposed(),wx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.rsqrt=function(){return this.throwIfDisposed(),Sx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.selu=function(){return this.throwIfDisposed(),Tx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.separableConv2d=function(n,e,t,r,s,i){return this.throwIfDisposed(),Ix(this,n,e,t,r,s,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.sigmoid=function(){return this.throwIfDisposed(),$i(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.sign=function(){return this.throwIfDisposed(),$T(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.sin=function(){return this.throwIfDisposed(),kx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.sinh=function(){return this.throwIfDisposed(),Cx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.slice=function(n,e){return this.throwIfDisposed(),$t(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.softmax=function(n){return this.throwIfDisposed(),Zm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.softplus=function(){return this.throwIfDisposed(),Uu(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),$m(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.split=function(n,e){return this.throwIfDisposed(),hs(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.sqrt=function(){return this.throwIfDisposed(),Rr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.square=function(){return this.throwIfDisposed(),nn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.squaredDifference=function(n){return this.throwIfDisposed(),Nx(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.squeeze=function(n){return this.throwIfDisposed(),wl(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof Ht?[this,n]:[this,...n];return Wr(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.step=function(n){return this.throwIfDisposed(),Hu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.stridedSlice=function(n,e,t,r,s,i,a,o){return this.throwIfDisposed(),BT(this,n,e,t,r,s,i,a,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.sub=function(n){return this.throwIfDisposed(),Ye(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.sum=function(n,e){return this.throwIfDisposed(),Qe(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.tan=function(){return this.throwIfDisposed(),XT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.tanh=function(){return this.throwIfDisposed(),Iu(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.tile=function(n){return this.throwIfDisposed(),Ys(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.toBool=function(){return this.throwIfDisposed(),Oe(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.toFloat=function(){return this.throwIfDisposed(),Oe(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.toInt=function(){return this.throwIfDisposed(),Oe(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.topk=function(n,e){return this.throwIfDisposed(),HT(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.transpose=function(n){return this.throwIfDisposed(),Gt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.unique=function(n){return this.throwIfDisposed(),KT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),Lx(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.unstack=function(n){return this.throwIfDisposed(),si(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.where=function(n,e){return this.throwIfDisposed(),hr(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Se().prototype.zerosLike=function(){return this.throwIfDisposed(),Bt(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Bo=class uz extends Error{constructor(e){super(e),Object.setPrototypeOf(this,uz.prototype)}},ya=class cz extends Error{constructor(e){super(e),Object.setPrototypeOf(this,cz.prototype)}},ae=class dz extends Error{constructor(e){super(e),Object.setPrototypeOf(this,dz.prototype)}};class Nt extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Nt.prototype)}}let q7=class hz extends Error{constructor(e){super(e),Object.setPrototypeOf(this,hz.prototype)}};/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class pz{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const r=this.cache.keys().next().value;this.cache.delete(r)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const r=this.cache.keys().next().value;this.cache.delete(r)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Mu(n,e){if(Array.isArray(n)){let t=[];for(let r=0;r<e;r++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function pa(n,e){if(!n)throw new q7(e)}function d3(n,e){let t=0;for(const r of n)r===e&&t++;return t}function us(n){return n.length===1?n[0]:n}function qt(n){return Array.isArray(n)?n:[n]}function Xa(n){const e=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function Jl(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let fi={};function zI(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function YS(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>YS(e));else{const e=Object.keys(n);for(const t of e){const r=n[t];r!=null&&typeof r=="object"&&(!Array.isArray(r)&&r.type==="ndarray"&&typeof r.value=="number"?n[t]=r.value:YS(r))}}}function qm(n,e={},t={},r="object",s=!1){if(typeof n=="string"){const i=n;let a;if(i in t)a=t[i];else if(i in fi)a=fi[i];else if(a=e[i],a==null)throw new ae(`Unknown ${r}: ${n}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{const i=n;if(i.className==null||i.config==null)throw new ae(`${r}: Improper config format: ${JSON.stringify(i)}.
'className' and 'config' must set.`);const a=i.className;let o,l;if(a in t?[o,l]=t[a]:a in fi?[o,l]=fi.className:a in e&&([o,l]=e[a]),o==null)throw new ae(`Unknown ${r}: ${a}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const u={};for(const m of Object.keys(fi))u[m]=fi[m];for(const m of Object.keys(t))u[m]=t[m];const d=i.config;d.customObjects=u;const h=Object.assign({},fi);for(const m of Object.keys(t))fi[m]=t[m];YS(i.config);const f=l(o,i.config,t,s);return fi=Object.assign({},h),f}else{const u=Object.assign({},fi);for(const h of Object.keys(t))fi[h]=t[h];const d=new o(i.config);return fi=Object.assign({},u),d}}}function eQ(n,e){return n<e?-1:n>e?1:0}function Wy(n,e){return-1*eQ(n,e)}function el(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function tQ(n){if(n==null)throw new ae(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function ju(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new ae(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function DI(n,e,t=0,r=1/0){return pa(t>=0),pa(r>=t),Array.isArray(n)&&n.length>=t&&n.length<=r&&n.every(s=>typeof s===e)}function dr(n,e){Array.isArray(n)?(P(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,r)=>dr(t,`element ${r+1} of ${e}`))):P(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${fz(n)}.`)}function fz(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>fz(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function nQ(n,e,t){let r=t!=null?t():kr(),s;return(...i)=>{const a=t!=null?t():kr();return a-r<e||(r=a,s=n(...i)),s}}function mz(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let rQ=0;function gz(){return rQ++}const Vy={};function Kx(n=""){return n in Vy||(Vy[n]=0),Vy[n]+=1,n+Vy[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const sQ=["channelsFirst","channelsLast"],iQ=["nearest","bilinear"],aQ=["valid","same","causal"],oQ=["max","avg"],lQ=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Oc=new Map;function Un(n){ju(sQ,"DataFormat",n)}function uQ(n){ju(iQ,"InterpolationFormat",n)}function ii(n){ju(aQ,"PaddingMode",n)}function yz(n){ju(oQ,"PoolMode",n)}const Jp=[],h3="/";function hu(n,e){Jp.push(n);try{const t=e();return Jp.pop(),t}catch(t){throw Jp.pop(),t}}function cQ(){return Jp.length===0?"":Jp.join(h3)+h3}function bz(n){if(!vz(n))throw new Error("Not a valid tensor name: '"+n+"'");return cQ()+n}function xz(n){if(!vz(n))throw new Error("Not a valid tensor name: '"+n+"'");Oc.has(n)||Oc.set(n,0);const e=Oc.get(n);if(Oc.set(n,Oc.get(n)+1),e>0){const t=`${n}_${e}`;return Oc.set(t,1),t}else return n}const dQ=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function vz(n){return!!n.match(dQ)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hQ(n){return n===parseInt(n.toString(),10)}function tl(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let r=1;for(let s=e;s<t;++s)r*=n[s];return r}function md(n){if(n.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<n.length;t++){const r=n[t];r<e&&(e=r)}return e}function ul(n){if(n.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<n.length;t++){const r=n[t];r>e&&(e=r)}return e}function Ui(n,e){if(e<n)throw new ae(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let r=n;r<e;++r)t.push(r);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Zw;function sr(){return Zw==null&&(Zw=ga().epsilon()),Zw}function Zi(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function oo(n,e){return Oe(n,e)}function eg(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),se(n,t)}function pQ(n,e){return le(()=>{if(n.shape.length!==2)throw new ae(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=eg(n,1);return jS(t,[1,e,1])})}function fQ(n){const e=[tl(n.shape)];return se(n,e)}function mQ(n){if(n.rank<=1)throw new ae(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],tl(n.shape,1)];return se(n,e)}function pu(n,e,t){return le(()=>{switch(n.rank){case 1:return Xm(n,e,t);case 2:return _x(n,[e,0],[t,n.shape[1]]);case 3:return Um(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return pd(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return $t(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return $t(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new ae(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Hw(n,e,t){return le(()=>{switch(n.rank){case 1:return Xm(n,e,t);case 2:return _x(n,[0,e],[n.shape[0],t]);case 3:return Um(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return pd(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new ae(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function $y(n,e,t,r){return le(()=>{switch(n.rank){case 1:return Xm(n,e,t);case 2:switch(r){case 1:return pu(n,e,t);case 2:return Hw(n,e,t);default:throw new ae(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return pu(n,e,t);case 2:return Um(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return Hw(n,e,t);default:throw new ae(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return pu(n,e,t);case 2:return pd(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return pd(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return Hw(n,e,t);default:throw new ae(`The axis is not within the rank of the tensor ${r}`)}default:throw new ae(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function PI(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),$n(n,e)}function p3(n,e){switch(n.rank){case 1:return fT([n,e]);case 2:return mT([n,e],0);case 3:return gT([n,e],0);case 4:return yT([n,e],0);default:throw new ae(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function jS(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new ae(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return Ys(n,e)}function Yx(n,e=0,t=1,r,s){return xx(n,e,t,r,s)}function Ta(n,e,t,r){if(n.rank<2||e.rank<2)throw new Nt(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const s=n.shape.slice(-1)[0],i=e.shape.slice(-2)[0];if(s!==i)throw new Nt(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return XS({a:n,b:e,transposeA:!1,transposeB:!1,bias:r?QS(n.rank,r,Zi()):null,activation:t});{const s=n.shape.slice(),i=s.pop();n=se(n,[-1,i]);const a=e.shape.slice(),o=a.pop(),l=a.pop(),u=[...a,o],d=Array.from({length:e.rank},(f,m)=>m===0?e.rank-2:m<=e.rank-2?m-1:m);e=se(Gt(e,d),[l,-1]);const h=[...s,...u];return se(XS({a:n,b:e,transposeA:!1,transposeB:!1,bias:r?QS(n.rank,r,Zi()):null,activation:t}),h)}}function wz(n,e,t){return le(()=>(Array.isArray(e)?e=Nr(e,"int32"):e=Oe(e,"int32"),Th(n,e,t)))}function tg(n){return ne(n,n)}function QS(n,e,t){const r=e.shape;if(e.rank!==1&&e.rank!==n)throw new ae(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return r.length===1?se(e,[1,r[0],1,1,1]):se(e,[1,r[3],r[0],r[1],r[2]]);if(t==="channelsLast")return r.length===1?se(e,[1,1,1,1,r[0]]):se(e,[1].concat(r))}else if(n===4){if(t==="channelsFirst")return r.length===1?se(e,[1,r[0],1,1]):se(e,[1,r[2],r[0],r[1]]);if(t==="channelsLast")return r.length===1?se(e,[1,1,1,r[0]]):se(e,[1].concat(r))}else if(n===3){if(t==="channelsFirst")return r.length===1?se(e,[1,r[0],1]):se(e,[1,r[1],r[0]]);if(t==="channelsLast")return r.length===1?se(e,[1,1,r[0]]):se(e,[1].concat(r))}else if(n<3)return e;throw new ae(`Unsupported input rank by biasAdd: ${e.rank}`)}function Ji(n,e,t){return le(()=>(t==null&&(t=Zi()),Un(t),Ne(n,QS(n.rank,e,t))))}function gQ(n,e=1){if(e!==1)throw new Nt(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return vh(n)}function yQ(n){return le(()=>at(n,Ne(Yn(n),1)))}function Sz(n,e,t,r){return le(()=>jT(n,e,t,r))}function bQ(n){return le(()=>{const e=Ne(.5,ne(.2,n));return ms(e,0,1)})}function ng(n,e,t=!1){return t?n():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const xQ=["fanIn","fanOut","fanAvg"],vQ=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wQ(n){ju(xQ,"FanMode",n)}function SQ(n){ju(vQ,"Distribution",n)}let ki=class extends Ku{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}};class FI extends ki{apply(e,t){return jn(e,t)}}FI.className="Zeros";Ee(FI);let jx=class extends ki{apply(e,t){return ds(e,t)}};jx.className="Ones";Ee(jx);class GI extends ki{constructor(e){if(super(),typeof e!="object")throw new ae(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new ae(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return le(()=>ne(ct(this.value),ds(e,t)))}getConfig(){return{value:this.value}}}GI.className="Constant";Ee(GI);class OI extends ki{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return vl(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}OI.className="RandomUniform";Ee(OI);class WI extends ki{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Nt(`randomNormal does not support dType ${t}.`);return Yx(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}WI.className="RandomNormal";Ee(WI);class VI extends ki{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Nt(`truncatedNormal does not support dType ${t}.`);return Rx(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}VI.className="TruncatedNormal";Ee(VI);class $I extends ki{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return le(()=>{if(e.length!==2||e[0]!==e[1])throw new ae("Identity matrix initializer can only be used for 2D square matrices.");return ne(this.gain,mx(e[0]))})}getConfig(){return{gain:this.gain}}}$I.className="Identity";Ee($I);function TQ(n,e="channelsLast"){let t,r;if(Un(e),n.length===2)t=n[0],r=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const s=tl(n,2);t=n[1]*s,r=n[0]*s}else if(e==="channelsLast"){const s=tl(n,0,n.length-2);t=n[n.length-2]*s,r=n[n.length-1]*s}}else{const s=tl(n);t=Math.sqrt(s),r=Math.sqrt(s)}return[t,r]}class ys extends ki{constructor(e){if(super(),e.scale<0)throw new ae(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,wQ(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,SQ(this.distribution),this.seed=e.seed}apply(e,t){const r=TQ(e),s=r[0],i=r[1];let a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,s):this.mode==="fanOut"?a/=Math.max(1,i):a/=Math.max(1,(s+i)/2),this.distribution==="normal"){const o=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Nt(`${this.getClassName()} does not support dType ${t}.`);return Rx(e,0,o,t,this.seed)}else{const o=Math.sqrt(3*a);return vl(e,-o,o,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}ys.className="VarianceScaling";Ee(ys);let Qx=class extends ys{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return ys.className}};Qx.className="GlorotUniform";Ee(Qx);let Jx=class extends ys{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return ys.className}};Jx.className="GlorotNormal";Ee(Jx);let qx=class extends ys{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return ys.className}};qx.className="HeNormal";Ee(qx);let ev=class extends ys{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return ys.className}};ev.className="HeUniform";Ee(ev);let tv=class extends ys{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return ys.className}};tv.className="LeCunNormal";Ee(tv);let nv=class extends ys{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return ys.className}};nv.className="LeCunUniform";Ee(nv);class BI extends ki{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return le(()=>{if(e.length<2)throw new Nt("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;const r=be(e.slice(0,-1)),s=e[e.length-1],i=r*s;i>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${i}) elements: Slowness may result.`);const a=[Math.max(s,r),Math.min(s,r)],o=Yx(a,0,1,t,this.seed),l=eI.qr(o,!1);let u=l[0];const d=l[1].flatten().stridedSlice([0],[Math.min(s,r)*Math.min(s,r)],[Math.min(s,r)+1]);return u=ne(u,d.sign()),r<s&&(u=u.transpose()),ne(ct(this.gain),u.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}BI.className="Orthogonal";Ee(BI);const f3={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function m3(n,e={}){return qm(n,Yu.getMap().classNameMap,e,"initializer")}function Nn(n){return zI(n)}function Sn(n){if(typeof n=="string"){const e=n in f3?f3[n]:n;if(e==="GlorotNormal")return new Jx;if(e==="GlorotUniform")return new Qx;if(e==="HeNormal")return new qx;if(e==="HeUniform")return new ev;if(e==="LeCunNormal")return new tv;if(e==="LeCunUniform")return new nv;{const t={};return t.className=e,t.config={},m3(t)}}else return n instanceof ki?n:m3(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function JS(n){return Array.isArray(n)&&Array.isArray(n[0])}function k0(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function xt(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new ae(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function Yt(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new ae(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function C0(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((r,s)=>r*s);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const g3="Variable";class Tz{constructor(e,t="float32",r=g3,s=!0,i=null){this.dtype=t??"float32",this.shape=e.shape,this.id=gz(),r=r??g3,this.originalName=bz(r),this.name=xz(this.originalName),this.trainable_=s,this.constraint=i,this.val=YT(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),IQ(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function IQ(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function qS(n){return n.map(e=>e.read())}function XI(n){n.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Qn{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Hi{constructor(e,t,r,s,i,a,o){this.dtype=e,this.shape=t,this.sourceLayer=r,this.inputs=s,this.callArgs=i,this.outputTensorIndex=o,this.id=gz(),a!=null&&(this.originalName=bz(a),this.name=xz(this.originalName)),this.rank=t.length}}let kQ=0;class rv{constructor(e,t){this.callArgs=t,this.id=kQ++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const r of e.inboundLayers)r?.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let CQ=0,zt=class extends Ku{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=CQ++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const r=this.getClassName();t=Xa(r)+"_"+Kx(r)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let r;if(e.batchInputShape!=null)r=e.batchInputShape;else if(e.inputShape!=null){let i=null;e.batchSize!=null&&(i=e.batchSize),r=[i].concat(e.inputShape)}this.batchInputShape=r;let s=e.dtype;s==null&&(s=e.inputDType),s==null&&(s="float32"),this.dtype=s}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new ya(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new ae(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return us(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return us(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Bo(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Bo(`Layer ${this.name} is not connected, no input to return.`);return us(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Bo(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Bo(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return us(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=qt(e);if(this.inputSpec==null||this.inputSpec.length===0)return;const r=qt(this.inputSpec);if(t.length!==r.length)throw new ae(`Layer ${this.name} expects ${r.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let s=0;s<t.length;s++){const i=t[s],a=r[s];if(a==null)continue;const o=i.rank;if(a.ndim!=null&&o!==a.ndim)throw new ae(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${o}`);if(a.maxNDim!=null&&o>a.maxNDim)throw new ae(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${o}`);if(a.minNDim!=null&&o<a.minNDim)throw new ae(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${o}.`);if(a.dtype!=null&&i.dtype!==a.dtype)throw new ae(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${i.dtype}.`);if(a.axes){const l=i.shape;for(const u in a.axes){const d=Number(u),h=a.axes[u],f=d>=0?l[d]:l[l.length+d];if(h!=null&&[h,null].indexOf(f)===-1)throw new ae(`Input ${s} is incompatible with layer ${this.name}: expected axis ${d} of input shape to have value ${h} but got shape ${l}.`)}}if(a.shape!=null)for(let l=0;l<a.shape.length;++l){const u=a.shape[l],d=i.shape[l];if(u!=null&&d!=null&&u!==d)throw new ae(`Input ${s} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${i.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const r=qt(e),s=NQ(e),i=EQ(e);if(s===i)throw new ae("Arguments to apply() must be all SymbolicTensors or all Tensors");return hu(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const a=[];for(const o of qt(e))a.push(o.shape);this.build(us(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&i&&(this._refCount=1)}if(this.assertInputCompatibility(e),i){let a=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,a);const o=qt(a),l=[];for(let u of o)r.indexOf(u)!==-1&&(u=u.clone()),l.push(u);if(a=us(l),this.activityRegularizer!=null)throw new Nt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{const a=_Q(e),o=this.computeOutputShape(a);let l;const u=MQ(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),o!=null&&o.length>0&&Array.isArray(o[0])?l=o.map((d,h)=>new Hi(u,d,this,qt(e),t,this.name,h)):l=new Hi(u,o,this,qt(e),t,this.name),this.addInboundNode(e,l,null,null,a,o,t),this._refCount++,this.activityRegularizer!=null)throw new Nt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((r,s)=>{r!=null&&e[s]!=null&&e[s]!==r&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Bo(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const r=JSON.stringify(t.outputShapes);e.indexOf(r)===-1&&e.push(r)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Bo(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new ya(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return C0(this.weights)}build(e){this.built=!0}getWeights(e=!1){return qS(e?this.trainableWeights:this.weights)}setWeights(e){le(()=>{const t=this.weights;if(t.length!==e.length)throw new ae(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const r=[],s=qS(t);for(let i=0;i<s.length;++i){const a=s[i],o=t[i],l=e[i];if(!Ft(a.shape,l.shape))throw new ae(`Layer weight shape ${a.shape} not compatible with provided weight shape ${l.shape}`);r.push([o,l])}XI(r)})}addWeight(e,t,r,s,i,a,o,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new ae(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),r==null&&(r="float32"),this.fastWeightInitDuringBuild&&(s=l!=null?l():Sn("zeros"));const u=s.apply(t,r),d=new Tz(u,r,e,a,o);return u.dispose(),i!=null&&this.addLoss(()=>i.apply(d.read())),a==null&&(a=!0),a?this._trainableWeights.push(d):this._nonTrainableWeights.push(d),d}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=qt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(r=>{if(r!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,r){if(!this.supportsMasking)return;const s=this.computeMask(e,r),i=qt(t),a=qt(s);if(i.length!==a.length)throw new Error(`${this.name} outputs ${i.length} tensors but ${i.length} masks for those tensors`);for(let o=0;o<i.length;o++)i[o].kerasMask=a[o]}addInboundNode(e,t,r,s,i,a,o=null){const l=qt(e);t=qt(t),r=qt(r),s=qt(s),i=k0(i),a=k0(a);const u=[],d=[],h=[];for(const f of l)u.push(f.sourceLayer),d.push(f.nodeIndex),h.push(f.tensorIndex);new rv({outboundLayer:this,inboundLayers:u,nodeIndices:d,tensorIndices:h,inputTensors:l,outputTensors:t,inputMasks:r,outputMasks:s,inputShapes:i,outputShapes:a},o);for(let f=0;f<t.length;f++)t[f].sourceLayer=this,t[f].nodeIndex=this.inboundNodes.length-1,t[f].tensorIndex=f}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function _Q(n){n=qt(n);const e=[];for(const t of n)e.push(t.shape);return us(e)}function MQ(n){return"float32"}function Iz(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const r=e.inboundNodes[t];if(r.inboundLayers.length===0)return r.inputTensors;{const s=[];for(let i=0;i<r.inboundLayers.length;i++){const a=r.inputTensors[i],o=r.inboundLayers[i],l=r.nodeIndices[i],u=Iz(a,o,l);for(const d of u)s.indexOf(d)===-1&&s.push(d)}return s}}}function NQ(n){let e=!0;for(const t of qt(n))if(!(t instanceof Hi)){e=!1;break}return e}function EQ(n){let e=!0;for(const t of qt(n))if(t instanceof Hi){e=!1;break}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ch extends zt{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:Kx("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new ae("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new ae("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new ae("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const r=e.dtype||"float32";this.batchInputShape=t,this.dtype=r,this.inputSpec=[{shape:t}];const s=new Hi(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new rv({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new ae(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Ch.className="InputLayer";Ee(Ch);function kz(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new ae("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new Ch({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function RQ(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return Oe(e,n.dtype)}catch{throw new ae(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class Ko{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Ko)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,r){if(this.id2Value[e.id]==null)this.id2Value[e.id]=RQ(e,t),this.name2Id[e.name]=e.id,r!=null&&(this.id2Mask[e.id]=r);else throw new ae(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Hi){if(this.id2Value[e.id]==null)throw new ae(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new ae(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Hi){if(this.id2Value[e.id]==null)throw new ae(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new ae(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&kt(this.id2Mask)}}const _0=new pz,M0=new pz;function LQ(n){_0?.setMaxEntries(n),M0?.setMaxEntries(n)}function Xp(n,e,t,r){const s=t==null?!1:t.training,i=Array.isArray(n),a=i?n:[n],o=a.map(x=>x.name),l=[],u=e.names();for(const x of o)u.indexOf(x)!==-1?l.push(e.getValue(x)):l.push(null);const d=o.join(",")+"|"+e.names().sort().join(",");let h=_0.get(d),f;if(h==null){const x=AQ(a,e);h=x.sorted,f=x.recipientCounts,_0.put(d,h),M0.put(d,f)}f={},s||Object.assign(f,M0.get(d));const m=new Ko(e);for(let x=0;x<h.length;++x){const g=h[x],y=g.sourceLayer;if(y instanceof Ch)continue;const v=[],w=[],I=[];let T=!1;for(const R of g.inputs){const z=m.getValue(R),X=m.getMask(R);v.push(z),w.push(X),X!=null&&(T=!0),s||(f[R.name]--,f[R.name]===0&&!e.hasKey(R)&&o.indexOf(R.name)===-1&&!z.isDisposed&&R.sourceLayer.stateful!==!0&&I.push(z))}T&&(t=t||{},t.mask=w[0]);const C=qt(y.apply(v,t));let E=null;y.supportsMasking&&(E=y.computeMask(v,w));const L=DQ(g),M=Array.isArray(L)?L:[L];for(let R=0;R<M.length;++R){m.hasKey(M[R])||m.add(M[R],C[R],Array.isArray(E)?E[0]:E);const z=o.indexOf(M[R].name);z!==-1&&(l[z]=C[R])}s||kt(I)}return m.disposeMasks(),i?l:l[0]}function AQ(n,e){P(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],r={};if(n.length===1){const s=y3(n[0],e);t=s.sorted,r=s.recipientMap}else{const s=new Set;for(const i of n){const{sorted:a,recipientMap:o}=y3(i,e);for(const l of a)s.has(l.name)||(t.push(l),s.add(l.name));for(const l in o)r[l]==null&&(r[l]=new Set),o[l].forEach(u=>r[l].add(u))}}return{sorted:t,recipientCounts:zQ(r)}}function zQ(n){const e={};for(const t in n)e[t]=n[t].size;return e}function y3(n,e){const t=new Set,r=[],s={};for(const o of e.names())t.add(o);const i=[],a=[];for(i.push(n);i.length>0;){const o=i[i.length-1];if(t.has(o.name)){i.pop();continue}const l=a[a.length-1]===i.length-1;if(o.inputs.length===0||l)i.pop(),r.push(o),t.add(o.name),l&&a.pop();else{a.push(i.length-1);for(const u of o.inputs)s[u.name]==null&&(s[u.name]=new Set),s[u.name].add(o.name),!t.has(u.name)&&i.push(u)}}return{sorted:r,recipientMap:s}}function DQ(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let r=0;r<n.sourceLayer.inboundNodes.length;++r)for(const s of n.sourceLayer.inboundNodes[r].outputTensors)if(s.id===n.id){t=r;break}e=n.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PQ=de();PQ.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,LQ);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function UI(n,e){return le(()=>Rr(Qe(ne(n,n),e,!0)))}class rg extends Ku{getConfig(){return{}}}class ZI extends rg{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return le(()=>{const t=UI(e,this.axis),r=ms(t,0,this.maxValue);return ne(e,at(r,Ne(sr(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}ZI.className="MaxNorm";Ee(ZI);class HI extends rg{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return le(()=>at(e,Ne(sr(),UI(e,this.axis))))}getConfig(){return{axis:this.axis}}}HI.className="UnitNorm";Ee(HI);class KI extends rg{apply(e){return Qi(e)}}KI.className="NonNeg";Ee(KI);class YI extends rg{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return le(()=>{const t=UI(e,this.axis),r=Ne(ne(this.rate,ms(t,this.minValue,this.maxValue)),ne(1-this.rate,t));return ne(e,at(r,Ne(sr(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}YI.className="MinMaxNorm";Ee(YI);const b3={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function ir(n){return zI(n)}function x3(n,e={}){return qm(n,Yu.getMap().classNameMap,e,"constraint")}function ar(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in b3?b3[n]:n,config:{}};return x3(e)}else return n instanceof rg?n:x3(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function $o(n){if(n==null)return;const e=[],t=[],r=[];for(const s in n){const i=n[s];if(typeof i!="number"){const a=i;e.push(a.data()),t.push(s),r.push(a)}}if(e.length>0){const s=await Promise.all(e);for(let i=0;i<s.length;++i)n[t[i]]=s[i][0];kt(r)}}function Cz(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var v3;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(v3||(v3={}));const FQ=125;let gd=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}};class _z{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const r of this.callbacks)await r.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const r of this.callbacks)await r.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const r of this.callbacks)await r.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const r of this.callbacks)await r.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class GQ extends gd{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const r=t.size==null?0:t.size;this.seen+=r;for(const s in t){const i=t[s];if(typeof i=="number")this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+i*r;else{let a;s in this.totals?a=this.totals[s]:this.totals[s]=0;const o=le(()=>Ne(this.totals[s],ne(i,r)));this.totals[s]=o,a?.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const r of this.params.metrics)this.totals[r]!=null&&(typeof this.totals[r]=="number"?t[r]=this.totals[r]/this.seen:le(()=>{const s=ne(at(1,this.seen),this.totals[r]);t[r]=s,this.totals[r].dispose(),Pn(t[r])}))}}class Mz extends gd{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const r in t)this.history[r]==null&&(this.history[r]=[]),this.history[r].push(t[r])}async syncData(){const e=[],t=[],r=[];for(const i in this.history){const a=this.history[i];for(let o=0;o<a.length;++o)if(typeof a[o]!="number"){const l=a[o];e.push(l.data()),t.push(i),r.push(o)}}const s=await Promise.all(e);for(let i=0;i<s.length;++i)this.history[t[i]][r[i]].dispose(),this.history[t[i]][r[i]]=s[i][0]}}class Nz extends gd{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Ym,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=FQ),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");m0(this.yieldEvery)&&(this.maybeWait=nQ(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,r){const s=[];this.yield!=null&&(await $o(r),s.push(this.yield(e,t,r))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await $o(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const r=[];this.epochEnd!=null&&(await $o(t),r.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&r.push(this.nextFrameFunc()),await Promise.all(r)}async onBatchBegin(e,t){this.batchBegin!=null&&(await $o(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const r=[];this.batchEnd!=null&&(await $o(t),r.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?r.push(this.nextFrameFunc()):m0(this.yieldEvery)&&r.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(r)}async onTrainBegin(e){this.trainBegin!=null&&(await $o(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await $o(e),await this.trainEnd(e))}}function Ez(n,e){return n==null&&(n={}),n instanceof gd?[n]:Array.isArray(n)&&n[0]instanceof gd?n:qt(n).map(t=>new Nz(t,e))}let jI=class la{constructor(){}static registerCallbackConstructor(e,t){P(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),la.checkForDuplicate(t),la.constructors[e]==null&&(la.constructors[e]=[]),la.constructors[e].push(t)}static checkForDuplicate(e){for(const t in la.constructors)la.constructors[+t].forEach(r=>{if(r===e)throw new ae("Duplicate callback constructor.")})}static clear(){la.constructors={}}static createCallbacks(e){const t=[];for(const r in la.constructors){const s=+r;e>=s&&t.push(...la.constructors[s])}return t.map(r=>new r)}};jI.constructors={};function Rz(n,e,t,r,s,i,a,o,l){const u=new Mz,d=[new GQ,...jI.createCallbacks(e)];n!=null&&d.push(...n),d.push(u);const h=new _z(d);return h.setParams({epochs:t,initialEpoch:r,samples:s,steps:i,batchSize:a,verbose:e,doValidation:o,metrics:l}),{callbackList:h,history:u}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Bi(n,e={},t=!1){return qm(n,Yu.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function N0(n,e){return le(()=>{n.dtype!=="float32"&&(n=Oe(n,"float32"));const t=Qe(tg(n),e,!0),r=Xu(t.shape,sr()),s=Rr(Ma(t,r));return at(n,s)})}function Qu(n,e){return le(()=>Mn(tg(Ye(e,n)),-1))}function sv(n,e){return le(()=>Mn(Yn(Ye(e,n)),-1))}function _h(n,e){return le(()=>{const t=Ye(n,e),r=ms(Yn(n),sr(),Number.MAX_VALUE),s=Yn(at(t,r));return ne(100,Mn(s,-1))})}function OQ(n,e){return le(()=>{const t=ms(e,sr(),Number.MAX_VALUE),r=zs(Ne(1,t)),s=ms(n,sr(),Number.MAX_VALUE),i=zs(Ne(1,s));return Mn(tg(Ye(r,i)),-1)})}function WQ(n,e){return le(()=>{const t=Ma(0,Ye(1,ne(n,e)));return Mn(tg(t),-1)})}function VQ(n,e){return le(()=>{const t=Ma(0,Ye(1,ne(n,e)));return Mn(t,-1)})}function $Q(n,e){return le(()=>{const t=Qe(ne(n,e),-1),r=ni(ne(Ye(1,n),e),-1);return Ma(0,Ne(1,Ye(r,t)))})}function BQ(n,e){return le(()=>{const t=Math.log(2),r=Ye(e,n),s=Ye(Ne(r,Uu(ne(-2,r))),t);return Mn(s,-1)})}function mf(n,e,t=!1){return le(()=>{if(t)e=Zm(e);else{const r=Qe(e,e.shape.length-1,!0);e=at(e,r)}return e=ms(e,sr(),1-sr()),dn(Qe(ne(Oe(n,"float32"),zs(e)),e.shape.length-1))})}function E0(n,e,t=!1){return le(()=>{const r=Oe(Sh(fQ(n)),"int32");e=ms(e,sr(),1-sr());const s=e.shape,i=se(dd(r,s[s.length-1]),s);return mf(i,e,t)})}function XQ(n,e){if(!Ft(n.shape,e.shape))throw new ae(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return le(()=>{const t=Qi(e),r=dn(Yn(e));return Ne(Ye(t,ne(e,n)),Fm(gs(r)))})}function iv(n,e){return le(()=>{let t;return t=ms(e,sr(),1-sr()),t=zs(at(t,Ye(1,t))),Mn(XQ(n,t),-1)})}function UQ(n,e){return le(()=>{const t=ms(n,sr(),1),r=ms(e,sr(),1);return Qe(ne(n,zs(at(t,r))),-1)})}function ZQ(n,e){return le(()=>{const t=zs(Ne(sr(),e));return Mn(Ye(e,ne(n,t)),-1)})}function QI(n,e){return le(()=>{const t=N0(n,-1),r=N0(e,-1),s=ne(t,r);return dn(Qe(s,-1))})}const R0={meanSquaredError:Qu,meanAbsoluteError:sv,meanAbsolutePercentageError:_h,meanSquaredLogarithmicError:OQ,squaredHinge:WQ,hinge:VQ,categoricalHinge:$Q,logcosh:BQ,categoricalCrossentropy:mf,sparseCategoricalCrossentropy:E0,binaryCrossentropy:iv,kullbackLeiblerDivergence:UQ,poisson:ZQ,cosineProximity:QI};function Kw(n){if(typeof n=="string"){if(n in R0)return R0[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new ae(e)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function JI(n,e){return le(()=>{const t=ne(.5,Ds(e)),r=oo(ts(e,t),n.dtype);return Mn(As(n,r),-1)})}function qI(n,e){return le(()=>oo(As(Su(n,-1),Su(e,-1)),"float32"))}function Lz(n,e){return le(()=>Oe(Qe(Ti(As(n,1),As(e,1))),"float32"))}function HQ(n,e){return le(()=>Oe(Qe(Ti(As(n,1),As(e,0))),"float32"))}function KQ(n,e){return le(()=>Oe(Qe(Ti(As(n,0),As(e,1))),"float32"))}function Az(n,e){return le(()=>{const t=Lz(n,e),r=KQ(n,e),s=Ne(t,r);return Oe(hr(ts(s,0),at(t,s),0),"float32")})}function YQ(n,e){return le(()=>{const t=Lz(n,e),r=HQ(n,e),s=Ne(t,r);return Oe(hr(ts(s,0),at(t,s),0),"float32")})}function zz(n,e){return iv(n,e)}function Dz(n,e){return n.rank===e.rank&&(n=wl(n,[n.rank-1])),e=Su(e,-1),e.dtype!==n.dtype&&(e=Oe(e,n.dtype)),Oe(As(n,e),"float32")}const jQ=Qu,QQ=Qu,JQ=sv,qQ=sv,eJ=_h,tJ=_h,ek=mf,nJ=QI,Pz=E0,L0={binaryAccuracy:JI,categoricalAccuracy:qI,precision:Az,categoricalCrossentropy:ek,sparseCategoricalCrossentropy:Pz,mse:jQ,MSE:QQ,mae:JQ,MAE:qQ,mape:eJ,MAPE:tJ,cosine:nJ};function rJ(n){if(typeof n=="string"&&n in L0)return L0[n];if(typeof n!="string"&&n!=null)return n;throw new ae(`Unknown metric ${n}`)}function By(n){if(pa(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(R0))if(R0[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(L0))if(L0[t]===n){e=t;break}return e!==void 0?e:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function sJ(n){const e={Adagrad:()=>Kl.adagrad(.01),Adadelta:()=>Kl.adadelta(1,.95,sr()),Adam:()=>Kl.adam(.001,.9,.999,sr()),Adamax:()=>Kl.adamax(.002,.9,.999,sr(),0),RMSProp:()=>Kl.rmsprop(.001,.9,0,sr()),SGD:()=>Kl.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new ae(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const w3=1*1024*1024;function S3(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!e2(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const r=JSON.stringify(n);r.length>w3&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${r.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${w3}.`)}}function e2(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!e2(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!e2(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function iJ(n,e,t,r=console.log){const s=oJ(n),i=["Layer (type)","Input Shape","Output shape","Param #"];s?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(d=>Math.floor(e*d)));let a;if(!s){i.push("Receives inputs"),a=[];for(const d in n.nodesByDepth)a.push(...n.nodesByDepth[d])}r("_".repeat(e)),A0(i,t,r),r("=".repeat(e));const o=n.layers;for(let d=0;d<o.length;++d)s?lJ(o[d],t,r):uJ(o[d],t,a,r),r((d===o.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const l=aJ(n),u=C0(n.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(e))}function aJ(n){let e;return n.collectedTrainableWeights!=null?e=C0(n.collectedTrainableWeights):e=C0(n.trainableWeights),e}function oJ(n){let e=!0;const t=[],r=[];for(const s in n.nodesByDepth)t.push(n.nodesByDepth[s]);for(const s of t){if(s.length>1||s.length===1&&s[0].inboundLayers.length>1){e=!1;break}r.push(...s)}if(e)for(const s of n.layers){let i=!1;for(const a of s.inboundNodes)if(r.indexOf(a)!==-1)if(i){e=!1;break}else i=!0;if(!e)break}return e}function A0(n,e,t=console.log){let r="";for(let s=0;s<n.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=n[s],r=r.slice(0,e[s]),r+=" ".repeat(e[s]-r.length);t(r)}function lJ(n,e,t){let r,s;try{s=n.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{s="multiple"}try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const i=n.name,a=n.getClassName(),o=[`${i} (${a})`,s,r,n.countParams().toString()];A0(o,e,t)}function uJ(n,e,t,r){let s,i;try{i=n.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{i="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const a=[];for(const h of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(h)===-1))for(let f=0;f<h.inboundLayers.length;++f){const m=h.inboundLayers[f].name,x=h.nodeIndices[f],g=h.tensorIndices[f];a.push(`${m}[${x}][${g}]`)}const o=n.name,l=n.getClassName(),u=a.length===0?"":a[0],d=[`${o} (${l})`,i,s,n.countParams().toString(),u];A0(d,e,r);for(let h=1;h<a.length;++h)A0(["","","","",a[h]],e,r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Fz(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function gf(n,e){if(n===null)return null;if(typeof n=="string")return Jl(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],r=n.length;for(let s=0;s<r;++s){const i=n[s];Fz(e,s,i)?t.push(i):t.push(gf(i,e))}return t}else{const t={};for(const r of Object.keys(n)){const s=n[r];if(r==="name"&&typeof s=="string")t[r]=s;else{const i=Jl(r);t[i]=gf(s,i)}}return t}}function t2(n,e){if(n==null)return null;if(typeof n=="string")return Xa(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],r=n.length;for(let s=0;s<r;++s){const i=n[s];Fz(e,s,i)?t.push(i):t.push(t2(i,e))}return t}else{const t={};for(const r of Object.keys(n)){const s=n[r],i=Xa(r);(r==="name"||r==="className")&&typeof s=="string"?t[i]=s:t[i]=t2(s,r)}return t}}/** @license See the LICENSE file. */const av="4.16.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const cJ=n=>{const e=Object.keys(n);if(e.length===0)return!1;const t=e[0].split("/");return!isNaN(parseInt(t[t.length-1],10))};let dJ=class ua extends zt{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const w=this.getClassName().toLowerCase();this.name=Kx(w)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],el(this.inputs).length!==this.inputs.length)throw new ae(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(w=>w.name)}`);el(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(w=>w.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const w of this.outputs){const I=w.sourceLayer,T=w.nodeIndex,C=w.tensorIndex;this.outputLayers.push(I),this.outputLayersNodeIndices.push(T),this.outputLayersTensorIndices.push(C)}for(const w of this.inputs){const I=w.sourceLayer,T=w.nodeIndex,C=w.tensorIndex;pa(T===0,"input layer has >1 nodes"),pa(C===0,"input layer has >1 tensors"),this.inputLayers.push(I),this.inputLayersNodeIndices.push(T),this.inputLayersTensorIndices.push(C)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let w=0;w<this.inputLayers.length;w++){const I=this.inputLayers[w];if(!(I instanceof Ch))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${w} (0-based) originates from layer type ${I.getClassName()}.`);this.inputNames.push(I.name),this.feedInputShapes.push(I.batchInputShape),this.feedInputNames.push(I.name)}for(const w of this.outputLayers)this.outputNames.push(w.name);this.internalInputShapes=this.inputs.map(w=>w.shape),this.internalOutputShapes=this.outputs.map(w=>w.shape);const t={},r={},s={},i={},a={},o=[],l=(w,I,T,C,E,L)=>{(C==null||E==null||L==null)&&(C=w.sourceLayer,E=w.nodeIndex,L=w.tensorIndex);const M=C.inboundNodes[E];if(T.indexOf(M)!==-1)throw new ya(`The tensor ${w.name} at layer "${C.name}" is part of a cycle.`);if(I.indexOf(M)!==-1)return;this.containerNodes.add(ua.nodeKey(C,E)),C.id in a||(a[C.id]=Object.keys(a).length),T.indexOf(M)===-1&&T.push(M);const R=M.inboundLayers.length;for(let z=0;z<R;z++){const X=M.inputTensors[z],U=M.inboundLayers[z],G=M.nodeIndices[z],V=M.tensorIndices[z];l(X,I,T,U,G,V)}for(I.push(M);T.indexOf(M)>=0;)T.splice(T.indexOf(M),1);o.push(M)},u=[],d=[];for(const w of this.outputs)l(w,u,d);const h=o.slice().reverse();for(const w of h){r[w.id]=w,w.id in t||(t[w.id]=0);let I=t[w.id];const T=s[w.outboundLayer.id]==null?0:s[w.outboundLayer.id];I=Math.max(I,T),s[w.outboundLayer.id]=I,i[w.outboundLayer.id]=w.outboundLayer,t[w.id]=I;for(let C=0;C<w.inboundLayers.length;C++){const E=w.inboundLayers[C],L=w.nodeIndices[C],M=E.inboundNodes[L],R=t[M.id]==null?0:t[M.id];t[M.id]=Math.max(I+1,R),r[M.id]=M}}const f={};for(const w in t){const I=t[w];I in f||(f[I]=[]),f[I].push(r[w])}const m={};for(const w in s){const I=s[w];I in m||(m[I]=[]),m[I].push(i[w])}let x=Object.keys(m).map(w=>parseInt(w,10)).sort(Wy);this.layers=[];for(const w of x){const I=m[w];I.sort((T,C)=>{const E=a[T.id],L=a[C.id];return E<L?-1:E>L?1:0});for(const T of I)T instanceof ua&&this.internalContainerRefs.push(T),this.layers.push(T)}this.layersByDepth=m,x=Object.keys(f).map(w=>parseInt(w,10)).sort(Wy);const g=this.inputs.slice(),y=[];for(const w of x)for(const I of f[w]){const T=I.outboundLayer;if(T!=null){for(const C of I.inputTensors)if(g.indexOf(C)===-1)throw new ya(`Graph disconnected: cannot obtain value for tensor ${C} at layer "${T.name}". The following previous layers were accessed without issue: ${y}`);for(const C of I.outputTensors)g.push(C);y.push(T.name)}}this.nodesByDepth=f;const v=this.layers.map(w=>w.name);for(const w of v){const I=v.filter(T=>T===w).length;if(I!==1)throw new ya(`The name "${w}" is used ${I} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(v))}this.outboundNodes=[],this.inboundNodes=[],new rv({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(w=>null),outputMasks:this.outputs.map(w=>null),inputShapes:this.inputs.map(w=>w.shape),outputShapes:this.outputs.map(w=>w.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(r=>r.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new ae("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const r of this.layers)t.push(...r.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const r={};let s=0;const i=cJ(e);i&&this.parseWeights(e);for(const o of this.layers)for(const[l,u]of o.weights.entries()){const d=i?`${u.name.split("/").slice(0,-1).join("/")+"/"}${l}`:u.originalName;if(r[d]!=null)throw new ae(`Duplicate weight name: ${d}`);r[d]=u,s++}const a=[];for(const o in e){let l=o;if(r[o]==null){const u=o.split("/");l=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(r[l]!=null)a.push([r[l],e[o]]);else if(t)throw new ae(`Provided weight data has no target variable: ${o}`);delete r[l]}if(t){const o=[];for(const l in r)o.push(l);if(o.length>0)throw new ae(`${o.length} of ${s} weights are not set: ${o}`)}XI(a)}parseWeights(e){for(const t in Object.keys(e)){const r=t.split("/"),s=["vars","layer_checkpoint_dependencies"],i=r.map(a=>a.startsWith("_")?a.slice(1):a).filter(a=>!s.includes(a)).join("/");i!==t&&(e[i]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${av}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const r=t2(this.updatedConfig());return t?JSON.stringify(r):r}call(e,t){return le(()=>{e=qt(e);const r=new Ko;for(let s=0;s<this.inputs.length;++s)r.add(this.inputs[s],e[s]);return Xp(this.outputs,r,t)})}computeMask(e,t){return le(()=>{e=qt(e);let r;return t==null?r=Mu(null,e.length):r=qt(t),this.runInternalGraph(e,r)[1]})}computeOutputShape(e){const t=k0(e);if(t.length!==this.inputLayers.length)throw new ae(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const r={};for(let o=0;o<t.length;o++){const l=this.inputLayers[o],u=t[o],d=l.name+"_0_0";r[d]=u}const s=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(Wy);if(s.length>1)for(const o of s){const l=this.nodesByDepth[o];for(const u of l){const d=u.outboundLayer;if(this.inputLayers.map(g=>g.id).indexOf(d.id)!==-1)continue;const h=[];for(let g=0;g<u.inboundLayers.length;g++){const y=u.inboundLayers[g],v=u.nodeIndices[g],w=u.tensorIndices[g],I=`${y.name}_${v}_${w}`,T=r[I];h.push(T)}const f=d.computeOutputShape(us(h)),m=k0(f),x=d.inboundNodes.indexOf(u);for(let g=0;g<m.length;g++){const y=`${d.name}_${x}_${g}`;r[y]=m[g]}}}const i=[],a=[];for(let o=0;o<this.outputLayers.length;o++){const l=this.outputLayers[o],u=this.outputLayersNodeIndices[o],d=this.outputLayersTensorIndices[o],h=`${l.name}_${u}_${d}`;a.push(h)}for(let o=0;o<a.length;o++){const l=a[o];pa(l in r),i.push(r[l])}return us(i)}runInternalGraph(e,t){t==null&&(t=Mu(null,e.length));const r={};for(let l=0;l<this.inputs.length;++l){const u=this.inputs[l],d=e[l],h=t[l];r[u.id]=[d,h]}const s=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Wy);for(const l of s){const u=this.nodesByDepth[l];for(const d of u){const h=d.outboundLayer,f=d.inputTensors,m=d.outputTensors,x=new Array;for(const g of f)g.id in r&&x.push(r[g.id]);if(x.length===f.length){let g={},y,v,w,I;if(d.callArgs!=null&&(g=d.callArgs),x.length===1){const[T,C]=x[0];g.mask==null&&(g.mask=C),w=qt(h.call(T,g)),I=qt(h.computeMask(T,C)),y=[T],v=[C]}else y=x.map(T=>T[0]),v=x.map(T=>T[1]),g.mask==null&&(g.mask=v),w=qt(h.call(y,g)),I=qt(h.computeMask(y,v));if(h.activityRegularizer)throw new Nt("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let T=0;T<m.length;++T){const C=m[T],E=w[T],L=I[T];r[C.id]=[E,L]}}}}const i=[],a=[],o=[];for(const l of this.outputs){pa(l.id in r,`Could not compute output ${l.name} : ${l.id}`);const[u,d]=r[l.id];o.push(u.shape),i.push(u),a.push(d)}return[i,a,o]}buildNodeConversionMap(e){const t={};let r;for(const s of this.layers){r=s instanceof ua?1:0;for(let i=0;i<s.inboundNodes.length;i++){const a=ua.nodeKey(s,i);this.containerNodes.has(a)&&(t[a]=r,r+=1)}}return t}getLayer(e,t){if(t!=null)return this.findLayer(t);if(e==null)throw new ae("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(const r of this.layers)if(r.name===e)return r;throw new ae(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new ae(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return le(()=>{const e=[];for(const t of this.layers)for(let r=0;r<t.inboundNodes.length;++r){const s=ua.nodeKey(t,r);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),r=[];for(const a of this.layers){const o=a.getClassName(),l=a.getConfig(),u=[];for(let h=0;h<a.inboundNodes.length;h++){const f=a.inboundNodes[h],m=ua.nodeKey(a,h);let x={};if(this.containerNodes.has(m)){if(f.callArgs)try{JSON.stringify(f.callArgs),x=f.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${f.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),x={}}if(f.inboundLayers.length>0){const g=[];for(let y=0;y<f.inboundLayers.length;y++){const v=f.inboundLayers[y],w=f.nodeIndices[y],I=f.tensorIndices[y],T=ua.nodeKey(v,w);let C=t[T];C==null&&(C=0),g.push([v.name,C,I,x])}u.push(g)}}}const d={};d.name=a.name,d.className=o,d.config=l,d.inboundNodes=u,r.push(d)}e.layers=r;const s=[];for(let a=0;a<this.inputLayers.length;a++){const o=this.inputLayers[a],l=this.inputLayersNodeIndices[a],u=ua.nodeKey(o,l);if(!this.containerNodes.has(u))continue;let d=t[u];d==null&&(d=0);const h=this.inputLayersTensorIndices[a];s.push([o.name,d,h])}e.inputLayers=s;const i=[];for(let a=0;a<this.outputLayers.length;a++){const o=this.outputLayers[a],l=this.outputLayersNodeIndices[a],u=ua.nodeKey(o,l);if(!this.containerNodes.has(u))continue;let d=t[u];d==null&&(d=0);const h=this.outputLayersTensorIndices[a];i.push([o.name,d,h])}return e.outputLayers=i,e}static fromConfig(e,t,r={},s=!1){const i={},a={};function o(y,v){y.name in a?a[y.name].push(v):a[y.name]=[v]}function l(y,v){const w=[];let I;for(const T of v){const C=T[0],E=T[1],L=T[2];if(I=T[3]==null?{}:T[3],!(C in i)){o(y,v);return}const M=i[C];if(M.inboundNodes.length<=E){o(y,v);return}const R=M.inboundNodes[E];w.push(R.outputTensors[L])}w.length>0&&y.apply(us(w),I)}function u(y){const v=y.name,w=Bi(y,t.customObjects!=null?t.customObjects:{});w.setFastWeightInitDuringBuild(s),i[v]=w,y.inboundNodes.forEach(I=>{if(!(I instanceof Array))throw new ae(`Corrupted configuration, expected array for nodeData: ${I}`);o(w,I)})}const d=t.name,h=t.layers;for(const y of h)u(y);for(;!tQ(a);)for(const y of h){const v=i[y.name];if(v.name in a){const w=a[v.name];delete a[v.name];for(const I of w)l(v,I)}}const f=[],m=[],x=t.inputLayers;for(const y of x){const v=y[0],w=y[1],I=y[2];pa(v in i);const T=i[v].inboundNodes[w].outputTensors;f.push(T[I])}const g=t.outputLayers;for(const y of g){const v=y[0],w=y[1],I=y[2];pa(v in i);const T=i[v].inboundNodes[w].outputTensors;m.push(T[I])}return new e({inputs:f,outputs:m,name:d})}get stateful(){if(this._stateful)throw new ae("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){le(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hJ(n,e,t){const r=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>null);if(r===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==r)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const s=[];return e.forEach(i=>{i in n?s.push(n[i]):s.push(null)}),s}else throw new Error(`The model has multiple (${r}) outputs, so ${t} must be either an array with ${r} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function Gz(n,e){return hJ(n,e,"classWeight")}async function Oz(n,e,t,r){if(t!=null){const s=le(()=>{if(n.shape.length===1)return wa(n);if(n.shape.length===2){if(n.shape[1]>1)return Su(n,1);if(n.shape[1]===1)return se(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),i=Array.from(await s.data());kt(s);const a=[];return i.forEach(o=>{if(t[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);a.push(t[o])}),Nr(a,"float32")}else return null}function pJ(n,e){return ne(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const fJ=32;function Wz(n,e){let t,r;const s=e;t=s.xs,r=s.ys,P(t!=null&&r!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const i=T3("input",n.inputNames,t),a=T3("output",n.outputNames,r),o=i[0].shape[0];P(i.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),P(a.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<i.length;l++)P(i[l].shape[0]===o,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${n.inputNames[0]}.`);for(let l=0;l<a.length;l++)P(a[l].shape[0]===o,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${a[l].shape[0]}; expected  ${o} based on input ${n.inputNames[0]}.`);return{xs:i,ys:a}}function T3(n,e,t){if(t instanceof Ht)return[t];if(Array.isArray(t))return P(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const r=[];for(const s of e){if(t[s]==null)throw new ae(`The feature data generated by the dataset lacks the required ${n} key '${s}'.`);r.push(t[s])}return r}}function mJ(n){if(n.length===3)throw new Nt("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function gJ(n,e,t){const r=t.batchesPerEpoch!=null;if(P(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),P(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),P(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),P(!r||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),P(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const s=t.validationData!=null;let i,a;if(s)if(I3(t.validationData))P(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const y=mJ(t.validationData);i=y.xs,a=y.ys}const o=n.makeTrainFunction(),l=n.getDedupedMetricsNames();let u;s?u=l.slice().concat(l.map(y=>"val_"+y)):u=l.slice();const d=Ez(t.callbacks,t.yieldEvery),h=t.verbose==null?1:t.verbose,{callbackList:f,history:m}=Rz(d,h,t.epochs,null,null,yJ(e,t),null,s,u);f.setModel(n),n.history=m,await f.onTrainBegin(),n.stopTraining_=!1;let x=t.initialEpoch==null?0:t.initialEpoch,g=await e.iterator();for(;x<t.epochs;){const y={};await f.onEpochBegin(x);let v=0,w=0;for(r||(g=await e.iterator());!r||v<t.batchesPerEpoch;){const I=await g.next();if(r&&I.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${v} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(I.value!=null){const{xs:T,ys:C}=Wz(n,I.value),E={};E.batch=w,E.size=T[0].shape[0],await f.onBatchBegin(w,E);const L=[];if(t.classWeight!=null){const z=Gz(t.classWeight,n.outputNames);for(let X=0;X<z.length;++X)L.push(await Oz(C[X],null,z[X]))}const M=T.concat(C).concat(L),R=o(M);kt(M);for(let z=0;z<l.length;++z){const X=l[z],U=R[z];E[X]=U,Pn(U)}await f.onBatchEnd(w,E),Cz(E),w++,v++}if(r?v>=t.batchesPerEpoch:I.done){if(s){let T;I3(t.validationData)?T=qt(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):T=qt(n.evaluate(i,a,{batchSize:t.validationBatchSize==null?fJ:t.validationBatchSize,verbose:0}));for(let C=0;C<n.metricsNames.length;++C)y[`val_${n.metricsNames[C]}`]=T[C]}break}if(n.stopTraining_)break}if(await f.onEpochEnd(x,y),x++,n.stopTraining_)break}return await f.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function yJ(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function I3(n){return typeof n.iterator=="function"}function bJ(n){return typeof n.next=="function"}async function xJ(n,e,t){t=t||{};const r=t.batches!=null,s=n.testFunction;let i=[];if(t.verbose>0)throw new Nt("Verbose mode is not implemented yet.");P(!r||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const a=bJ(e)?e:await e.iterator();let o=0,l=0;for(;!r||l<t.batches;){const u=await a.next();if(i=le(()=>{if(u.value){const{xs:d,ys:h}=Wz(n,u.value),f=d.concat(h),m=le(()=>s(f));if(kt(f),l===0)for(let g=0;g<m.length;++g)i.push(ct(0));const x=f[0].shape[0];for(let g=0;g<m.length;++g){const y=m[g],v=i[g];i[g]=le(()=>Ne(i[g],ne(x,y))),l>0&&kt(v)}kt(m),o+=x,++l}return i}),u.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<i.length;++u){const d=i[u];i[u]=at(i[u],o),kt(d)}return us(i)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Yw(n){P(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function Ap(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(r=>pu(r,e,t-e)):pu(n,e,t-e)}function n2(n,e){return le(()=>n==null?null:Array.isArray(n)?n.map(t=>n2(t,e)):wz(n,e.dtype==="int32"?e:Oe(e,"int32")))}function jw(n,e){const t=[];let r=0,s=null;for(;r<n;)s=r+e,s>=n&&(s=n),t.push([r,s]),r=s;return t}function Vz(n){const e=[];n instanceof Ht&&(n=[n]);for(let t=0;t<n.length;++t){const r=n[t];if(r.rank===1)e.push(eg(r,1));else{if(r.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(r)}}return e}function Pi(n,e){if(n==null)return;const t=[];if(e instanceof Ht)t.push(e.id);else if(Array.isArray(e))e.forEach(s=>t.push(s.id));else if(e!=null)for(const s in e){const i=e[s];t.push(i.id)}const r=[];if(n instanceof Ht)t.indexOf(n.id)===-1&&r.push(n);else if(Array.isArray(n))n.forEach(s=>{t.indexOf(s.id)===-1&&r.push(s)});else if(n!=null)for(const s in n){const i=n[s];t.indexOf(i.id)===-1&&r.push(i)}r.forEach(s=>{s.isDisposed||s.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function vJ(n){return n instanceof Ht}function r2(n){return Array.isArray(n)}function k3(n){return!vJ(n)&&!r2(n)}function C3(n,e,t,r=!0,s=""){if(e==null||e.length===0){if(n!=null){let a=!1;if(r2(n)&&n.length>0)a=!0;else if(k3(n)){for(const o in n)if(n.hasOwnProperty(o)){a=!0;break}}else a=!0;if(a)throw new ae(`Error when checking model ${s} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(a=>null);let i;if(k3(n)){n=n,i=[];for(const a of e){if(n[a]==null)throw new ae(`No data provided for "${a}". Need data for each key in: ${e}`);i.push(n[a])}}else if(r2(n)){if(n=n,n.length!==e.length)throw new ae(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);i=n}else{if(n=n,e.length>1)throw new ae(`The model ${s} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);i=[n]}if(i=Vz(i),t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;const o=i[a];if(o.shape.length!==t[a].length)throw new ae(`Error when checking ${s}: expected ${e[a]} to have ${t[a].length} dimension(s). but got array with shape ${o.shape}`);for(let l=0;l<t[a].length;++l){if(l===0&&!r)continue;const u=o.shape[l],d=t[a][l];if(d!=null&&d>=0&&u!==d)throw new ae(`${s} expected a batch of elements where each example has shape [${t[a].slice(1,t[a].length)}] (i.e.,tensor shape [*,${t[a].slice(1,t[a].length)}]) but the ${s} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return i}function wJ(n,e,t){const r=el(n.map(i=>i.shape[0]));r.sort();const s=el(e.map(i=>i.shape[0]));if(s.sort(),r.length>1)throw new ae(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(i=>i.shape))}`);if(s.length>1)throw new ae(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(i=>i.shape))}`);if(r.length>0&&s.length>0&&!Ft(r,s))throw new ae(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}function SJ(n,e,t){const r=[Qu,iv,mf];for(let s=0;s<n.length;++s){const i=n[s],a=e[s],o=t[s];if(a!=null){if(a===mf&&i.shape[i.shape.length-1]===1)throw new ae(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(r.indexOf(a)!==-1){const l=i.shape.slice(1),u=o.slice(1);for(let d=0;d<l.length;++d){const h=l[d],f=u[d];if(f!=null&&h!==f)throw new ae(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function _3(n,e,t,r=!0,s=""){let i;if(Array.isArray(n)){if(n.length!==e.length)throw new ae(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);i=n}else{if(e.length>1)throw new ae(`The model expects ${e.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);i=[n]}if(t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;const o=i[a];if(o.shape.length!==t[a].length)throw new ae(`Error when checking ${s}: expected ${e[a]} to have ${t[a].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let l=0;l<t[a].length;++l){if(l===0&&!r)continue;const u=o.shape[l],d=t[a][l];if(d!=null&&d!==u)throw new ae(`Error when checking ${s}: expected ${e[a]} to have shape ${JSON.stringify(t[a])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function TJ(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(r=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(r=>t);{const r=[];for(const s of e){let i=t.hasOwnProperty(s)?t[s]:[];Array.isArray(i)||(i=[i]),r.push(i)}return r}}const IJ="layers-model";class Ja extends dJ{constructor(e){super(e),this.isTraining=!1}summary(e,t,r=console.log){if(!this.built)throw new ae("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");iJ(this,e,t,r)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=sJ(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof go))throw new ae("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new ae(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(const a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(Kw(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new ae(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(a=>Kw(a))}else{const a=Kw(e.loss);this.outputs.forEach(o=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const o=this.internalOutputShapes[a],l=this.outputNames[a];this.feedOutputNames.push(l),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[a])}const r=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],hu("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(r.indexOf(a)!==-1)continue;const o=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([o,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});const s=TJ(e.metrics,this.outputNames),i=(a,o,l)=>{this.outputNames.length>1&&(o=this.outputNames[a]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([l,a])};hu("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(r.indexOf(a)!==-1)continue;const o=s[a];(l=>{let d,h,f;for(const m of l){if(typeof m=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(m)!==-1){const g=this.internalOutputShapes[a];g[g.length-1]===1||this.lossFunctions[a]===iv?["accuracy","acc"].indexOf(m)!==-1?h=JI:["crossentropy","ce"].indexOf(m)!==-1&&(h=zz):this.lossFunctions[a]===E0?["accuracy","acc"].indexOf(m)!==-1?h=Dz:["crossentropy","ce"].indexOf(m)!==-1&&(h=Pz):["accuracy","acc"].indexOf(m)!==-1?h=qI:["crossentropy","ce"].indexOf(m)!==-1&&(h=ek);let y;["accuracy","acc"].indexOf(m)!==-1?y="acc":["crossentropy","ce"].indexOf(m)!==-1&&(y="ce"),f=h,d=""+y}else f=rJ(m),d=""+By(m);let x;hu(d,()=>{x=f}),i(a,d,x)}})(o)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,r={}){const s=r.batchSize==null?32:r.batchSize;Yw(s);const i=this.standardizeUserDataXY(e,t,!0,s);try{const a=i[0].concat(i[1]);this.makeTestFunction();const o=this.testFunction,l=this.testLoop(o,a,s,r.verbose,r.steps);return us(l)}finally{Pi(i[0],e),Pi(i[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),xJ(this,e,t)}checkNumSamples(e,t,r,s="steps"){let i;if(r!=null){if(i=null,t!=null)throw new ae(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?i=e[0].shape[0]:i=e.shape[0];else throw new ae(`Either the input data should have a defined shape, or ${s} shoud be specified.`);return i}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new ae("`outputs` is an empty Array, which is not allowed.");const r=Array.isArray(t),s=r?t:[t],i=this.retrieveSymbolicTensors(s),a=new Ko;if(e instanceof Ht&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new ae(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)a.add(this.inputs[l],e[l])}else for(const l of this.inputs){const u=e[l.name];if(u==null)throw new ae(`No value is provided for the model's input ${l.name}`);a.add(l,u)}const o=Xp(i,a);return r?o:o[0]}retrieveSymbolicTensors(e){const t=Mu(null,e.length);let r=e.length;for(const s of this.layers){const i=Array.isArray(s.output)?s.output:[s.output],a=i.map(o=>o.name);for(let o=0;o<e.length;++o){const l=a.indexOf(e[o]);if(l!==-1&&(t[o]=i[l],r--),r===0)break}if(r===0)break}if(r>0){const s=[];throw t.forEach((i,a)=>{i==null&&s.push(e[a])}),new ae(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return t}predictLoop(e,t=32,r=!1){return le(()=>{const s=this.checkNumSamples(e);if(r)throw new Nt("Verbose predictLoop() is not implemented yet.");const i=jw(s,t),a=this.outputs.map(o=>[]);for(let o=0;o<i.length;++o)le(()=>{const l=i[o][0],u=i[o][1],d=Ap(e,l,u),h=[];if(Array.isArray(d))for(let m=0;m<d.length;++m)h.push({key:this.inputs[m],value:d[m]});else h.push({key:this.inputs[0],value:d});const f=new Ko(h);return Xp(this.outputs,f)}).forEach((l,u)=>a[u].push(l));return us(a.map(o=>$n(o,0)))})}predict(e,t={}){const r=Vz(e);_3(r,this.inputNames,this.feedInputShapes,!1);try{const s=t.batchSize==null?32:t.batchSize;return Yw(s),this.predictLoop(r,s)}finally{Pi(r,e)}}predictOnBatch(e){_3(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,r=!0,s){if(this.optimizer_==null)throw new ya("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const i=[];for(let a=0;a<this.feedOutputShapes.length;++a){const o=this.feedOutputShapes[a];this.feedLossFns[a]===E0?i.push(o.slice(0,o.length-1).concat([1])):i.push(o)}if(e=C3(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=C3(t,this.feedOutputNames,i,!1,"target"),wJ(e,t),SJ(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&s!=null&&s>0&&e[0].shape[0]%s!==0)throw new ae(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,r,s,i=!0,a){const[o,l]=this.standardizeUserDataXY(e,t,i,a);if(r!=null)throw new Error("sample weight is not supported yet.");let u=null;if(s!=null){const d=Gz(s,this.outputNames);u=[];for(let h=0;h<d.length;++h)u.push(await Oz(l[h],null,d[h]))}return[o,l,u]}testLoop(e,t,r,s=0,i){return le(()=>{const a=this.checkNumSamples(t,r,i,"steps"),o=[];if(s>0)throw new Nt("Verbose mode is not implemented yet.");if(i!=null)throw new Nt("steps mode in testLoop() is not implemented yet");{const l=jw(a,r),u=Nr(Ui(0,a));for(let d=0;d<l.length;++d){const h=l[d][0],f=l[d][1],m=pu(u,h,f-h),x=n2(t,m),g=e(x);if(d===0)for(let y=0;y<g.length;++y)o.push(ct(0));for(let y=0;y<g.length;++y){const v=g[y];o[y]=Ne(o[y],ne(f-h,v))}}for(let d=0;d<o.length;++d)o[d]=at(o[d],a)}return o})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let r=0;r<e.length;++r){const s=e[r];let i=s;if(d3(e,s)>1){const a=d3(e.slice(0,r),s);i+=`_${a}`}t.push(i)}return t}makeTrainFunction(){return e=>{const t=[],r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],o=()=>{const u=[];for(let m=0;m<this.inputs.length;++m)u.push({key:this.inputs[m],value:r[m]});const d=new Ko(u),h=Xp(this.outputs,d,{training:!0});let f;for(let m=0;m<this.lossFunctions.length;++m){const x=this.lossFunctions[m];let g=x(s[m],h[m]);i[m]!=null&&(g=pJ(g,i[m]));const y=Mn(g);t.push(y),m===0?f=g:f=Ne(f,g)}for(let m=0;m<this.metricsTensors.length;++m){let x;if(this.outputs.length>1&&m<this.outputs.length)x=t[m];else{const g=this.metricsTensors[m][0],y=this.metricsTensors[m][1];x=Mn(g(s[y],h[y]))}Pn(x),a.push(x)}return f=Mn(f),this.calculateLosses().forEach(m=>{f=Ne(f,m)}),f},l=this.collectedTrainableWeights.map(u=>u.read());return[this.optimizer_.minimize(o,!0,l)].concat(a)}}makeTestFunction(){this.testFunction=e=>le(()=>{const t=[];let r;const s=e.slice(0,this.inputs.length),i=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let u=0;u<this.inputs.length;++u)a.push({key:this.inputs[u],value:s[u]});const o=new Ko(a),l=Xp(this.outputs,o);for(let u=0;u<this.lossFunctions.length;++u){const d=this.lossFunctions[u],h=Mn(d(i[u],l[u]));u===0?r=h:r=Ne(r,h),t.push(r)}for(let u=0;u<this.metricsTensors.length;++u){const d=this.metricsTensors[u][0],h=this.metricsTensors[u][1],f=Mn(d(i[h],l[h]));t.push(f)}return t})}async fit(e,t,r={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let s,i,a,o,l,u,d,h,f;try{const m=r.batchSize==null?32:r.batchSize;Yw(m);const x=await this.standardizeUserData(e,t,r.sampleWeight,r.classWeight,!1,m);s=x[0],i=x[1],f=x[2];let g=!1,y;if(r.validationData!=null&&r.validationData.length>0){if(g=!0,r.validationData.length===2)l=r.validationData[0],u=r.validationData[1];else throw r.validationData.length===3?new Nt("validationData including sample weights is not supported yet."):new ae(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);const L=await this.standardizeUserData(l,u,null,null,!0,m);d=L[0],h=L[1],y=d.concat(h)}else if(r.validationSplit!=null&&r.validationSplit>0&&r.validationSplit<1){g=!0;const L=Math.floor(s[0].shape[0]*(1-r.validationSplit)),M=s[0].shape[0];d=Ap(s,L,M),a=s,s=Ap(s,0,L),h=Ap(i,L,M),o=i,i=Ap(i,0,L),y=d.concat(h)}else r.validationSteps!=null&&(g=!0);const v=s.concat(i).concat(f);this.checkTrainableWeightsConsistency();const w=this.makeTrainFunction(),I=this.getDedupedMetricsNames();let T,C;g?(this.makeTestFunction(),T=this.testFunction,C=I.slice().concat(I.map(L=>"val_"+L))):(T=null,y=[],C=I.slice());const E=Ez(r.callbacks,r.yieldEvery);return await this.fitLoop(w,v,I,m,r.epochs,r.verbose,E,T,y,r.shuffle,C,r.initialEpoch,null,null)}finally{this.isTraining=!1,Pi(s,e),Pi(i,t),Pi(a,e),Pi(o,t),Pi(d,l),Pi(h,u),f!=null&&kt(f)}}async fitLoop(e,t,r,s,i,a,o,l,u,d,h,f,m,x){s==null&&(s=32),i==null&&(i=1),d==null&&(d=!0),f==null&&(f=0);let g=!1;if(l!=null&&u!=null&&(g=!0),x!=null&&(g=!0,m==null))throw new ae("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const y=this.checkNumSamples(t,s,m,"steps_per_epoch");let v;y!=null&&(v=Ui(0,y)),a==null&&(a=1);const{callbackList:w,history:I}=Rz(o,a,i,f,y,m,s,g,h);w.setModel(this),this.history=I,await w.onTrainBegin(),this.stopTraining_=!1;for(let T=f;T<i;++T){await w.onEpochBegin(T);const C={};if(m!=null)throw new Nt("stepsPerEpoch mode is not implemented yet.");{if(d==="batch")throw new Nt("batch shuffling is not implemneted yet");d&&P2(v);const E=Nr(v),L=jw(y,s);for(let M=0;M<L.length;++M){const R={};if(await w.onBatchBegin(M,R),le(()=>{const z=L[M][0],X=L[M][1],U=pu(E,z,X-z);R.batch=M,R.size=X-z;const G=n2(t,U),V=e(G);for(let Z=0;Z<r.length;++Z){const J=r[Z],te=V[Z];R[J]=te,Pn(te)}if(M===L.length-1&&g){const Z=this.testLoop(l,u,s);for(let J=0;J<r.length;++J){const te=r[J],O=Z[J];Pn(O),C["val_"+te]=O}}}),await w.onBatchEnd(M,R),Cz(R),this.stopTraining_)break}E.dispose()}if(await w.onEpochEnd(T,C),this.stopTraining_)break}return await w.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return gJ(this,e,t)}async trainOnBatch(e,t){const r=await this.standardizeUserData(e,t),s=r[0],i=r[1],a=this.makeTrainFunction()(s.concat(i)),o=[];for(const l of a){const u=await l.data();o.push(u[0])}return kt(a),Pi(r[0],e),Pi(r[1],t),us(o)}getNamedWeights(e){const t=[],r=e!=null&&e.trainableOnly,s=r?this.trainableWeights:this.weights,i=this.getWeights(r);for(let a=0;a<s.length;++a)r&&!s[a].trainable||t.push({name:s[a].originalName,tensor:i[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=S0().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-S0().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=Xa(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>Xa(t))}else{const t=Object.keys(this.loss);e={};const r=this.loss;for(const s of t)if(typeof r[s]=="string")e[s]=Xa(r[s]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Xa(By(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>Xa(By(e)));{const e={};for(const t in this.metrics)e[t]=Xa(By(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=gf(e.optimizer_config),r=Bi(t);let s;if(typeof e.loss=="string")s=Jl(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(a=>Jl(a));else if(e.loss!=null){s={};for(const a in e.loss)s[a]=Jl(e.loss[a])}let i;if(Array.isArray(e.metrics))i=e.metrics.map(a=>Jl(a));else if(e.metrics!=null){i={};for(const a in e.metrics)i[a]=Jl(e.metrics[a])}this.compile({loss:s,metrics:i,optimizer:r})}async save(e,t){if(typeof e=="string"){const i=VL(e);if(i.length===0)throw new ae(`Cannot find any save handlers for URL '${e}'`);if(i.length>1)throw new ae(`Found more than one (${i.length}) save handlers for URL '${e}'`);e=i[0]}if(e.save==null)throw new ae("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await OS(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:IJ,generatedBy:`TensorFlow.js tfjs-layers v${av}`,convertedBy:null};if(t!=null&&t.includeOptimizer&&this.optimizer!=null){s.trainingConfig=this.getTrainingConfig();const i="optimizer",{data:a,specs:o}=await OS(await this.optimizer.getWeights(),i);r.specs.push(...o),r.data=OL([r.data,a])}return this.userDefinedMetadata!=null&&(S3(this.userDefinedMetadata,this.name,!0),s.userDefinedMetadata=this.userDefinedMetadata),s.weightData=r.data,s.weightSpecs=r.specs,e.save(s)}setUserDefinedMetadata(e){S3(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Ja.className="Model";Ee(Ja);let $z=class extends Ja{};$z.className="Functional";Ee($z);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function kJ(n,e){"modelTopology"in n||(n={modelTopology:n}),n=n;let t=n.modelTopology;t.model_config!=null&&(t=t.model_config);const r=gf(t),s=Bi(r,e);if(n.weightsManifest!=null){const i=await vA(n.weightsManifest,n.pathPrefix,s.weights.map(o=>o.originalName)),a={};for(const o of s.weights)a[o.originalName]=i[o.originalName];s.loadWeights(a),kt(i)}return s}async function CJ(n,e){if(e==null&&(e={}),typeof n=="string"){const t=$L(n,e);if(t.length===0)t.push(TA(n,e));else if(t.length>1)throw new ae(`Found more than one (${t.length}) load handlers for URL '${n}'`);n=t[0]}return _J(n,void 0,e)}async function _J(n,e,t){if(t==null&&(t={}),n.load==null)throw new ae("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await n.load();let s=r.modelTopology;s.model_config!=null&&(s=s.model_config);const i=t.strict==null?!0:t.strict,a=r.weightData!=null&&r.weightSpecs!=null&&i,o=Bi(gf(s),e,a),l=r.trainingConfig;if(l!=null&&o.loadTrainingConfig(l),r.userDefinedMetadata!=null&&o.setUserDefinedMetadata(r.userDefinedMetadata),r.weightData!=null){if(r.weightSpecs==null)throw new ae("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:u,optimizerWeights:d}=MJ(r.weightData,r.weightSpecs);o.loadWeights(u,i),o.optimizer!=null&&d.length>0&&await o.optimizer.setWeights(d),kt(u),kt(d.map(h=>h.tensor))}return o}function MJ(n,e){const t=K2(n,e),r={},s=[];return e.forEach(i=>{i.group==="optimizer"?s.push({name:i.name,tensor:t[i.name]}):r[i.name]=t[i.name]}),{modelWeights:r,optimizerWeights:s}}let ov=class s2 extends Ja{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Kx("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new ae(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof s2||e instanceof Ja;let r;if(t){if(r=e,r.outputs.length!==1)throw new ae("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(r.inputs.length!==1)throw new ae("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new ae("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const s=kz({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(s)}if(t)this.outputs=r.outputs,this.inputs=r.inputs;else{if(e.inboundNodes.length!==1)throw new ae(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new ae("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Iz(this.outputs[0])}this.inboundNodes=[],new rv({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Mu(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{const s=e.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(Yt(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Ja({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,r=console.log){this.built||this.build(),super.summary(e,t,r)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,r={}){if(!this.built)throw new ya("The model needs to be compiled before being used.");return this.model.evaluate(e,t,r)}async evaluateDataset(e,t){if(!this.built)throw new ya("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,r={}){if(!this.built)throw new ya("The model needs to be compiled before being used.");return this.model.fit(e,t,r)}async fitDataset(e,t){if(!this.built)throw new ya("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,r={},s=!1){let i,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new ae("Legacy serialization format not supported yet.");i=t}else P(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),i=t.layers,delete t.layers,a=t;const o=new e(a);if(!(o instanceof s2))throw new Nt(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const l of i){const u=Bi(l,void 0,s);s&&u.setFastWeightInitDuringBuild(!0),o.add(u)}return o}set stopTraining(e){if(this.model==null)throw new ae("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new ae("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const r={};r.className=t.getClassName(),r.config=t.getConfig(),e.push(r)}return{name:this.name,layers:e}}};ov.className="Sequential";Ee(ov);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let vs=class extends Ku{getConfig(){return{}}},Bz=class extends vs{apply(e,t=1){return gQ(e,t)}};Bz.className="elu";Ee(Bz);let Xz=class extends vs{apply(e){return Tx(e)}};Xz.className="selu";Ee(Xz);let Uz=class extends vs{apply(e){return Qi(e)}};Uz.className="relu";Ee(Uz);let Zz=class extends vs{apply(e){return le(()=>ll(6,Qi(e)))}};Zz.className="relu6";Ee(Zz);let Hz=class extends vs{apply(e){return e}};Hz.className="linear";Ee(Hz);let Kz=class extends vs{apply(e){return $i(e)}};Kz.className="sigmoid";Ee(Kz);let Yz=class extends vs{apply(e){return bQ(e)}};Yz.className="hardSigmoid";Ee(Yz);let jz=class extends vs{apply(e){return Uu(e)}};jz.className="softplus";Ee(jz);let Qz=class extends vs{apply(e){return yQ(e)}};Qz.className="softsign";Ee(Qz);let Jz=class extends vs{apply(e){return Iu(e)}};Jz.className="tanh";Ee(Jz);let tk=class extends vs{apply(e,t=-1){return Zm(e,t)}};tk.className="softmax";Ee(tk);let qz=class extends vs{apply(e,t=-1){return yx(e,t)}};qz.className="logSoftmax";Ee(qz);let eD=class extends vs{apply(e,t=1){return le(()=>ne($i(ne(e,t)),e))}};eD.className="swish";Ee(eD);let tD=class extends vs{apply(e){return le(()=>ne(e,Iu(Uu(e))))}};tD.className="mish";Ee(tD);function cl(n){return n.getClassName()}function Qw(n,e={}){return qm(n,Yu.getMap().classNameMap,e,"activation")}function dl(n){if(n==null){const e={};return e.className="linear",e.config={},Qw(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},Qw(e)}else return n instanceof vs?n:Qw(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function nk(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}let nD=class extends Ku{};class sg extends nD{constructor(e){super(),nk(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return le(()=>{let t=jn([1]);return this.hasL1&&(t=Ne(t,Qe(ne(this.l1,Yn(e))))),this.hasL2&&(t=Ne(t,Qe(ne(this.l2,tg(e))))),se(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}sg.className="L1L2";Ee(sg);function NJ(n){return nk(n),new sg({l1:n!=null?n.l1:null,l2:0})}function EJ(n){return nk(n),new sg({l2:n!=null?n.l2:null,l1:0})}const M3={l1l2:"L1L2"};function ln(n){return zI(n)}function N3(n,e={}){return qm(n,Yu.getMap().classNameMap,e,"regularizer")}function In(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in M3?M3[n]:n,config:{}};return N3(e)}else return n instanceof nD?n:N3(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let rk=class extends zt{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=xt(e);let r=Qi(e);return this.maxValue!=null&&(r=ms(r,0,this.maxValue)),r}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};rk.className="ReLU";Ee(rk);let sk=class extends zt{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const r=xt(e);return Pm(r,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};sk.className="LeakyReLU";Ee(sk);let ik=class extends zt{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Sn(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=In(e.alphaRegularizer),this.alphaConstraint=ar(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new ae(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=Yt(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const r={};if(this.sharedAxes!=null)for(let s=1;s<e.length;++s)r[s]=e[s];this.inputSpec=[new Qn({ndim:e.length,axes:r})],this.built=!0}call(e,t){return e=xt(e),Bm(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Nn(this.alphaInitializer),alphaRegularizer:ln(this.alphaRegularizer),alphaConstraint:ir(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};ik.className="PReLU";Ee(ik);let ak=class extends zt{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Nt(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const r=xt(e);return vh(r)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};ak.className="ELU";Ee(ak);let ok=class extends zt{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const r=xt(e);return ne(r,Oe(ts(r,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};ok.className="ThresholdedReLU";Ee(ok);let lk=class extends zt{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new tk().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){return le(()=>{let r=xt(e);const s=t.mask;if(s!=null){const i=ne(Ye(ds(r.shape),Oe(s,r.dtype)),ct(-1e9));r=Ne(r,i)}return this.axis instanceof Array?this.axis.length>1?gs(Ye(r,Gm(r,this.axis,!0))):this.softmax(r,this.axis[0]):this.softmax(r,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};lk.className="Softmax";Ee(lk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ed(n,e,t){if(typeof n=="number")return Mu(n,e);if(n.length!==e)throw new ae(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let r=0;r<e;++r){const s=n[r];if(!hQ(s))throw new ae(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${s}`)}return n}function Xi(n,e,t,r,s=1){if(n==null)return n;const i=e+(e-1)*(s-1);let a;return t==="same"?a=n:a=n-i+1,Math.floor((a+r-1)/r)}function fa(n,e,t,r){if(n==null)return null;if(r==="valid")n=n*e+ul([t-e,0]);else if(r==="same")n=n*e;else throw new ae(`Unsupport padding mode: ${r}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function uk(n,e){return le(()=>(Un(e),e==="channelsFirst"?Gt(n,[0,2,3,1]):n))}function rD(n,e){return le(()=>(Un(e),e==="channelsFirst"?Gt(n,[0,2,3,4,1]):n))}function RJ(n,e,t,r=1,s="valid",i,a=1){return le(()=>{if(i==null&&(i=Zi()),Un(i),n.shape.length!==3)throw new ae(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new ae(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new ae(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(i==="channelsFirst"&&(n=Gt(n,[0,2,1])),s==="causal")throw new Nt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=dx(n,e,r,s==="same"?"same":"valid","NWC",a);return t!=null&&(o=Ji(o,t)),o})}function E3(n,e,t,r=[1,1],s="valid",i,a,o=null){return le(()=>{if(i==null&&(i=Zi()),Un(i),n.rank!==3&&n.rank!==4)throw new ae(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new ae(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=uk(n,i);if(s==="causal")throw new Nt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=oA({x:l,filter:e,strides:r,pad:s==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:t,activation:o}),i==="channelsFirst"&&(l=Gt(l,[0,3,1,2])),l})}function LJ(n,e,t,r=[1,1,1],s="valid",i,a){return le(()=>{if(i==null&&(i=Zi()),Un(i),n.rank!==4&&n.rank!==5)throw new ae(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new ae(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let o=rD(n,i);if(s==="causal")throw new Nt("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=xT(o,e,r,s==="same"?"same":"valid","NDHWC",a),t!=null&&(o=Ji(o,t)),i==="channelsFirst"&&(o=Gt(o,[0,4,1,2,3])),o})}class lv extends zt{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",lv.verifyArgs(t),this.rank=e,dr(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Nt(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=ed(t.kernelSize,e,"kernelSize"),this.strides=ed(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,ii(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Un(this.dataFormat),this.activation=dl(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=Sn(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=ar(t.biasConstraint),this.biasRegularizer=In(t.biasRegularizer),this.activityRegularizer=In(t.activityRegularizer),this.dilationRate=ed(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new ae(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new ae(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new ae(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(pa("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!DI(e.kernelSize,"number",1,3))throw new ae(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:cl(this.activation),useBias:this.useBias,biasInitializer:Nn(this.biasInitializer),biasRegularizer:ln(this.biasRegularizer),activityRegularizer:ln(this.activityRegularizer),biasConstraint:ir(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Mh extends lv{constructor(e,t){super(e,t),this.kernel=null,Mh.verifyArgs(t),this.filters=t.filters,dr(this.filters,"filters"),this.kernelInitializer=Sn(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=ar(t.kernelConstraint),this.kernelRegularizer=In(t.kernelRegularizer)}build(e){e=Yt(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new ae(`The channel dimension of the input should be defined. Found ${e[t]}`);const r=e[t],s=this.kernelSize.concat([r,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:r}}],this.built=!0}call(e,t){return le(()=>{e=xt(e);let r;const s=this.bias==null?null:this.bias.read(),i=mz(this.activation.getClassName());if(i!=null&&this.rank===2)r=E3(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,i);else{if(this.rank===1)r=RJ(e,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)r=E3(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)r=LJ(e,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Nt("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(r=this.activation.apply(r))}return r})}computeOutputShape(e){e=Yt(e);const t=[],r=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let i=0;i<r.length;++i){const a=Xi(r[i],this.kernelSize[i],this.padding,this.strides[i],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[i]);t.push(a)}let s=[e[0]];return this.dataFormat==="channelsLast"?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){const e={filters:this.filters,kernelInitializer:Nn(this.kernelInitializer),kernelRegularizer:ln(this.kernelRegularizer),kernelConstraint:ir(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new ae(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Nh extends Mh{constructor(e){super(2,e),Nh.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!DI(e.kernelSize,"number",1,2))throw new ae(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Nh.className="Conv2D";Ee(Nh);class Eh extends Mh{constructor(e){super(3,e),Eh.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new ae(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Eh.className="Conv3D";Ee(Eh);let ck=class extends Nh{constructor(e){if(super(e),this.inputSpec=[new Qn({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new ae(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Yt(e),e.length!==4)throw new ae("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new ae("The channel dimension of the inputs should be defined. Found `None`.");const r=e[t],s=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Qn({ndim:4,axes:{[t]:r}})],this.built=!0}call(e,t){return le(()=>{let r=xt(e);if(r.shape.length!==4)throw new ae(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const s=r.shape,i=s[0];let a,o;this.dataFormat==="channelsFirst"?(a=2,o=3):(a=1,o=2);const l=s[a],u=s[o],d=this.kernelSize[0],h=this.kernelSize[1],f=this.strides[0],m=this.strides[1],x=fa(l,f,d,this.padding),g=fa(u,m,h,this.padding),y=[i,x,g,this.filters];this.dataFormat!=="channelsLast"&&(r=Gt(r,[0,2,3,1]));let v=hx(r,this.kernel.read(),y,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(v=Gt(v,[0,3,1,2])),this.bias!=null&&(v=Ji(v,this.bias.read(),this.dataFormat)),this.activation!=null&&(v=this.activation.apply(v)),v})}computeOutputShape(e){e=Yt(e);const t=e.slice();let r,s,i;this.dataFormat==="channelsFirst"?(r=1,s=2,i=3):(r=3,s=1,i=2);const a=this.kernelSize[0],o=this.kernelSize[1],l=this.strides[0],u=this.strides[1];return t[r]=this.filters,t[s]=fa(t[s],l,a,this.padding),t[i]=fa(t[i],u,o,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}};ck.className="Conv2DTranspose";Ee(ck);let dk=class extends Eh{constructor(e){if(super(e),this.inputSpec=[new Qn({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new ae(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Yt(e),e.length!==5)throw new ae("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new ae("The channel dimension of the inputs should be defined. Found `None`.");const r=e[t],s=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Qn({ndim:5,axes:{[t]:r}})],this.built=!0}call(e,t){return le(()=>{let r=xt(e);if(r.shape.length!==5)throw new ae(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const s=r.shape,i=s[0];let a,o,l;this.dataFormat==="channelsFirst"?(l=2,a=3,o=4):(l=1,a=2,o=3);const u=s[l],d=s[a],h=s[o],f=this.kernelSize[0],m=this.kernelSize[1],x=this.kernelSize[2],g=this.strides[0],y=this.strides[1],v=this.strides[2],w=fa(u,g,f,this.padding),I=fa(d,y,m,this.padding),T=fa(h,v,x,this.padding),C=[i,w,I,T,this.filters];this.dataFormat!=="channelsLast"&&(r=Gt(r,[0,2,3,4,1]));let E=vT(r,this.kernel.read(),C,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(E=Gt(E,[0,4,1,2,3])),this.bias!==null&&(E=Ji(E,this.bias.read(),this.dataFormat)),this.activation!==null&&(E=this.activation.apply(E)),E})}computeOutputShape(e){e=Yt(e);const t=e.slice();let r,s,i,a;this.dataFormat==="channelsFirst"?(r=1,s=2,i=3,a=4):(r=4,s=1,i=2,a=3);const o=this.kernelSize[0],l=this.kernelSize[1],u=this.kernelSize[2],d=this.strides[0],h=this.strides[1],f=this.strides[2];return t[r]=this.filters,t[s]=fa(t[s],d,o,this.padding),t[i]=fa(t[i],h,l,this.padding),t[a]=fa(t[a],f,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}};dk.className="Conv3DTranspose";Ee(dk);let sD=class extends Mh{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new ae("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new ae("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new ae(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=Sn(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=In(t.depthwiseRegularizer),this.depthwiseConstraint=ar(t.depthwiseConstraint),this.pointwiseInitializer=Sn(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=In(t.pointwiseRegularizer),this.pointwiseConstraint=ar(t.pointwiseConstraint)}build(e){if(e=Yt(e),e.length<this.rank+2)throw new ae(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new ae(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const r=e[t],s=this.kernelSize.concat([r,this.depthMultiplier]),i=[];for(let o=0;o<this.rank;++o)i.push(1);i.push(r*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",i,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Qn({ndim:this.rank+2,axes:{[t]:r}})],this.built=!0}call(e,t){return le(()=>{e=xt(e);let r;if(this.rank===1)throw new Nt("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Gt(e,[0,2,3,1])),r=Ix(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(r=Ji(r,this.bias.read(),this.dataFormat)),this.activation!=null&&(r=this.activation.apply(r)),this.dataFormat==="channelsFirst"&&(r=Gt(r,[0,3,1,2])),r})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Nn(this.depthwiseInitializer),e.pointwiseInitializer=Nn(this.pointwiseInitializer),e.depthwiseRegularizer=ln(this.depthwiseRegularizer),e.pointwiseRegularizer=ln(this.pointwiseRegularizer),e.depthwiseConstraint=ir(this.depthwiseConstraint),e.pointwiseConstraint=ir(this.pointwiseConstraint),e}};sD.className="SeparableConv";let hk=class extends sD{constructor(e){super(2,e)}};hk.className="SeparableConv2D";Ee(hk);class ig extends Mh{constructor(e){super(1,e),ig.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!DI(e.kernelSize,"number",1,1))throw new ae(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}ig.className="Conv1D";Ee(ig);let pk=class extends zt{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return le(()=>{if(e=xt(e),this.dataFormat==="channelsLast"){const r=$y(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return $y(r,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const r=$y(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return $y(r,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};pk.className="Cropping2D";Ee(pk);let fk=class extends zt{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Un(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,uQ(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],r=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,r]}else{const t=e[1]==null?null:this.size[0]*e[1],r=e[2]==null?null:this.size[1]*e[2];return[e[0],t,r,e[3]]}}call(e,t){return le(()=>{let r=xt(e);const s=r.shape;if(this.dataFormat==="channelsFirst"){r=Gt(r,[0,2,3,1]);const i=this.size[0]*s[2],a=this.size[1]*s[3],o=this.interpolation==="nearest"?Si.resizeNearestNeighbor(r,[i,a]):Si.resizeBilinear(r,[i,a]);return Gt(o,[0,3,1,2])}else{const i=this.size[0]*s[1],a=this.size[1]*s[2];return this.interpolation==="nearest"?Si.resizeNearestNeighbor(r,[i,a]):Si.resizeBilinear(r,[i,a])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};fk.className="UpSampling2D";Ee(fk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function AJ(n,e,t=[1,1],r="valid",s,i){return le(()=>{s==null&&(s=Zi()),Un(s);let a=uk(n,s);if(n.rank!==4)throw new ae(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new ae(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=xh(a,e,t,r==="same"?"same":"valid","NHWC",i),s==="channelsFirst"&&(a=Gt(a,[0,3,1,2])),a})}let mk=class extends lv{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=Sn(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=ar(e.depthwiseConstraint),this.depthwiseRegularizer=In(e.depthwiseRegularizer)}build(e){if(e=Yt(e),e.length<4)throw new ae(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new ae(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const r=e[t],s=[this.kernelSize[0],this.kernelSize[1],r,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[r*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return le(()=>{e=xt(e);let r=AJ(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(r=Ji(r,this.bias.read(),this.dataFormat)),this.activation!=null&&(r=this.activation.apply(r)),r})}computeOutputShape(e){e=Yt(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],r=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,i=Xi(t,this.kernelSize[0],this.padding,this.strides[0]),a=Xi(r,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],s,i,a]:[e[0],i,a,s]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Nn(this.depthwiseInitializer),e.depthwiseRegularizer=ln(this.depthwiseRegularizer),e.depthwiseConstraint=ir(this.depthwiseRegularizer),e}};mk.className="DepthwiseConv2D";Ee(mk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function iD(n,e,t,r){if(Array.isArray(n)){if(e!=null||t!=null)throw new ae("When inputs is an array, neither initialState or constants should be provided");r!=null&&(t=n.slice(n.length-r,n.length),n=n.slice(0,n.length-r)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function s(i){return i==null||Array.isArray(i)?i:[i]}return e=s(e),t=s(t),{inputs:n,initialState:e,constants:t}}function aD(n,e,t,r=!1,s,i,a=!1,o=!1){return le(()=>{const l=e.shape.length;if(l<3)throw new ae(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Ui(2,l));e=Gt(e,u),i!=null,a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),s!=null&&(s=Oe(Oe(s,"bool"),"float32"),s.rank===l-1&&(s=Cr(s,-1)),s=Gt(s,u)),r&&(e=ri(e,0),s!=null&&(s=ri(s,0)));const d=[];let h,f=t;const m=e.shape[0],x=si(e);let g;s!=null&&(g=si(s));for(let v=0;v<m;++v){const w=x[v],I=le(()=>n(w,f));if(s==null)h=I[0],f=I[1];else{const T=le(()=>{const C=g[v],E=Ye(Ds(C),C),L=Ne(ne(I[0],C),ne(f[0],E)),M=f.map((R,z)=>Ne(ne(I[1][z],C),ne(R,E)));return{output:L,newStates:M}});h=T.output,f=T.newStates}o&&d.push(h)}let y;return o&&(y=Wr(d,1)),[h,y,f]})}class qi extends zt{constructor(e){super(e);let t;if(e.cell==null)throw new ae("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new dv({cells:e.cell}):t=e.cell,t.stateSize==null)throw new ae("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Qn({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Ui(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){JS(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const r=t[0];let s;if(this.returnSequences?s=[e[0],e[1],r]:s=[e[0],r],this.returnState){const i=[];for(const a of t)i.push([e[0],a]);return[s].concat(i)}else return s}computeMask(e,t){return le(()=>{Array.isArray(t)&&(t=t[0]);const r=this.returnSequences?t:null;if(this.returnState){const s=this.states.map(i=>null);return[r].concat(s)}else return r})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let r=0;r<e;++r)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Nt("Constants support is not implemented in RNN yet.");JS(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,r=e.slice(2);this.inputSpec[0]=new Qn({shape:[t,null,...r]});const s=[e[0]].concat(e.slice(2));this.cell.build(s);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!Ft(this.stateSpec.map(a=>a.shape[a.shape.length-1]),i))throw new ae(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(a=>new Qn({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){le(()=>{if(!this.stateful)throw new Bo("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape[0];if(r==null)throw new ae("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>jn([r,s])):this.states_=[jn([r,this.cell.stateSize])];else if(e==null)kt(this.states_),this.keptStates!=null&&(kt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>jn([r,s])):this.states_[0]=jn([r,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ae(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):kt(this.states_);for(let s=0;s<this.states_.length;++s){const i=e[s],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,o=[r,a];if(!Ft(i.shape,o))throw new ae(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${i.shape}`);this.states_[s]=i}}this.states_=this.states_.map(s=>Pn(s.clone()))})}apply(e,t){let r=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});const i=iD(e,r,s,this.numConstants);e=i.inputs,r=i.initialState,s=i.constants;let a=[],o=[];if(r!=null){t.initialState=r,a=a.concat(r),this.stateSpec=[];for(const l of r)this.stateSpec.push(new Qn({shape:l.shape}));o=o.concat(this.stateSpec)}if(s!=null&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof Hi){const l=[e].concat(a),u=this.inputSpec.concat(o),d=this.inputSpec;this.inputSpec=u;const h=super.apply(l,t);return this.inputSpec=d,h}else return super.apply(e,t)}call(e,t){return le(()=>{const r=t==null?null:t.mask,s=t==null?null:t.training;let i=t==null?null:t.initialState;e=xt(e),i==null&&(this.stateful?i=this.states_:i=this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==a)throw new ae(`RNN Layer has ${a} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:s},l=aD((m,x)=>{const g=this.cell.call([m].concat(x),o);return[g[0],g.slice(1)]},e,i,this.goBackwards,r,null,this.unroll,this.returnSequences),u=l[0],d=l[1],h=l[2];this.stateful&&this.resetStates(h,s);const f=this.returnSequences?d:u;return this.returnState?[f].concat(h):f})}getInitialState(e){return le(()=>{let t=jn(e.shape);return t=Qe(t,[1,2]),t=eg(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(r=>r>1?jS(t,[1,r]):t):this.cell.stateSize>1?[jS(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const r=this.cell.getConfig();return this.getClassName()===qi.className&&(t.cell={className:this.cell.getClassName(),config:r}),Object.assign(Object.assign(Object.assign({},r),e),t)}static fromConfig(e,t,r={}){const s=t.cell,i=Bi(s,r);return new e(Object.assign(t,{cell:i}))}}qi.className="RNN";Ee(qi);class ag extends zt{}let uv=class extends ag{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,dr(this.units,"units"),this.activation=dl(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Sn(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Sn(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Sn(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=In(e.kernelRegularizer),this.recurrentRegularizer=In(e.recurrentRegularizer),this.biasRegularizer=In(e.biasRegularizer),this.kernelConstraint=ar(e.kernelConstraint),this.recurrentConstraint=ar(e.recurrentConstraint),this.biasConstraint=ar(e.biasConstraint),this.dropout=md([1,ul([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=md([1,ul([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Yt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return le(()=>{if(e=e,e.length!==2)throw new ae(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let r=e[1];e=e[0];const s=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=hl({ones:()=>Ds(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=hl({ones:()=>Ds(r),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));let i;const a=this.dropoutMask,o=this.recurrentDropoutMask;a!=null?i=Ta(ne(e,a),this.kernel.read()):i=Ta(e,this.kernel.read()),this.bias!=null&&(i=Ji(i,this.bias.read())),o!=null&&(r=ne(r,o));let l=Ne(i,Ta(r,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:cl(this.activation),useBias:this.useBias,kernelInitializer:Nn(this.kernelInitializer),recurrentInitializer:Nn(this.recurrentInitializer),biasInitializer:Nn(this.biasInitializer),kernelRegularizer:ln(this.kernelRegularizer),recurrentRegularizer:ln(this.recurrentRegularizer),biasRegularizer:ln(this.biasRegularizer),activityRegularizer:ln(this.activityRegularizer),kernelConstraint:ir(this.kernelConstraint),recurrentConstraint:ir(this.recurrentConstraint),biasConstraint:ir(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}};uv.className="SimpleRNNCell";Ee(uv);let gk=class extends qi{constructor(e){e.cell=new uv(e),super(e)}call(e,t){return le(()=>{this.cell.dropoutMask!=null&&(kt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(kt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const r=t==null?null:t.mask,s=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:r,training:s,initialState:i})})}static fromConfig(e,t){return new e(t)}};gk.className="SimpleRNN";Ee(gk);let cv=class extends ag{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new ae("GRUCell does not support reset_after parameter set to true.");this.units=e.units,dr(this.units,"units"),this.activation=dl(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=dl(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Sn(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Sn(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Sn(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=In(e.kernelRegularizer),this.recurrentRegularizer=In(e.recurrentRegularizer),this.biasRegularizer=In(e.biasRegularizer),this.kernelConstraint=ar(e.kernelConstraint),this.recurrentConstraint=ar(e.recurrentConstraint),this.biasConstraint=ar(e.biasConstraint),this.dropout=md([1,ul([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=md([1,ul([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Yt(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return le(()=>{if(e=e,e.length!==2)throw new ae(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const r=t.training==null?!1:t.training;let s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=hl({ones:()=>Ds(e),rate:this.dropout,training:r,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=hl({ones:()=>Ds(s),rate:this.recurrentDropout,training:r,count:3,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u;0<this.dropout&&this.dropout<1&&(e=ne(e,i[0]));let d=Ta(e,this.kernel.read());this.useBias&&(d=Ji(d,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=ne(s,a[0]));const h=this.recurrentKernel.read(),[f,m]=hs(h,[2*this.units,this.units],h.rank-1),x=Ta(s,f),[g,y,v]=hs(d,3,d.rank-1),[w,I]=hs(x,2,x.rank-1);o=this.recurrentActivation.apply(Ne(g,w)),l=this.recurrentActivation.apply(Ne(y,I));const T=Ta(ne(l,s),m);u=this.activation.apply(Ne(v,T));const C=Ne(ne(o,s),ne(Ne(1,dn(o)),u));return[C,C]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:cl(this.activation),recurrentActivation:cl(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Nn(this.kernelInitializer),recurrentInitializer:Nn(this.recurrentInitializer),biasInitializer:Nn(this.biasInitializer),kernelRegularizer:ln(this.kernelRegularizer),recurrentRegularizer:ln(this.recurrentRegularizer),biasRegularizer:ln(this.biasRegularizer),activityRegularizer:ln(this.activityRegularizer),kernelConstraint:ir(this.kernelConstraint),recurrentConstraint:ir(this.recurrentConstraint),biasConstraint:ir(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}};cv.className="GRUCell";Ee(cv);let yk=class extends qi{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new cv(e),super(e)}call(e,t){return le(()=>{this.cell.dropoutMask!=null&&(kt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(kt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const r=t==null?null:t.mask,s=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:r,training:s,initialState:i})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};yk.className="GRU";Ee(yk);class og extends ag{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,dr(this.units,"units"),this.activation=dl(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=dl(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=Sn(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Sn(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Sn(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=In(e.kernelRegularizer),this.recurrentRegularizer=In(e.recurrentRegularizer),this.biasRegularizer=In(e.biasRegularizer),this.kernelConstraint=ar(e.kernelConstraint),this.recurrentConstraint=ar(e.recurrentConstraint),this.biasConstraint=ar(e.biasConstraint),this.dropout=md([1,ul([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=md([1,ul([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=Yt(e);const r=e[e.length-1];this.kernel=this.addWeight("kernel",[r,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let s;if(this.useBias){if(this.unitForgetBias){const i=this.biasInitializer,a=this.units;s=new(t=class extends ki{apply(o,l){const u=i.apply([a]),d=new jx().apply([a]),h=i.apply([a*2]);return p3(p3(u,d),h)}},t.className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return le(()=>{const r=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new ae(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1];const i=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=hl({ones:()=>Ds(e),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=hl({ones:()=>Ds(s),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,o=this.recurrentDropoutMask;let l,u,d,h;0<this.dropout&&this.dropout<1&&(e=ne(e,a[0]));let f=Ta(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=ne(s,o[0])),f=Ne(f,Ta(s,this.recurrentKernel.read())),this.useBias&&(f=Ji(f,this.bias.read()));const[m,x,g,y]=hs(f,4,f.rank-1);l=this.recurrentActivation.apply(m),u=this.recurrentActivation.apply(x),d=Ne(ne(u,i),ne(l,this.activation.apply(g))),h=this.recurrentActivation.apply(y);const v=ne(h,this.activation.apply(d));return[v,v,d]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:cl(this.activation),recurrentActivation:cl(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Nn(this.kernelInitializer),recurrentInitializer:Nn(this.recurrentInitializer),biasInitializer:Nn(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ln(this.kernelRegularizer),recurrentRegularizer:ln(this.recurrentRegularizer),biasRegularizer:ln(this.biasRegularizer),activityRegularizer:ln(this.activityRegularizer),kernelConstraint:ir(this.kernelConstraint),recurrentConstraint:ir(this.recurrentConstraint),biasConstraint:ir(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}og.className="LSTMCell";Ee(og);let bk=class extends qi{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new og(e),super(e)}call(e,t){return le(()=>{this.cell.dropoutMask!=null&&(kt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(kt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const r=t==null?null:t.mask,s=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:r,training:s,initialState:i})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};bk.className="LSTM";Ee(bk);let dv=class extends ag{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return le(()=>{e=e;let r=e.slice(1);const s=[];for(const o of this.cells.slice().reverse())Array.isArray(o.stateSize)?s.push(r.splice(0,o.stateSize.length)):s.push(r.splice(0,1));s.reverse();const i=[];let a;for(let o=0;o<this.cells.length;++o){const l=this.cells[o];r=s[o],o===0?a=[e[0]].concat(r):a=[a[0]].concat(r),a=l.call(a,t),i.push(a.slice(1))}r=[];for(const o of i.slice().reverse())r.push(...o);return[a[0]].concat(r)})}build(e){JS(e)&&(e=e[0]),e=e;let t;this.cells.forEach((r,s)=>{hu(`RNNCell_${s}`,()=>{r.build(e),Array.isArray(r.stateSize)?t=r.stateSize[0]:t=r.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=s=>({className:s.getClassName(),config:s.getConfig()}),r={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),r)}static fromConfig(e,t,r={}){const s=[];for(const i of t.cells)s.push(Bi(i,r));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const r of this.cells)t.push(...r.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return qS(e)}setWeights(e){const t=[];for(const r of this.cells){const s=r.weights.length,i=e.splice(s);for(let a=0;a<r.weights.length;++a)t.push([r.weights[a],i[a]])}XI(t)}};dv.className="StackedRNNCells";Ee(dv);function hl(n){const{ones:e,rate:t,training:r=!1,count:s=1,dropoutFunc:i}=n,a=()=>i!=null?i(e(),t):Sz(e(),t),o=()=>ng(a,e,r);return!s||s<=1?Pn(o().clone()):Array(s).fill(void 0).map(o).map(l=>Pn(l.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var zJ=function(n,e){var t={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&e.indexOf(r)<0&&(t[r]=n[r]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var s=0,r=Object.getOwnPropertySymbols(n);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(n,r[s])&&(t[r[s]]=n[r[s]]);return t};let oD=class extends qi{constructor(e){if(e.unroll)throw new Nt("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Nt("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Qn({ndim:5})]}call(e,t){return le(()=>{if(this.cell.dropoutMask!=null&&(kt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(kt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new ae("ConvRNN2D cell does not support constants");const r=t==null?null:t.mask,s=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:r,training:s,initialState:i})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return le(()=>{const{stateSize:t}=this.cell,r=e.shape,s=this.computeSingleOutputShape(r),i=[s[0],...s.slice(2)],a=jn(i);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){le(()=>{if(!this.stateful)throw new Bo("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape,s=this.computeSingleOutputShape(r),i=[s[0],...s.slice(2)];if(r[0]==null)throw new ae("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>jn(i)):this.states_=[jn(i)];else if(e==null)kt(this.states_),this.keptStates!=null&&(kt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>jn(i)):this.states_[0]=jn(i);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ae(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):kt(this.states_);for(let a=0;a<this.states_.length;++a){const o=e[a],l=i;if(!Ft(o.shape,l))throw new ae(`State ${a} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${o.shape}`);this.states_[a]=o}}this.states_=this.states_.map(a=>Pn(a.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:r,kernelSize:s,padding:i,strides:a,dilationRate:o}=this.cell,l=t==="channelsFirst",u=e[l?3:2],d=e[l?4:3],h=Xi(u,s[0],i,a[0],o[0]),f=Xi(d,s[1],i,a[1],o[1]);return[...e.slice(0,2),...l?[r,h,f]:[h,f,r]]}};oD.className="ConvRNN2D";let hv=class extends og{constructor(e){const{filters:t,kernelSize:r,strides:s,padding:i,dataFormat:a,dilationRate:o}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,dr(this.filters,"filters"),this.kernelSize=ed(r,2,"kernelSize"),this.kernelSize.forEach(l=>dr(l,"kernelSize")),this.strides=ed(s||1,2,"strides"),this.strides.forEach(l=>dr(l,"strides")),this.padding=i||"valid",ii(this.padding),this.dataFormat=a||"channelsLast",Un(this.dataFormat),this.dilationRate=ed(o||1,2,"dilationRate"),this.dilationRate.forEach(l=>dr(l,"dilationRate"))}build(e){var t;e=Yt(e);const r=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[r]==null)throw new ae(`The channel dimension of the input should be defined. Found ${e[r]}`);const s=e[r],i=4,a=this.kernelSize.concat([s,this.filters*i]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const o=this.kernelSize.concat([this.filters,this.filters*i]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",o,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const u=this.biasInitializer,d=this.filters;l=new(t=class extends ki{apply(h,f){const m=u.apply([d]),x=ds([d]),g=u.apply([d*2]);return PI([m,x,g])}},t.className="CustomInit",t)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*i],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return le(()=>{if(e.length!==3)throw new ae(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const r=t.training||!1,s=e[0],i=e[1],a=e[2],o=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=hl({ones:()=>Ds(s),rate:this.dropout,training:r,count:o,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,u=(A,K,$)=>!K||!K[$]?A:ne(K[$],A);let d=u(s,l,0),h=u(s,l,1),f=u(s,l,2),m=u(s,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=hl({ones:()=>Ds(i),rate:this.recurrentDropout,training:r,count:o,dropoutFunc:this.dropoutFunc}));const x=this.recurrentDropoutMask;let g=u(i,x,0),y=u(i,x,1),v=u(i,x,2),w=u(i,x,3);const I=3,[T,C,E,L]=hs(this.kernel.read(),o,I),[M,R,z,X]=this.useBias?hs(this.bias.read(),o):[null,null,null,null];d=this.inputConv(d,T,M,this.padding),h=this.inputConv(h,C,R,this.padding),f=this.inputConv(f,E,z,this.padding),m=this.inputConv(m,L,X,this.padding);const[U,G,V,Z]=hs(this.recurrentKernel.read(),o,I);g=this.recurrentConv(g,U),y=this.recurrentConv(y,G),v=this.recurrentConv(v,V),w=this.recurrentConv(w,Z);const J=this.recurrentActivation.apply(Ne(d,g)),te=this.recurrentActivation.apply(Ne(h,y)),O=Ne(ne(te,a),ne(J,this.activation.apply(Ne(f,v)))),Q=ne(this.recurrentActivation.apply(Ne(m,w)),this.activation.apply(O));return[Q,Q,O]})}getConfig(){const e=super.getConfig(),t=zJ(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},t),r)}inputConv(e,t,r,s){const i=ro(e,t,this.strides,s||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return r?Ji(i,r,this.dataFormat):i}recurrentConv(e,t){return ro(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};hv.className="ConvLSTM2DCell";Ee(hv);let xk=class extends oD{constructor(e){const t=new hv(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}};xk.className="ConvLSTM2D";Ee(xk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let pv=class extends zt{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,r=[];for(let s=0;s<this.noiseShape.length;++s)r.push(this.noiseShape[s]==null?t[s]:this.noiseShape[s]);return r}call(e,t){return le(()=>{this.invokeCallHook(e,t);const r=xt(e);if(0<this.rate&&this.rate<1){const s=t.training==null?!1:t.training,i=this.getNoiseShape(r);return ng(()=>Sz(r,this.rate,i,this.seed),()=>r,s)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};pv.className="Dropout";Ee(pv);let vk=class extends pv{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}};vk.className="SpatialDropout1D";Ee(vk);let wk=class extends zt{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,dr(this.units,"units"),this.activation=dl(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=Sn(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Sn(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=ar(e.kernelConstraint),this.biasConstraint=ar(e.biasConstraint),this.kernelRegularizer=In(e.kernelRegularizer),this.biasRegularizer=In(e.biasRegularizer),this.activityRegularizer=In(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Yt(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=Yt(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return le(()=>{this.invokeCallHook(e,t);const r=xt(e),s=mz(this.activation.getClassName());let i;return s!=null?i=Ta(r,this.kernel.read(),s,this.bias?this.bias.read():null):(i=Ta(r,this.kernel.read()),this.bias!=null&&(i=Ji(i,this.bias.read())),this.activation!=null&&(i=this.activation.apply(i))),i})}getConfig(){const e={units:this.units,activation:cl(this.activation),useBias:this.useBias,kernelInitializer:Nn(this.kernelInitializer),biasInitializer:Nn(this.biasInitializer),kernelRegularizer:ln(this.kernelRegularizer),biasRegularizer:ln(this.biasRegularizer),activityRegularizer:ln(this.activityRegularizer),kernelConstraint:ir(this.kernelConstraint),biasConstraint:ir(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};wk.className="Dense";Ee(wk);let Sk=class extends zt{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Yt(e);for(const t of e.slice(1))if(t==null)throw new ae(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],tl(e,1)]}call(e,t){return le(()=>{this.invokeCallHook(e,t);let r=xt(e);if(this.dataFormat==="channelsFirst"&&r.rank>1){const s=[0];for(let i=2;i<r.rank;++i)s.push(i);s.push(1),r=Gt(r,s)}return mQ(r)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}};Sk.className="Flatten";Ee(Sk);let Tk=class extends zt{constructor(e){super(e),this.supportsMasking=!0,this.activation=dl(e.activation)}call(e,t){return le(()=>{this.invokeCallHook(e,t);const r=xt(e);return this.activation.apply(r)})}getConfig(){const e={activation:cl(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};Tk.className="Activation";Ee(Tk);let Ik=class extends zt{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return le(()=>(e=xt(e),pQ(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Ik.className="RepeatVector";Ee(Ik);let kk=class extends zt{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const r="Total size of new array must be unchanged.",s=t.slice();let i=1,a=null;for(let l=0;l<s.length;++l){const u=s[l];if(this.isUnknown(u))if(a===null)a=l;else throw new ae("Can only specifiy one unknown dimension.");else i*=u}const o=tl(e);if(a!==null){if(i===0||o%i!==0)throw new ae(r);s[a]=o/i}else if(o!==i)throw new ae(r);return s}computeOutputShape(e){let t=!1;for(let r=0;r<e.length;++r)if(this.isUnknown(e[r])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return le(()=>{this.invokeCallHook(e,t);const r=xt(e),s=r.shape,i=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return se(r,i)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};kk.className="Reshape";Ee(kk);let Ck=class extends zt{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Ui(1,e.dims.length+1);if(!Ft(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Qn({ndim:this.dims.length+1})]}computeOutputShape(e){e=Yt(e);const t=e.slice();return this.dims.forEach((r,s)=>{t[s+1]=e[r]}),t}call(e,t){return Gt(xt(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Ck.className="Permute";Ee(Ck);let _k=class extends zt{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const r=xt(e);return df(Cu(r,this.maskValue),-1)}call(e,t){return le(()=>{this.invokeCallHook(e,t);const r=xt(e),s=df(Cu(r,this.maskValue),-1,!0);return ne(r,Oe(s,r.dtype))})}};_k.className="Masking";Ee(_k);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Mk=class extends zt{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(qt(e.inputLength))}this.inputDim=e.inputDim,dr(this.inputDim,"inputDim"),this.outputDim=e.outputDim,dr(this.outputDim,"outputDim"),this.embeddingsInitializer=Sn(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=In(e.embeddingsRegularizer),this.activityRegularizer=In(e.activityRegularizer),this.embeddingsConstraint=ar(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return le(()=>this.maskZero?(e=xt(e),Cu(e,Bt(e))):null)}computeOutputShape(e){if(e=Yt(e),this.inputLength==null)return[...e,this.outputDim];const t=qt(this.inputLength);if(t.length!==e.length-1)throw new ae(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let r=0;for(let s=0;s<t.length;++s){const i=t[s],a=e[s+1];if(i!=null&&a!=null&&i!==a)throw new ae(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);i==null&&(t[r]=a),r++}}return[e[0],...t,this.outputDim]}call(e,t){return le(()=>{this.invokeCallHook(e,t);let r=xt(e);r.dtype!=="int32"&&(r=oo(r,"int32"));const s=wz(this.embeddings.read(),se(r,[r.size]));return se(s,Yt(this.computeOutputShape(r.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Nn(this.embeddingsInitializer),embeddingsRegularizer:ln(this.embeddingsRegularizer),activityRegularizer:ln(this.activityRegularizer),embeddingsConstraint:ir(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Mk.className="Embedding";Ee(Mk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ju extends zt{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Nt}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const r=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){const i=e[e.length-t.length+s],a=t[s];if(i==null||a==null||i<0||a<0)r.push(null);else if(i===1)r.push(a);else if(a===1)r.push(i);else{if(i!==a)throw new ae("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));r.push(i)}}return r}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Yt(e)]),e=e,e.length<2)throw new ae(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const i of e)i!=null&&i[0]!==null&&t.push(i[0]);if(t=el(t),t.length>1)throw new ae(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let r=e[0]==null?null:e[0].slice(1);for(let i=1;i<e.length;++i){const a=e[i]==null?null:e[i].slice(1);r=this.computeElementwiseOpOutputShape(r,a)}const s=e.map(i=>i.length);e.indexOf(null)===-1&&el(s).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return le(()=>{if(e=e,this.reshapeRequired){const r=[],s=e.map(i=>i.rank);if(s.indexOf(null)===-1){const i=ul(s);for(let a of e){const o=a.rank;for(let l=0;l<i-o;++l)a=eg(a,1);r.push(a)}return this.mergeFunction(r)}else{let i=!1;for(const l of e){const u=l.rank;if(u==null){const d=l.shape,h=d[0],f=d.slice(1).concat([h]);let m=se(l,[h].concat(tl(d.slice(1))));m=Gt(m,[1,0]),m=se(m,f),r.push(m),i=!0}else if(u>1){const d=Ui(1,u).concat([0]);r.push(Gt(l,d)),i=!0}else r.push(l)}let a=this.mergeFunction(r);const o=a.rank;if(i){if(o==null){const l=a.shape,u=l.length,d=l[u-1],h=[d].concat(l.slice(0,l.length-1));a=se(Gt(se(a,[-1,d]),[1,0]),h)}else if(o>1){const l=[o-1].concat(Ui(0,o-1));a=Gt(a,l)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let s=1;s<e.length;++s){const i=e[s]==null?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,i)}let r=[];for(const s of e)s!=null&&s[0]!==null&&r.push(s[0]);return r=el(r),r.length===1?t=r.concat(t):t=[null].concat(t),t}computeMask(e,t){return le(()=>{if(t==null)return null;if(!Array.isArray(t))throw new ae("`mask` should be an Array");if(!Array.isArray(e))throw new ae("`inputs` should be an Array");if(t.length!==e.length)throw new ae(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(s=>s==null))return null;t=t.map(s=>s==null?s:Cr(s,0));let r=t[0];for(let s=1;s<t.length-1;++s)r=Ti(r,t[s]);return r})}}let Nk=class extends Ju{constructor(e){super(e)}mergeFunction(e){return le(()=>{let t=e[0].clone();for(let r=1;r<e.length;++r)t=Ne(t,e[r]);return t})}};Nk.className="Add";Ee(Nk);let Ek=class extends Ju{constructor(e){super(e)}mergeFunction(e){return le(()=>{let t=e[0].clone();for(let r=1;r<e.length;++r)t=ne(t,e[r]);return t})}};Ek.className="Multiply";Ee(Ek);let Rk=class extends Ju{constructor(e){super(e)}mergeFunction(e){return le(()=>{let t=e[0].clone();for(let r=1;r<e.length;++r)t=Ne(t,e[r]);return ne(1/e.length,t)})}};Rk.className="Average";Ee(Rk);let Lk=class extends Ju{constructor(e){super(e)}mergeFunction(e){return le(()=>{let t=e[0];for(let r=1;r<e.length;++r)t=Ma(t,e[r]);return t})}};Lk.className="Maximum";Ee(Lk);let Ak=class extends Ju{constructor(e){super(e)}mergeFunction(e){return le(()=>{let t=e[0];for(let r=1;r<e.length;++r)t=ll(t,e[r]);return t})}};Ak.className="Minimum";Ee(Ak);let zk=class extends Ju{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new ae("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const s of e)if(s!=null){t=!1;break}if(t)return;const r=[];for(let s=0;s<e.length;++s){const i=e[s].slice();i.splice(this.axis,1);let a=!1;for(const o of r)if(Ft(o,i)){a=!0;break}a||r.push(i)}if(r.length>1)throw new ae("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return le(()=>PI(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new ae("A `Concatenate` layer should be called on a list of inputs.");const t=e,r=t[0].slice(),s=this.axis<0?r.length+this.axis:this.axis;for(const i of t.slice(1)){if(r[s]==null||i[s]==null){r[s]=null;break}r[s]+=i[s]}return r}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new ae("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new ae("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new ae(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return le(()=>{let r=!0;if(t.forEach(a=>{if(a!=null){r=!1;return}}),r)return null;const s=[];for(let a=0;a<e.length;++a)t[a]==null?s.push(Oe(Ds(e[a]),"bool")):t[a].rank<e[a].rank?s.push(Cr(t[a],-1)):s.push(t[a]);const i=$n(s,this.axis);return cx(i,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};zk.className="Concatenate";Ee(zk);function zp(n,e){for(;n<0;)n+=e;return n}function DJ(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new Nt("batchDot is not implemented for tensors of 4D or higher rank yet");if(P(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),P(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new Nt("batchDot is not implemented for complex64-type Tensors yet.");const r=n.shape.length,s=e.shape.length;t==null&&(t=[r-1,s-2]);const i=t;return le(()=>{let a;if(r>s){a=r-s;const l=[];for(let u=0;u<a;++u)l.push(1);e=se(e,e.shape.concat(l))}else if(s>r){a=s-r;const l=[];for(let u=0;u<a;++u)l.push(1);n=se(n,n.shape.concat(l))}else a=0;let o;if(n.shape.length===2&&e.shape.length===2)i[0]===i[1]?o=Qe(ne(n,e),i[0]):o=Qe(ne(Gt(n,[1,0]),e),i[1]);else{const l=i[0]!==n.shape.length-1,u=i[1]===e.shape.length-1;o=Lt(n,e,l,u)}if(a>0){let l;r>s?l=r+s-3:l=r-1;const u=[];for(let d=l;d<l+a;++d)u.push(d);o=wl(o,u)}return o.shape.length===1&&(o=Cr(o,1)),o})}class Dk extends Ju{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){P(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],r=e[1];if(t.length>3||r.length>3)throw new Nt("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,r);if(t[s[0]]!==r[s[1]])throw new ae(`Dimension incompatibility: ${t[s[0]]} !== ${r[s[1]]}`)}mergeFunction(e){if(e.length!==2)throw new ae(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],r=e[1],s;return Array.isArray(this.axes)?s=this.axes.map((i,a)=>zp(i,e[a].shape.length)):s=[zp(this.axes,t.shape.length),zp(this.axes,r.shape.length)],this.normalize&&(t=N0(t,s[0]),r=N0(r,s[1])),DJ(t,r,s)}interpretAxes(e,t){let r;return Array.isArray(this.axes)?r=this.axes:r=[zp(this.axes,e.length),zp(this.axes,t.length)],r}computeOutputShape(e){P(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),r=e[1].slice();if(t.length>3||r.length>3)throw new Nt("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,r);t.splice(s[0],1),r.splice(s[1],1),r.splice(0,1);const i=t.concat(r);return i.length===1&&i.push(1),i}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Dk.className="Dot";Ee(Dk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Pk extends zt{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return le(()=>{this.invokeCallHook(e,t);const r=xt(e);return ng(()=>Ne(Yx(r.shape,0,this.stddev),r),()=>r,t.training||!1)})}}Pk.className="GaussianNoise";Ee(Pk);class Fk extends zt{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return le(()=>{this.invokeCallHook(e,t);const r=xt(e);return this.rate>0&&this.rate<1?ng(()=>{const s=Math.sqrt(this.rate/(1-this.rate));return ne(r,Yx(r.shape,1,s))},()=>r,t.training||!1):r})}}Fk.className="GaussianDropout";Ee(Fk);class Gk extends zt{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||xt(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return le(()=>{if(this.rate<1&&this.rate>0){const r=this._getNoiseShape(e);return ng(()=>{const s=xt(e),i=-1.6732632423543772*1.0507009873554805;let a=po(vl(r),this.rate);a=oo(a,"float32");const o=((1-this.rate)*(1+this.rate*i**2))**-.5,l=-o*i*this.rate,u=Ne(ne(s,a),ne(Ne(a,-1),i));return Ne(ne(u,o),l)},()=>xt(e),t.training||!1)}return e})}}Gk.className="AlphaDropout";Ee(Gk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function yf(n,e,t,r,s,i=.001){let a;if(n.rank===2)a=uT(n,e,t,r,s,i);else if(n.rank===3)a=cT(n,e,t,r,s,i);else if(n.rank===4)a=dT(n,e,t,r,s,i);else throw new Nt(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return a}function PJ(n,e,t,r,s=.001){return le(()=>{const i=Vm(n,r),a=i.mean,o=i.variance;return[yf(n,a,o,t,e,s),a,o]})}function FJ(n,e,t,r,s=.001){return le(()=>{const i=Vm(n,r),a=i.mean,o=i.variance,l=[];for(const m of Ui(0,n.rank))r.indexOf(m)!==-1?l.push(1):l.push(n.shape[m]);const u=se(a,l),d=se(o,l),h=e==null?null:se(e,l),f=t==null?null:se(t,l);return[yf(n,u,d,f,h,s),a,o]})}function GJ(n,e,t,r,s=.001){return Ft(r.slice().sort(),Ui(0,n.rank-1))?PJ(n,e,t,r,s):FJ(n,e,t,r,s)}class Ok extends zt{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Sn(e.betaInitializer||"zeros"),this.gammaInitializer=Sn(e.gammaInitializer||"ones"),this.movingMeanInitializer=Sn(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Sn(e.movingVarianceInitializer||"ones"),this.betaConstraint=ar(e.betaConstraint),this.gammaConstraint=ar(e.gammaConstraint),this.betaRegularizer=In(e.betaRegularizer),this.gammaRegularizer=In(e.gammaRegularizer)}build(e){e=Yt(e);const t=this.axis>=0?this.axis:this.axis+e.length,r=e[t];if(r==null)throw new ae(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Qn({ndim:e.length,axes:{[t]:r}})];const s=[r];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return le(()=>{const r=t.training==null?!1:t.training,s=xt(e),i=s.shape,a=i.length,o=Ui(0,a),l=this.axis>=0?this.axis:this.axis+a;o.splice(l,1);const u=Mu(1,a);u[l]=i[l];const d=o.slice();d.sort();const h=!Ft(d,Ui(0,a).slice(0,a-1)),f=()=>{if(h){const v=se(this.movingMean.read(),u),w=se(this.movingVariance.read(),u),I=this.center?se(this.beta.read(),u):null,T=this.scale?se(this.gamma.read(),u):null;return yf(s,v,w,I,T,this.epsilon)}else return yf(s,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!r)return f();const[m,x,g]=GJ(s,this.gamma.read(),this.beta.read(),o,this.epsilon),y=(v,w,I)=>{le(()=>{const T=1-I,C=v.read(),E=ne(Ye(C,w),T);v.write(Ye(C,E))})};return y(this.movingMean,x,this.momentum),y(this.movingVariance,g,this.momentum),m})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Nn(this.betaInitializer),gammaInitializer:Nn(this.gammaInitializer),movingMeanInitializer:Nn(this.movingMeanInitializer),movingVarianceInitializer:Nn(this.movingVarianceInitializer),betaRegularizer:ln(this.betaRegularizer),gammaRegularizer:ln(this.gammaRegularizer),betaConstraint:ir(this.betaConstraint),gammaConstraint:ir(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Ok.className="BatchNormalization";Ee(Ok);class Wk extends zt{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=Sn(e.betaInitializer||"zeros"),this.gammaInitializer=Sn(e.gammaInitializer||"ones"),this.betaRegularizer=In(e.betaRegularizer),this.gammaRegularizer=In(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Yt(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let i=0;i<this.axis.length;++i)this.axis[i]<0&&(this.axis[i]+=t);for(const i of this.axis)if(i<0||i>=t)throw new Error(`Invalid axis: ${i}`);if(this.axis.length!==el(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const r=this.axis.map(i=>e[i]),s=!0;this.scale?this.gamma=this.addWeight("gamma",r,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",r,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){const r=xt(e),s=r.shape,i=s.length;return le(()=>{let{mean:a,variance:o}=Vm(r,this.axis,!0);const l=Mu(1,i);for(const x of this.axis)l[x]=s[x];const u=x=>x!=null&&x.shape.length!==i?se(x,l):x;let d=this.scale?u(this.gamma.read()):null,h=this.center?u(this.beta.read()):null;const f=[],m=[];for(let x=0;x<i;++x)this.axis.indexOf(x)!==-1?(f.push(s[x]),m.push(1)):(f.push(1),m.push(s[x]));return a=Ys(a,f),o=Ys(o,f),d!=null&&(d=Ys(d,m)),h!=null&&(h=Ys(h,m)),yf(r,a,o,h,d,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Nn(this.betaInitializer),gammaInitializer:Nn(this.gammaInitializer),betaRegularizer:ln(this.betaRegularizer),gammaRegularizer:ln(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Wk.className="LayerNormalization";Ee(Wk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function OJ(n,e,t){return le(()=>{if(n.rank!==4)throw new ae(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new ae("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=Zi()),t!=="channelsLast"&&t!=="channelsFirst")throw new ae(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return t==="channelsFirst"?r=[[0,0],[0,0],e[0],e[1]]:r=[[0,0],e[0],e[1],[0,0]],fo(n,r)})}class Vk extends zt{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Zi():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new ae(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,r;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],r=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new ae(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new ae(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);r=e.padding[1]}this.padding=[t,r]}this.inputSpec=[new Qn({ndim:4})]}computeOutputShape(e){e=Yt(e);let t,r;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?r=e[3]+this.padding[1][0]+this.padding[1][1]:r=null,[e[0],e[1],t,r]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?r=e[2]+this.padding[1][0]+this.padding[1][1]:r=null,[e[0],t,r,e[3]])}call(e,t){return le(()=>OJ(xt(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Vk.className="ZeroPadding2D";Ee(Vk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fv(n,e,t,r,s,i){return le(()=>{Un(s),yz(i),ii(r),t==null&&(t=[1,1]),r==null&&(r="valid"),s==null&&(s=Zi()),i==null&&(i="max"),n=uk(n,s);let a;const o=r==="same"?"same":"valid";return i==="max"?a=Wm(n,e,t,o):a=Lm(n,e,t,o),s==="channelsFirst"&&(a=Gt(a,[0,3,1,2])),a})}function lD(n,e,t,r,s,i){return le(()=>{Un(s),yz(i),ii(r),t==null&&(t=[1,1,1]),r==null&&(r="valid"),s==null&&(s=Zi()),i==null&&(i="max"),n=rD(n,s);let a;const o=r==="same"?"same":"valid";return i==="max"?a=DT(n,e,t,o):a=lT(n,e,t,o),s==="channelsFirst"&&(a=Gt(a,[0,4,1,2,3])),a})}class uD extends zt{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new ae(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(dr(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new ae(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);dr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,ii(this.padding),this.inputSpec=[new Qn({ndim:3})]}computeOutputShape(e){e=Yt(e);const t=Xi(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return le(()=>{this.invokeCallHook(e,t),e=eg(xt(e),2);const r=this.poolingFunction(xt(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return wl(r,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class $k extends uD{constructor(e){super(e)}poolingFunction(e,t,r,s,i){return Un(i),ii(s),fv(e,t,r,s,i,"max")}}$k.className="MaxPooling1D";Ee($k);class Bk extends uD{constructor(e){super(e)}poolingFunction(e,t,r,s,i){return Un(i),ii(s),fv(e,t,r,s,i,"avg")}}Bk.className="AveragePooling1D";Ee(Bk);class cD extends zt{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new ae(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];dr(this.poolSize,"poolSize"),dr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Un(this.dataFormat),ii(this.padding),this.inputSpec=[new Qn({ndim:4})]}computeOutputShape(e){e=Yt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],r=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Xi(t,this.poolSize[0],this.padding,this.strides[0]),r=Xi(r,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,r]:[e[0],t,r,e[3]]}call(e,t){return le(()=>(this.invokeCallHook(e,t),this.poolingFunction(xt(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Xk extends cD{constructor(e){super(e)}poolingFunction(e,t,r,s,i){return Un(i),ii(s),fv(e,t,r,s,i,"max")}}Xk.className="MaxPooling2D";Ee(Xk);class Uk extends cD{constructor(e){super(e)}poolingFunction(e,t,r,s,i){return Un(i),ii(s),fv(e,t,r,s,i,"avg")}}Uk.className="AveragePooling2D";Ee(Uk);class dD extends zt{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new ae(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];dr(this.poolSize,"poolSize"),dr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Un(this.dataFormat),ii(this.padding),this.inputSpec=[new Qn({ndim:5})]}computeOutputShape(e){e=Yt(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],r=this.dataFormat==="channelsFirst"?e[3]:e[2],s=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Xi(t,this.poolSize[0],this.padding,this.strides[0]),r=Xi(r,this.poolSize[1],this.padding,this.strides[1]),s=Xi(s,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,r,s]:[e[0],t,r,s,e[4]]}call(e,t){return le(()=>(this.invokeCallHook(e,t),this.poolingFunction(xt(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Zk extends dD{constructor(e){super(e)}poolingFunction(e,t,r,s,i){return Un(i),ii(s),lD(e,t,r,s,i,"max")}}Zk.className="MaxPooling3D";Ee(Zk);class Hk extends dD{constructor(e){super(e)}poolingFunction(e,t,r,s,i){return Un(i),ii(s),lD(e,t,r,s,i,"avg")}}Hk.className="AveragePooling3D";Ee(Hk);class hD extends zt{constructor(e){super(e),this.inputSpec=[new Qn({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Nt}}class Kk extends hD{constructor(e){super(e||{})}call(e,t){return le(()=>{const r=xt(e);return Mn(r,1)})}}Kk.className="GlobalAveragePooling1D";Ee(Kk);class Yk extends hD{constructor(e){super(e||{})}call(e,t){return le(()=>{const r=xt(e);return ni(r,1)})}}Yk.className="GlobalMaxPooling1D";Ee(Yk);class pD extends zt{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Un(this.dataFormat),this.inputSpec=[new Qn({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Nt}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class jk extends pD{call(e,t){return le(()=>{const r=xt(e);return this.dataFormat==="channelsLast"?Mn(r,[1,2]):Mn(r,[2,3])})}}jk.className="GlobalAveragePooling2D";Ee(jk);class Qk extends pD{call(e,t){return le(()=>{const r=xt(e);return this.dataFormat==="channelsLast"?ni(r,[1,2]):ni(r,[2,3])})}}Qk.className="GlobalMaxPooling2D";Ee(Qk);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class fD extends zt{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,r={}){const s=t.layer,i=Bi(s,r);delete t.layer;const a={layer:i};return Object.assign(a,t),new e(a)}}class Jk extends fD{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Yt(e),e.length<3)throw new ae(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Yt(e);const t=[e[0]].concat(e.slice(2)),r=this.layer.computeOutputShape(t),s=e[1];return[r[0],s].concat(r.slice(1))}call(e,t){return le(()=>(e=xt(e),aD((r,s)=>[xt(this.layer.call(r,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}Jk.className="TimeDistributed";Ee(Jk);function WJ(n){ju(lQ,"BidirectionalMergeMode",n)}const VJ="concat";class qk extends fD{constructor(e){super(e);const t=e.layer.getConfig(),r={};r.className=e.layer.getClassName(),r.config=t,this.forwardLayer=Bi(r),t.goBackwards=t.goBackwards!==!0;const s={};if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=Bi(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?VJ:e.mergeMode,WJ(this.mergeMode),e.weights)throw new Nt("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,r=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,r)),this.backwardLayer.setWeights(e.slice(r))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let r,s,i;return this.returnState&&(i=t.slice(1)),r=t[0],r=r,this.mergeMode==="concat"?(r[r.length-1]*=2,s=[r]):this.mergeMode==null?s=[r,r.slice()]:s=[r],this.returnState?this.mergeMode==null?s.concat(i).concat(i.slice()):[r].concat(i).concat(i.slice()):us(s)}apply(e,t){let r=t==null?null:t.initialState,s=t==null?null:t.constants;t==null&&(t={});const i=iD(e,r,s,this.numConstants);if(e=i.inputs,r=i.initialState,s=i.constants,Array.isArray(e)&&(r=e.slice(1),e=e[0]),(r==null||r.length===0)&&s==null)return super.apply(e,t);const a=[],o=[];if(r!=null){const u=r.length;if(u%2>0)throw new ae("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=r,a.push(...r);const d=r.map(h=>new Qn({shape:h.shape}));this.forwardLayer.stateSpec=d.slice(0,u/2),this.backwardLayer.stateSpec=d.slice(u/2),o.push(...d)}if(s!=null)throw new Nt("Support for constants in Bidirectional layers is not implemented yet.");const l=a[0]instanceof Hi;for(const u of a)if(u instanceof Hi!==l)throw new ae("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const u=[e].concat(a),d=this.inputSpec.concat(o),h=this.inputSpec;this.inputSpec=d;const f=super.apply(u,t);return this.inputSpec=h,f}else return super.apply(e,t)}call(e,t){return le(()=>{const r=t.initialState;let s,i;if(r==null)s=this.forwardLayer.call(e,t),i=this.backwardLayer.call(e,t);else{const l=r.slice(0,r.length/2),u=r.slice(r.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:l})),i=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let a;this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(i.slice(1))),s=s[0],i=i[0]),this.returnSequences&&(i=ri(i,1));let o;return this.mergeMode==="concat"?o=PI([s,i]):this.mergeMode==="sum"?o=Ne(s,i):this.mergeMode==="ave"?o=ne(.5,Ne(s,i)):this.mergeMode==="mul"?o=ne(s,i):this.mergeMode==null&&(o=[s,i]),this.returnState?this.mergeMode==null?o.concat(a):[o].concat(a):o})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){hu(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),hu(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let r;if(this.returnSequences?this.mergeMode==null?r=[t,t]:r=t:this.mergeMode==null?r=[null,null]:r=null,this.returnState){const s=this.forwardLayer.states.map(i=>null);return Array.isArray(r)?r.concat(s).concat(s):[r].concat(s).concat(s)}else return r}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const r=Bi(t.layer);if(delete t.layer,t.numConstants!=null)throw new Nt("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=t;return s.layer=r,new e(s)}}qk.className="Bidirectional";Ee(qk);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class eC extends zt{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return le(()=>(e=xt(e),e.dtype!=="float32"&&(e=oo(e,"float32")),Ne(ne(e,this.scale),this.offset)))}}eC.className="Rescaling";Ee(eC);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:$J,cropAndResize:BJ}=Si;class tC extends zt{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,r,s,i,a,o,l){return le(()=>{let u,d=!1;const h=t/a,f=r/o,m=(s+t)/a,x=(i+r)/o,g=[h,f,m,x],y=[];e.rank===3?(d=!0,u=Wr([e])):u=e;for(let T=0;T<u.shape[0];T++)y.push(g);const v=wn(y,[y.length,4]),w=_u(0,y.length,1,"int32"),I=BJ(u,v,w,[s,i],"nearest");return oo(d?xt(si(I)):I,l)})}upsize(e,t,r,s){return le(()=>{const i=$J(e,[t,r]);return oo(i,s)})}call(e,t){return le(()=>{const r=xt(e),s=r.dtype,i=r.shape,a=i[i.length-3],o=i[i.length-2];let l=0;a!==this.height&&(l=Math.floor((a-this.height)/2));let u=0;return o!==this.width&&(u=Math.floor((o-this.width)/2),u===0&&(u=1)),l>=0&&u>=0?this.centerCrop(r,l,u,this.height,this.width,a,o,s):this.upsize(e,this.height,this.width,s)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Yt(e);const t=e.length-3,r=e.length-2;return e[t]=this.height,e[r]=this.width,e}}tC.className="CenterCrop";Ee(tC);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function XJ(n,e,t,r){let s=xt(n);if(s.dtype!=="int32"&&(s=oo(s,"int32")),e==="int")return s;const i=s.shape;if(s.rank===0&&(s=Cr(s,-1)),e==="oneHot"&&s.shape[s.shape.length-1]!==1&&(s=Cr(s,-1)),s.rank>2)throw new ae(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${i} which would result in output rank ${s.rank}.`);const a=["multiHot","oneHot"].includes(e),o=s;let l;if(typeof r<"u"&&e==="count"?l=I0(o,r,t,a):l=I0(o,[],t,a),e!=="tfIdf")return l;if(r)return ne(l,r);throw new ae("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class nC extends zt{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=Yt(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return le(()=>{e=xt(e),e.dtype!=="int32"&&(e=oo(e,"int32"));let r;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new ae(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);r=xt(t.countWeights)}const s=ni(e),i=ud(e),a=ts(this.numTokens,s).bufferSync().get(0),o=po(i,0).bufferSync().get(0);if(!(a&&o))throw new ae(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return XJ(e,this.outputMode,this.numTokens,r)})}}nC.className="CategoryEncoding";Ee(nC);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const UJ=["bilinear","nearest"],R3=new Set(UJ);class rC extends zt{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(R3.has(e.interpolation))this.interpolation=e.interpolation;else throw new ae(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=Yt(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return le(()=>{const r=[this.height,this.width];if(this.interpolation==="bilinear")return Si.resizeBilinear(e,r,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Si.resizeNearestNeighbor(e,r,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...R3]} are supported`)})}}rC.className="Resizing";Ee(rC);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class mD{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}mD.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class gD extends zt{constructor(e){super(e),this.randomGenerator=new mD(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}gD.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const ZJ=["bilinear","nearest"],L3=new Set(ZJ);class sC extends gD{constructor(e){super(e);const{factor:t,interpolation:r="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new ae(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new ae(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new ae(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(r)if(L3.has(r))this.interpolation=r;else throw new ae(`Invalid interpolation parameter: ${r} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Yt(e);const t=e[2];return[this.imgHeight,-1,t]}call(e,t){return le(()=>{const r=xt(e);this.imgHeight=r.shape[r.shape.length-3];const s=r.shape[r.shape.length-2];this.widthFactor=vl([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let i=this.widthFactor.dataSync()[0]*s;i=Math.round(i);const a=[this.imgHeight,i];switch(this.interpolation){case"bilinear":return Si.resizeBilinear(e,a);case"nearest":return Si.resizeNearestNeighbor(e,a);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...L3]} are supported`)}})}}sC.className="RandomWidth";Ee(sC);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HJ=de();HJ.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Ms;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(Ms||(Ms={}));var A3;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(A3||(A3={}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function KJ(n,e){return z0(n,e)}function z0(n,e,t=new Map,r=new Set){if(n==null)return null;if(typeof Blob=="function"&&n instanceof Blob)return n.slice();if(r.has(n))throw new Error("Circular references are not supported.");if(t.has(n))return t.get(n);const s=e(n);if(s.recurse&&s.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse)if(yd(n)){const i=Array.isArray(n)?[]:{};r.add(n);for(const a in n){const o=n[a],l=z0(o,e,t,r);i[a]=l}return r.delete(n),n.__proto__&&(i.__proto__=n.__proto__),i}else throw new Error(`Can't recurse into non-iterable type: ${n}`);else return t.set(n,s.value),s.value}function YJ(n,e=bD){return yD(n,e)}function yD(n,e,t=new Set){const r=n[0];if(t.has(r))throw new Error("Circular references are not supported.");const s=e(n);if(s.recurse&&s.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse)if(yd(r)){const i=Array.isArray(r)?[]:{};t.add(r);for(const a in r){const o=n.map(u=>u[a]),l=yD(o,e,t);i[a]=l}return t.delete(r),i}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return s.value}function bD(n){return n===null?null:yd(n[0])?{value:null,recurse:!0}:{value:n,recurse:!1}}async function xD(n,e){const t=new Map;z0(n,e,t);for(const r of Array.from(t.keys())){const s=t.get(r);if(qa(s)){const i=await s;t.set(r,i)}}return z0(n,e,t)}function yd(n){let e=!1;if(de().get("IS_BROWSER"))e=n instanceof TextDecoder;else{const{StringDecoder:t}=require("string_decoder");e=n instanceof t}return n!=null&&!ArrayBuffer.isView(n)&&(Array.isArray(n)||typeof n=="object"&&!(n instanceof Ht)&&!(n instanceof Promise)&&!e)}function jJ(n){return n==null||QJ(n)||Array.isArray(n)||typeof n=="object"&&n instanceof Ht||rr(n)}function QJ(n){return n===null||typeof n!="object"&&typeof n!="function"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function JJ(n){return KJ(n,qJ)}function qJ(n){return n instanceof Ht?{value:n.clone(),recurse:!1}:yd(n)?{value:null,recurse:!0}:{value:n,recurse:!1}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class vD{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),r=this.get(t);return this.set(t,this.pop()),r}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class mv extends vD{constructor(){super(mv.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=this.capacity*2,t=new Array(e),r=this.length();for(let s=0;s<r;s++)t[s]=this.get(this.wrap(this.begin+s));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=r}}mv.INITIAL_CAPACITY=32;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function wD(n){return new nq(n)}function iC(n){return new rq(n)}function eq(n,e){return new SD(n,e)}function tq(n,e=Yo.FAIL){return new hq(n,e)}let gr=class{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let r=await e.next();for(;!r.done;)t.push(r.value),r=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),r=e(t.value);for(;!t.done&&r;)t=await this.next(),r=e(t.value)}handleErrors(e){return new cq(this,e)}filter(e){return new lq(this,e)}map(e){return new uq(this,e)}mapAsync(e){return new z3(this,e)}serialMapAsync(e){return new z3(this,e).serial()}flatmap(e){return new dq(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new oq(this,e,t)}columnMajorBatch(e,t=!0,r=bD){return this.rowMajorBatch(e,t).map(s=>YJ(s,r))}concatenate(e,t){return new SD(wD([this,e]),t)}take(e){return e<0||e==null?this:new aq(this,e)}skip(e){return e<0||e==null?this:new iq(this,e)}prefetch(e){return new TD(this,e)}shuffle(e,t){return new pq(this,e,t)}serial(){return new sq(this)}};class nq extends gr{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:JJ(e),done:!1}}}class rq extends gr{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class sq extends gr{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class iq extends gr{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;kt(e.value)}return this.upstream.next()}}class aq extends gr{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class oq extends gr{constructor(e,t,r=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=r,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class lq extends gr{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;kt(e.value)}}}class uq extends gr{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=to(e.value),r=this.transform(e.value),s=to(r);for(const i of t)lx(i,s)||i.dispose();return{value:r,done:!1}}}class cq extends gr{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}let z3=class extends gr{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=to(e.value),r=await this.transform(e.value),s=to(r);for(const i of t)lx(i,s)||i.dispose();return{value:r,done:!1}}};class aC extends gr{constructor(){super(),this.outputQueue=new mv,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class dq extends aC{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=to(e.value),r=this.transform(e.value),s=to(r);this.outputQueue.pushAll(r);for(const i of t)lx(i,s)||i.dispose();return!0}}class SD extends gr{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){const r=await this.moreIterators.next();if(r.done)return{value:null,done:!0};this.iterator=r.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var Yo;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(Yo||(Yo={}));class hq extends gr{constructor(e,t=Yo.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,r=0;function s(a){return a instanceof gr?{value:a.next().then(o=>(t++,o.done&&r++,o.value)),recurse:!1}:{value:null,recurse:!0}}const i=await xD(this.iterators,s);if(t===r)return{value:null,done:!0};if(r>0)switch(this.mismatchMode){case Yo.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case Yo.SHORTEST:return{value:null,done:!0};case Yo.LONGEST:}return this.count++,{value:i,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class TD extends gr{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new vD(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class pq extends TD{constructor(e,t,r){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Ih.alea(r||kr().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */let Rh=class{constructor(){this.size=null}batch(e,t=!0){const r=this;P(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let s;return this.size===1/0||this.size==null?s=this.size:t?s=Math.ceil(this.size/e):s=Math.floor(this.size/e),Ns(async()=>(await r.iterator()).columnMajorBatch(e,t,gq),s)}concatenate(e){const t=this;let r;return this.size===1/0||e.size===1/0?r=1/0:this.size!=null&&e.size!=null?r=this.size+e.size:r=null,Ns(async()=>(await t.iterator()).concatenate(await e.iterator()),r)}filter(e){const t=this;let r;return this.size===1/0?r=1/0:r=null,Ns(async()=>(await t.iterator()).filter(s=>le(()=>e(s))),r)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Ns(async()=>(await t.iterator()).map(r=>le(()=>e(r))),this.size)}mapAsync(e){const t=this;return Ns(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Ns(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){const t=this;let r;return this.size!=null&&e>0?r=this.size*e:e===0?r=0:this.size!=null&&(e===void 0||e<0)?r=1/0:r=null,Ns(async()=>{const s=iC(async()=>({value:await t.iterator(),done:!1}));return eq(s.take(e))},r)}skip(e){const t=this;let r;return this.size!=null&&e>=0&&this.size>=e?r=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?r=0:r=null,Ns(async()=>(await t.iterator()).skip(e),r)}shuffle(e,t,r=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,i=Ih.alea(t||kr().toString());return Ns(async()=>{let a=i.int32();return r&&(a+=i.int32()),(await s.iterator()).shuffle(e,a.toString())},this.size)}take(e){const t=this;let r;return this.size!=null&&this.size>e?r=e:this.size!=null&&this.size<=e?r=this.size:r=null,Ns(async()=>(await t.iterator()).take(e),r)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};Rh.MAX_BUFFER_SIZE=1e4;function Ns(n,e=null){return new class extends Rh{constructor(){super(...arguments),this.size=e}async iterator(){return n()}}}function fq(n){return Ns(async()=>wD(n),n.length)}function mq(n){if(!yd(n))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(n))for(let t=0;t<n.length;t++)e=e==null?n[t].size:Math.min(e,n[t].size);else if(n instanceof Object)for(const t in n)e=e==null?n[t].size:Math.min(e,n[t].size);return Ns(async()=>{const t=await xD(n,r=>{if(r instanceof Rh)return{value:r.iterator(),recurse:!1};if(yd(r))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return tq(t,Yo.SHORTEST)},e)}function gq(n){if(n===null)return null;const e=n[0];return jJ(e)?{value:yq(n),recurse:!1}:{value:null,recurse:!0}}function yq(n){if(n.length===0)throw new Error("Can't make a batch of zero elements.");return n[0]instanceof Ht?Wr(n):wn(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qe(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&P(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bq=Ax;class lg extends q0{nextDataId(){return lg.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new D2(this,on())}write(e,t,r){this.firstUse&&(this.firstUse=!1,de().get("IS_NODE")&&Ks(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:r,refCount:1}),s}makeTensorInfo(e,t,r){let s;if(t==="string"&&r!=null&&r.length>0&&ma(r[0])){const i=r.map(a=>va(a));s=this.write(i,e,t)}else s=this.write(r,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,r,s,i){this.data.set(e,{values:t,dtype:s,refCount:i})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:r}=this.data.get(e);if(t==="complex64"){const s=this.readSync(r.real.dataId),i=this.readSync(r.imag.dataId);return io(s,i)}return hL(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const r=t.map(s=>eo(s));return Et(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Et(e.shape,e.dtype,t)}makeOutput(e,t,r){return on().makeTensorFromTensorInfo(this.makeTensorInfo(t,r,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:r}=this.data.get(e);r!=null&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=kr();return e(),{kernelMs:kr()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){qe([e],"where");const t=this.readSync(e.dataId);return bq(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}lg.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ID(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const xq=n=>{const{x:e}=n.inputs,t=n.backend;qe(e,"abs");let r=new Float32Array(be(e.shape));const s=t.data.get(e.dataId).values;return r=ID(s),t.makeOutput(r,e.shape,e.dtype)},vq={kernelName:Cf,backendName:"cpu",kernelFunc:xq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zn(n){return(e,t,r,s,i)=>{const a=Ct(e,t),o=a.length,l=ut(a),u=be(a),d=mr(i,u),h=e.length,f=t.length,m=ut(e),x=ut(t),g=ku(e,a),y=ku(t,a);if(g.length+y.length===0)for(let v=0;v<d.length;++v)d[v]=n(r[v%r.length],s[v%s.length]);else for(let v=0;v<d.length;++v){const w=Wu(v,o,l),I=w.slice(-h);g.forEach(L=>I[L]=0);const T=Vi(I,h,m),C=w.slice(-f);y.forEach(L=>C[L]=0);const E=Vi(C,f,x);d[v]=n(r[T],s[E])}return[d,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rs(n){const{inputs:e,backend:t}=n,{real:r,imag:s}=e,i=t.data.get(r.dataId).values,a=t.data.get(s.dataId).values,o=t.makeTensorInfo(r.shape,"complex64"),l=t.data.get(o.dataId);return l.complexTensorInfos={real:t.makeTensorInfo(r.shape,"float32",i),imag:t.makeTensorInfo(s.shape,"float32",a)},o}const wq={kernelName:lb,backendName:"cpu",kernelFunc:Rs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D0(n,e,t="float32"){if(t==="complex64"){const s=D0(n,e,"float32"),i=D0(n,e,"float32");return Rs({inputs:{real:s,imag:i},backend:n})}const r=Er(be(e),t);return n.makeTensorInfo(e,t,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _a(n){const{inputs:e,backend:t}=n,{x:r}=e;return t.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Sq={kernelName:Bd,backendName:"cpu",kernelFunc:_a};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nu(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.data.get(r.dataId).complexTensorInfos.real,i=t.data.get(s.dataId).values;return t.makeTensorInfo(s.shape,s.dtype,i)}const Tq={kernelName:Vb,backendName:"cpu",kernelFunc:Nu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kD(n,e,t,r){if(r==="int32"){const s=Int32Array.from(n);return[e,"int32",s]}if(r==="bool"){const s=ml([0],t),[i,a]=Zn((o,l)=>o!==l?1:0)(e,[],n,s,"bool");return[a,"bool",i]}throw new Error(`Error in Cast: failed to cast ${t} to ${r}`)}function pl(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dtype:i}=r;if(i==="complex64"){if(s.dtype==="complex64")return _a({inputs:{x:s},backend:t});const d=D0(t,s.shape,s.dtype),h=pl({inputs:{x:s},backend:t,attrs:{dtype:"float32"}}),f=Rs({inputs:{real:h,imag:d},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),f}if(s.dtype==="complex64"){const d=Nu({inputs:{input:s},backend:t}),h=pl({inputs:{x:d},backend:t,attrs:{dtype:i}});return t.disposeIntermediateTensorInfo(d),h}if(!G2(s.dtype,i)){const d=_a({inputs:{x:s},backend:t});return{dataId:d.dataId,shape:d.shape,dtype:i}}const a=t.data.get(s.dataId).values,[o,l,u]=kD(a,s.shape,s.dtype,i);return t.makeTensorInfo(o,l,u)}const Iq={kernelName:Ed,backendName:"cpu",kernelFunc:pl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function or(n,e,t,r){return t==null?({inputs:s,backend:i})=>{const{a,b:o}=s,l=i;qe([a,o],n);const u=l.data.get(a.dataId).values,d=l.data.get(o.dataId).values,h=a.dtype==="string"?ao(u):u,f=a.dtype==="string"?ao(d):d,m=r||a.dtype,[x,g]=e(a.shape,o.shape,h,f,m);return l.makeTensorInfo(g,m,x)}:({inputs:s,backend:i})=>{const{a,b:o}=s,l=i;if(a.dtype==="complex64"||o.dtype==="complex64"){const u=pl({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),d=l.data.get(u.dataId),h=d.complexTensorInfos.real,f=d.complexTensorInfos.imag,m=l.data.get(h.dataId).values,x=l.data.get(f.dataId).values,g=pl({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),y=l.data.get(g.dataId),v=y.complexTensorInfos.real,w=y.complexTensorInfos.imag,I=l.data.get(v.dataId).values,T=l.data.get(w.dataId).values,[C,E,L]=t(a.shape,o.shape,m,x,I,T),M=l.makeTensorInfo(L,"float32",C),R=l.makeTensorInfo(L,"float32",E),z=Rs({inputs:{real:M,imag:R},backend:l});return l.disposeIntermediateTensorInfo(u),l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(M),l.disposeIntermediateTensorInfo(R),z}else{const u=l.data.get(a.dataId).values,d=l.data.get(o.dataId).values,h=r||a.dtype,[f,m]=e(a.shape,o.shape,u,d,h);return l.makeTensorInfo(m,h,f)}}}function oC(n){return(e,t,r,s,i,a)=>{const o=Ct(e,t),l=be(o),u=o.length,d=ut(o),h=mr("float32",l),f=mr("float32",l),m=ku(e,o),x=ku(t,o),g=io(r,s),y=io(i,a),v=e.length,w=ut(e),I=t.length,T=ut(t);if(m.length+x.length===0)for(let C=0;C<h.length;C++){const E=C%g.length,L=C%y.length,M=n(g[E*2],g[E*2+1],y[L*2],y[L*2+1]);h[C]=M.real,f[C]=M.imag}else for(let C=0;C<h.length;C++){const E=Wu(C,u,d),L=E.slice(-v);m.forEach(U=>L[U]=0);const M=Vi(L,v,w),R=E.slice(-I);x.forEach(U=>R[U]=0);const z=Vi(R,I,T),X=n(g[M*2],g[M*2+1],y[z*2],y[z*2+1]);h[C]=X.real,f[C]=X.imag}return[h,f,o]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CD=Zn((n,e)=>n+e),kq=oC((n,e,t,r)=>({real:n+t,imag:e+r})),bd=or(Vu,CD,kq),Cq={kernelName:Vu,backendName:"cpu",kernelFunc:bd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lC(n,e,t,r,s){const i=be(r),a=Er(s,t);for(let o=0;o<n.length;o++){const l=n[o];if(l<0)throw new Error("Input x must be non-negative!");l>=s||(i>0?a[l]+=e[o]:a[l]+=1)}return a}function _D(n,e,t,r=!1){const s=n.shape[0],i=n.shape[1],a=Et([s,t],e.dtype);for(let o=0;o<s;o++)for(let l=0;l<i;l++){const u=n.get(o,l);if(u<0)throw new Error("Input x must be non-negative!");u>=t||(r?a.set(1,o,u):e.size>0?a.set(a.get(o,u)+e.get(o,l),o,u):a.set(a.get(o,u)+1,o,u))}return a}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MD=Zn((n,e)=>n&e),_q=or(zf,MD),Mq={kernelName:zf,backendName:"cpu",kernelFunc:_q};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Na(n){return(e,t,r)=>{const s=Dn(t,e.length);for(let i=0;i<e.length;++i)s[i]=n(e[i],r);return s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function en(n,e,t){const r=Na(e);return Tl(n,r,t)}function Tl(n,e,t){return({inputs:r,attrs:s,backend:i})=>{const{x:a}=r;qe(a,n);const o=i,l=o.data.get(a.dataId).values;let u;if(a.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=ao(l)}else u=l;const d=t||a.dtype,h=e(u,d,s);return o.makeTensorInfo(a.shape,d,h)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ND=Na(n=>Math.ceil(n)),Nq=Tl(Rd,ND),Eq={kernelName:Rd,backendName:"cpu",kernelFunc:Nq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ED(n,e,t,r){const s=Dn(t,be(e));if(r&&t!=="string"){let i=0;n.forEach(a=>{const o=be(a.shape);s.set(a.vals,i),i+=o})}else{let i=0;n.forEach(a=>{const o=t==="string"?ao(a.vals):a.vals;let l=0;for(let u=0;u<a.shape[0];++u){const d=u*e[1]+i;for(let h=0;h<a.shape[1];++h)s[d+h]=o[l++]}i+=a.shape[1]})}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RD=Zn((n,e)=>n===e?1:0),LD=or(Bf,RD,null,"bool"),Rq={kernelName:Bf,backendName:"cpu",kernelFunc:LD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AD=Na(n=>Math.exp(n)),zD=Tl(Gd,AD,"float32"),Lq={kernelName:Gd,backendName:"cpu",kernelFunc:zD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DD=Na(n=>Math.expm1(n)),Aq=Tl(Od,DD),zq={kernelName:Od,backendName:"cpu",kernelFunc:Aq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PD=Na(n=>Math.floor(n)),Dq=Tl(Wd,PD),Pq={kernelName:Wd,backendName:"cpu",kernelFunc:Dq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FD=Zn((n,e)=>Math.floor(n/e)),Fq=or(Vd,FD,null,"int32"),Gq={kernelName:Vd,backendName:"cpu",kernelFunc:Fq};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GD(n,e,t,r,s,i,a,o,l){const u=Et([r,i],t);for(let d=0;d<r;d++){const h=[];let f=0;for(let m=0;m<s;m++){const x=n[d*s+m];f+=x*a[m],h.push(x)}if(f<0||f>=l/i)throw new Error(`Invalid indices: ${h} does not index into ${o}`);for(let m=0;m<i;m++)u.values[d*i+m]=e.get(...e.indexToLoc(f*i+m))}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OD(n,e,t){const r=Et(t,n.dtype);for(let s=0;s<r.size;++s){const i=r.indexToLoc(s).slice(),a=i[0],o=i[2],l=e.locToIndex([a,o]);i[2]=e.values[l];const u=n.locToIndex(i);0<=u&&u<n.values.length&&(r.values[s]=n.values[u])}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WD=Zn((n,e)=>n>e?1:0),Oq=or(Hf,WD,null,"bool"),Wq={kernelName:Hf,backendName:"cpu",kernelFunc:Oq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VD=Zn((n,e)=>n>=e?1:0),Vq=or($d,VD,null,"bool"),$q={kernelName:$d,backendName:"cpu",kernelFunc:Vq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $D=Zn((n,e)=>n<e?1:0),Bq=or(Yf,$D,null,"bool"),Xq={kernelName:Yf,backendName:"cpu",kernelFunc:Bq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BD=Zn((n,e)=>n<=e?1:0),Uq=or(jf,BD,null,"bool"),Zq={kernelName:jf,backendName:"cpu",kernelFunc:Uq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XD(n,e,t){const r=(e-n)/(t-1),s=Er(t,"float32");s[0]=n;for(let i=1;i<s.length;i++)s[i]=s[i-1]+r;return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UD=Na(n=>Math.log(n)),Hq=Tl(Hd,UD),Kq={kernelName:Hd,backendName:"cpu",kernelFunc:Hq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZD(n,e,t,r){const s=mr(r,be(t));for(let i=0;i<s.length;++i){const a=i*e;let o=n[a];for(let l=0;l<e;++l){const u=n[a+l];(Number.isNaN(u)||u>o)&&(o=u)}s[i]=o}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HD=Zn((n,e)=>Math.max(n,e)),Yq=or(Yd,HD),jq={kernelName:Yd,backendName:"cpu",kernelFunc:Yq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KD=Zn((n,e)=>Math.min(n,e)),Qq=or(jd,KD),Jq={kernelName:jd,backendName:"cpu",kernelFunc:Qq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uC=Zn((n,e)=>n*e),qq=oC((n,e,t,r)=>({real:n*t-e*r,imag:n*r+e*t})),gv=or(Jd,uC,qq),eee={kernelName:Jd,backendName:"cpu",kernelFunc:gv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YD(n,e,t){const r=uo(-1,t);return uC([],e,r,n,t)}function tee(n){const{inputs:e,backend:t}=n,{x:r}=e;qe(r,"neg");const s=t.data.get(r.dataId).values,[i,a]=YD(s,r.shape,r.dtype);return t.makeTensorInfo(a,r.dtype,i)}const nee={kernelName:om,backendName:"cpu",kernelFunc:tee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jD=Zn((n,e)=>n!==e?1:0),ree=or(lm,jD,null,"bool"),see={kernelName:lm,backendName:"cpu",kernelFunc:ree};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cC(n,e,t,r,s){const i=e.length,a=be(e),o=ut(e),l=ut(s),u=mr(t,be(s));for(let d=0;d<a;++d){const h=Wu(d,i,o),f=new Array(h.length);for(let x=0;x<f.length;x++)f[x]=h[r[x]];const m=Vi(f,i,l);u[m]=n[d]}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bs(n){const{inputs:e,attrs:t,backend:r}=n,{x:s}=e,{perm:i}=t;qe(s,"transpose");const a=s.shape.length,o=new Array(a);for(let d=0;d<o.length;d++)o[d]=s.shape[i[d]];const l=r.data.get(s.dataId).values,u=cC(l,s.shape,s.dtype,i,o);return{dataId:r.write(u,o,s.dtype),shape:o,dtype:s.dtype}}const iee={kernelName:cu,backendName:"cpu",kernelFunc:bs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QD(n,e,t,r){const[s,i]=br(n,r),a=ps(e,"int32"),o=Er(be(s),a),l=be(i);for(let u=0;u<o.length;++u){const d=u*l;let h=1;for(let f=0;f<l;++f)h*=t[d+f];o[u]=h}return{outVals:o,outShape:s,outDtype:a}}function aee(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r;qe(s,"prod");const o=s.shape.length,l=At(i,s.shape),u=Rn(l,o);let d=l,h=s;const f=[];u!=null&&(h=bs({inputs:{x:s},backend:t,attrs:{perm:u}}),f.push(h),d=Xn(d.length,o));const m=t.data.get(h.dataId).values,{outVals:x,outShape:g,outDtype:y}=QD(h.shape,h.dtype,m,d);let v=g;return a&&(v=Bn(g,l)),f.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.makeTensorInfo(v,y,x)}const oee={kernelName:fm,backendName:"cpu",kernelFunc:aee};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lee(n,e,t){n.forEach((r,s)=>{if(r<0||r>=t){const i=Wu(s,e.length,ut(e)).join(",");throw new Error(`indices[${i}] = ${r} is not in [0, ${t})`)}})}function uee(n,e){for(let t=0;t<n.length;++t){const r=n[t],s=t===n.length-1?e:n[t+1].length;if(r.length===0)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let i=1;i<r.length;++i)if(r[i-1]>r[i])throw new Error("Ragged splits must be sorted in ascending order")}}function cee(n,e,t,r){const s=[];let i=0;const a=e.length-1+t.length,o=new Array(a).fill(null).map(()=>[0]);uee(t,r);let l=1;for(let u=0;u<e.length-1;++u){l*=e[u];const d=e[u+1];for(let h=1;h<l+1;++h)o[u].push(h*d)}for(let u=0;u<n.length;++u){let d=n[u],h=n[u]+1;for(let f=0;f<t.length;++f){const m=t[f],x=f+e.length-1;if(x>=0){const g=o[x],y=g[g.length-1]-m[d];for(let v=d;v<h;++v)o[x].push(m[v+1]+y)}d=m[d],h=m[h]}h!==d&&(s.push([d,h]),i+=h-d)}return{outSplits:o,valueSlices:s,numValues:i}}function dee(n){const e=[];for(let t=0;t<n.length;++t){const r=n[t].length,s=Dn("int32",r);e.push(s),n[t].forEach((i,a)=>s[a]=i)}return e}function D3(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let r=e;r<n.length;r++)t[e-1]*=n[r];return t}function hee(n,e,t,r,s,i){const a=D3(e,2)[1],o=D3(i,2)[1];let l=0;for(const u of t)for(let d=u[0];d<u[1];++d){for(let h=0;h<r;++h)s[l*o+h]=n[d*a+h];++l}}function pee(n,e,t,r,s){const i=e.slice();i[0]=s;const a=Dn(t,be(i)),o=n.length,l=o===0?0:o/e[0];return hee(n,e,r,l,a,i),[a,i]}function JD(n,e,t,r,s,i,a,o){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const l=e[0][0]-1;if(lee(i,a,l),r.length===0)throw new Error("params.rank must be nonzero");const u=r[0],{outSplits:d,valueSlices:h,numValues:f}=cee(i,a,n,u),m=dee(d),x=pee(t,r,s,h,f);return[m,x[0],x[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P3=2147483647;function qD(n,e,t,r,s,i,a){if(e.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const o=e.length===0,l=s.length===0,u=a.length===0,d=[];o||d.push(e[0]),l||d.push(s[0]),u||d.push(a[0]);for(let y=1;y<d.length;++y)if(d[y]!==d[y-1])throw new Error("starts, limits, and deltas must have the same shape");const h=d.length===0?1:d[0],f=Dn("int32",h+1);f[0]=0;for(let y=0;y<h;++y){const v=o?n[0]:n[y],w=l?r[0]:r[y],I=u?i[0]:i[y];if(I===0)throw new Error("Requires delta != 0");let T;if(I>0&&w<v||I<0&&w>v)T=0;else if(T=Math.ceil(Math.abs((w-v)/I)),T>P3)throw new Error(`Requires ((limit - start) / delta) <= ${P3}`);f[y+1]=f[y]+T}const m=f[h],x=Dn(t,m);let g=0;for(let y=0;y<h;++y){const v=f[y+1]-f[y];let w=o?n[0]:n[y];const I=u?i[0]:i[y];for(let T=0;T<v;++T)x[g++]=w,w+=I}return[f,x]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var mi=Gi;class P0{constructor(e,t,r,s,i,a,o,l,u,d){this.shape=e,this.shapeShape=t,this.values=r,this.valuesShape=s,this.valuesDType=i,this.defaultValue=a,this.defaultValueShape=o,this.rowPartitionValues=l,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=FA(d),this.raggedRank=GA(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===mi.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===mi.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case mi.VALUE_ROWIDS:return P0.getMaxWidthValueRowID(t);case mi.ROW_SPLITS:return P0.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${mi[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let r=0;for(let s=0;s<t-1;++s){const i=e[s+1]-e[s];i>r&&(r=i)}return r}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let r=0,s=e[0],i=0;for(let a=1;a<t;++a){const o=e[a];o!==s&&(s=o,i=Math.max(a-r,i),r=a)}return Math.max(t-r,i)}tensorShapeFromTensor(e,t,r=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return G3(e,r)}calculateOutputSize(e){const t=this.valuesShape,r=this.defaultValueShape;OA(r,t);const s=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=PA(this.raggedRank,s,t);i[0]<0&&(i[0]=e);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(e,t,r){const s=Math.min(e,r),i=[];let a=0;for(let o=0;o<s;++o,a+=t)i.push(a);for(let o=s;o<e;++o)i.push(-1);return P(i.length===e,()=>"Final length of result must be equal to firstDimension."),i}calculateOutputIndexRowSplit(e,t,r,s){const i=e.length,a=[];for(let o=0;o<i-1;++o){const l=e[o+1]-e[o];let u=Math.min(s,l),d=t[o];d===-1&&(u=0);for(let h=0;h<u;++h)a.push(d),d+=r;for(let h=0;h<l-u;++h)a.push(-1)}if(i>0&&a.length!==e[i-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,r,s){const i=e.length,a=[];if(i===0)return[];let o=0,l=e[0];if(l>=t.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${t.length}`);let u=t[l];a.push(u);for(let d=1;d<i;++d){const h=e[d];if(h===l)u>=0&&(++o,o<s?u+=r:u=-1);else{if(o=0,l=h,h>=t.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${t.length}`);u=t[h]}a.push(u)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,r,s){const i=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case mi.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(i,t,r,s);case mi.ROW_SPLITS:if(i.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${i.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(i,t,r,s);default:throw new Error(`Unsupported partition type: ${mi[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case mi.FIRST_DIM_SIZE:return e[0];case mi.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case mi.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${mi[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let a=r.length-2;a>=0;--a)r[a]=r[a+1]*t[a+1];const s=G3(t,!1),i=Dn(this.valuesDType,be(s));if(r[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,r[0],t[0]);for(let o=1;o<=this.raggedRank;++o)a=this.calculateOutputIndex(o-1,a,r[o],t[o]);this.setOutput(this.raggedRank,a,i,s)}return[s,i]}setOutput(e,t,r,s){if(r.length===0)return;const i=this.values,a=r;let o=s.slice();o=o.slice(e+1);const l=be(o),u=t.length;let d=this.defaultValue;if(d.length!==l&&d.length!==1){const x=this.defaultValueShape;le(()=>{const g=se(d,x);d=du(g,o).dataSync()})}let h=0,f=0,m=0;for(let x=0;x<=u;++x){let g=x<u?t[x]:-1;if(g===m){++m;continue}if(f<m){const y=i.subarray(h*l),v=a.subarray(f*l),w=(m-f)*l;F3(v,y,w)}if(x>=u){const y=r.length;g=Math.floor(y/l)}if(g>m)if(this.defaultValue.length===1)a.subarray(m*l,g*l).fill(this.defaultValue[0]),m=g;else for(;g>m;){const y=a.slice(m*l);F3(y,d,l),++m}g<0?(h=x+1,f=m):(h=x,f=m,m=f+1)}}}function F3(n,e,t){for(let r=0;r<t;r++)n[r]=e[r]}function G3(n,e){const t=[];for(let r of n){if(r<0){if(!e)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}t.push(r)}return t}function eP(n,e,t,r,s,i,a,o,l,u){return new P0(n,e,t,r,s,i,a,o,l,u).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tP(n,e,t,r){const s=n===e,i=n<e&&t<0,a=e<n&&t>1;if(s||i||a)return Er(0,r);const o=Math.abs(Math.ceil((e-n)/t)),l=Er(o,r);e<n&&t===1&&(t=-1),l[0]=n;for(let u=1;u<l.length;u++)l[u]=l[u-1]+t;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nP=Na(n=>1/Math.sqrt(n)),fee=Tl(sh,nP),mee={kernelName:sh,backendName:"cpu",kernelFunc:fee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function au(n,e,t,r,s,i,a,o,l,u){const d=[r/s,s],h=n.values,f=e.values;if(r===0)return Et(t,e.dtype);const m=l instanceof Jn?l:Et(d,e.dtype);typeof l=="string"||typeof l=="number"?m.values.fill(l):typeof l=="boolean"&&m.values.fill(+l);for(let x=0;x<i;x++){const g=[];let y=0;for(let v=0;v<a;v++){const w=h[x*a+v];g.push(w),y+=w*o[v]}if(y<0||y>=r/s)throw new Error(`Invalid indices: ${g} does not index into ${t}`);for(let v=0;v<s;v++)u?m.values[y*s+v]+=f[x*s+v]:m.values[y*s+v]=e.rank===0?f[0]:f[x*s+v]}return m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gee=Na(n=>1/(1+Math.exp(-n))),rP=en(uh,n=>1/(1+Math.exp(-n))),yee={kernelName:uh,backendName:"cpu",kernelFunc:rP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sP(n,e,t,r,s){const i=hI(r,e,t),a=be(t),o=ut(r);if(i){const h=pI(e,o);return s==="string"?n.slice(h,h+a):n.subarray(h,h+a)}const l=s==="string"?ao(n):n,u=Et(r,s,l),d=Et(t,s);for(let h=0;h<d.size;++h){const f=d.indexToLoc(h),m=f.map((x,g)=>x+e[g]);d.set(u.get(...m),...f)}return s==="string"?iz(d.values):d.values}function Eu(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:i,size:a}=r;qe(s,"slice");const[o,l]=Xx(s,i,a);cI(s,o,l);const u=t.data.get(s.dataId).values,d=sP(u,o,l,s.shape,s.dtype);return t.makeTensorInfo(l,s.dtype,d)}const bee={kernelName:vm,backendName:"cpu",kernelFunc:Eu};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iP(n,e,t,r,s,i,a){const o=e[0],l=i[0],u=new Array(l),d=new Array(o),h=e[1];if(l===0){if(o!==0)throw new Error(ZA(o));const y=Dn(t,0),v=Dn(s,0);return[y,[0,h],v,u,d]}let f=!0,m=0;const x=new Array(l).fill(0);for(let y=0;y<o;++y){const v=n[y*h];if(v<0)throw new Error(HA(y,v));if(v>=l)throw new Error(KA(y,v,l));++x[v],f=f&&v>=m,m=v}let g=!0;for(let y=0;y<l;++y){const v=x[y]===0;u[y]=v,g=g&&!v,x[y]=Math.max(x[y],1),y>0&&(x[y]+=x[y-1])}if(g&&f){const y=n,v=r;for(let w=0;w<o;++w)d[w]=w;return[y,[o,h],v,u,d]}else{const y=x[l-1],v=Dn(t,y*h),w=Dn(s,y),I=new Array(l).fill(0);for(let T=0;T<o;++T){const C=n[T*h],E=I[C],L=(C===0?0:x[C-1])+E;I[C]++;for(let M=0;M<h;++M)v[L*h+M]=n[T*h+M];w[L]=r[T],d[T]=L}for(let T=0;T<l;++T)if(I[T]===0){const C=T===0?0:x[T-1];v[C*h+0]=T;for(let E=1;E<h;++E)v[C*h+E]=0;w[C]=a}return[v,[y,h],w,u,d]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aP(n,e,t,r,s){const i=be(r),a=e[0],o=s.length,l=[];let u=1,d=-1;for(let g=0;g<o;++g){const y=s[g];if(y===-1){if(d!==-1)throw new Error(YA(d,g));d=g,l.push(1)}else{if(y<0)throw new Error(jA(g,y));u*=y,l.push(y)}}if(d!==-1){if(u<=0)throw new Error(QA());const g=Math.trunc(i/u);if(u*g!==i)throw new Error(JA(r,l));l[d]=g}if(be(l)!==i)throw new Error(qA(r,l));const h=r.length,f=[];if(h>0){f[h-1]=1;for(let g=h-2;g>=0;--g)f[g]=f[g+1]*r[g+1]}const m=[];if(o>0){m[o-1]=1;for(let g=o-2;g>=0;--g)m[g]=m[g+1]*l[g+1]}const x=Dn(t,a*o);for(let g=0;g<a;++g){let y=0;for(let v=0;v<h;++v)y+=n[g*h+v]*f[v];for(let v=0;v<o;++v)x[g*o+v]=Math.trunc(y/m[v]),y%=m[v]}return[x,[a,o],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dC(n,e,t,r,s,i=!1,a=0){const o=r.length,l=[e[0],n.length/e[0]],u=l[1],d=o>0?s[o-1]+1:0;if(d<0)throw new Error(KS());const h=e.slice();h[0]=d;const f=h.reduce((w,I)=>w*I,1),m=Dn(t,f);if(o===0)return d>0&&m.fill(a),[m,h];if(d<=0)throw new Error(KS());let x=0,g=1,y=0,v=s[x];for(;;){let w=0;if(g<o){if(w=s[g],v===w){++g;continue}if(v>=w)throw new Error(ez())}if(v<0||v>=d)throw new Error(tz(v,d));v>y&&m.fill(a,y*u,v*u);for(let I=x;I<g;++I){const T=r[I];if(T<0||T>=l[0])throw new Error(nz(I,r[I],l[0]));for(let C=0;C<u;C++)m[v*u+C]+=n[T*u+C]}if(i)for(let I=0;I<u;I++)m[v*u+I]/=g-x;if(x=g,++g,y=v+1,v=w,g>o)break}return y<d&&m.fill(a,y*u,d*u),[m,h]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xee=Na(n=>Math.sqrt(n)),vee=en(dh,n=>Math.sqrt(n)),wee={kernelName:dh,backendName:"cpu",kernelFunc:vee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oP=Zn((n,e)=>{const t=n-e;return t*t}),See=or(hh,oP),Tee={kernelName:hh,backendName:"cpu",kernelFunc:See};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lP=Na((n,e)=>{const{pattern:t,replaceGlobal:r,rewrite:s}=e;return n.replace(new RegExp(t,r?"g":""),s)}),Iee=Tl(km,lP),kee={kernelName:km,backendName:"cpu",kernelFunc:Iee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uP(n,e,t,r){const s=Et(n,e.dtype);for(let i=0;i<s.size;i++){const a=s.indexToLoc(i),o=new Array(a.length);for(let l=0;l<o.length;l++)o[l]=a[l]*t[l]+r[l];s.set(e.get(...o),...a)}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cee{constructor(e,t,r,s,i,a){this.separator=va(e),this.nGramWidths=t,this.leftPad=va(r),this.rightPad=va(s),this.padWidth=i,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const r=this.getPadWidth(t);return Math.max(0,e+2*r-t+1)}createNGrams(e,t,r,s,i,a){for(let o=0;o<i;++o){const l=this.getPadWidth(a),u=Math.max(0,l-o),d=Math.max(0,l-(i-(o+1))),h=a-(u+d),f=t+(u>0?0:o-l);let m=0;m+=u*this.leftPad.length;for(let w=0;w<h;++w)m+=e[f+w].length;m+=d*this.rightPad.length;const x=u+d+h-1;m+=x*this.separator.length,r[s+o]=new Uint8Array(m);const g=r[s+o];let y=0;const v=w=>w.forEach(I=>g[y++]=I);for(let w=0;w<u;++w)v(this.leftPad),v(this.separator);for(let w=0;w<h-1;++w)v(e[f+w]),v(this.separator);if(h>0){v(e[f+h-1]);for(let w=0;w<d;++w)v(this.separator),v(this.rightPad)}else{for(let w=0;w<d-1;++w)v(this.rightPad),v(this.separator);v(this.rightPad)}}}compute(e,t){const r=e.length,s=t.length;if(s>0){let l=t[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let u=1;u<s;++u){let d=t[u]>=l;if(d=d&&t[u]<=r,!d)throw new Error(`Invalid split value ${t[u]}, must be in [${l}, ${r}]`);l=t[u]}if(l!==r)throw new Error(`Last split value must be data size. Expected ${r}, got ${l}`)}const i=s-1,a=Dn("int32",s);if(r===0||s===0){const l=new Array(r);for(let u=0;u<=i;++u)a[u]=0;return[l,a]}a[0]=0;for(let l=1;l<=i;++l){const u=t[l]-t[l-1];let d=0;this.nGramWidths.forEach(h=>{d+=this.getNumNGrams(u,h)}),this.preserveShort&&u>0&&d===0&&(d=1),a[l]=a[l-1]+d}const o=new Array(a[i]);for(let l=0;l<i;++l){const u=t[l];let d=a[l];if(this.nGramWidths.forEach(h=>{const f=t[l+1]-t[l],m=this.getNumNGrams(f,h);this.createNGrams(e,u,o,d,m,h),d+=m}),this.preserveShort&&d===a[l]){const h=t[l+1]-t[l];if(h===0)continue;const f=h+2*this.padWidth;this.createNGrams(e,u,o,d,1,f)}}return[o,a]}}function cP(n,e,t,r,s,i,a,o){return new Cee(t,r,s,i,a,o).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _ee(n,e,t,r){if(!n.length)return;if(e.length===0){for(let i=0;i<n.length;++i)r.push(n.subarray(i,i+1));return}if(e.length===1){const i=e[0];let a=n.indexOf(i);for(;a!==-1;){const o=n.subarray(0,a);(!t||o.length!==0)&&r.push(o),n=n.subarray(a+1),a=n.indexOf(i)}(!t||n.length!==0)&&r.push(n);return}let s=0;for(let i=0;i<n.length+1;i++)if(i===n.length||e.indexOf(n[i])!==-1){const a=n.subarray(s,i);(!t||a.length!==0)&&r.push(a),s=i+1}}function dP(n,e,t){const r=n.length,s=[];let i=0,a=0;const o=new Array(r);for(let f=0;f<r;++f){const m=s.length;_ee(n[f],e,t,s);const x=s.length-m;o[f]=x,i+=x,a=Math.max(a,x)}const l=Dn("int32",i*2),u=new Array(i),d=[r,a];let h=0;for(let f=0;f<r;++f)for(let m=0;m<o[f];++m)l[h*2]=f,l[h*2+1]=m,u[h]=s[h],++h;return[l,u,d]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hP(n,e){const t=Dn("int32",n.length);for(let r=0;r<n.length;++r)t[r]=_L(n[r]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pP=Zn((n,e)=>n-e),Mee=oC((n,e,t,r)=>({real:n-t,imag:e-r})),hC=or(ph,pP,Mee),Nee={kernelName:ph,backendName:"cpu",kernelFunc:hC};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fP(n,e){const t=new Array(n.rank);for(let s=0;s<t.length;s++)t[s]=n.shape[s]*e[s];const r=Et(t,n.dtype);for(let s=0;s<r.values.length;++s){const i=r.indexToLoc(s),a=new Array(n.rank);for(let l=0;l<a.length;l++)a[l]=i[l]%n.shape[l];const o=n.locToIndex(a);r.values[s]=n.values[o]}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Up=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function mP(n,e,t=0,r=n.length-1){for(;r>t;){if(r-t>600){const o=r-t+1,l=e-t+1,u=Math.log(o),d=.5*Math.exp(2*u/3),h=.5*Math.sqrt(u*d*(o-d)/o)*Math.sign(l-o/2),f=Math.max(t,Math.floor(e-l*d/o+h)),m=Math.min(r,Math.floor(e+(o-l)*d/o+h));mP(n,e,f,m)}const s=n[e];let i=t,a=r;for(Ka(n,t,e),Up(n[r],s)>0&&Ka(n,t,r);i<a;){for(Ka(n,i,a),i++,a--;Up(n[i],s)<0;)i=i+1;for(;Up(n[a],s)>0;)a=a-1}Up(n[t],s)===0?Ka(n,t,a):(a=a+1,Ka(n,a,r)),a<=e&&(t=a+1),e<=a&&(r=a-1)}}function gP(n,e,t,r,s){const i=e[e.length-1],[a,o]=[n.length/i,i],l=mr(t,a*r),u=mr("int32",a*r);for(let h=0;h<a;h++){const f=h*o,m=n.subarray(f,f+o);let x=new Array(m.length);m.forEach((w,I)=>x[I]={value:w,index:I}),r<x.length&&(mP(x,r),x=x.slice(0,r)),s&&x.sort(Up);const g=h*r,y=l.subarray(g,g+r),v=u.subarray(g,g+r);for(let w=0;w<r;w++)y[w]=x[w].value,v[w]=x[w].index}const d=e.slice();return d[d.length-1]=r,[Et(d,t,l),Et(d,"int32",u)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yP(n,e,t,r){const s=At(e,t)[0],i=[1,t[0],1];for(let x=0;x<s;x++)i[0]*=t[x];i[1]=t[s];for(let x=s+1;x<t.length;x++)i[2]*=t[x];const a=new Map,o=new Int32Array(t[s]),l=new Jn(i,r,n),u=[],d=i[0]===1&&i[2]===1;for(let x=0;x<t[s];x++){let g;if(d)g=n[x].toString();else{const v=[];for(let w=0;w<i[0];w++)for(let I=0;I<i[2];I++)v.push(l.get(w,x,I));g=v.join(",")}const y=a.get(g);if(y!=null)o[x]=y;else{const v=a.size;a.set(g,v),o[x]=v,u.push(x)}}const h=i.slice();h[1]=a.size;const f=new Jn(h,r);u.forEach((x,g)=>{for(let y=0;y<i[0];y++)for(let v=0;v<i[2];v++)f.set(l.get(y,x,v),y,g,v)});const m=t.slice();return m[s]=h[1],{outputValues:f.values,outputShape:m,indices:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bP=Object.freeze(Object.defineProperty({__proto__:null,addImpl:CD,bincountImpl:lC,bincountReduceImpl:_D,bitwiseAndImpl:MD,castImpl:kD,ceilImpl:ND,concatImpl:ED,equalImpl:RD,expImpl:AD,expm1Impl:DD,floorDivImpl:FD,floorImpl:PD,gatherNdImpl:GD,gatherV2Impl:OD,greaterEqualImpl:VD,greaterImpl:WD,lessEqualImpl:BD,lessImpl:$D,linSpaceImpl:XD,logImpl:UD,maxImpl:ZD,maximumImpl:HD,minimumImpl:KD,multiplyImpl:uC,negImpl:YD,notEqualImpl:jD,prodImpl:QD,raggedGatherImpl:JD,raggedRangeImpl:qD,raggedTensorToTensorImpl:eP,rangeImpl:tP,rsqrtImpl:nP,scatterImpl:au,sigmoidImpl:gee,simpleAbsImpl:ID,sliceImpl:sP,sparseFillEmptyRowsImpl:iP,sparseReshapeImpl:aP,sparseSegmentReductionImpl:dC,sqrtImpl:xee,squaredDifferenceImpl:oP,staticRegexReplaceImpl:lP,stridedSliceImpl:uP,stringNGramsImpl:cP,stringSplitImpl:dP,stringToHashBucketFastImpl:hP,subImpl:pP,tileImpl:fP,topKImpl:gP,transposeImpl:cC,uniqueImpl:yP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */H2("cpu",()=>new lg,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xP=en(Pd,n=>n>=0?n:Math.exp(n)-1),Eee={kernelName:Pd,backendName:"cpu",kernelFunc:xP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{alpha:i}=r;qe([s],"leakyRelu");const a=be(s.shape),o=t.data.get(s.dataId).values,l=mr("float32",a);for(let u=0;u<o.length;u++)l[u]=o[u]<0?i*o[u]:o[u];return t.makeTensorInfo(s.shape,"float32",l)}const Ree={kernelName:Kf,backendName:"cpu",kernelFunc:vP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lee=Zn((n,e)=>n<0?e*n:n);function wP(n){const{inputs:e,backend:t}=n,{x:r,alpha:s}=e;qe([r,s],"prelu");const i=t.data.get(r.dataId).values,a=t.data.get(s.dataId).values,[o,l]=Lee(r.shape,s.shape,i,a,"float32");return t.makeTensorInfo(l,"float32",o)}const Aee={kernelName:pm,backendName:"cpu",kernelFunc:wP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SP=en(th,n=>Math.max(0,n)),zee={kernelName:th,backendName:"cpu",kernelFunc:SP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TP=en(nh,n=>Math.min(Math.max(0,n),6)),Dee={kernelName:nh,backendName:"cpu",kernelFunc:TP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F0(n,e,t,r,s){if(t==="linear")return _a({inputs:{x:e},backend:n});if(t==="relu")return SP({inputs:{x:e},backend:n});if(t==="elu")return xP({inputs:{x:e},backend:n});if(t==="relu6")return TP({inputs:{x:e},backend:n});if(t==="prelu")return wP({inputs:{x:e,alpha:r},backend:n});if(t==="leakyrelu")return vP({inputs:{x:e},backend:n,attrs:{alpha:s}});if(t==="sigmoid")return rP({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hn(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{shape:i}=r,a=be(s.shape),o=F2(i,a),l=be(o);P(a===l,()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(s.dataId);const u=t.data.get(s.dataId);if(u.complexTensorInfos!=null){const d=u.complexTensorInfos.real,h=u.complexTensorInfos.imag;d.shape=o,h.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const Pee={kernelName:mm,backendName:"cpu",kernelFunc:hn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IP(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:i}=e,{transposeA:a,transposeB:o}=r;qe([s,i],"matMul");const l=s.shape.length,u=i.shape.length,d=a?s.shape[l-2]:s.shape[l-1],h=o?i.shape[u-1]:i.shape[u-2],f=a?s.shape[l-1]:s.shape[l-2],m=o?i.shape[u-2]:i.shape[u-1],x=s.shape.slice(0,-2),g=i.shape.slice(0,-2),y=be(x),v=be(g),w=Ct(s.shape.slice(0,-2),i.shape.slice(0,-2)).concat([f,m]);P(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${a} and transposeB=${o} must match.`);const I=a?[y,d,f]:[y,f,d],T=o?[v,m,h]:[v,h,m],C=hn({inputs:{x:s},backend:t,attrs:{shape:I}}),E=hn({inputs:{x:i},backend:t,attrs:{shape:T}}),L=a?C.shape[1]:C.shape[2],M=a?C.shape[2]:C.shape[1],R=o?E.shape[1]:E.shape[2],z=Math.max(y,v),X=t.data.get(C.dataId).values,U=t.data.get(E.dataId).values,G=ut(C.shape),V=ut(E.shape),[Z,J,te]=a?[G[0],1,G[1]]:[G[0],G[1],1],[O,Q,A]=o?[1,V[1],V[0]]:[V[1],1,V[0]],K=M*R,$=Et([z,M,R],C.dtype),re=$.values,oe=t.blockSize;for(let Y=0;Y<z;Y++){const ge=Y%y,ye=Y%v;for(let ve=0;ve<M;ve+=oe){const Ce=Math.min(ve+oe,M);for(let De=0;De<R;De+=oe){const We=Math.min(De+oe,R);for(let Ze=0;Ze<L;Ze+=oe){const ot=Math.min(Ze+oe,L);for(let St=ve;St<Ce;St++)for(let Rt=De;Rt<We;Rt++){let _t=0;for(let Tt=Ze;Tt<ot;Tt++){const vt=X[ge*Z+St*J+Tt*te],Ot=U[Tt*O+Rt*Q+ye*A];_t+=vt*Ot}re[Y*K+(St*R+Rt)]+=_t}}}}}return t.disposeIntermediateTensorInfo(C),t.disposeIntermediateTensorInfo(E),t.makeTensorInfo(w,$.dtype,$.values)}const Fee={kernelName:Lf,backendName:"cpu",kernelFunc:IP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gee(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:i,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:h}=r;let f,m,x;const g=[];f=IP({inputs:{a:s,b:i},attrs:{transposeA:l,transposeB:u},backend:t}),a&&(m=bd({inputs:{a:f,b:a},backend:t}),g.push(f),f=m),d&&(x=F0(t,f,d,o,h),g.push(f),f=x);for(const y of g)t.disposeIntermediateTensorInfo(y);return f}const Oee={kernelName:rf,backendName:"cpu",kernelFunc:Gee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wee=en(Td,n=>Math.acos(n)),Vee={kernelName:Td,backendName:"cpu",kernelFunc:Wee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ee=en(Id,n=>Math.acosh(n)),Bee={kernelName:Id,backendName:"cpu",kernelFunc:$ee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xee(n){const{inputs:e,backend:t}=n,r=e;qe(e,"addN");const s=r.map(o=>t.data.get(o.dataId).values),i=Et(r[0].shape,r[0].dtype),a=i.values;for(let o=0;o<r.length;o++){const l=s[o];for(let u=0;u<a.length;u++)a[u]+=l[u]}return t.makeTensorInfo(i.shape,i.dtype,i.values)}const Uee={kernelName:_f,backendName:"cpu",kernelFunc:Xee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zee(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r;qe(s,"all");const o=At(i,s.shape);let l=o;const u=Rn(l,s.shape.length);let d=s;u!=null&&(d=bs({inputs:{x:s},backend:t,attrs:{perm:u}}),l=Xn(l.length,s.shape.length)),zr("all",l,d.shape.length);const[h,f]=br(d.shape,l),m=be(f),x=Er(be(h),d.dtype),g=t.data.get(d.dataId).values;for(let v=0;v<x.length;++v){const w=v*m;let I=g[w];for(let T=0;T<m;++T){const C=g[w+T];I=I&&C}x[v]=I}u!=null&&t.disposeIntermediateTensorInfo(d);const y=t.makeTensorInfo(h,d.dtype,x);if(a){const v=Bn(h,o),w=hn({inputs:{x:y},backend:t,attrs:{shape:v}});return t.disposeIntermediateTensorInfo(y),w}return y}const Hee={kernelName:nb,backendName:"cpu",kernelFunc:Zee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kee(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r;qe(s,"any");const o=At(i,s.shape);let l=o;const u=Rn(l,s.shape.length);let d=s;u!=null&&(d=bs({inputs:{x:s},backend:t,attrs:{perm:u}}),l=Xn(l.length,s.shape.length)),zr("any",l,d.shape.length);const[h,f]=br(d.shape,l),m=be(f),x=Er(be(h),d.dtype),g=t.data.get(d.dataId).values;for(let v=0;v<x.length;++v){const w=v*m;let I=g[w];for(let T=0;T<m;++T){const C=g[w+T];I=I||C}x[v]=I}u!=null&&t.disposeIntermediateTensorInfo(d);const y=t.makeTensorInfo(h,d.dtype,x);if(a){const v=Bn(h,o),w=hn({inputs:{x:y},backend:t,attrs:{shape:v}});return t.disposeIntermediateTensorInfo(y),w}return y}const Yee={kernelName:rb,backendName:"cpu",kernelFunc:Kee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jee(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i}=r;qe(s,"argMax");let a=At(i,s.shape);const o=Rn(a,s.shape.length);let l=s;const u=[];o!=null&&(l=bs({inputs:{x:s},backend:t,attrs:{perm:o}}),u.push(l),a=Xn(a.length,l.shape.length)),a=[a[0]],zr("argMax",a,l.shape.length);const[d,h]=br(l.shape,a),f=be(d),m=Er(f,"int32"),x=be(h),g=t.data.get(l.dataId).values;for(let y=0;y<m.length;++y){const v=y*x;let w=g[v],I=0;for(let T=0;T<x;++T){const C=g[v+T];C>w&&(w=C,I=T)}m[y]=I}return u.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.makeTensorInfo(d,"int32",m)}const Qee={kernelName:Mf,backendName:"cpu",kernelFunc:jee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jee(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i}=r;qe(s,"argMin");let a=At(i,s.shape);const o=Rn(a,s.shape.length);let l=s;const u=[];o!=null&&(l=bs({inputs:{x:s},backend:t,attrs:{perm:o}}),u.push(l),a=Xn(a.length,l.shape.length)),a=[a[0]],zr("argMin",a,l.shape.length);const[d,h]=br(l.shape,a),f=be(d),m=Er(f,"int32"),x=be(h),g=t.data.get(l.dataId).values;for(let y=0;y<m.length;++y){const v=y*x;let w=g[v],I=0;for(let T=0;T<x;++T){const C=g[v+T];C<w&&(w=C,I=T)}m[y]=I}return u.forEach(y=>t.disposeIntermediateTensorInfo(y)),t.makeTensorInfo(d,"int32",m)}const qee={kernelName:Nf,backendName:"cpu",kernelFunc:Jee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ete=en(kd,n=>Math.asin(n)),tte={kernelName:kd,backendName:"cpu",kernelFunc:ete};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nte=en(Cd,n=>Math.asinh(n)),rte={kernelName:Cd,backendName:"cpu",kernelFunc:nte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ste=en(_d,n=>Math.atan(n)),ite={kernelName:_d,backendName:"cpu",kernelFunc:ste};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ate=Zn((n,e)=>Math.atan2(n,e)),ote=or(Nd,ate),lte={kernelName:Nd,backendName:"cpu",kernelFunc:ote};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ute=en(Md,n=>Math.atanh(n)),cte={kernelName:Md,backendName:"cpu",kernelFunc:ute};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pC(n,e,t,r,s,i){const a=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,d=s.effectiveFilterHeight,h=s.effectiveFilterWidth,f=s.padInfo.top,m=s.padInfo.left,x=i==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=Et(s.outShape,t),y=g.values,v=s.outShape[1]*s.outShape[2]*s.outShape[3],w=s.outShape[2]*s.outShape[3],I=s.outShape[3];for(let T=0;T<s.batchSize;++T){const C=T*v,E=T*r[0];for(let L=0;L<s.inChannels;++L)for(let M=0;M<s.outHeight;++M){const R=M*a-f,z=Math.max(0,R),X=Math.min(s.inHeight,d+R),U=C+M*w;for(let G=0;G<s.outWidth;++G){const V=G*o-m,Z=Math.max(0,V),J=Math.min(s.inWidth,h+V);let te=x,O=0,Q=0;for(let K=z;K<X;K+=l){const $=E+K*r[1];for(let re=Z;re<J;re+=u){const oe=$+re*r[2],Y=n[oe+L];i==="max"&&Y>te?te=Y:i==="avg"&&(O+=Y,Q++)}if(isNaN(te))break}const A=U+G*I+L;y[A]=i==="avg"?O/Q:te}}}return g}function kP(n,e,t,r,s=!1,i=!1){const a=Et(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,d=r.dilationWidth,h=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.top,x=r.padInfo.left,g=Et(e,t,n);for(let y=0;y<r.batchSize;++y)for(let v=0;v<r.inChannels;++v)for(let w=0;w<r.outHeight;++w){const I=w*o-m;let T=I;for(;T<0;)T+=u;const C=Math.min(r.inHeight,h+I);for(let E=0;E<r.outWidth;++E){const L=E*l-x;let M=L;for(;M<0;)M+=d;const R=Math.min(r.inWidth,f+L);let z=Number.NEGATIVE_INFINITY,X=-1;for(let U=T;U<C;U+=u){const G=U-I;for(let V=M;V<R;V+=d){const Z=V-L,J=g.get(y,U,V,v);J>z&&(z=J,s?X=i?((y*r.inHeight+U)*r.inWidth+V)*r.inChannels+v:(U*r.inWidth+V)*r.inChannels+v:X=G*f+Z)}}a.set(X,y,w,E,v)}}return a}function CP(n,e,t,r,s,i){const a=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,d=s.dilationHeight,h=s.dilationWidth,f=s.effectiveFilterDepth,m=s.effectiveFilterHeight,x=s.effectiveFilterWidth,g=s.padInfo.front,y=s.padInfo.top,v=s.padInfo.left,w=i==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,I=Et(s.outShape,t),T=I.values,C=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],E=s.outShape[2]*s.outShape[3]*s.outShape[4],L=s.outShape[3]*s.outShape[4],M=s.outShape[4];for(let R=0;R<s.batchSize;++R){const z=R*C,X=R*r[0];for(let U=0;U<s.inChannels;++U)for(let G=0;G<s.outDepth;++G){const V=G*a-g;let Z=V;for(;Z<0;)Z+=u;const J=Math.min(s.inDepth,f+V),te=z+G*E;for(let O=0;O<s.outHeight;++O){const Q=O*o-y;let A=Q;for(;A<0;)A+=d;const K=Math.min(s.inHeight,m+Q),$=te+O*L;for(let re=0;re<s.outWidth;++re){const oe=re*l-v;let Y=oe;for(;Y<0;)Y+=h;const ge=Math.min(s.inWidth,x+oe),ye=$+re*M;let ve=w,Ce=0,De=0;for(let Ze=Z;Ze<J;Ze+=u){const ot=X+Ze*r[1];for(let St=A;St<K;St+=d){const Rt=ot+St*r[2];for(let _t=Y;_t<ge;_t+=h){const Tt=Rt+_t*r[3],vt=n[Tt+U];if(i==="max"&&vt>ve?ve=vt:i==="avg"&&(Ce+=vt,De++),isNaN(ve))break}if(isNaN(ve))break}if(isNaN(ve))break}const We=ye+U;T[We]=i==="avg"?Ce/Math.max(De,1):ve}}}}return I}function dte(n,e){const t=Et(e.outShape,"int32"),r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,a=e.dilationDepth,o=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,f=e.padInfo.front,m=e.padInfo.top,x=e.padInfo.left;for(let g=0;g<e.batchSize;++g)for(let y=0;y<e.inChannels;++y)for(let v=0;v<e.outDepth;++v){const w=v*r-f;let I=w;for(;I<0;)I+=a;const T=Math.min(e.inDepth,u+w);for(let C=0;C<e.outHeight;++C){const E=C*s-m;let L=E;for(;L<0;)L+=o;const M=Math.min(e.inHeight,d+E);for(let R=0;R<e.outWidth;++R){const z=R*i-x;let X=z;for(;X<0;)X+=l;const U=Math.min(e.inWidth,h+z);let G=Number.NEGATIVE_INFINITY,V=-1;for(let Z=I;Z<T;Z+=a){const J=Z-w;for(let te=L;te<M;te+=o){const O=te-E;for(let Q=X;Q<U;Q+=l){const A=Q-z,K=n.get(g,Z,te,Q,y);K>=G&&(G=K,V=J*d*h+O*d+A)}}}t.set(V,g,v,C,R,y)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hte(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;qe(s,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r,u=1;P(Ar(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const d=Ii(s.shape,i,a,u,o,l);let h;if(d.filterWidth===1&&d.filterHeight===1&&Ft(d.inShape,d.outShape))h=_a({inputs:{x:s},backend:t});else{const f=t.data.get(s.dataId).values,m=ut(s.shape),x=pC(f,s.shape,s.dtype,m,d,"avg");h=t.makeTensorInfo(d.outShape,s.dtype,x.values)}return h}const pte={kernelName:Ef,backendName:"cpu",kernelFunc:hte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fte(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r;qe(s,"avgPool3d");const d=co(s.shape,i,a,1,o,l,u),h=t.data.get(s.dataId).values,f=CP(h,s.shape,s.dtype,ut(s.shape),d,"avg");return t.makeTensorInfo(f.shape,"float32",f.values)}const mte={kernelName:Rf,backendName:"cpu",kernelFunc:fte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gte(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:i}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=r;qe([s,i],"avgPool3DGrad");const d=co(i.shape,a,o,1,l,u),h=d.strideDepth,f=d.strideHeight,m=d.strideWidth,x=d.filterDepth,g=d.filterHeight,y=d.filterWidth,v=d.dilationDepth,w=d.dilationHeight,I=d.dilationWidth,T=d.effectiveFilterDepth,C=d.effectiveFilterHeight,E=d.effectiveFilterWidth,L=T-1-d.padInfo.front,M=E-1-d.padInfo.left,R=C-1-d.padInfo.top,z=Et(i.shape,"float32"),X=1/(x*g*y),U=t.bufferSync(s);for(let G=0;G<d.batchSize;++G)for(let V=0;V<d.inChannels;++V)for(let Z=0;Z<d.inDepth;++Z)for(let J=0;J<d.inHeight;++J)for(let te=0;te<d.inWidth;++te){const O=Z-L,Q=J-R,A=te-M;let K=0;for(let $=0;$<T;$+=v){const re=(O+$)/h;if(!(re<0||re>=d.outDepth||Math.floor(re)!==re))for(let oe=0;oe<C;oe+=w){const Y=(Q+oe)/f;if(!(Y<0||Y>=d.outHeight||Math.floor(Y)!==Y))for(let ge=0;ge<E;ge+=I){const ye=(A+ge)/m;if(ye<0||ye>=d.outWidth||Math.floor(ye)!==ye)continue;const ve=U.get(G,re,Y,ye,V);K+=ve}}}z.set(K*X,G,Z,J,te,V)}return t.makeTensorInfo(z.shape,z.dtype,z.values)}const yte={kernelName:ib,backendName:"cpu",kernelFunc:gte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bte(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:i}=e,a=i;qe([s,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,d=Ii(a.shape,o,l,1,u),h=d.strideHeight,f=d.strideWidth,m=d.filterHeight,x=d.filterWidth,g=d.dilationHeight,y=d.dilationWidth,v=d.effectiveFilterHeight,w=d.effectiveFilterWidth,I=w-1-d.padInfo.left,T=v-1-d.padInfo.top,C=Et(a.shape,"float32"),E=1/(m*x),L=t.data.get(s.dataId).values,M=Et(s.shape,"float32",L);for(let R=0;R<d.batchSize;++R)for(let z=0;z<d.inChannels;++z)for(let X=0;X<d.inHeight;++X)for(let U=0;U<d.inWidth;++U){const G=X-T,V=U-I;let Z=0;for(let J=0;J<v;J+=g){const te=(G+J)/h;if(!(te<0||te>=d.outHeight||Math.floor(te)!==te))for(let O=0;O<w;O+=y){const Q=(V+O)/f;if(Q<0||Q>=d.outWidth||Math.floor(Q)!==Q)continue;const A=M.get(R,te,Q,z);Z+=A}}C.set(Z*E,R,X,U,z)}return t.makeTensorInfo(C.shape,C.dtype,C.values)}const xte={kernelName:sb,backendName:"cpu",kernelFunc:bte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vte(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,scale:i,offset:a,mean:o,variance:l}=e;P(o.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),qe([s,o,l,i,a],"batchNorm");let{varianceEpsilon:u}=r;u==null&&(u=.001);const d=t.data.get(s.dataId).values,h=t.data.get(o.dataId).values,f=t.data.get(l.dataId).values,m=i?t.data.get(i.dataId).values:new Float32Array([1]),x=a?t.data.get(a.dataId).values:new Float32Array([0]),g=new Float32Array(d.length),y=x.length,v=m.length,w=f.length,I=h.length;let T=0,C=0,E=0,L=0;for(let M=0;M<d.length;++M)g[M]=x[T++]+(d[M]-h[C++])*m[E++]/Math.sqrt(f[L++]+u),T>=y&&(T=0),C>=I&&(C=0),E>=v&&(E=0),L>=w&&(L=0);return t.makeTensorInfo(s.shape,s.dtype,g)}const wte={kernelName:Uf,backendName:"cpu",kernelFunc:vte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ste(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:i,crops:a}=r;qe([s],"batchToSpaceND");const o=i.reduce((v,w)=>v*w),l=jm(s.shape,i,o),u=Qm(l.length,i.length),d=Jm(s.shape,i,o),h=bI(a,i.length),f=xI(d,a,i.length),m=hn({inputs:{x:s},backend:t,attrs:{shape:l}}),x=bs({inputs:{x:m},backend:t,attrs:{perm:u}}),g=hn({inputs:{x},backend:t,attrs:{shape:d}}),y=Eu({inputs:{x:g},backend:t,attrs:{begin:h,size:f}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(g),y}const Tte={kernelName:Af,backendName:"cpu",kernelFunc:Ste};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ite(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:i}=e,{size:a}=r,o=t.data.get(s.dataId).values,l=t.data.get(i.dataId).values,u=lC(o,l,i.dtype,i.shape,a);return t.makeTensorInfo([a],i.dtype,u)}const kte={kernelName:ab,backendName:"cpu",kernelFunc:Ite};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cte(n){const{inputs:e,backend:t}=n,{s0:r,s1:s}=e,i=t.data.get(r.dataId).values,a=t.data.get(s.dataId).values,o=Ct(Array.from(i),Array.from(a));return t.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const _te={kernelName:ob,backendName:"cpu",kernelFunc:Cte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mte=en(Ld,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),Nte={kernelName:Ld,backendName:"cpu",kernelFunc:Mte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ete=n=>{const{x:e}=n.inputs,t=n.backend,r=new Float32Array(be(e.shape)),s=t.data.get(e.dataId),i=s.complexTensorInfos.real,a=s.complexTensorInfos.imag,o=t.data.get(i.dataId).values,l=t.data.get(a.dataId).values;for(let u=0;u<o.length;u++){const d=o[u],h=l[u];r[u]=Math.hypot(d,h)}return t.makeOutput(r,e.shape,"float32")},Rte={kernelName:Df,backendName:"cpu",kernelFunc:Ete};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xd(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.data.get(r.dataId).complexTensorInfos.imag,i=t.data.get(s.dataId).values;return t.makeTensorInfo(s.shape,s.dtype,i)}const Lte={kernelName:_b,backendName:"cpu",kernelFunc:xd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vd(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r,i=At(s,e[0].shape)[0],a=e.map(g=>g.shape);mI(a,i);let o=Sa(e.map(g=>g.shape),i);if(be(o)===0)return t.makeTensorInfo(o,e[0].dtype,[]);const l=e.filter(g=>be(g.shape)>0);if(l.length===1)return _a({inputs:{x:l[0]},backend:t});if(l[0].dtype==="complex64"){const g=l.map(T=>Nu({inputs:{input:T},backend:t})),y=l.map(T=>xd({inputs:{input:T},backend:t})),v=vd({inputs:g,backend:t,attrs:{axis:i}}),w=vd({inputs:y,backend:t,attrs:{axis:i}}),I=Rs({inputs:{real:v,imag:w},backend:t});return g.forEach(T=>t.disposeIntermediateTensorInfo(T)),y.forEach(T=>t.disposeIntermediateTensorInfo(T)),t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(w),I}const u=l.map(g=>{const y=[-1,be(g.shape.slice(i))];return hn({inputs:{x:g},backend:t,attrs:{shape:y}})}),d=u.map(g=>({vals:t.data.get(g.dataId).values,shape:g.shape}));o=Sa(u.map(g=>g.shape),1);const h=u[0].shape[0]===1,f=ED(d,o,e[0].dtype,h),m=Sa(l.map(g=>g.shape),i),x=t.makeTensorInfo(m,e[0].dtype,f);return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),x}const Ate={kernelName:Pf,backendName:"cpu",kernelFunc:vd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _P(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=r;qe([s,i],"conv2d");const h=ho(l),f=yr(s.shape,i.shape,a,u,o,d,!1,h),m=f.filterHeight,x=f.filterWidth,g=f.dilationHeight,y=f.dilationWidth,v=f.padInfo.left,w=f.padInfo.top,I=f.dataFormat==="channelsLast",T=new Jn(f.outShape,s.dtype),C=ut(s.shape),E=ut(i.shape),L=C[0],M=I?C[1]:C[2],R=I?C[2]:1,z=I?1:C[1],X=T.strides[0],U=I?T.strides[1]:T.strides[2],G=I?T.strides[2]:1,V=I?1:T.strides[1],Z=t.data.get(s.dataId).values,J=t.data.get(i.dataId).values,te=T.values;for(let O=0;O<f.batchSize;++O){const Q=O*L,A=O*X;for(let K=0;K<f.outHeight;++K){const $=A+K*U,re=K*f.strideHeight-w;for(let oe=0;oe<m;++oe){const Y=re+oe*g;if(Y<0||Y>=f.inHeight)continue;const ge=oe*E[0],ye=Q+Y*M;for(let ve=0;ve<f.outWidth;++ve){const Ce=$+ve*G,De=ve*f.strideWidth-v;for(let We=0;We<x;++We){const Ze=De+We*y;if(Ze<0||Ze>=f.inWidth)continue;const ot=ge+We*E[1],St=ye+Ze*R;let Rt=ot;for(let _t=0;_t<f.inChannels;++_t){const Tt=Z[St+_t*z];for(let vt=0;vt<f.outChannels;++vt)te[Ce+vt*V]+=Tt*J[Rt+vt];Rt+=f.outChannels}}}}}}return t.makeTensorInfo(T.shape,T.dtype,te)}const zte={kernelName:Ff,backendName:"cpu",kernelFunc:_P};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dte(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:i}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=r;qe([s,i],"conv2dBackpropFilter");const h=ho(l),f=yr(s.shape,d,a,1,o,u,!1,h),{strideHeight:m,strideWidth:x,filterHeight:g,filterWidth:y}=f,v=f.dataFormat==="channelsLast",w=new Jn(f.filterShape,"float32"),I=f.padInfo.left,T=f.padInfo.top,C=t.data.get(s.dataId).values,E=t.data.get(i.dataId).values,L=new Jn(s.shape,s.dtype,C),M=new Jn(i.shape,i.dtype,E);for(let R=0;R<g;++R){const z=Math.max(0,Math.ceil((T-R)/m)),X=Math.min(f.outHeight,(f.inHeight+T-R)/m);for(let U=0;U<y;++U){const G=Math.max(0,Math.ceil((I-U)/x)),V=Math.min(f.outWidth,(f.inWidth+I-U)/x);for(let Z=0;Z<f.inChannels;++Z)for(let J=0;J<f.outChannels;++J){let te=0;for(let O=0;O<f.batchSize;++O)for(let Q=z;Q<X;++Q){const A=R+Q*m-T;for(let K=G;K<V;++K){const $=U+K*x-I;v?te+=L.get(O,A,$,Z)*M.get(O,Q,K,J):te+=L.get(O,Z,A,$)*M.get(O,J,Q,K)}}w.set(te,R,U,Z,J)}}}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const Pte={kernelName:ub,backendName:"cpu",kernelFunc:Dte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fte(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:i}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=r;qe([s,i],"conv2dBackpropInput");const h=ut(i.shape),f=ut(s.shape);let m=ho(u);const x=yr(a,i.shape,o,1,l,d,!1,m),g=new Jn(x.inShape,"float32"),y=g.values,v=t.data.get(s.dataId).values,w=t.data.get(i.dataId).values,[I,T,C]=h,{batchSize:E,filterHeight:L,filterWidth:M,inChannels:R,inHeight:z,inWidth:X,outChannels:U,outHeight:G,outWidth:V,strideHeight:Z,strideWidth:J}=x;m=x.dataFormat;const te=L-1-x.padInfo.top,O=M-1-x.padInfo.left,Q=m==="channelsLast",A=g.strides[0],K=Q?g.strides[1]:g.strides[2],$=Q?g.strides[2]:1,re=Q?1:g.strides[1],oe=f[0],Y=Q?f[1]:f[2],ge=Q?f[2]:1,ye=Q?1:f[1];for(let ve=0;ve<E;++ve)for(let Ce=0;Ce<R;++Ce)for(let De=0;De<z;++De){const We=De-te,Ze=Math.max(0,Math.ceil(We/Z)),ot=Math.min(G,(L+We)/Z);for(let St=0;St<X;++St){const Rt=St-O,_t=Math.max(0,Math.ceil(Rt/J)),Tt=Math.min(V,(M+Rt)/J);let vt=0;for(let jt=Ze;jt<ot;++jt){const sn=jt*Z-We;for(let H=_t;H<Tt;++H){const W=H*J-Rt,Te=oe*ve+Y*jt+ge*H,Pe=I*(L-1-sn)+T*(M-1-W)+C*Ce;for(let Fe=0;Fe<U;++Fe){const $e=v[Te+ye*Fe],rt=w[Pe+Fe];vt+=$e*rt}}}const Ot=A*ve+K*De+$*St+re*Ce;y[Ot]=vt}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const Gte={kernelName:Gf,backendName:"cpu",kernelFunc:Fte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ote(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l}=r;qe([s,i],"conv3d");const u=yl(s.shape,i.shape,a,l,o),{filterDepth:d,filterHeight:h,filterWidth:f,dilationDepth:m,dilationHeight:x,dilationWidth:g,padInfo:y}=u,v=y.front,w=y.left,I=y.top,T=new Jn(u.outShape,s.dtype),C=t.data.get(s.dataId).values,E=t.data.get(i.dataId).values,L=T.values,M=ut(s.shape),R=ut(i.shape);for(let z=0;z<u.batchSize;++z){const X=z*M[0],U=z*T.strides[0];for(let G=0;G<u.outDepth;++G){const V=U+G*T.strides[1],Z=G*u.strideDepth-v;for(let J=0;J<d;++J){const te=Z+J*m;if(te<0||te>=u.inDepth)continue;const O=J*R[0],Q=X+te*M[1];for(let A=0;A<u.outHeight;++A){const K=V+A*T.strides[2],$=A*u.strideHeight-I;for(let re=0;re<h;++re){const oe=$+re*x;if(oe<0||oe>=u.inHeight)continue;const Y=O+re*R[1],ge=Q+oe*M[2];for(let ye=0;ye<u.outWidth;++ye){const ve=K+ye*u.outChannels,Ce=ye*u.strideWidth-w;for(let De=0;De<f;++De){const We=Ce+De*g;if(We<0||We>=u.inWidth)continue;const Ze=Y+De*R[2],ot=ge+We*u.inChannels;let St=Ze;for(let Rt=0;Rt<u.inChannels;++Rt){const _t=C[ot+Rt];for(let Tt=0;Tt<u.outChannels;++Tt)L[ve+Tt]+=_t*E[St+Tt];St+=u.outChannels}}}}}}}}return t.makeTensorInfo(T.shape,T.dtype,T.values)}const Wte={kernelName:Of,backendName:"cpu",kernelFunc:Ote};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vte(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:i}=e,{strides:a,pad:o,filterShape:l}=r;qe([s,i],"conv3dBackpropFilterV2");const u=ut(s.shape),d=ut(i.shape),h=yl(s.shape,l,a,1,o),f=h.strideDepth,m=h.strideHeight,x=h.strideWidth,g=h.filterDepth,y=h.filterHeight,v=h.filterWidth,w=new Jn(h.filterShape,"float32"),I=w.values,[T,C,E,L]=w.strides,M=t.data.get(i.dataId).values,[R,z,X,U]=d,G=t.data.get(s.dataId).values,[V,Z,J,te]=u,O=h.padInfo.front,Q=h.padInfo.left,A=h.padInfo.top;for(let K=0;K<g;++K){const $=Math.max(0,Math.ceil((O-K)/f)),re=Math.min(h.outDepth,(h.inDepth+O-K)/f),oe=K*T;for(let Y=0;Y<y;++Y){const ge=Math.max(0,Math.ceil((A-Y)/m)),ye=Math.min(h.outHeight,(h.inHeight+A-Y)/m),ve=Y*C+oe;for(let Ce=0;Ce<v;++Ce){const De=Math.max(0,Math.ceil((Q-Ce)/x)),We=Math.min(h.outWidth,(h.inWidth+Q-Ce)/x),Ze=Ce*E+ve;for(let ot=0;ot<h.inChannels;++ot){const St=ot*L+Ze;for(let Rt=0;Rt<h.outChannels;++Rt){let _t=0;for(let Tt=0;Tt<h.batchSize;++Tt){const vt=Tt*V,Ot=Tt*R;for(let jt=$;jt<re;++jt){const sn=(K+jt*f-O)*Z+vt,H=jt*z+Ot;for(let W=ge;W<ye;++W){const Te=(Y+W*m-A)*J+sn,Pe=W*X+H;for(let Fe=De;Fe<We;++Fe){const $e=(Ce+Fe*x-Q)*te+Te,rt=Fe*U+Pe;_t+=G[$e+ot]*M[rt+Rt]}}}}I[St+Rt]=_t}}}}}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const $te={kernelName:cb,backendName:"cpu",kernelFunc:Vte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bte(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:i}=e,{pad:a,strides:o,inputShape:l}=r;qe([s],"conv3dBackpropInputV2");const u=ut(s.shape),d=ut(i.shape),h=yl(l,i.shape,o,1,a),f=new Jn(h.inShape,"float32"),m=f.values,[x,g,y,v]=f.strides,w=t.data.get(s.dataId).values,[I,T,C,E]=u,L=t.data.get(i.dataId).values,[M,R,z,X]=d,{batchSize:U,filterDepth:G,filterHeight:V,filterWidth:Z,inChannels:J,inDepth:te,inHeight:O,inWidth:Q,outChannels:A,outDepth:K,outHeight:$,outWidth:re,strideDepth:oe,strideHeight:Y,strideWidth:ge}=h,ye=G-1-h.padInfo.front,ve=V-1-h.padInfo.top,Ce=Z-1-h.padInfo.left;for(let De=0;De<U;++De)for(let We=0;We<J;++We)for(let Ze=0;Ze<te;++Ze){const ot=Ze-ye,St=Math.max(0,Math.ceil(ot/oe)),Rt=Math.min(K,(G+ot)/oe);for(let _t=0;_t<O;++_t){const Tt=_t-ve,vt=Math.max(0,Math.ceil(Tt/Y)),Ot=Math.min($,(V+Tt)/Y);for(let jt=0;jt<Q;++jt){const sn=jt-Ce,H=Math.max(0,Math.ceil(sn/ge)),W=Math.min(re,(Z+sn)/ge);let Te=0;for(let Pe=St;Pe<Rt;++Pe){const Fe=Pe*oe-ot;for(let $e=vt;$e<Ot;++$e){const rt=$e*Y-Tt;for(let Ke=H;Ke<W;++Ke){const Me=Ke*ge-sn,pt=I*De+T*Pe+C*$e+E*Ke,st=M*(G-1-Fe)+R*(V-1-rt)+z*(Z-1-Me)+X*We;for(let ft=0;ft<A;++ft){const mt=w[pt+ft],dt=L[st+ft];Te+=mt*dt}}}}m[x*De+g*Ze+y*_t+v*jt+We]=Te}}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}const Xte={kernelName:db,backendName:"cpu",kernelFunc:Bte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ute=en(Ad,n=>Math.cos(n)),Zte={kernelName:Ad,backendName:"cpu",kernelFunc:Ute};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hte=en(zd,n=>Math.cosh(n)),Kte={kernelName:zd,backendName:"cpu",kernelFunc:Hte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yte(n){const{inputs:e,backend:t,attrs:r}=n,{image:s,boxes:i,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:u}=r,[d,h,f,m]=s.shape,x=i.shape[0],[g,y]=o,v=Et([x,g,y,m],"float32"),w=t.data.get(i.dataId).values,I=t.data.get(a.dataId).values,T=t.data.get(s.dataId).values,C=ut(s.shape),E=ut(v.shape);for(let L=0;L<x;L++){const M=L*4,R=w[M],z=w[M+1],X=w[M+2],U=w[M+3],G=I[L];if(G>=d)continue;const V=g>1?(X-R)*(h-1)/(g-1):0,Z=y>1?(U-z)*(f-1)/(y-1):0;for(let J=0;J<g;J++){const te=g>1?R*(h-1)+J*V:.5*(R+X)*(h-1);if(te<0||te>h-1){for(let O=0;O<y;O++)for(let Q=0;Q<m;Q++){const A=Q+O*E[2]+J*E[1]+L*E[0];v.values[A]=u}continue}if(l==="bilinear"){const O=Math.floor(te),Q=Math.ceil(te),A=te-O;for(let K=0;K<y;K++){const $=y>1?z*(f-1)+K*Z:.5*(z+U)*(f-1);if($<0||$>f-1){for(let ge=0;ge<m;ge++){const ye=ge+K*E[2]+J*E[1]+L*E[0];v.values[ye]=u}continue}const re=Math.floor($),oe=Math.ceil($),Y=$-re;for(let ge=0;ge<m;ge++){let ye=ge+re*C[2]+O*C[1]+G*C[0];const ve=T[ye];ye=ge+oe*C[2]+O*C[1]+G*C[0];const Ce=T[ye];ye=ge+re*C[2]+Q*C[1]+G*C[0];const De=T[ye];ye=ge+oe*C[2]+Q*C[1]+G*C[0];const We=T[ye],Ze=ve+(Ce-ve)*Y,ot=De+(We-De)*Y;ye=ge+K*E[2]+J*E[1]+L*E[0],v.values[ye]=Ze+(ot-Ze)*A}}}else for(let O=0;O<y;++O){const Q=y>1?z*(f-1)+O*Z:.5*(z+U)*(f-1);if(Q<0||Q>f-1){for(let $=0;$<m;$++){const re=$+O*E[2]+J*E[1]+L*E[0];v.values[re]=u}continue}const A=Math.round(Q),K=Math.round(te);for(let $=0;$<m;$++){const re=$+A*C[2]+K*C[1]+G*C[0],oe=$+O*E[2]+J*E[1]+L*E[0];v.values[oe]=T[re]}}}}return t.makeTensorInfo(v.shape,v.dtype,v.values)}const jte={kernelName:pb,backendName:"cpu",kernelFunc:Yte};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qte(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,exclusive:a,reverse:o}=r;qe(s,"cumprod");const l=Rn([i],s.shape.length);let u=s;l!=null&&(u=bs({inputs:{x:s},backend:t,attrs:{perm:l}}));const d=Xn(1,s.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);const h=ps(u.dtype,"int32"),f=tb(be(u.shape),h),m=t.data.get(u.dataId).values,x=u.shape[u.shape.length-1],g=o?(v,w)=>v+x-w-1:(v,w)=>v+w;for(let v=0;v<m.length;v+=x)for(let w=0;w<x;w++){const I=g(v,w);if(w===0)f[I]=a?1:m[I];else{const T=g(v,w-1);f[I]=a?m[T]*f[T]:m[I]*f[T]}}const y=t.makeTensorInfo(u.shape,h,f);if(l!=null){const v=bl(l),w=bs({inputs:{x:y},backend:t,attrs:{perm:v}});return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(u),w}return y}const Jte={kernelName:hb,backendName:"cpu",kernelFunc:Qte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qte(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,exclusive:a,reverse:o}=r;qe(s,"cumsum");const l=Rn([i],s.shape.length);let u=s;l!=null&&(u=bs({inputs:{x:s},backend:t,attrs:{perm:l}}));const d=Xn(1,s.shape.length)[0];if(d!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${d}`);const h=ps(u.dtype,"int32"),f=Er(be(u.shape),h),m=t.data.get(u.dataId).values,x=u.shape[u.shape.length-1],g=o?(v,w)=>v+x-w-1:(v,w)=>v+w;for(let v=0;v<m.length;v+=x)for(let w=0;w<x;w++){const I=g(v,w);if(w===0)f[I]=a?0:m[I];else{const T=g(v,w-1);f[I]=a?m[T]+f[T]:m[I]+f[T]}}const y=t.makeTensorInfo(u.shape,h,f);if(l!=null){const v=bl(l),w=bs({inputs:{x:y},backend:t,attrs:{perm:v}});return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(u),w}return y}const ene={kernelName:Wf,backendName:"cpu",kernelFunc:qte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tne(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:i}=e,{size:a,binaryOutput:o}=r;if(s.shape.length===1){const l=t.data.get(s.dataId).values,u=t.data.get(i.dataId).values,d=lC(l,u,i.dtype,i.shape,a);return t.makeTensorInfo([a],i.dtype,d)}else if(s.shape.length===2){const l=t.bufferSync(s),u=t.bufferSync(i),d=_D(l,u,a,o);return t.makeTensorInfo(d.shape,i.dtype,d.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const nne={kernelName:fb,backendName:"cpu",kernelFunc:tne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rne(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockSize:i,dataFormat:a}=r;P(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);const o=s.shape[0],l=s.shape[1],u=s.shape[2],d=s.shape[3],h=l*i,f=u*i,m=d/(i*i),x=t.data.get(s.dataId).values,g=new Float32Array(o*h*f*m);let y=0;for(let v=0;v<o;++v)for(let w=0;w<h;++w){const I=Math.floor(w/i),T=w%i;for(let C=0;C<f;++C){const E=Math.floor(C/i),L=C%i,M=(T*i+L)*m;for(let R=0;R<m;++R){const z=R+M+d*(E+u*(I+l*v));g[y++]=x[z]}}}return t.makeTensorInfo([o,h,f,m],s.dtype,g)}const sne={kernelName:mb,backendName:"cpu",kernelFunc:rne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;qe([s,i],"depthwiseConv2DNative");const d=ut(s.shape),h=ut(i.shape);let f=l;f==null&&(f=[1,1]),P(Ar(a,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${f}'`);const m=yr(s.shape,i.shape,a,f,o,u,!0),{filterHeight:x,filterWidth:g,dilationHeight:y,dilationWidth:v,padInfo:w}=m,I=w.left,T=w.top,C=m.outChannels/m.inChannels,E=new Jn(m.outShape,s.dtype),L=t.data.get(s.dataId).values,M=t.data.get(i.dataId).values,R=E.values;for(let z=0;z<m.batchSize;++z){const X=z*d[0],U=z*E.strides[0];for(let G=0;G<m.outHeight;++G){const V=U+G*E.strides[1],Z=G*m.strideHeight-T;for(let J=0;J<x;++J){const te=Z+J*y;if(te<0||te>=m.inHeight)continue;const O=J*h[0],Q=X+te*d[1];for(let A=0;A<m.outWidth;++A){const K=V+A*E.strides[2],$=A*m.strideWidth-I;for(let re=0;re<g;++re){const oe=$+re*v;if(oe<0||oe>=m.inWidth)continue;const Y=O+re*h[1],ge=Q+oe*m.inChannels;let ye=K,ve=Y;for(let Ce=0;Ce<m.inChannels;++Ce){const De=L[ge+Ce];for(let We=0;We<C;++We)R[ye+We]+=De*M[ve+We];ye+=C,ve+=C}}}}}}return t.makeTensorInfo(E.shape,E.dtype,E.values)}const ine={kernelName:Vf,backendName:"cpu",kernelFunc:MP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ane(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=r;qe([s,i],"depthwiseConv2dNativeBackpropFilter");const h=yr(s.shape,d,a,o,l,u,!0),{strideHeight:f,strideWidth:m,filterHeight:x,filterWidth:g}=h,y=new Jn(h.filterShape,"float32"),v=h.padInfo.left,w=h.padInfo.top,I=h.outChannels/h.inChannels,T=t.data.get(s.dataId).values,C=new Jn(s.shape,s.dtype,T),E=t.data.get(i.dataId).values,L=new Jn(i.shape,i.dtype,E);for(let M=0;M<x;++M){const R=Math.max(0,Math.ceil((w-M)/f)),z=Math.min(h.outHeight,(h.inHeight+w-M)/f);for(let X=0;X<g;++X){const U=Math.max(0,Math.ceil((v-X)/m)),G=Math.min(h.outWidth,(h.inWidth+v-X)/m);for(let V=0;V<h.outChannels;++V){const Z=Math.trunc(V/I),J=V%I;let te=0;for(let O=0;O<h.batchSize;++O)for(let Q=R;Q<z;++Q){const A=M+Q*f-w;for(let K=U;K<G;++K){const $=X+K*m-v;te+=C.get(O,A,$,Z)*L.get(O,Q,K,V)}}y.set(te,M,X,Z,J)}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}const one={kernelName:gb,backendName:"cpu",kernelFunc:ane};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lne(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=r;qe([s,i],"depthwiseConv2DNativeBackpropInput");const h=ut(s.shape),f=ut(i.shape),m=yr(d,i.shape,a,o,l,u,!0),x=new Jn(m.inShape,"float32"),g=x.values,[y,v,w]=x.strides,I=t.data.get(s.dataId).values,[T,C,E]=h,L=t.data.get(i.dataId).values,[M,R,z]=f,{batchSize:X,filterHeight:U,filterWidth:G,inChannels:V,inHeight:Z,inWidth:J,outChannels:te,outHeight:O,outWidth:Q,strideHeight:A,strideWidth:K}=m,$=U-1-m.padInfo.top,re=G-1-m.padInfo.left,oe=te/V;for(let Y=0;Y<X;++Y)for(let ge=0;ge<V;++ge)for(let ye=0;ye<Z;++ye){const ve=ye-$,Ce=Math.max(0,Math.ceil(ve/A)),De=Math.min(O,(U+ve)/A);for(let We=0;We<J;++We){const Ze=We-re,ot=Math.max(0,Math.ceil(Ze/K)),St=Math.min(Q,(G+Ze)/K);let Rt=0;for(let _t=Ce;_t<De;++_t){const Tt=_t*A-ve;for(let vt=ot;vt<St;++vt){const Ot=vt*K-Ze,jt=T*Y+C*_t+E*vt,sn=M*(U-1-Tt)+R*(G-1-Ot)+z*ge;for(let H=0;H<oe;++H){const W=ge*oe+H,Te=I[jt+W],Pe=L[sn+H];Rt+=Te*Pe}}}g[y*Y+v*ye+w*We+ge]=Rt}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const une={kernelName:yb,backendName:"cpu",kernelFunc:lne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cne(n){const{inputs:e,backend:t}=n,{x:r}=e,s=be(r.shape),i=t.data.get(r.dataId).values,a=Et([s,s],r.dtype),o=a.values;for(let u=0;u<i.length;u++)o[u*s+u]=i[u];const l=[...r.shape,...r.shape];return t.makeTensorInfo(l,a.dtype,a.values)}const dne={kernelName:bb,backendName:"cpu",kernelFunc:cne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hne={kernelName:$f,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:r,filter:s}=n,{strides:i,pad:a,dilations:o}=t,l=e,u=l.data.get(r.dataId).values,d=r.shape.length,h=l.data.get(s.dataId).values,f=s.shape.length,{batchSize:m,inHeight:x,inWidth:g,inChannels:y,outHeight:v,outWidth:w,padInfo:I,strideHeight:T,strideWidth:C,filterHeight:E,filterWidth:L,dilationHeight:M,dilationWidth:R,outShape:z}=Rm(r.shape,s.shape,i,a,"NHWC",o),X=be(z),U=z.length,G=Dn(r.dtype,X);for(let V=0;V<m;++V)for(let Z=0;Z<v;++Z){const J=Z*T-I.top;for(let te=0;te<w;++te){const O=te*C-I.left;for(let Q=0;Q<y;++Q){let A=Number.MIN_SAFE_INTEGER;for(let $=0;$<E;++$){const re=J+$*M;if(re>=0&&re<x)for(let oe=0;oe<L;++oe){const Y=O+oe*R;if(Y>=0&&Y<g){const ge=Vi([V,re,Y,Q],d,ut(r.shape)),ye=Vi([$,oe,Q],f,ut(s.shape)),ve=u[ge]+h[ye];ve>A&&(A=ve)}}}const K=Vi([V,Z,te,Q],U,ut(z));G[K]=A}}}return{dataId:l.write(ml(G,r.dtype),z,r.dtype),shape:z,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pne={kernelName:b0,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:r,filter:s,dy:i}=n,{strides:a,pad:o,dilations:l}=t,u=e,d=ti(r.shape,u.data.get(r.dataId).values),h=ti(s.shape,u.data.get(s.dataId).values),{batchSize:f,inHeight:m,inWidth:x,inChannels:g,outHeight:y,outWidth:v,padInfo:w,strideHeight:I,strideWidth:T,filterHeight:C,filterWidth:E,dilationHeight:L,dilationWidth:M,outShape:R}=Rm(r.shape,s.shape,a,o,"NHWC",l);P(i.rank===R.length,()=>`Error in ${b0}, dy must have the same rank as output ${R.length}, but got ${i.rank}`);const z=ti(R,u.data.get(i.dataId).values),X=O2(s.shape,s.dtype);for(let U=0;U<f;++U)for(let G=0;G<y;++G){const V=G*I-w.top;for(let Z=0;Z<v;++Z){const J=Z*T-w.left;for(let te=0;te<g;++te){let O=Number.MIN_SAFE_INTEGER,Q=0,A=0;for(let K=0;K<C;++K){const $=V+K*L;if($>=0&&$<m)for(let re=0;re<E;++re){const oe=J+re*M;if(oe>=0&&oe<x){const Y=d[U][$][oe][te]+h[K][re][te];Y>O&&(O=Y,Q=K,A=re)}}}X[Q][A][te]+=z[U][G][Z][te]}}}return{dataId:u.write(ml(X,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fne={kernelName:y0,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:r,filter:s,dy:i}=n,{strides:a,pad:o,dilations:l}=t,u=e,d=ti(r.shape,u.data.get(r.dataId).values),h=ti(s.shape,u.data.get(s.dataId).values),{batchSize:f,inHeight:m,inWidth:x,inChannels:g,outHeight:y,outWidth:v,padInfo:w,strideHeight:I,strideWidth:T,filterHeight:C,filterWidth:E,dilationHeight:L,dilationWidth:M,outShape:R}=Rm(r.shape,s.shape,a,o,"NHWC",l);P(i.rank===R.length,()=>`Error in ${y0}, dy must have the same rank as output ${R.length}, but got ${i.rank}`);const z=ti(R,u.data.get(i.dataId).values),X=O2(r.shape,r.dtype);for(let U=0;U<f;++U)for(let G=0;G<y;++G){const V=G*I-w.top;for(let Z=0;Z<v;++Z){const J=Z*T-w.left;for(let te=0;te<g;++te){let O=Number.MIN_SAFE_INTEGER,Q=V<0?0:V,A=J<0?0:J;for(let K=0;K<C;++K){const $=V+K*L;if($>=0&&$<m)for(let re=0;re<E;++re){const oe=J+re*M;if(oe>=0&&oe<x){const Y=d[U][$][oe][te]+h[K][re][te];Y>O&&(O=Y,Q=$,A=oe)}}}X[U][Q][A][te]+=z[U][G][Z][te]}}}return{dataId:u.write(ml(X,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mne(n){const{inputs:e,backend:t,attrs:r}=n,{image:s}=e,{canvas:i,options:a}=r,{contextOptions:o,imageOptions:l}=a||{},u=l?.alpha||1,d=o?.contextType||"2d";if(d!=="2d")throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=i.getContext(d,o?.contextAttributes||{});if(h==null)throw new Error(`Could not get the context with ${d} type.`);const[f,m]=s.shape.slice(0,2),x=s.shape.length===2?1:s.shape[2],g=t.data.get(s.dataId).values,y=s.dtype==="float32"?255:1,v=new Uint8ClampedArray(m*f*4);for(let I=0;I<f*m;++I){const T=[0,0,0,255*u];for(let E=0;E<x;E++){const L=g[I*x+E];if(s.dtype==="float32"){if(L<0||L>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${L}.`)}else if(s.dtype==="int32"&&(L<0||L>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${L}.`);x===1?(T[0]=L*y,T[1]=L*y,T[2]=L*y):T[E]=L*y}const C=I*4;v[C+0]=Math.round(T[0]),v[C+1]=Math.round(T[1]),v[C+2]=Math.round(T[2]),v[C+3]=Math.round(T[3])}i.width=m,i.height=f;const w=new ImageData(v,m,f);return h.putImageData(w,0,0),s}const gne={kernelName:xb,backendName:"cpu",kernelFunc:mne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ug(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r;qe(s,"sum");let o;s.dtype==="bool"?o=pl({inputs:{x:s},backend:t,attrs:{dtype:"int32"}}):o=_a({inputs:{x:s},backend:t});const l=o.shape.length,u=At(i,o.shape),d=Rn(u,l);let h=u,f=o;d!=null&&(f=bs({inputs:{x:o},backend:t,attrs:{perm:d}}),h=Xn(h.length,l)),zr("sum",h,f.shape.length);const[m,x]=br(f.shape,h),g=ps(f.dtype,"int32");let y=D0(t,m,g);const v=be(x),w=t.data.get(y.dataId).values,I=t.data.get(f.dataId).values;for(let T=0;T<w.length;++T){const C=T*v;let E=0;for(let L=0;L<v;++L)E+=I[C+L];w[T]=E}if(a){const T=Bn(y.shape,u),C=y;y=hn({inputs:{x:y},backend:t,attrs:{shape:T}}),t.disposeIntermediateTensorInfo(C)}return t.disposeIntermediateTensorInfo(o),d!=null&&t.disposeIntermediateTensorInfo(f),y}const yne={kernelName:wm,backendName:"cpu",kernelFunc:ug};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bne(n){const{inputs:e,backend:t,attrs:r}=n,{equation:s}=r,i=e,{allDims:a,summedDims:o,idDims:l}=_I(s,i.length);NI(a.length,l,i);const{path:u,steps:d}=EI(o,l),h=d.length;let f=null,m=a.length;const x=[];for(let g=0;g<h;++g){for(const y of d[g]){const{permutationIndices:v,expandDims:w}=MI(m,l[y]);let I;RI(v)?I=i[y]:(I=bs({inputs:{x:i[y]},backend:t,attrs:{perm:v}}),x.push(I));const T=I.shape.slice();for(let C=0;C<w.length;++C)T.splice(w[C],0,1);Ft(I.shape,T)||(I=hn({inputs:{x:I},backend:t,attrs:{shape:T}}),x.push(I)),f===null?f=I:(f=gv({inputs:{a:I,b:f},backend:t}),x.push(f))}g<h-1&&(u[g]>=0&&(f=ug({inputs:{x:f},backend:t,attrs:{axis:u[g]-(a.length-m),keepDims:!1}}),x.push(f)),m--)}for(const g of x)g!==f&&t.disposeIntermediateTensorInfo(g);return f}const xne={kernelName:vb,backendName:"cpu",kernelFunc:bne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vne(n){const{inputs:e,backend:t}=n,{dy:r,y:s}=e;qe([r,s],"eluGrad");const i=new Float32Array(be(s.shape)),a=t.data.get(s.dataId).values,o=t.data.get(r.dataId).values;for(let l=0;l<a.length;++l){const u=a[l];u>=0?i[l]=o[l]:i[l]=o[l]*(u+1)}return t.makeTensorInfo(s.shape,"float32",i)}const wne={kernelName:wb,backendName:"cpu",kernelFunc:vne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sne=vI,Tne=wI,Ine=SI,kne=TI,Cne=II,_ne=kI,Mne=en(Fd,n=>{const e=Math.sign(n),t=Math.abs(n),r=1/(1+Sne*t);return e*(1-((((_ne*r+Cne)*r+kne)*r+Ine)*r+Tne)*r*Math.exp(-t*t))}),Nne={kernelName:Fd,backendName:"cpu",kernelFunc:Mne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G0(n){const{inputs:e,backend:t,attrs:r}=n,{input:s}=e,{dim:i}=r,a=s.shape.length,o=s.shape.slice();let l=i;return i<0&&(P(-(a+1)<=i,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+i+1),o.splice(l,0,1),hn({inputs:{x:s},backend:t,attrs:{shape:o}})}const Ene={kernelName:Xf,backendName:"cpu",kernelFunc:G0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rne=Zn((n,e)=>n/e),fC=or(Dd,Rne),i2={kernelName:Dd,backendName:"cpu",kernelFunc:fC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NP(n,e,t){const r=n.shape,s=r[0],i=r[1],a=t.data.get(n.dataId),o=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[s,i],d=be(u),h=mr("float32",d),f=mr("float32",d);for(let y=0;y<s;y++){const v=Eu({inputs:{x:o},backend:t,attrs:{begin:[y,0],size:[1,i]}}),w=Eu({inputs:{x:l},backend:t,attrs:{begin:[y,0],size:[1,i]}}),I=Rs({inputs:{real:v,imag:w},backend:t}),{real:T,imag:C}=Lne(I,e,t),E=io(T,C);for(let L=0;L<i;L++){const M=CI(E,L);h[y*i+L]=M.real,f[y*i+L]=M.imag}t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(w),t.disposeIntermediateTensorInfo(I)}const m=t.makeTensorInfo(u,"float32",h),x=t.makeTensorInfo(u,"float32",f),g=Rs({inputs:{real:m,imag:x},backend:t});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(x),g}function Lne(n,e,t){const r=be(n.shape),s=t.data.get(n.dataId),i=t.data.get(s.complexTensorInfos.real.dataId).values,a=t.data.get(s.complexTensorInfos.imag.dataId).values;if(Ane(r)){const o=a2(i,a,r,e,t),l=[n.shape[0],n.shape[1]];if(e){const u=t.makeTensorInfo(l,"float32",o.real),d=t.makeTensorInfo(l,"float32",o.imag),h=t.makeTensorInfo([],"float32",uo(r,"float32")),f=_a({inputs:{x:h},backend:t}),m=i2.kernelFunc({inputs:{a:u,b:h},backend:t}),x=i2.kernelFunc({inputs:{a:d,b:f},backend:t}),g=t.data.get(m.dataId).values,y=t.data.get(x.dataId).values;return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(x),{real:g,imag:y}}return o}else{const o=io(i,a),l=zne(o,r,e);return WA(l)}}function Ane(n){return(n&n-1)===0}function a2(n,e,t,r,s){if(t===1)return{real:n,imag:e};const i=io(n,e),a=t/2,o=VA(i),l=o.real,u=o.imag,d=[l.length],h=s.makeTensorInfo(d,"float32",l),f=s.makeTensorInfo(d,"float32",u),m=Rs({inputs:{real:h,imag:f},backend:s}),x=$A(i),g=x.real,y=x.imag,v=[g.length],w=s.makeTensorInfo(v,"float32",g),I=s.makeTensorInfo(v,"float32",y),T=Rs({inputs:{real:w,imag:I},backend:s}),C=a2(l,u,a,r,s),E=C.real,L=C.imag,M=[E.length],R=s.makeTensorInfo(M,"float32",E),z=s.makeTensorInfo(M,"float32",L),X=Rs({inputs:{real:R,imag:z},backend:s}),U=a2(g,y,a,r,s),G=U.real,V=U.imag,Z=[G.length],J=s.makeTensorInfo(Z,"float32",G),te=s.makeTensorInfo(Z,"float32",V),O=Rs({inputs:{real:J,imag:te},backend:s}),Q=XA(t,r),A=[Q.real.length],K=s.makeTensorInfo(A,"float32",Q.real),$=s.makeTensorInfo(A,"float32",Q.imag),re=Rs({inputs:{real:K,imag:$},backend:s}),oe=gv({inputs:{a:re,b:O},backend:s}),Y=bd({inputs:{a:X,b:oe},backend:s}),ge=hC({inputs:{a:X,b:oe},backend:s}),ye=Nu({inputs:{input:Y},backend:s}),ve=Nu({inputs:{input:ge},backend:s}),Ce=xd({inputs:{input:Y},backend:s}),De=xd({inputs:{input:ge},backend:s}),We=vd({inputs:[ye,ve],backend:s,attrs:{axis:0}}),Ze=vd({inputs:[Ce,De],backend:s,attrs:{axis:0}}),ot=s.data.get(We.dataId).values,St=s.data.get(Ze.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(f),s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(I),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(R),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(X),s.disposeIntermediateTensorInfo(J),s.disposeIntermediateTensorInfo(te),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(re),s.disposeIntermediateTensorInfo(oe),s.disposeIntermediateTensorInfo(Y),s.disposeIntermediateTensorInfo(ge),s.disposeIntermediateTensorInfo(ye),s.disposeIntermediateTensorInfo(Ce),s.disposeIntermediateTensorInfo(ve),s.disposeIntermediateTensorInfo(De),s.disposeIntermediateTensorInfo(We),s.disposeIntermediateTensorInfo(Ze),{real:ot,imag:St}}function zne(n,e,t){const r=new Float32Array(e*2);for(let s=0;s<e;s++){let i=0,a=0;for(let o=0;o<e;o++){const l=UA(s*o,e,t),u=CI(n,o);i+=u.real*l.real-u.imag*l.imag,a+=u.real*l.imag+u.imag*l.real}t&&(i/=e,a/=e),BA(r,i,a,s)}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dne(n){const{inputs:e,backend:t}=n,{input:r}=e,s=be(r.shape),i=r.shape[r.shape.length-1],a=s/i,o=hn({inputs:{x:r},backend:t,attrs:{shape:[a,i]}}),l=NP(o,!1,t),u=hn({inputs:{x:l},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(l),u}const Pne={kernelName:Sb,backendName:"cpu",kernelFunc:Dne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mC(n){const{backend:e,attrs:t}=n,{shape:r,value:s,dtype:i}=t,a=i||Ou(s),o=Dn(a,be(r));return Gne(o,s),e.makeTensorInfo(r,a,o)}const Fne={kernelName:Tb,backendName:"cpu",kernelFunc:mC};function Gne(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const One={kernelName:Ib,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:r}=n,s=t,i=mr(r.dtype,be(r.shape)),[a,o,l,u]=r.shape,d=s.data.get(r.dataId).values;for(let h=0;h<a;h++){const f=h*l*o*u;for(let m=0;m<o;m++){const x=m*(l*u);for(let g=0;g<l;g++){const y=g*u;for(let v=0;v<u;v++){const w=Math.round(l-g-1),I=f+x+y+v;let T=d[I];if(w>=0&&w<l){const C=w*u,E=f+x+C+v;T=d[E]}i[I]=T}}}}return{dataId:s.write(i,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wne(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:f,activation:m,leakyreluAlpha:x}=r;let g=_P({inputs:{x:s,filter:i},backend:t,attrs:{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:f}});if(a){const y=g;if(d==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){const v=hn({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});g=bd({inputs:{a:g,b:v},backend:t}),t.disposeIntermediateTensorInfo(v)}else g=bd({inputs:{a:g,b:a},backend:t});t.disposeIntermediateTensorInfo(y)}if(m){const y=g;if(d==="NCHW"&&m==="prelu"&&o.shape.length===1&&o.shape[0]!==1){const v=hn({inputs:{x:o},backend:t,attrs:{shape:[o.shape[0],1,1]}});g=F0(t,g,m,v,x),t.disposeIntermediateTensorInfo(v)}else g=F0(t,g,m,o,x);t.disposeIntermediateTensorInfo(y)}return g}const Vne={kernelName:sf,backendName:"cpu",kernelFunc:Wne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $ne(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:f,activation:m,leakyreluAlpha:x}=r;let g=MP({inputs:{x:s,filter:i},backend:t,attrs:{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:f}});if(a){const y=g;g=bd({inputs:{a:g,b:a},backend:t}),t.disposeIntermediateTensorInfo(y)}if(m){const y=g;g=F0(t,g,m,o,x),t.disposeIntermediateTensorInfo(y)}return g}const Bne={kernelName:af,backendName:"cpu",kernelFunc:$ne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xne(n){const{inputs:e,backend:t}=n,{params:r,indices:s}=e,i=be(r.shape),a=s.shape,o=a[a.length-1],[l,u,d,h]=Bx(r,s);if(u===0)return t.makeTensorInfo(l,r.dtype,[]);const f=t.data.get(s.dataId).values,m=t.bufferSync(r),x=GD(f,m,r.dtype,u,o,d,h,r.shape,i);return t.makeTensorInfo(l,r.dtype,x.values)}const Une={kernelName:kb,backendName:"cpu",kernelFunc:Xne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zne(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,indices:i}=e,{axis:a,batchDims:o}=r;qe([s,i],"gatherV2");const l=At(a,s.shape)[0],u=t.data.get(i.dataId).values,d=s.shape[l];for(let T=0;T<u.length;++T){const C=u[T];P(C<=d-1&&C>=0,()=>`GatherV2: the index value ${C} is not in [0, ${d-1}]`)}let h=o;o==null&&(h=0);const f=be(i.shape),m=AI(s,i,l,h),x=hn({inputs:{x:s},backend:t,attrs:{shape:[m.batchSize,m.outerSize,m.dimSize,m.sliceSize]}}),g=hn({inputs:{x:i},backend:t,attrs:{shape:[m.batchSize,f/m.batchSize]}}),y=[m.batchSize,m.outerSize,f/m.batchSize,m.sliceSize],v=t.bufferSync(g),w=t.bufferSync(x),I=OD(w,v,y);return t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(g),t.makeTensorInfo(m.outputShape,I.dtype,I.values)}const Hne={kernelName:Zf,backendName:"cpu",kernelFunc:Zne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kne(n){const{inputs:e,backend:t}=n,{input:r}=e,s=be(r.shape),i=r.shape[r.shape.length-1],a=s/i,o=hn({inputs:{x:r},backend:t,attrs:{shape:[a,i]}}),l=NP(o,!0,t),u=hn({inputs:{x:l},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(l),u}const Yne={kernelName:Cb,backendName:"cpu",kernelFunc:Kne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jne=en(Xd,n=>Number.isFinite(n)?1:0,"bool"),Qne={kernelName:Xd,backendName:"cpu",kernelFunc:jne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jne=en(Ud,n=>Math.abs(n)===1/0?1:0,"bool"),qne={kernelName:Ud,backendName:"cpu",kernelFunc:Jne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ere=en(Zd,n=>Number.isNaN(n)?1:0,"bool"),tre={kernelName:Zd,backendName:"cpu",kernelFunc:ere};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nre(n){const{backend:e,attrs:t}=n,{start:r,stop:s,num:i}=t,a=XD(r,s,i);return e.makeTensorInfo([a.length],"float32",a)}const rre={kernelName:Mb,backendName:"cpu",kernelFunc:nre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sre=en(Kd,n=>Math.log1p(n)),ire={kernelName:Kd,backendName:"cpu",kernelFunc:sre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const are=Zn((n,e)=>n&&e),ore=or(Qf,are,null,"bool"),lre={kernelName:Qf,backendName:"cpu",kernelFunc:ore};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ure=en(Jf,n=>n?0:1,"bool"),cre={kernelName:Jf,backendName:"cpu",kernelFunc:ure};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dre=Zn((n,e)=>n||e),hre=or(qf,dre,null,"bool"),pre={kernelName:qf,backendName:"cpu",kernelFunc:hre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fre(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{depthRadius:i,bias:a,alpha:o,beta:l}=r;qe(s,"LRN");const u=s.shape[3],d=u-1,h=t.data.get(s.dataId).values,f=be(s.shape),m=new Float32Array(f);function x(g){const y=g%u;let v=g-y+Math.max(0,y-i);const w=g-y+Math.min(y+i,d);let I=0;for(;v<=w;v++){const T=h[v];I+=T*T}return I}for(let g=0;g<f;g++){const y=x(g),v=h[g]*Math.pow(a+o*y,-l);m[g]=v}return t.makeTensorInfo(s.shape,s.dtype,m)}const mre={kernelName:em,backendName:"cpu",kernelFunc:fre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gre(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,y:i,dy:a}=e,{depthRadius:o,bias:l,alpha:u,beta:d}=r;qe(a,"LRNGrad");const h=be(a.shape),f=a.shape[3],m=t.data.get(a.dataId).values,x=t.data.get(s.dataId).values,g=t.data.get(i.dataId).values,y=new Float32Array(h),v=h;for(let w=0;w<v;w++){const I=w%f,T=w-I+Math.max(0,I-o),C=w-I+Math.min(f,I+o+1);let E=0;for(let L=T;L<C;L++)E+=Math.pow(x[L],2);E=u*E+l;for(let L=T;L<C;L++){let M=-2*u*d*x[L]*g[w]/E;w===L&&(M+=Math.pow(E,-d)),M*=m[w],y[L]+=M}}return t.makeTensorInfo(a.shape,s.dtype,y)}const yre={kernelName:Nb,backendName:"cpu",kernelFunc:gre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EP(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reductionIndices:i,keepDims:a}=r,o=t;let l=s.shape;const u=l.length,d=At(i,l);let h=d;const f=Rn(h,u);let m=o.data.get(s.dataId).values;if(f!=null){const T=new Array(u);for(let C=0;C<T.length;C++)T[C]=l[f[C]];m=cC(m,l,s.dtype,f,T),h=Xn(h.length,u),l=T}qe(s,"max"),zr("max",h,u);const[x,g]=br(l,h),y=be(g),v=ZD(m,y,x,s.dtype),w=o.write(v,x,s.dtype);let I=x;return a&&(I=Bn(x,d)),{dataId:w,shape:I,dtype:s.dtype}}const bre={kernelName:tm,backendName:"cpu",kernelFunc:EP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xre(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;qe(s,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r,u=1;P(Ar(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const d=Ii(s.shape,i,a,u,o,l);let h;if(d.filterWidth===1&&d.filterHeight===1&&Ft(d.inShape,d.outShape))h=_a({inputs:{x:s},backend:t});else{const f=t.data.get(s.dataId).values,m=ut(s.shape),x=pC(f,s.shape,s.dtype,m,d,"max");h=t.makeTensorInfo(d.outShape,s.dtype,x.values)}return h}const vre={kernelName:nm,backendName:"cpu",kernelFunc:xre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wre(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r;qe(s,"maxPool3d");const d=co(s.shape,i,a,1,o,l,u),h=t.data.get(s.dataId).values,f=CP(h,s.shape,s.dtype,ut(s.shape),d,"max");return t.makeTensorInfo(f.shape,"float32",f.values)}const Sre={kernelName:rm,backendName:"cpu",kernelFunc:wre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tre(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:i}=e,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=r;qe([s,i],"maxPool3DGrad");const d=co(i.shape,a,o,1,l,u),h=t.bufferSync(i),f=dte(h,d),m=d.strideDepth,x=d.strideHeight,g=d.strideWidth,y=d.dilationDepth,v=d.dilationHeight,w=d.dilationWidth,I=d.effectiveFilterDepth,T=d.effectiveFilterHeight,C=d.effectiveFilterWidth,E=I-1-d.padInfo.front,L=C-1-d.padInfo.left,M=T-1-d.padInfo.top,R=Et(i.shape,"float32"),z=t.bufferSync(s);for(let X=0;X<d.batchSize;++X)for(let U=0;U<d.inChannels;++U)for(let G=0;G<d.inDepth;++G)for(let V=0;V<d.inHeight;++V)for(let Z=0;Z<d.inWidth;++Z){const J=G-E,te=V-M,O=Z-L;let Q=0;for(let A=0;A<I;A+=y){const K=(J+A)/m;if(!(K<0||K>=d.outDepth||Math.floor(K)!==K))for(let $=0;$<T;$+=v){const re=(te+$)/x;if(!(re<0||re>=d.outHeight||Math.floor(re)!==re))for(let oe=0;oe<C;oe+=w){const Y=(O+oe)/g;if(Y<0||Y>=d.outWidth||Math.floor(Y)!==Y)continue;const ge=I*T*C-1-f.get(X,K,re,Y,U),ye=A*T*C+$*C+oe,ve=ge===ye?1:0;if(ve===0)continue;const Ce=z.get(X,K,re,Y,U);Q+=Ce*ve}}}R.set(Q,X,G,V,Z,U)}return t.makeTensorInfo(R.shape,R.dtype,R.values)}const Ire={kernelName:Rb,backendName:"cpu",kernelFunc:Tre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kre(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:i,output:a}=e,o=i;qe([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:d,dimRoundingMode:h}=r,f=Ii(o.shape,l,u,1,d,h),m=t.data.get(o.dataId).values,x=Et(f.outShape,o.dtype,kP(m,o.shape,o.dtype,f).values),g=f.strideHeight,y=f.strideWidth,v=f.dilationHeight,w=f.dilationWidth,I=f.effectiveFilterHeight,T=f.effectiveFilterWidth,C=T-1-f.padInfo.left,E=I-1-f.padInfo.top,L=Et(o.shape,"float32"),M=t.data.get(s.dataId).values,R=Et(s.shape,"float32",M);for(let z=0;z<f.batchSize;++z)for(let X=0;X<f.inChannels;++X)for(let U=0;U<f.inHeight;++U)for(let G=0;G<f.inWidth;++G){const V=U-E,Z=G-C;let J=0;for(let te=0;te<I;te+=v){const O=(V+te)/g;if(!(O<0||O>=f.outHeight||Math.floor(O)!==O))for(let Q=0;Q<T;Q+=w){const A=(Z+Q)/y;if(A<0||A>=f.outWidth||Math.floor(A)!==A)continue;const K=I*T-1-x.get(z,O,A,X),$=te*T+Q,re=K===$?1:0;if(re===0)continue;const oe=R.get(z,O,A,X);J+=oe*re}}L.set(J,z,U,G,X)}return t.makeTensorInfo(L.shape,L.dtype,L.values)}const Cre={kernelName:Eb,backendName:"cpu",kernelFunc:kre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _re(n,e,t,r,s){const i=ut(e),a=pC(n,e,t,i,s,"max"),o=kP(n,e,t,s,!0,r);return[a.values,o.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mre={kernelName:Lb,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=e,l=t;qe(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,d=Ii(r.shape,s,i,[1,1],a),[h,f]=_re(u,r.shape,r.dtype,o,d),m=l.write(h,d.outShape,r.dtype),x=l.write(f,d.outShape,r.dtype);return[{dataId:m,shape:d.outShape,dtype:r.dtype},{dataId:x,shape:d.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nre(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r,o=At(i,s.shape),l=br(s.shape,o)[1],u=be(l),d=[],h=t.makeTensorInfo([],"float32",new Float32Array([u]));d.push(h);const f=pl({inputs:{x:s},backend:t,attrs:{dtype:"float32"}});d.push(f);const m=fC({inputs:{a:f,b:h},backend:t});d.push(m);const x=ug({inputs:{x:m},backend:t,attrs:{axis:i,keepDims:a}});return d.forEach(g=>t.disposeIntermediateTensorInfo(g)),x}const Ere={kernelName:sm,backendName:"cpu",kernelFunc:Nre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rre(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r;qe(s,"min");const o=At(i,s.shape);let l=o;const u=Rn(l,s.shape.length);let d=s;u!=null&&(d=bs({inputs:{x:s},backend:t,attrs:{perm:u}}),l=Xn(l.length,s.shape.length)),zr("min",l,d.shape.length);const[h,f]=br(d.shape,l),m=be(f),x=Er(be(h),d.dtype),g=t.data.get(d.dataId).values;for(let v=0;v<x.length;++v){const w=v*m;let I=g[w];for(let T=0;T<m;++T){const C=g[w+T];(Number.isNaN(C)||C<I)&&(I=C)}x[v]=I}u!=null&&t.disposeIntermediateTensorInfo(d);const y=t.makeTensorInfo(h,d.dtype,x);if(a){const v=Bn(h,o),w=hn({inputs:{x:y},backend:t,attrs:{shape:v}});return t.disposeIntermediateTensorInfo(y),w}return y}const Lre={kernelName:im,backendName:"cpu",kernelFunc:Rre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Are(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{paddings:i,mode:a}=r;qe(s,"mirrorPad");const o=i.map((w,I)=>w[0]+s.shape[I]+w[1]),l=i.map(w=>w[0]),u=i.map((w,I)=>w[0]+s.shape[I]),d=a==="reflect"?0:1,h=t.data.get(s.dataId).values,f=s.shape.length,m=ut(s.shape),x=be(o),g=o.length,y=ut(o),v=mr(s.dtype,x);for(let w=0;w<x;w++){let I=Wu(w,g,y);for(let C=0;C<g;C++)I[C]<l[C]?I[C]=l[C]*2-I[C]-d:I[C]>=u[C]&&(I[C]=(u[C]-1)*2-I[C]+d);I=I.map((C,E)=>C-l[E]);const T=Vi(I,f,m);v[w]=h[T]}return{dataId:t.write(v,o,s.dtype),shape:o,dtype:s.dtype}}const zre={kernelName:am,backendName:"cpu",kernelFunc:Are};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dre=Zn((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),Pre=or(Qd,Dre),Fre={kernelName:Qd,backendName:"cpu",kernelFunc:Pre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RP(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{dim:i}=r,a=s.shape.length;let o=i;if(o===-1&&(o=a-1),o!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${o}`);const l=At([o],s.shape),u=EP({inputs:{x:s},backend:t,attrs:{reductionIndices:l,keepDims:!1}}),d=Bn(u.shape,l),h=hn({inputs:{x:u},backend:t,attrs:{shape:d}}),f=hC({inputs:{a:s,b:h},backend:t}),m=zD({inputs:{x:f},backend:t}),x=ug({inputs:{x:m},backend:t,attrs:{axis:l,keepDims:!1}}),g=hn({inputs:{x},backend:t,attrs:{shape:d}}),y=fC({inputs:{a:m,b:g},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(g),y}const Gre={kernelName:Im,backendName:"cpu",kernelFunc:RP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ore(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{numSamples:i,seed:a,normalized:o}=r;qe(s,"multinomial");const l=o?s:RP({inputs:{logits:s},backend:t,attrs:{dim:-1}}),u=l.shape[0],d=l.shape[1],h=t.data.get(l.dataId).values,f=[u,i],m=Er(be(f),"int32");for(let x=0;x<u;++x){const g=x*d,y=new Float32Array(d-1);y[0]=h[g];for(let I=1;I<y.length;++I)y[I]=y[I-1]+h[g+I];const v=Ih.alea(a.toString()),w=x*i;for(let I=0;I<i;++I){const T=v();m[w+I]=y.length;for(let C=0;C<y.length;C++)if(T<y[C]){m[w+I]=C;break}}}return o||t.disposeIntermediateTensorInfo(l),t.makeTensorInfo(f,"int32",m)}const Wre={kernelName:Ab,backendName:"cpu",kernelFunc:Ore};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vre=Ox;function $re(n){const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r;qe(s,"NonMaxSuppression");const u=t.data.get(s.dataId).values,d=t.data.get(i.dataId).values,{selectedIndices:h}=Vre(u,d,a,o,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const Bre={kernelName:zb,backendName:"cpu",kernelFunc:$re};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xre=Wx;function Ure(n){const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;qe(s,"NonMaxSuppressionPadded");const d=t.data.get(s.dataId).values,h=t.data.get(i.dataId).values,{selectedIndices:f,validOutputs:m}=Xre(d,h,a,o,l,u);return[t.makeTensorInfo([f.length],"int32",new Int32Array(f)),t.makeTensorInfo([],"int32",new Int32Array([m]))]}const Zre={kernelName:Db,backendName:"cpu",kernelFunc:Ure};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hre=Vx;function Kre(n){const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;qe(s,"NonMaxSuppressionWithScore");const d=t.data.get(s.dataId).values,h=t.data.get(i.dataId).values,f=a,m=o,x=l,g=u,{selectedIndices:y,selectedScores:v}=Hre(d,h,f,m,x,g);return[t.makeTensorInfo([y.length],"int32",new Int32Array(y)),t.makeTensorInfo([v.length],"float32",new Float32Array(v))]}const Yre={kernelName:Pb,backendName:"cpu",kernelFunc:Kre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jre(n){const{inputs:e,backend:t,attrs:r}=n,{indices:s}=e,{dtype:i,depth:a,onValue:o,offValue:l}=r;qe(s,"oneHot");const u=be(s.shape),d=new Float32Array(u*a);d.fill(l);const h=t.data.get(s.dataId).values;for(let f=0;f<u;++f)h[f]>=0&&h[f]<a&&(d[f*a+h[f]]=o);return t.makeTensorInfo([...s.shape,a],i,d)}const Qre={kernelName:cm,backendName:"cpu",kernelFunc:jre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O0(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(r.dtype==="complex64"){const s=Nu({inputs:{input:r},backend:t}),i=O0({inputs:{x:s},backend:t}),a=xd({inputs:{input:r},backend:t}),o=O0({inputs:{x:a},backend:t}),l=Rs({inputs:{real:i,imag:o},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(o),l}else return mC({backend:t,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Jre={kernelName:Mm,backendName:"cpu",kernelFunc:O0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LP(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(r.dtype==="complex64"){const s=Nu({inputs:{input:r},backend:t}),i=LP({inputs:{x:s},backend:t}),a=xd({inputs:{input:r},backend:t}),o=O0({inputs:{x:a},backend:t}),l=Rs({inputs:{real:i,imag:o},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(o),l}else return mC({backend:t,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}const qre={kernelName:um,backendName:"cpu",kernelFunc:LP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AP(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r;if(e.length===1)return G0({inputs:{input:e[0]},backend:t,attrs:{dim:s}});const i=e[0].shape,a=e[0].dtype;e.forEach(d=>{Lr(i,d.shape,"All tensors passed to stack must have matching shapes"),P(a===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=e.map(d=>{const h=G0({inputs:{input:d},backend:t,attrs:{dim:s}});return o.push(h),h}),u=vd({inputs:l,backend:t,attrs:{axis:s}});return o.forEach(d=>t.disposeIntermediateTensorInfo(d)),u}const ese={kernelName:dm,backendName:"cpu",kernelFunc:AP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tse(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{paddings:i,constantValue:a}=r;qe(s,"pad");const o=i.map((v,w)=>v[0]+s.shape[w]+v[1]),l=i.map(v=>v[0]),u=t.data.get(s.dataId).values,d=be(s.shape),h=s.shape.length,f=ut(s.shape),m=be(o),x=o.length,g=ut(o),y=mr(s.dtype,m);a!==0&&y.fill(a);for(let v=0;v<d;v++){const w=Wu(v,h,f).map((T,C)=>T+l[C]),I=Vi(w,x,g);y[I]=u[v]}return{dataId:t.write(y,o,s.dtype),shape:o,dtype:s.dtype}}const zP={kernelName:hm,backendName:"cpu",kernelFunc:tse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nse=Zn((n,e)=>Math.pow(n,e)),rse=or(qd,nse),sse={kernelName:qd,backendName:"cpu",kernelFunc:rse};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ise(n){const{inputs:e,backend:t,attrs:r}=n,{paramsNestedSplits:s,paramsDenseValues:i,indices:a}=e,o=s.map(y=>t.data.get(y.dataId).values),l=s.map(y=>y.shape),u=t.data.get(i.dataId).values,d=t.data.get(a.dataId).values,[h,f,m]=JD(o,l,u,i.shape,i.dtype,d,a.shape),x=h.map(y=>t.makeTensorInfo([y.length],"int32",y)),g=t.makeTensorInfo(m,i.dtype,f);return x.concat([g])}const ase={kernelName:Fb,backendName:"cpu",kernelFunc:ise};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ose(n){const{inputs:e,backend:t}=n,{starts:r,limits:s,deltas:i}=e,a=t.data.get(r.dataId).values,o=t.data.get(s.dataId).values,l=t.data.get(i.dataId).values,[u,d]=qD(a,r.shape,r.dtype,o,s.shape,l,i.shape),h=t.makeTensorInfo([u.length],"int32",u),f=t.makeTensorInfo([d.length],r.dtype,d);return[h,f]}const lse={kernelName:Gb,backendName:"cpu",kernelFunc:ose};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function use(n){const{inputs:e,backend:t,attrs:r}=n,{shape:s,values:i,defaultValue:a,rowPartitionTensors:o}=e,{rowPartitionTypes:l}=r,u=t.data.get(s.dataId).values,d=t.data.get(i.dataId).values,h=t.data.get(a.dataId).values,f=o.map(y=>t.data.get(y.dataId).values),m=o.map(y=>y.shape),[x,g]=eP(u,s.shape,d,i.shape,i.dtype,h,a.shape,f,m,l);return t.makeTensorInfo(x,i.dtype,g)}const cse={kernelName:Ob,backendName:"cpu",kernelFunc:use};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dse(n){const{backend:e,attrs:t}=n,{start:r,stop:s,dtype:i,step:a}=t,o=tP(r,s,a,i);return e.makeTensorInfo([o.length],i,o)}const hse={kernelName:Wb,backendName:"cpu",kernelFunc:dse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pse=en(eh,n=>1/n),fse={kernelName:eh,backendName:"cpu",kernelFunc:pse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mse(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:i,halfPixelCenters:a,size:o}=r;qe(s,"resizeBilinear");const l=ut(s.shape),[u,d]=o,[h,f,m,x]=s.shape,g=t.data.get(s.dataId).values,y=new Float32Array(be([h,u,d,x])),v=[i&&u>1?f-1:f,i&&d>1?m-1:m],w=[i&&u>1?u-1:u,i&&d>1?d-1:d];let I=0;const T=v[0]/w[0],C=v[1]/w[1];for(let E=0;E<h;E++)for(let L=0;L<u;L++){let M;a?M=T*(L+.5)-.5:M=T*L;const R=Math.max(0,Math.floor(M)),z=M-R,X=Math.min(f-1,Math.ceil(M)),U=E*l[0]+R*l[1],G=E*l[0]+X*l[1];for(let V=0;V<d;V++){let Z;a?Z=C*(V+.5)-.5:Z=C*V;const J=Math.max(0,Math.floor(Z)),te=Z-J,O=Math.min(m-1,Math.ceil(Z)),Q=U+J*l[2],A=G+J*l[2],K=U+O*l[2],$=G+O*l[2];for(let re=0;re<x;re++){const oe=g[Q+re],Y=g[A+re],ge=g[K+re],ye=g[$+re],ve=oe+(ge-oe)*te,Ce=Y+(ye-Y)*te,De=ve+(Ce-ve)*z;y[I++]=De}}}return t.makeTensorInfo([h,u,d,x],"float32",y)}const gse={kernelName:ym,backendName:"cpu",kernelFunc:mse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yse(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:i}=e,{alignCorners:a}=r;qe([i,s],"resizeBilinearGrad");const o=ut(s.shape),[l,u,d,h]=s.shape,[,f,m]=i.shape,x=new Float32Array(l*u*d*h),g=[a&&f>1?u-1:u,a&&m>1?d-1:d],y=[a&&f>1?f-1:f,a&&m>1?m-1:m],v=g[0]/y[0],w=g[1]/y[1],I=t.data.get(i.dataId).values;let T=0;for(let C=0;C<l;C++){const E=C*o[0];for(let L=0;L<f;L++){const M=L*v,R=Math.floor(M),z=Math.min(Math.ceil(M),u-1),X=E+R*o[1],U=E+z*o[1],G=M-R,V=1-G;for(let Z=0;Z<m;Z++){const J=Z*w,te=Math.floor(J),O=Math.min(Math.ceil(J),d-1),Q=J-te,A=1-Q,K=X+te*o[2],$=X+O*o[2],re=U+te*o[2],oe=U+O*o[2],Y=V*A,ge=V*Q,ye=G*A,ve=G*Q;for(let Ce=0;Ce<h;Ce++){const De=I[T++];x[K+Ce]+=De*Y,x[$+Ce]+=De*ge,x[re+Ce]+=De*ye,x[oe+Ce]+=De*ve}}}}return t.makeTensorInfo([l,d,u,h],"float32",x)}const bse={kernelName:Bb,backendName:"cpu",kernelFunc:yse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xse(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:i,halfPixelCenters:a,size:o}=r;qe(s,"resizeNearestNeighbor");const l=ut(s.shape),[u,d]=o,[h,f,m,x]=s.shape,g=t.data.get(s.dataId).values,y=new Float32Array(h*u*d*x),v=[i&&u>1?f-1:f,i&&d>1?m-1:m],w=[i&&u>1?u-1:u,i&&d>1?d-1:d],I=v[0]/w[0],T=v[1]/w[1];let C=0;for(let E=0;E<h;E++){const L=E*l[0];for(let M=0;M<u;M++){const R=a?I*(M+.5):I*M;let z=Math.min(f-1,i?Math.round(R):Math.floor(R));a&&(z=Math.max(0,z));const X=L+z*l[1];for(let U=0;U<d;U++){const G=a?T*(U+.5):T*U;let V=Math.min(m-1,i?Math.round(G):Math.floor(G));a&&(V=Math.max(0,V));const Z=X+V*l[2];for(let J=0;J<x;J++){const te=g[Z+J];y[C++]=te}}}}return t.makeTensorInfo([h,u,d,x],s.dtype,y)}const vse={kernelName:gm,backendName:"cpu",kernelFunc:xse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wse(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:i}=e,{alignCorners:a}=r;qe([i,s],"resizeNearestNeighborGrad");const o=ut(s.shape),l=ut(i.shape),[u,d,h,f]=s.shape,[,m,x]=i.shape,g=new Float32Array(u*d*h*f),y=t.data.get(i.dataId).values,v=[a&&m>1?d-1:d,a&&x>1?h-1:h],w=[a&&m>1?m-1:m,a&&x>1?x-1:x],I=v[0]/w[0],T=v[1]/w[1],C=1/I,E=1/T,L=Math.ceil(C)*2+2,M=Math.ceil(E)*2+2;for(let R=0;R<u;R++){const z=R*o[0];for(let X=0;X<d;X++){const U=z+X*o[1],G=Math.floor(X*C),V=Math.floor(G-L/2);for(let Z=0;Z<h;Z++){const J=U+Z*o[2],te=Math.floor(Z*E),O=Math.floor(te-M/2);for(let Q=0;Q<f;Q++){let A=0;for(let K=0;K<L;K++){const $=K+V;if($<0||$>=m)continue;const re=z+$*l[1],oe=$*I,Y=Math.min(d-1,a?Math.round(oe):Math.floor(oe));if(X===Y)for(let ge=0;ge<M;ge++){const ye=ge+O;if(ye<0||ye>=x)continue;const ve=re+ye*l[2],Ce=ye*T,De=Math.min(h-1,a?Math.round(Ce):Math.floor(Ce));Z===De&&(A+=y[ve+Q])}}g[J+Q]=A}}}}return t.makeTensorInfo(s.shape,s.dtype,g)}const Sse={kernelName:$b,backendName:"cpu",kernelFunc:wse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tse(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dims:i}=r;qe(s,"reverse");const a=s.shape.length,o=At(i,s.shape);if(a===0)return _a({inputs:{x:s},backend:t});const l=new Jn(s.shape,s.dtype),u=t.bufferSync(s);for(let d=0;d<l.size;d++){const h=l.indexToLoc(d),f=h.slice();o.forEach(m=>f[m]=s.shape[m]-1-f[m]),l.set(u.get(...f),...h)}return t.makeTensorInfo(l.shape,l.dtype,l.values)}const Ise={kernelName:bm,backendName:"cpu",kernelFunc:Tse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kse={kernelName:ax,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:r}=n,{radians:s,fillValue:i,center:a}=e,o=t,l=mr(r.dtype,be(r.shape)),[u,d,h,f]=r.shape,[m,x]=yI(a,d,h),g=255,y=Math.sin(s),v=Math.cos(s),w=o.data.get(r.dataId).values;for(let I=0;I<u;I++){const T=I*h*d*f;for(let C=0;C<d;C++){const E=C*(h*f);for(let L=0;L<h;L++){const M=L*f;for(let R=0;R<f;R++){const z=[u,C,L,R],X=z[2],U=z[1];let G=(X-m)*v-(U-x)*y,V=(X-m)*y+(U-x)*v;G=Math.round(G+m),V=Math.round(V+x);let Z=i;if(typeof i!="number"&&(R===3?Z=g:Z=i[R]),G>=0&&G<h&&V>=0&&V<d){const te=V*(h*f),O=G*f,Q=T+te+O+R;Z=w[Q]}const J=T+E+M+R;l[J]=Z}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cse=en(rh,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),_se={kernelName:rh,backendName:"cpu",kernelFunc:Cse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mse(n){const{inputs:e,backend:t,attrs:r}=n,{indices:s,updates:i}=e,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=Sl(i,s,a),f=!0,m=t.bufferSync(s),x=t.bufferSync(i),g=au(m,x,a,h,u,l,o,d,0,f);return t.makeTensorInfo(a,g.dtype,g.values)}const Nse={kernelName:Xb,backendName:"cpu",kernelFunc:Mse};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ese(n,e){let t=0,r=n.length,s=0;for(;t<r;)s=Math.floor((t+r)/2),n[s]<e?t=s+1:r=s;return r}function Rse(n,e){let t=0,r=n.length,s=0;for(;t<r;)s=Math.floor((t+r)/2),n[s]<=e?t=s+1:r=s;return r}function Lse(n,e,t,r,s,i){const a=Dn("int32",t*s);for(let o=0;o<t;++o){const l=n.slice(o*r,(o+1)*r),u=o*s;for(let d=0;d<s;++d)a[u+d]=i==="left"?Ese(l,e[d+u]):Rse(l,e[d+u])}return a}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ase(n){const{inputs:e,backend:t,attrs:r}=n,{sortedSequence:s,values:i}=e,{side:a}=r,o=t.data.get(s.dataId).values,l=t.data.get(i.dataId).values,u=Lse(o,l,s.shape[0],s.shape[1],i.shape[1],a);return t.makeTensorInfo(i.shape,"int32",u)}const zse={kernelName:Zb,backendName:"cpu",kernelFunc:Ase};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dse(n){const{inputs:e,backend:t}=n,{condition:r,t:s,e:i}=e;qe([r,s,i],"select");const a=r.shape.length,o=t.data.get(r.dataId).values,l=t.data.get(s.dataId).values,u=t.data.get(i.dataId).values,d=ps(s.dtype,i.dtype),h=Er(be(s.shape),d);let f=0;const m=a===0||a>1||s.shape.length===1?1:be(s.shape.slice(1));for(let x=0;x<o.length;x++)for(let g=0;g<m;g++)o[x]===1?h[f++]=l[x]:h[f++]=u[x];return t.makeTensorInfo(s.shape,d,h)}const Pse={kernelName:xm,backendName:"cpu",kernelFunc:Dse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fse=Zx,Gse=Hx,Ose=en(ih,n=>n>=0?Gse*n:Fse*(Math.exp(n)-1)),Wse={kernelName:ih,backendName:"cpu",kernelFunc:Ose};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vse=en(lh,n=>n<0?-1:n>0?1:0),$se={kernelName:lh,backendName:"cpu",kernelFunc:Vse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bse=en(ah,n=>Math.sin(n)),Xse={kernelName:ah,backendName:"cpu",kernelFunc:Bse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Use=en(oh,n=>Math.sinh(n)),Zse={kernelName:oh,backendName:"cpu",kernelFunc:Use};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hse=11920928955078125e-23,O3=Math.log(Hse)+2,Kse=en(ch,n=>{const e=n>-O3,t=n<O3,r=Math.exp(n);let s;return t?s=r:e?s=n:s=Math.log(1+r),s}),Yse={kernelName:ch,backendName:"cpu",kernelFunc:Kse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jse(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:i,paddings:a}=r;qe([s],"spaceToBatchND");const o=be(i),l=[[0,0]];l.push(...a);for(let y=1+i.length;y<s.shape.length;++y)l.push([0,0]);const u=zP.kernelFunc({inputs:{x:s},backend:t,attrs:{paddings:l,constantValue:0}}),d=jm(u.shape,i,o,!1),h=Qm(d.length,i.length,!1),f=Jm(u.shape,i,o,!1),m=hn({inputs:{x:u},backend:t,attrs:{shape:d}}),x=bs({inputs:{x:m},backend:t,attrs:{perm:h}}),g=hn({inputs:{x},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(x),g}const Qse={kernelName:Sm,backendName:"cpu",kernelFunc:jse};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jse(n){const{inputs:e,backend:t}=n,{indices:r,values:s,denseShape:i,defaultValue:a}=e;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${i.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${s.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const o=t.data.get(r.dataId).values,l=t.data.get(s.dataId).values,u=t.data.get(i.dataId).values,d=t.data.get(a.dataId).values[0],[h,f,m,x,g]=iP(o,r.shape,r.dtype,l,s.dtype,u,d);return[t.makeTensorInfo(f,r.dtype,h),t.makeTensorInfo([f[0]],s.dtype,m),t.makeTensorInfo([x.length],"bool",new Uint8Array(x.map(y=>Number(y)))),t.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}const qse={kernelName:Hb,backendName:"cpu",kernelFunc:Jse};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eie(n){const{inputs:e,backend:t}=n,{inputIndices:r,inputShape:s,newShape:i}=e;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${s.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(t.data.get(s.dataId).values),o=t.data.get(r.dataId).values,l=Array.from(t.data.get(i.dataId).values),[u,d,h]=aP(o,r.shape,r.dtype,a,l);return[t.makeTensorInfo(d,r.dtype,u),t.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}const tie={kernelName:Kb,backendName:"cpu",kernelFunc:eie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nie(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:i}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${s.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${i.shape}`);if(s.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=t.data.get(r.dataId).values,o=t.data.get(s.dataId).values,l=t.data.get(i.dataId).values,[u,d]=dC(a,r.shape,r.dtype,o,l,!0);return t.makeTensorInfo(d,r.dtype,u)}const rie={kernelName:Yb,backendName:"cpu",kernelFunc:nie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sie(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:i}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${s.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${i.shape}`);if(s.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=t.data.get(r.dataId).values,o=t.data.get(s.dataId).values,l=t.data.get(i.dataId).values,[u,d]=dC(a,r.shape,r.dtype,o,l);return t.makeTensorInfo(d,r.dtype,u)}const iie={kernelName:jb,backendName:"cpu",kernelFunc:sie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aie(n){const{inputs:e,backend:t,attrs:r}=n,{sparseIndices:s,sparseValues:i,defaultValue:a}=e,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:f}=Sl(i,s,o),m=!1,x=t.bufferSync(s);let g;switch(i.dtype){case"bool":{const y=t.bufferSync(i),v=!!t.data.get(a.dataId).values[0];g=au(x,y,o,f,d,u,l,h,v,m);break}case"float32":{const y=t.bufferSync(i),v=t.data.get(a.dataId).values[0];g=au(x,y,o,f,d,u,l,h,v,m);break}case"int32":{const y=t.bufferSync(i),v=t.data.get(a.dataId).values[0];g=au(x,y,o,f,d,u,l,h,v,m);break}case"string":{const y=t.bufferSync(i),v=eo(t.data.get(a.dataId).values[0]);g=au(x,y,o,f,d,u,l,h,v,m);break}default:throw new Error(`Unsupported type ${i.dtype}`)}return t.makeTensorInfo(o,g.dtype,g.values)}const oie={kernelName:Qb,backendName:"cpu",kernelFunc:aie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lie(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{numOrSizeSplits:i,axis:a}=r,o=At(a,s.shape)[0],l=LI(s,i,o),u=new Array(s.shape.length).fill(0),d=s.shape.slice();return l.map(h=>{const f=[...d];f[o]=h;const m=Eu({inputs:{x:s},backend:t,attrs:{begin:u,size:f}});return u[o]+=h,m})}const uie={kernelName:Tm,backendName:"cpu",kernelFunc:lie};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cie={kernelName:Jb,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,r=e;qe(t,"square");const s=r.data.get(t.dataId).values,i=new Float32Array(s.length);for(let a=0;a<s.length;++a){const o=s[a];i[a]=o*o}return{dataId:r.write(i,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const die=en(yh,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),hie={kernelName:yh,backendName:"cpu",kernelFunc:die};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pie(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:f}=r;qe(s,"stridedSlice");const{finalShapeSparse:m,finalShape:x,isIdentity:g,sliceDim0:y,isSimpleSlice:v,begin:w,end:I,strides:T}=fI(s.shape,i,a,o,l,u,d,h,f);let C;if(g)C=hn({inputs:{x:s},backend:t,attrs:{shape:x}});else if(y||v){P(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const E=dI(w,I,T),L=Eu({inputs:{x:s},backend:t,attrs:{begin:w,size:E}});C=hn({inputs:{x:L},backend:t,attrs:{shape:x}}),t.disposeIntermediateTensorInfo(L)}else{const E=t.bufferSync(s),L=uP(m,E,T,w);C=t.makeTensorInfo(x,L.dtype,L.values)}return C}const fie={kernelName:qb,backendName:"cpu",kernelFunc:pie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mie(n){const{inputs:e,backend:t,attrs:r}=n,{separator:s,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:d,dataSplits:h}=e,f=t.data.get(d.dataId).values,m=t.data.get(h.dataId).values,[x,g]=cP(f,m,s,i,a,o,l,u);return[t.makeTensorInfo([x.length],"string",x),t.makeTensorInfo(h.shape,"int32",g)]}const gie={kernelName:ex,backendName:"cpu",kernelFunc:mie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yie(n){const{inputs:e,backend:t,attrs:r}=n,{skipEmpty:s}=r,{input:i,delimiter:a}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=t.data.get(i.dataId).values,l=t.data.get(a.dataId).values[0],[u,d,h]=dP(o,l,s),f=d.length;return[t.makeTensorInfo([f,2],"int32",u),t.makeTensorInfo([f],"string",d),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const bie={kernelName:tx,backendName:"cpu",kernelFunc:yie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xie(n){const{inputs:e,backend:t,attrs:r}=n,{numBuckets:s}=r,{input:i}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=t.data.get(i.dataId).values,o=hP(a,s);return t.makeTensorInfo(i.shape,"int32",o)}const vie={kernelName:nx,backendName:"cpu",kernelFunc:xie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wie=en(fh,n=>Math.tan(n)),Sie={kernelName:fh,backendName:"cpu",kernelFunc:wie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tie=en(mh,n=>Math.tanh(n)),Iie={kernelName:mh,backendName:"cpu",kernelFunc:Tie};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kie(n){const{inputs:e,backend:t}=n,{tensor:r,indices:s,updates:i}=e,{sliceRank:a,numUpdates:o,sliceSize:l,strides:u,outputSize:d}=Sl(i,s,r.shape),h=!1,f=t.bufferSync(s),m=t.bufferSync(i),x=t.bufferSync(r),g=au(f,m,r.shape,d,l,o,a,u,x,h);return t.makeTensorInfo(r.shape,g.dtype,g.values)}const Cie={kernelName:Ub,backendName:"cpu",kernelFunc:kie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _ie(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reps:i}=r;qe(s,"tile");const a=fP(t.bufferSync(s),i);return t.makeTensorInfo(a.shape,a.dtype,a.values)}const Mie={kernelName:gh,backendName:"cpu",kernelFunc:_ie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nie(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{k:i,sorted:a}=r;qe(s,"topk");const o=t.data.get(s.dataId).values,[l,u]=gP(o,s.shape,s.dtype,i,a);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(u.shape,u.dtype,u.values)]}const Eie={kernelName:rx,backendName:"cpu",kernelFunc:Nie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rie(n){const{inputs:e,attrs:t,backend:r}=n,{image:s,transforms:i}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=t,[d,h,f,m]=s.shape,[x,g]=u??[h,f],y=[d,x,g,m],v=ut(s.shape),w=v[0],I=v[1],T=v[2],C=ut(y),E=C[0],L=C[1],M=C[2],R=mr(s.dtype,be(y));R.fill(l);const z=r.data.get(s.dataId).values,X=r.data.get(i.dataId).values;for(let U=0;U<d;++U){const G=i.shape[0]===1?X:X.subarray(U*8,U*8+8);for(let V=0;V<x;++V)for(let Z=0;Z<g;++Z)for(let J=0;J<m;++J){let te;const O=G[6]*Z+G[7]*V+1;if(O===0)continue;const Q=(G[0]*Z+G[1]*V+G[2])/O,A=(G[3]*Z+G[4]*V+G[5])/O,K=W3(Q,f,o),$=W3(A,h,o);switch(a){case"nearest":te=Fie(z,h,f,w,I,T,U,$,K,J,l);break;case"bilinear":te=Gie(z,h,f,w,I,T,U,$,K,J,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}const re=U*E+V*L+Z*M+J;R[re]=te}return r.makeTensorInfo(y,s.dtype,R)}return{dataId:r.write(R,y,s.dtype),shape:s.shape,dtype:s.dtype}}const Lie={kernelName:sx,backendName:"cpu",kernelFunc:Rie};function W3(n,e,t){switch(t){case"reflect":return Aie(n,e);case"wrap":return zie(n,e);case"nearest":return Pie(n,e);case"constant":default:return Die(n)}}function Aie(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const r=2*e;t<r&&(t=r*Math.trunc(-t/r)+t),t=t<-e?t+r:-t-1}else if(t>e-1)if(e<=1)t=0;else{const r=2*e;t-=r*Math.trunc(t/r),t>=e&&(t=r-t-1)}return rl(0,t,e-1)}function zie(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const r=e-1;t+=e*(Math.trunc(-t/r)+1)}else if(t>e-1)if(e<=1)t=0;else{const r=e-1;t-=e*Math.trunc(t/r)}return rl(0,t,e-1)}function Die(n,e){return n}function Pie(n,e){return rl(0,n,e-1)}function Zp(n,e,t,r,s,i,a,o,l,u,d){const h=a*r+o*s+l*i+u;return 0<=o&&o<e&&0<=l&&l<t?n[h]:d}function Fie(n,e,t,r,s,i,a,o,l,u,d){const h=Math.round(o),f=Math.round(l);return Zp(n,e,t,r,s,i,a,h,f,u,d)}function Gie(n,e,t,r,s,i,a,o,l,u,d){const h=Math.floor(o),f=Math.floor(l),m=h+1,x=f+1,g=(x-l)*Zp(n,e,t,r,s,i,a,h,f,u,d)+(l-f)*Zp(n,e,t,r,s,i,a,h,x,u,d),y=(x-l)*Zp(n,e,t,r,s,i,a,m,f,u,d)+(l-f)*Zp(n,e,t,r,s,i,a,m,x,u,d);return(m-o)*g+(o-h)*y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oie(n){const{inputs:e,attrs:t,backend:r}=n,{axis:s}=t,{x:i}=e;qe(i,"unique");const a=r.data.get(i.dataId).values,{outputValues:o,outputShape:l,indices:u}=yP(a,s,i.shape,i.dtype);return[r.makeTensorInfo(l,i.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}const Wie={kernelName:ix,backendName:"cpu",kernelFunc:Oie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vie(n){const{inputs:e,backend:t,attrs:r}=n,{value:s}=e;let{axis:i}=r;i<0&&(i+=s.shape.length);const a=s.shape.length,o=s.shape[i],l=new Array(a-1);let u=0;for(let m=0;m<a;m++)m!==i&&(l[u++]=s.shape[m]);const d=new Array(a).fill(0),h=s.shape.slice();h[i]=1;const f=new Array(o);for(let m=0;m<f.length;m++){d[i]=m;const x=Eu({inputs:{x:s},backend:t,attrs:{begin:d,size:h}});f[m]=hn({inputs:{x},backend:t,attrs:{shape:l}}),t.disposeIntermediateTensorInfo(x)}return f}const $ie={kernelName:Cm,backendName:"cpu",kernelFunc:Vie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bie(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,segmentIds:i}=e,{numSegments:a}=r;qe(s,"unsortedSegmentSum");const o=s.shape.length,l=i.shape.length,u=[],d=[],h=o-l;let f=i;for(let x=0;x<h;++x){const g=G0({inputs:{input:f},backend:t,attrs:{dim:x+1}});f=g,d.push(g)}for(let x=0;x<a;++x){const g=uo(x,"int32"),y=t.makeTensorInfo([],"int32",g),v=LD({inputs:{a:y,b:f},backend:t}),w=pl({inputs:{x:v},backend:t,attrs:{dtype:"float32"}}),I=gv({inputs:{a:w,b:s},backend:t}),T=ug({inputs:{x:I},backend:t,attrs:{axis:0,keepDims:!1}});u.push(T),d.push(y),d.push(v),d.push(w),d.push(I),d.push(T)}const m=AP({inputs:u,backend:t,attrs:{axis:0}});return d.forEach(x=>t.disposeIntermediateTensorInfo(x)),m}const Xie={kernelName:_m,backendName:"cpu",kernelFunc:Bie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uie=[Oee,vq,Vee,Bee,Cq,Uee,Hee,Yee,Qee,qee,tte,rte,ite,lte,cte,pte,mte,yte,xte,Fee,wte,Tte,kte,Mq,_te,Iq,Eq,Nte,wq,Rte,Ate,zte,Pte,Gte,Wte,$te,Xte,Zte,Kte,jte,Jte,ene,nne,sne,ine,one,une,dne,hne,pne,fne,gne,xne,Eee,wne,Rq,Nne,Lq,Ene,zq,Pne,Fne,One,Pq,Gq,Vne,Bne,Une,Hne,Wq,$q,Sq,Yne,Lte,Qne,qne,tre,Ree,Xq,Zq,rre,Kq,ire,lre,cre,pre,mre,yre,bre,jq,vre,Sre,Ire,Cre,Mre,Ere,Lre,Jq,zre,Fre,Wre,eee,nee,Bre,Zre,Yre,see,Qre,qre,ese,zP,sse,Aee,oee,ase,lse,cse,hse,Tq,i2,fse,zee,Dee,Pee,gse,bse,vse,Sse,Ise,kse,_se,mee,Nse,zse,Pse,Wse,yee,$se,Xse,Zse,bee,Gre,Yse,Qse,qse,tie,rie,iie,oie,uie,wee,cie,Tee,kee,hie,fie,gie,bie,vie,Nee,yne,Sie,Iie,Cie,Mie,Eie,Lie,iee,Wie,$ie,Xie,Jre];for(const n of Uie)xs(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ql={},Xy={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function DP(n,e){ql[n]=e}function Ki(n,e){if(!(n in ql)||e!=null){const r=Hie(n,e);if(r!==null)ql[n]=r;else return console.log("Could not get context for WebGL version",n),null}const t=ql[n];return t==null||t.isContextLost()?(delete ql[n],Ki(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),ql[n])}function Zie(n){if(!de().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function Hie(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??Zie(n);return t.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete ql[n]},!1),de().getBool("SOFTWARE_WEBGL_ENABLED")&&(Xy.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",Xy)||t.getContext("experimental-webgl",Xy):t.getContext("webgl2",Xy)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var bf;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(bf||(bf={}));var js;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(js||(js={}));var _r;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(_r||(_r={}));function cg(n,e){return[e,n]}function Kie(n,e){return n*e}function Uy(n){const e=be(n),t=Math.ceil(e/4);return f0(t)}function Lh(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function Yie(n,e){const[t,r]=Lh(n,e);return t*r*4}function gC(n,e){const t=n;let r,s,i,a,o,l,u,d,h,f;return de().getNumber("WEBGL_VERSION")===2?(r=t.R32F,s=t.R16F,i=t.RGBA16F,a=t.RGBA32F,o=t.RED,u=4,d=1,h=t.HALF_FLOAT,f=t.FLOAT,l=t.RGBA8):(r=n.RGBA,s=n.RGBA,i=n.RGBA,a=t.RGBA,o=n.RGBA,u=4,d=4,h=e!=null?e.HALF_FLOAT_OES:null,f=n.FLOAT,l=n.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:d,textureTypeHalfFloat:h,textureTypeFloat:f}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Be(n,e){const t=e();return de().getBool("DEBUG")&&jie(n),t}function jie(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+FP(n,e))}const Qie=596e-10,Jie=65504;function PP(n){return!!(de().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||Qie<Math.abs(n)&&Math.abs(n)<Jie)}function FP(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Hp(n,e){return yo(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function GP(n,e){const t=yo(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Be(n,()=>n.shaderSource(t,e)),Be(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function OP(n,e){const t=yo(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Be(n,()=>n.shaderSource(t,e)),Be(n,()=>n.compileShader(t)),de().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw yC(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const qie=/ERROR: [0-9]+:([0-9]+):/g;function yC(n,e){const t=qie.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const r=+t[1],s=n.split(`
`),i=s.length.toString().length+2,a=s.map((h,f)=>uu((f+1).toString(),i)+h);let o=0;for(let h=0;h<a.length;h++)o=Math.max(a[h].length,o);const l=a.slice(0,r-1),u=a.slice(r-1,r),d=a.slice(r);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${uu(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join(`
`))}function WP(n){return yo(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function VP(n,e){if(Be(n,()=>n.linkProgram(e)),!de().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function a0(n,e){if(Be(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function $P(n,e){const t=yo(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Be(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),Be(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function BP(n,e){const t=yo(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Be(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),Be(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function eae(){return de().getNumber("WEBGL_VERSION")===2?1:4}function XP(n){return yo(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function UP(n,e){const t=de().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const r=`[${n}x${e}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(n>t||e>t){const r=`[${n}x${e}]`,s=`[${t}x${t}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+s+".")}}function ZP(n){return yo(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function o2(n,e,t,r,s,i,a){const o=n.getAttribLocation(e,t);return o===-1?!1:(Be(n,()=>n.bindBuffer(n.ARRAY_BUFFER,r)),Be(n,()=>n.vertexAttribPointer(o,s,n.FLOAT,!1,i,a)),Be(n,()=>n.enableVertexAttribArray(o)),!0)}function HP(n,e,t){JP(n,t),Be(n,()=>n.activeTexture(n.TEXTURE0+t)),Be(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function tae(n,e){JP(n,e),Be(n,()=>n.activeTexture(n.TEXTURE0+e)),Be(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function KP(n,e,t){return yo(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function YP(n,e,t){return n.getUniformLocation(e,t)}function jP(n,e,t,r){Be(n,()=>HP(n,e,r)),Be(n,()=>n.uniform1i(t,r))}function nae(n){Be(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,null)),Be(n,()=>n.viewport(0,0,n.canvas.width,n.canvas.height)),Be(n,()=>n.scissor(0,0,n.canvas.width,n.canvas.height))}function o0(n,e,t){Be(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),Be(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function l2(n,e){Be(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),Be(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Kp(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+QP(n,e))}function QP(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function yo(n,e,t){const r=Be(n,()=>e());if(r==null)throw new Error(t);return r}function JP(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+n.TEXTURE0;if(r<n.TEXTURE0||r>t){const s=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${s}.`)}}function Ru(n,e=2){return be(n.slice(0,n.length-e))}function Lu(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Yp(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[Ru(n),...Lu(n)]),e}function qP(n,e=!1){let t=de().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=de().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&de().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=t/2),e&&(t=t*2,r=r*2,n=n.map((o,l)=>l>=n.length-2?eb(n[l]):n[l]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=lo(n).newShape);let s=be(n),i=null;n.length<=1&&s<=t?i=[1,s]:n.length===2&&n[0]<=t&&n[1]<=t?i=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?i=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?i=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?i=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(i=[n[0],n[1]*n[2]*n[3]]);const a=i!=null&&Math.max(...i)>r&&Math.min(...i)<=(e?2:1)&&Math.min(...i)>0;if(i==null||a)if(e){const o=Ru(n);let l=2,u=2;n.length&&([l,u]=Lu(n)),s=o*(l/2)*(u/2),i=f0(s).map(d=>d*2)}else i=f0(s);return i}function Zy(n){return n%2===0}function xf(n,e){if(n=n.slice(-2),e=e.slice(-2),Ft(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],r=e[e.length-1];if(t===r||Zy(t)&&Zy(r)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&Zy(n[0])&&Zy(e[0])}let l0,u0;function eF(n){if(l0==null){const e=Ki(n);l0=e.getParameter(e.MAX_TEXTURE_SIZE)}return l0}function rae(){l0=null}function sae(){u0=null}function tF(n){if(u0==null){const e=Ki(n);u0=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,u0)}function nF(n){if(n===0)return 0;let e;const t=Ki(n);return Qs(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:Qs(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function Qs(n,e){return n.getExtension(e)!=null}function u2(n){try{if(Ki(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function rF(n){if(n===0)return!1;const e=Ki(n);if(n===1){if(!Qs(e,"OES_texture_float"))return!1}else if(!Qs(e,"EXT_color_buffer_float"))return!1;return c2(e)}function sF(n){if(n===0)return!1;const e=Ki(n);if(n===1){if(!Qs(e,"OES_texture_float")||!Qs(e,"WEBGL_color_buffer_float"))return!1}else{if(Qs(e,"EXT_color_buffer_float"))return c2(e);const t="EXT_color_buffer_half_float";if(Qs(e,t)){const r=e.getExtension(t);return iae(e,r)}return!1}return c2(e)}function c2(n){const e=gC(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,r),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const s=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(r),s}function iae(n,e){const t=gC(n,e),r=n.createTexture();n.bindTexture(n.TEXTURE_2D,r),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const s=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,s),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,r,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(r),n.deleteFramebuffer(s),i}function iF(n){return n!==2?!1:Ki(n).fenceSync!=null}function Ah(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&P(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}const aae=Object.freeze(Object.defineProperty({__proto__:null,assertNotComplex:Ah,bindCanvasToFramebuffer:nae,bindColorTextureToFramebuffer:o0,bindTextureToProgramUniformSampler:jP,bindTextureUnit:HP,bindVertexBufferToProgramAttribute:o2,callAndCheck:Be,canBeRepresented:PP,createFragmentShader:OP,createFramebuffer:ZP,createProgram:WP,createStaticIndexBuffer:BP,createStaticVertexBuffer:$P,createTexture:XP,createVertexShader:GP,getBatchDim:Ru,getExtensionOrThrow:Hp,getFramebufferErrorMessage:QP,getMaxTexturesInShader:tF,getNumChannels:eae,getProgramUniformLocation:YP,getProgramUniformLocationOrThrow:KP,getRowsCols:Lu,getShapeAs3D:Yp,getTextureShapeFromLogicalShape:qP,getWebGLDisjointQueryTimerVersion:nF,getWebGLErrorMessage:FP,getWebGLMaxTextureSize:eF,hasExtension:Qs,isCapableOfRenderingToFloatTexture:rF,isDownloadFloatTextureEnabled:sF,isReshapeFree:xf,isWebGLFenceEnabled:iF,isWebGLVersionEnabled:u2,linkProgram:VP,logShaderSourceAndInfoLog:yC,resetMaxTextureSize:rae,resetMaxTexturesInShader:sae,unbindColorTextureFromFramebuffer:l2,unbindTextureUnit:tae,validateFramebuffer:Kp,validateProgram:a0,validateTextureSize:UP},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tt=de();tt.registerFlag("HAS_WEBGL",()=>tt.getNumber("WEBGL_VERSION")>0);tt.registerFlag("WEBGL_VERSION",()=>u2(2)?2:u2(1)?1:0);tt.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);tt.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>tt.get("WEBGL_VERSION")===2);tt.registerFlag("WEBGL_CPU_FORWARD",()=>!0);tt.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);tt.registerFlag("WEBGL_PACK",()=>tt.getBool("HAS_WEBGL"));tt.registerFlag("WEBGL_PACK_NORMALIZATION",()=>tt.getBool("WEBGL_PACK"));tt.registerFlag("WEBGL_PACK_CLIP",()=>tt.getBool("WEBGL_PACK"));tt.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>tt.getBool("WEBGL_PACK"));tt.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>tt.getBool("WEBGL_PACK"));tt.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>tt.getBool("WEBGL_PACK"));tt.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>tt.getBool("WEBGL_PACK"));tt.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>tt.getBool("WEBGL_PACK"));tt.registerFlag("WEBGL_PACK_REDUCE",()=>tt.getBool("WEBGL_PACK"));tt.registerFlag("WEBGL_LAZILY_UNPACK",()=>tt.getBool("WEBGL_PACK"));tt.registerFlag("WEBGL_CONV_IM2COL",()=>tt.getBool("WEBGL_PACK"));tt.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>tt.getBool("WEBGL_PACK"));tt.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>eF(tt.getNumber("WEBGL_VERSION")));tt.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>tF(tt.getNumber("WEBGL_VERSION")));tt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=tt.getNumber("WEBGL_VERSION");return n===0?0:nF(n)});tt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>tt.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!X2());tt.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>rF(tt.getNumber("WEBGL_VERSION")));tt.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>tt.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:tt.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));tt.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>sF(tt.getNumber("WEBGL_VERSION")));tt.registerFlag("WEBGL_FENCE_API_ENABLED",()=>iF(tt.getNumber("WEBGL_VERSION")));tt.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>tt.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);tt.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});tt.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>X2()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});tt.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);tt.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);tt.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);tt.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);tt.registerFlag("WEBGL_EXP_CONV",()=>!1);tt.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>tt.getBool("IS_TEST"));tt.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);tt.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);tt.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);tt.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ns(){let n,e,t,r,s,i,a,o,l,u;return de().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",r="in",s="texture",i="outputColor",a="out vec4 outputColor;",o=de().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",r="varying",s="texture2D",i="gl_FragColor",a="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:r,texture2D:s,output:i,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qu(n,e,t="index"){const r=ut(e);return r.map((s,i)=>{const a=`int ${n[i]} = ${t} / ${s}`,o=i===r.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * ${s}`:`index -= ${n[i]} * ${s}`;return`${a}; ${o};`}).join("")}function yv(n,e,t="index"){const r=ut(e);return r.map((s,i)=>{const a=`int ${n[i]} = ${t} / outShapeStrides[${i}]`,o=i===r.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * outShapeStrides[${i}]`:`index -= ${n[i]} * outShapeStrides[${i}]`;return`${a}; ${o};`}).join("")}function oae(n,e){const t=n.length,r=n.map(i=>`${e}[${i}]`),s=new Array(t-1);s[t-2]=r[t-1];for(let i=t-3;i>=0;--i)s[i]=`(${s[i+1]} * ${r[i+1]})`;return s}function lae(n,e,t="index"){const r=n.map((i,a)=>a),s=oae(r,e);return s.map((i,a)=>{const o=`int ${n[a]} = ${t} / ${s[a]}`,l=a===s.length-1?`int ${n[a+1]} = ${t} - ${n[a]} * ${s[a]}`:`index -= ${n[a]} * ${s[a]}`;return`${o}; ${l};`}).join("")}function bC(n){const e=ut(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function xC(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const aF=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:oF}=az;function uae(n,e,t){const r=[];if(n.forEach(f=>{const m=be(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?r.push(`uniform float ${f.name}${m>1?`[${m}]`:""};`):(r.push(`uniform sampler2D ${f.name};`),r.push(`uniform int offset${f.name};`)),t.enableShapeUniforms){const{uniformShape:x}=vC(t.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(x.length){case 1:r.push(`uniform int ${f.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${f.name}Shape;`);break}r.push(`uniform ivec2 ${f.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break}r.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(f=>{r.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});const s=r.join(`
`),i=n.map(f=>cae(f,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),a=e.texShape,o=ns(),l=pae(o);let u,d,h=gae(o);return e.isPacked?(u=dae(e.logicalShape,a,t.enableShapeUniforms),d=mae(o)):(u=hae(e.logicalShape,a,t.enableShapeUniforms),d=fae(o)),t.packedInputs&&(h+=vae),[h,l,d,s,u,i,t.userCode].join(`
`)}function zh(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return Lae(n,e);case 1:return zae(n,e);case 2:return Pae(n,e);case 3:return Gae(n,e);case 4:return Wae(n,e);case 5:return Vae(n);case 6:return $ae(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function lF(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return Rae(n);case 1:return Aae(n,e);case 2:return Dae(n,e);case 3:return Fae(n,e);default:return Oae(n,e)}}function cae(n,e,t=!1,r){let s="";t?s+=lF(n,r):s+=zh(n,r);const i=n.shapeInfo.logicalShape,a=e.logicalShape;return i.length<=a.length&&(t?s+=Bae(n,e):s+=Xae(n,e)),s}function dae(n,e,t){switch(n.length){case 0:return uF();case 1:return wae(n,e,t);case 2:return Nae(n,e,t);case 3:return Tae(n,e,t);default:return kae(n,e,t)}}function hae(n,e,t){switch(n.length){case 0:return uF();case 1:return Sae(n,e,t);case 2:return Eae(n,e,t);case 3:return Iae(n,e,t);case 4:return Cae(n,e,t);case 5:return _ae(n,e);case 6:return Mae(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function pae(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function fae(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function mae(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function gae(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${yae}
    ${bae}
    ${xae}
  `}const yae=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,bae=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,xae=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,vae=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function uF(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function wae(n,e,t){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return r[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function Sae(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function Tae(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[2]/2),i=s*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec3(b, r, c);
    }
  `}function Iae(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${yv(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const r=qu(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function kae(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(n[n.length-1]/2),i=s*Math.ceil(n[n.length-2]/2);let a=i,o="",l="b, r, c";for(let u=2;u<n.length-1;u++)a*=n[n.length-u-1],o=`
      int b${u} = index / ${a};
      index -= b${u} * ${a};
    `+o,l=`b${u}, `+l;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${o}

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec${n.length}(${l});
    }
  `}function Cae(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${yv(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const r=qu(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function _ae(n,e){const t=qu(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function Mae(n,e){const t=qu(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Nae(n,e,t){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Ft(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;const s=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec2(r, c);
    }
  `}function Eae(n,e,t){return Ft(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function ec(n){return`offset${n}`}function Rae(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),r=ns();return`
    vec4 ${t}() {
      return ${r.texture2D}(${e}, halfCR);
    }
  `}function Lae(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${r}() {return ${t};}`;const[s,i]=n.shapeInfo.texShape;if(s===1&&i===1)return`
      float ${r}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=ec(t);if(e)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${a});
      return sampleTexture(${t}, uv);
    }
  `;const[o,l]=n.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${o}, ${l}, ${a});
      return sampleTexture(${t}, uv);
    }
  `}function Aae(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=n.shapeInfo.texShape,i=ns();if(e)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${i.texture2D}(${t}, uv);
    }
  `;const a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${i.texture2D}(${t}, uv);
    }
  `}function zae(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${Dh(n)}
      }
    `;const s=n.shapeInfo.texShape,i=s[0],a=s[1];if(a===1&&i===1)return`
      float ${r}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const o=ec(t);return a===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);
        return sampleTexture(${t}, uv);
      }
    `:i===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${o});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${i}, ${a}, index + ${o});
      return sampleTexture(${t}, uv);
    }
  `}function Dae(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n.shapeInfo.texShape,a=i[0],o=i[1],l=ns();if(i!=null&&Ft(t,i))return e?`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${l.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${a}.0);

        return ${l.texture2D}(${r}, uv);
      }
    `;if(e)return`
    vec4 ${s}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `;const u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],d=Math.ceil(t[1]/2);return`
    vec4 ${s}(int row, int col) {
      vec2 uv = packedUVfrom2D(${d}, ${u[0]}, ${u[1]}, row, col);
      return ${l.texture2D}(${r}, uv);
    }
  `}function Pae(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n.shapeInfo.texShape;if(i!=null&&Ft(t,i)){if(e)return`
      float ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;const f=i[0],m=i[1];return`
    float ${s}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${m}.0, ${f}.0);
      return sampleTexture(${r}, uv);
    }
  `}const{newShape:a,keptDims:o}=lo(t),l=a;if(l.length<t.length){const f=Ph(n,l),m=["row","col"];return`
      ${zh(f,e)}
      float ${s}(int row, int col) {
        return ${s}(${Fh(m,o)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${Dh(n)}
      }
    `;const u=i[0],d=i[1],h=ec(r);return d===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${r}, uv);
    }
  `:u===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:e?`
      float ${s}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${s}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${h};
    vec2 uv = uvFromFlat(${u}, ${d}, index);
    return sampleTexture(${r}, uv);
  }
`}function Fae(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(t[0]===1){const f=t.slice(1),m=[1,2],x=Ph(n,f),g=["b","row","col"];return`
        ${lF(x,e)}
        vec4 ${s}(int b, int row, int col) {
          return ${s}(${Fh(g,m)});
        }
      `}const o=ns();if(e)return`
    vec4 ${s}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${r}, uv);
    }
  `;const l=a[0],u=a[1],d=Math.ceil(t[2]/2),h=d*Math.ceil(t[1]/2);return`
    vec4 ${s}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${u}, ${h}, ${d}, b, row, col);
      return ${o.texture2D}(${r}, uv);
    }
  `}function Gae(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t[1]*t[2],a=t[2],{newShape:o,keptDims:l}=lo(t),u=o;if(u.length<t.length){const g=Ph(n,u),y=["row","col","depth"];return`
        ${zh(g,e)}
        float ${s}(int row, int col, int depth) {
          return ${s}(${Fh(y,l)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${i}, ${a}, 1)));
        ${Dh(n)}
      }
    `;const d=n.shapeInfo.texShape,h=d[0],f=d[1],m=n.shapeInfo.flatOffset;if(f===i&&m==null)return e?`
      float ${s}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${s}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${f}.0, ${h}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(f===a&&m==null)return e?`
      float ${s}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${f}.0, ${h}.0);
      return sampleTexture(${r}, uv);
    }
  `;const x=ec(r);return e?`
    float ${s}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${x};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${s}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${i} + col * ${a} + depth + ${x};
        vec2 uv = uvFromFlat(${h}, ${f}, index);
        return sampleTexture(${r}, uv);
      }
  `}function Oae(n,e){const t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=ns();if(e)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${t}, uv);
    }
  `;const i=n.shapeInfo.logicalShape,a=i.length,o=n.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],d=l[1],h=Math.ceil(i[a-1]/2);let f=h*Math.ceil(i[a-2]/2),m="int b, int row, int col",x=`b * ${f} + (row / 2) * ${h} + (col / 2)`;for(let g=2;g<a-1;g++)m=`int b${g}, `+m,f*=i[a-g-1],x=`b${g} * ${f} + `+x;return`
    vec4 ${r}(${m}) {
      int index = ${x};
      int texR = index / ${d};
      int texC = index - texR * ${d};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}, ${u});
      return ${s.texture2D}(${t}, uv);
    }
  `}function Wae(n,e){const t=n.shapeInfo.logicalShape,r=n.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=t[3],a=t[2]*i,o=t[1]*a,{newShape:l,keptDims:u}=lo(t);if(l.length<t.length){const w=Ph(n,l),I=["row","col","depth","depth2"];return`
      ${zh(w,e)}
      float ${s}(int row, int col, int depth, int depth2) {
        return ${s}(${Fh(I,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${a}, ${i}, 1)));
        ${Dh(n)}
      }
    `;const d=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,f=h[0],m=h[1],x=`int stride2 = ${r}Shape[3];`,g=`int stride1 = ${r}Shape[2] * stride2;`,y=`int stride0 = ${r}Shape[1] * stride1;`;if(m===o&&d==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        ${x}
        ${g}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${f}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(m===i&&d==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${f}.0);
        return sampleTexture(${r}, uv);
      }
    `;const v=ec(r);return e?`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${x}
      ${g}
      ${y}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${v});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${a} +
          depth * ${i} + depth2;
      vec2 uv = uvFromFlat(${f}, ${m}, index + ${v});
      return sampleTexture(${r}, uv);
    }
  `}function Vae(n){const e=n.shapeInfo.logicalShape,t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),s=e[4],i=e[3]*s,a=e[2]*i,o=e[1]*a,{newShape:l,keptDims:u}=lo(e);if(l.length<e.length){const g=Ph(n,l),y=["row","col","depth","depth2","depth3"];return`
      ${zh(g)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${Fh(y,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${a}, ${i}, ${s})) +
          depth3;
        ${Dh(n)}
      }
    `;const d=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,f=h[0],m=h[1];if(m===o&&d==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(m===s&&d==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;const x=ec(t);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${a} + depth * ${i} +
          depth2 * ${s} + depth3 + ${x};
      vec2 uv = uvFromFlat(${f}, ${m}, index);
      return sampleTexture(${t}, uv);
    }
  `}function $ae(n){const e=n.shapeInfo.logicalShape,t=n.name,r="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:s,keptDims:i}=lo(e);if(s.length<e.length){const y=Ph(n,s),v=["row","col","depth","depth2","depth3","depth4"];return`
      ${zh(y)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${Fh(v,i)});
      }
    `}const a=e[5],o=e[4]*a,l=e[3]*o,u=e[2]*l,d=e[1]*u;if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${d}, ${u}, ${l}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${Dh(n)}
      }
    `;const h=n.shapeInfo.flatOffset,f=n.shapeInfo.texShape,m=f[0],x=f[1];if(x===d&&h==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${l}, ${o}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${x}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(x===a&&h==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${x}.0, ${m}.0);
        return sampleTexture(${t}, uv);
      }
    `;const g=ec(t);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${d} + col * ${u} + depth * ${l} +
          depth2 * ${o} + depth3 * ${a} + depth4 + ${g};
      vec2 uv = uvFromFlat(${m}, ${x}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Dh(n){const e=n.name,t=be(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function Bae(n,e){const t=n.name,r=t.charAt(0).toUpperCase()+t.slice(1),s="get"+r+"AtOutCoords",i=n.shapeInfo.logicalShape.length,a=e.logicalShape.length,o=oF(n.shapeInfo.logicalShape,e.logicalShape),l=rn(a),u=a-i;let d;const h=["x","y","z","w","u","v"];i===0?d="":a<2&&o.length>=1?d="coords = 0;":d=o.map(y=>`coords.${h[y+u]} = 0;`).join(`
`);let f="";a<2&&i>0?f="coords":f=n.shapeInfo.logicalShape.map((y,v)=>`coords.${h[v+u]}`).join(", ");let m="return outputValue;";const x=be(n.shapeInfo.logicalShape)===1,g=be(e.logicalShape)===1;if(i===1&&!x&&!g)m=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(x&&!g)a===1?m=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:m=`
        return vec4(outputValue.x);
      `;else if(o.length){const y=i-2,v=i-1;o.indexOf(y)>-1&&o.indexOf(v)>-1?m="return vec4(outputValue.x);":o.indexOf(y)>-1?m="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(v)>-1&&(m="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${s}() {
      ${l} coords = getOutputCoords();
      ${d}
      vec4 outputValue = get${r}(${f});
      ${m}
    }
  `}function Xae(n,e){const t=n.name,r=t.charAt(0).toUpperCase()+t.slice(1),s="get"+r+"AtOutCoords",i=e.texShape,a=n.shapeInfo.texShape,o=n.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!n.shapeInfo.isUniform&&o===l&&n.shapeInfo.flatOffset==null&&Ft(a,i))return`
      float ${s}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const u=rn(l),d=oF(n.shapeInfo.logicalShape,e.logicalShape),h=l-o;let f;const m=["x","y","z","w","u","v"];o===0?f="":l<2&&d.length>=1?f="coords = 0;":f=d.map(g=>`coords.${m[g+h]} = 0;`).join(`
`);let x="";return l<2&&o>0?x="coords":x=n.shapeInfo.logicalShape.map((g,y)=>`coords.${m[y+h]}`).join(", "),`
    float ${s}() {
      ${u} coords = getOutputCoords();
      ${f}
      return get${r}(${x});
    }
  `}function rn(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function vC(n,e,t){const{newShape:r,keptDims:s}=lo(e),i=e.length,a=n&&i===3&&e[0]===1,o=a?e.slice(1):r,l=!n&&i>1&&!Ft(e,t)&&r.length<i||a;return{useSqueezeShape:l,uniformShape:l?o:e,keptDims:s}}function Ph(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function Fh(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uae(n,e,t,r){const s=t.map((d,h)=>{const f={logicalShape:d.shape,texShape:d.isUniform?null:d.texData.texShape,isUniform:d.isUniform,isPacked:d.isUniform?!1:d.texData.isPacked,flatOffset:null};return d.texData!=null&&d.texData.slice!=null&&d.texData.slice.flatOffset>0&&(f.flatOffset=d.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:f}}),i=s.map(d=>d.shapeInfo),a={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=uae(s,a,e),l=OP(n.gl,o),u=n.createProgram(l);return de().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(u),Object.assign({program:e,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:a},cF(n,e,u)))}function cF(n,e,t){const r=[],s=[];let i,a,o,l=null,u=null;u=n.getUniformLocation(t,"NAN",!1),de().getNumber("WEBGL_VERSION")===1&&(l=n.getUniformLocation(t,"INFINITY",!1));const d=!1;for(const h of e.variableNames){const f={name:h,uniform:n.getUniformLocation(t,h,d),offset:n.getUniformLocation(t,`offset${h}`,d)};e.enableShapeUniforms&&(f.shape=n.getUniformLocation(t,`${h}Shape`,d),f.texShape=n.getUniformLocation(t,`${h}TexShape`,d)),r.push(f)}if(e.enableShapeUniforms&&(i=n.getUniformLocation(t,"outShape",d),o=n.getUniformLocation(t,"outShapeStrides",d),a=n.getUniformLocation(t,"outTexShape",d)),e.customUniforms)for(const h of e.customUniforms)s.push(n.getUniformLocation(t,h.name,d));return{variablesLocations:r,customUniformLocations:s,infLoc:l,nanLoc:u,outShapeLocation:i,outShapeStridesLocation:o,outTexShapeLocation:a}}function V3(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,r)=>{const s=t.logicalShape,i=e[r],a=i.shape;if(!Ft(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(t.isUniform&&i.isUniform)return;const o=t.texShape,l=i.isUniform?null:i.texData.texShape;if(!Ft(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)})}function Zae(n,e,t,r,s){e.program.enableShapeUniforms||(V3(e.inShapeInfos,t),V3([e.outShapeInfo],[r]));const i=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?n.setOutputPackedMatrixTexture(i.texture,a[0],a[1]):n.setOutputMatrixTexture(i.texture,a[0],a[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),de().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let l=0;l<t.length;++l){const u=t[l],{uniform:d,offset:h,shape:f,texShape:m}=e.variablesLocations[l];if(f){const{uniformShape:x}=vC(e.program.packedInputs,u.shape,u.texData.texShape);switch(x.length){case 1:n.gl.uniform1iv(f,new Int32Array(x));break;case 2:n.gl.uniform2iv(f,new Int32Array(x));break;case 3:n.gl.uniform3iv(f,new Int32Array(x));break;case 4:n.gl.uniform4iv(f,new Int32Array(x));break}}if(m&&n.gl.uniform2i(m,u.texData.texShape[0],u.texData.texShape[1]),d!=null){if(u.isUniform){if(be(u.shape)<2)n.gl.uniform1f(d,u.uniformValues[0]);else{let x=u.uniformValues;x instanceof Float32Array||(x=new Float32Array(x)),n.gl.uniform1fv(d,x)}continue}u.texData.slice!=null&&h!=null&&n.gl.uniform1i(h,u.texData.slice.flatOffset),n.setInputMatrixTexture(u.texData.texture.texture,d,l)}}const o=e.outShapeLocation;if(o)switch(r.shape.length){case 1:n.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:n.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:n.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:n.gl.uniform4iv(o,new Int32Array(r.shape));break}if(e.outShapeStridesLocation){const l=ut(r.shape);switch(r.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(l));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(l));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(l));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),e.program.customUniforms&&s)for(let l=0;l<e.program.customUniforms.length;++l){const u=e.program.customUniforms[l],d=e.customUniformLocations[l],h=s[l];if(u.type==="float")n.gl.uniform1fv(d,h);else if(u.type==="vec2")n.gl.uniform2fv(d,h);else if(u.type==="vec3")n.gl.uniform3fv(d,h);else if(u.type==="vec4")n.gl.uniform4fv(d,h);else if(u.type==="int")n.gl.uniform1iv(d,h);else if(u.type==="ivec2")n.gl.uniform2iv(d,h);else if(u.type==="ivec3")n.gl.uniform3iv(d,h);else if(u.type==="ivec4")n.gl.uniform4iv(d,h);else throw Error(`uniform type ${u.type} is not supported yet.`)}n.executeProgram()}function Hae(n,e,t){let r="";e.concat(t).forEach(a=>{const o=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!a.isUniform){const l=a.texData.texShape,{useSqueezeShape:u,uniformShape:d,keptDims:h}=vC(n.packedInputs,a.shape,l);let f="",m="",x="";if(d.length===1&&n.packedInputs){const C=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];f=`${C[0]>1}_${C[1]>1}`}else if(d.length===2&&!n.packedInputs)m=`${d[0]>1}_${d[1]>1}`;else if(d.length>2&&!n.packedInputs){const C=ut(d);x=`${C[0]===l[1]}_${C[C.length-1]===l[1]}`}const g=a.shape.length,y=d.length===2&&Ft(a.shape,l),v=be(a.shape)===1,w=ku(a.shape,t.shape),I=!n.packedInputs&&g===t.shape.length&&Ft(l,t.texData.texShape),T=n.packedInputs||d.length>2?"":`${l[0]>1}_${l[1]>1}`;r+=`${g}_${I}_${u?h:""}_${d.length}_${v}_${w}_${y}_${f}_${m}_${x}_${T}_${o}`}else{const l=a.isUniform?"uniform":a.texData.texShape;r+=`${a.shape}_${l}_${o}`}});const s=n.userCode;let i=n.constructor.name;return i+="_"+r+"_"+s+`${de().getNumber("WEBGL_VERSION")}`,i}function Vr(n){return de().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kae{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=bf.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=ns();this.outputShape=e,this.enableShapeUniforms=Vr(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?yv(["r","c","d"],e):qu(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yae{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=bf.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=ns();this.outputShape=e,this.enableShapeUniforms=Vr(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?yv(["r","c","d"],e):qu(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jae{constructor(e){this.variableNames=["A"],this.outTexUsage=js.DOWNLOAD;const t=ns();this.outputShape=e,this.userCode=`
      ${aF}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qae{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=js.DOWNLOAD;const t=ns();this.outputShape=e,this.userCode=`
      ${aF}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jae={R:0,G:1,B:2,A:3};let $3=class{constructor(e,t=!1,r="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=ns();this.outputShape=e,this.enableShapeUniforms=Vr(this.outputShape.length);let i="result";t&&(i="floor(result * 255. + 0.5)");let a="";for(let o=0;o<r.length;o++){const l=r[o];a+=`
          if(offset == ${o}) {
            result = values[${Jae[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?xC():bC(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${r.length});

        flatIndex = idiv(flatIndex, ${r.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${s.texture2D}(A, uv);
          ${a}
        }
        ${s.output} = vec4(${i}, 0., 0., 0.);
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qae{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=ns();this.outputShape=e,this.enableShapeUniforms=Vr(this.outputShape.length);let s="",i="result";t&&(i="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let o=0;o<=1;o++){const l=a*2+o;s+=`
          localCoords = coords;
          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${o};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?xC():bC(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${r.output} = ${i};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dF(n){const e=ns(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return GP(n,t)}function hF(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return $P(n,e)}function pF(n){const e=new Uint16Array([0,1,2,2,1,3]);return BP(n,e)}function dg(n,e,t,r,s,i){UP(e,t);const a=XP(n),o=n.TEXTURE_2D;return Be(n,()=>n.bindTexture(o,a)),Be(n,()=>n.texParameteri(o,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),Be(n,()=>n.texParameteri(o,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),Be(n,()=>n.texParameteri(o,n.TEXTURE_MIN_FILTER,n.NEAREST)),Be(n,()=>n.texParameteri(o,n.TEXTURE_MAG_FILTER,n.NEAREST)),de().getNumber("WEBGL_VERSION")===1?Be(n,()=>n.texImage2D(o,0,r,e,t,0,s,i,null)):Be(n,()=>n.texStorage2D(o,1,r,e,t)),Be(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:a,texShape:[t,e]}}function wC(n){return n.internalFormatFloat}function fF(n,e,t,r){const[s,i]=cg(e,t);return dg(n,s,i,wC(r),r.textureFormatFloat,n.FLOAT)}function SC(n){return n.internalFormatHalfFloat}function mF(n,e,t,r){const[s,i]=cg(e,t);return dg(n,s,i,SC(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function TC(n){return n.downloadTextureFormat}function gF(n,e,t,r){const[s,i]=cg(e,t);return dg(n,s,i,TC(r),n.RGBA,n.UNSIGNED_BYTE)}function IC(n){return n.internalFormatPackedFloat}function yF(n,e,t,r){const[s,i]=Lh(e,t);return dg(n,s,i,IC(r),n.RGBA,n.FLOAT)}function kC(n){return n.internalFormatPackedHalfFloat}function bF(n,e,t,r){const[s,i]=Lh(e,t);return dg(n,s,i,kC(r),n.RGBA,r.textureTypeHalfFloat)}function xF(n,e,t){return Be(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),o2(n,e,"clipSpacePos",t,3,20,0)&&o2(n,e,"uv",t,2,20,12)}function vF(n,e,t,r,s,i){Be(n,()=>n.bindTexture(n.TEXTURE_2D,e));let a,o,l;s instanceof Uint8Array?(a=new Uint8Array(t*r*4),o=n.UNSIGNED_BYTE,l=n.RGBA):(a=new Float32Array(t*r*4),o=n.FLOAT,l=i.internalFormatPackedFloat),a.set(s),de().getNumber("WEBGL_VERSION")===2?Be(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,r,n.RGBA,o,a)):Be(n,()=>n.texImage2D(n.TEXTURE_2D,0,l,t,r,0,n.RGBA,o,a)),Be(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function wF(n,e,t){Be(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?de().getNumber("WEBGL_VERSION")===2?Be(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):Be(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):de().getNumber("WEBGL_VERSION")===2?Be(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):Be(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),Be(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function SF(n,e,t,r){const s=n.createBuffer();Be(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,s));const i=16*e*t;return Be(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,i,n.STREAM_READ)),Be(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),Be(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),s}function TF(n,e,t){const r=n,s=new Float32Array(t);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function IF(n,e,t,r){const[s,i]=cg(e,t),a=4,o=new Uint8Array(Kie(e*t,a));return Be(n,()=>n.readPixels(0,0,s,i,r.downloadTextureFormat,n.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function kF(n,e,t,r,s,i,a,o){const l=n,u=new Float32Array(Yie(i,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function CF(n,e,t){const r=new Float32Array(e*t*4);return Be(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,r)),r}const eoe=Object.freeze(Object.defineProperty({__proto__:null,bindVertexProgramAttributeStreams:xF,createBufferFromOutputTexture:SF,createFloat16MatrixTexture:mF,createFloat16PackedMatrixTexture:bF,createFloat32MatrixTexture:fF,createIndexBuffer:pF,createPackedMatrixTexture:yF,createUnsignedBytesMatrixTexture:gF,createVertexBuffer:hF,createVertexShader:dF,downloadByteEncodedFloatMatrixFromOutputTexture:IF,downloadFloat32MatrixFromBuffer:TF,downloadMatrixFromPackedOutputTexture:CF,downloadPackedMatrixFromBuffer:kF,getInternalFormatForFloat16MatrixTexture:SC,getInternalFormatForFloat16PackedMatrixTexture:kC,getInternalFormatForFloat32MatrixTexture:wC,getInternalFormatForPackedMatrixTexture:IC,getInternalFormatForUnsignedBytesMatrixTexture:TC,uploadDenseMatrixToTexture:vF,uploadPixelDataToTexture:wF},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c0{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=de().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,DP(t,e)):this.gl=Ki(t),e=this.gl,de().getNumber("WEBGL_VERSION")===2){const i=e;this.createVertexArray=()=>Be(i,()=>i.createVertexArray()),this.bindVertexArray=a=>Be(i,()=>i.bindVertexArray(a)),this.deleteVertexArray=a=>Be(i,()=>i.deleteVertexArray(a)),this.getVertexArray=()=>Be(i,()=>i.getParameter(i.VERTEX_ARRAY_BINDING))}else if(e!=null){const i=e.getExtension("OES_vertex_array_object");if(i==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Be(e,()=>i.createVertexArrayOES()),this.bindVertexArray=a=>Be(e,()=>i.bindVertexArrayOES(a)),this.deleteVertexArray=a=>Be(e,()=>i.deleteVertexArrayOES(a)),this.getVertexArray=()=>Be(e,()=>e.getParameter(i.VERTEX_ARRAY_BINDING_OES))}let r="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),de().getNumber("WEBGL_VERSION")===1){const i="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Hp(this.gl,i),Qs(this.gl,a))this.textureHalfFloatExtension=Hp(this.gl,a);else if(de().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),Qs(this.gl,s))this.colorBufferHalfFloatExtension=Hp(this.gl,s);else if(de().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",Qs(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(Qs(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=hF(this.gl),this.indexBuffer=pF(this.gl),this.framebuffer=ZP(this.gl),this.textureConfig=gC(this.gl,this.textureHalfFloatExtension)}get debug(){return de().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;Be(e,()=>e.finish()),Be(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),Be(e,()=>e.deleteFramebuffer(this.framebuffer)),Be(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),Be(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),Be(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),fF(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),mF(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),gF(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),wF(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,r,s){this.throwIfDisposed(),vF(this.gl,e,t,r,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),bF(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),yF(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(l2(this.gl,this.framebuffer),this.outputTexture=null),Be(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,r){return this.downloadMatrixDriver(e,()=>IF(this.gl,t,r,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,r,s,i,a){return kF(this.gl,e,t,r,s,i,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return TF(this.gl,e,t)}createBufferFromTexture(e,t,r){this.bindTextureToFrameBuffer(e);const s=SF(this.gl,t,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,r;if(de().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,i=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),r=()=>{const a=s.clientWaitSync(i,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},t=i}else de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(t,de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:t,isFencePassed:r}}downloadMatrixFromPackedTexture(e,t,r){return this.downloadMatrixDriver(e,()=>CF(this.gl,t,r))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=dF(t));const r=WP(t);Be(t,()=>t.attachShader(r,this.vertexShader)),Be(t,()=>t.attachShader(r,e)),VP(t,r);const s=Object.assign(r,{vao:this.createVertexArray()});return this.debug&&a0(t,s),s}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;Be(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),xF(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(Be(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&a0(this.gl,this.program),Be(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,r=!0){return this.throwIfDisposed(),r?KP(this.gl,e,t):YP(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Be(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,r){this.throwIfDisposed(),this.throwIfNoProgram(),jP(this.gl,e,t,r)}setOutputMatrixTexture(e,t,r){this.setOutputMatrixTextureDriver(e,r,t)}setOutputPackedMatrixTexture(e,t,r){this.throwIfDisposed();const[s,i]=Lh(t,r);this.setOutputMatrixTextureDriver(e,s,i)}setOutputMatrixWriteRegion(e,t,r,s){this.setOutputMatrixWriteRegionDriver(r,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,r,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&a0(this.gl,this.program),Kp(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}Be(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Be(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Hp(this.gl,de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),i=r.createQuery();return r.beginQuery(s.TIME_ELAPSED_EXT,i),i}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,r=this.getQueryTimerExtensionWebGL2();t.endQuery(r.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await NS(()=>this.disposed||this.isQueryAvailable(e,de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const r=this.gl;return r.getQueryParameter(e,r.QUERY_RESULT)/1e6}else{const r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),i=r.getQueryParameter(e,r.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),i&&!this.disjoint}else{const r=this.getQueryTimerExtensionWebGL1(),s=r.getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=toe(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:r}=this.itemsToPoll[t];r()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let r;"setTimeoutCustom"in de().platform&&(r=de().platform.setTimeoutCustom.bind(de().platform)),NS(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,r)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),o0(this.gl,e,this.framebuffer),this.debug&&Kp(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(o0(this.gl,this.outputTexture,this.framebuffer),this.debug&&Kp(this.gl)):l2(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const r=t();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(e,t,r){this.throwIfDisposed();const s=this.gl;o0(s,e,this.framebuffer),this.debug&&Kp(s),this.outputTexture=e,Be(s,()=>s.viewport(0,0,t,r)),Be(s,()=>s.scissor(0,0,t,r))}setOutputMatrixWriteRegionDriver(e,t,r,s){this.throwIfDisposed(),Be(this.gl,()=>this.gl.scissor(e,t,r,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function toe(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:noe,bincountImpl:_F,bincountReduceImpl:roe,bitwiseAndImpl:soe,castImpl:ioe,ceilImpl:aoe,concatImpl:ooe,equalImpl:loe,expImpl:uoe,expm1Impl:coe,floorImpl:doe,gatherNdImpl:hoe,gatherV2Impl:poe,greaterImpl:foe,greaterEqualImpl:moe,lessImpl:goe,lessEqualImpl:yoe,linSpaceImpl:boe,logImpl:xoe,maxImpl:voe,maximumImpl:woe,minimumImpl:Soe,multiplyImpl:Toe,negImpl:Ioe,notEqualImpl:koe,prodImpl:Coe,raggedGatherImpl:_oe,raggedRangeImpl:Moe,raggedTensorToTensorImpl:Noe,rangeImpl:Eoe,rsqrtImpl:Roe,scatterImpl:Loe,sigmoidImpl:Aoe,simpleAbsImpl:MF,sliceImpl:zoe,sparseFillEmptyRowsImpl:Doe,sparseReshapeImpl:Poe,sparseSegmentReductionImpl:NF,sqrtImpl:Foe,staticRegexReplaceImpl:Goe,stridedSliceImpl:Ooe,stringNGramsImpl:Woe,stringSplitImpl:Voe,stringToHashBucketFastImpl:$oe,subImpl:Boe,tileImpl:Xoe,topKImpl:Uoe,transposeImpl:CC,uniqueImpl:Zoe}=bP;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EF(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function Jr(n,e){return e===1?[n]:EF(n,e)}function Hoe(n,e){if(n===1)return"rc";let t="";for(let r=0;r<n;r++)t+=e[r],r<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Koe{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Vr(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=Jr("rc",this.rank),r=rn(this.rank),s=this.getOutOfBoundsCondition(t),i=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${r} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${i}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let i=`${r===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)i=`${e[e.length-1-a]},`+i;t.push(i)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let r=this.rank-2;r<this.rank;r++)t+=`${e[r]} >= ${this.enableShapeUniforms?`outShape[${r}]`:this.outputShape[r]}`,r<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),r=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${r};
      bool rEdge = rp1 >= ${s};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RF{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Vr(this.outputShape.length);let r="";for(let s=0;s<4;s++){let i="thisRC = rc;";s%2===1&&(i+="thisRC.z += 1;"),s>1&&(i+="thisRC.y += 1;"),r+=`
        ${i}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${Yoe(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?xC():bC(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${r}

        setOutput(result);
      }
    `}}function Yoe(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?lae(["r","c","d"],"inputShape"):qu(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class joe{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,r){const s=X3(t,r),i=U3(e,s,r);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);const a=B3(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const l=this.freeTextures[i].pop();return this.usedTextures[i].push(l),l}let o;return s===_r.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===_r.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===_r.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===_r.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===_r.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[i].push(o),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),o}releaseTexture(e,t,r,s){if(this.freeTextures==null)return;const i=X3(r,s),a=U3(t,i,s);a in this.freeTextures||(this.freeTextures[a]=[]);const o=B3(t,i,this.gpgpu.gl,this.gpgpu.textureConfig,s),l=de().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const u=this.usedTextures[a],d=u&&u.indexOf(e);if(d==null||d<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[d]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Qoe(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F||e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function B3(n,e,t,r,s){const i=Joe(e,r);let a;if(s){const[l,u]=Lh(n[0],n[1]);a=l*u}else{const[l,u]=cg(n[0],n[1]);a=l*u}const o=Qoe(t,i);return a*o}function Joe(n,e){switch(n){case _r.PACKED_2X2_FLOAT32:return IC(e);case _r.PACKED_2X2_FLOAT16:return kC(e);case _r.UNPACKED_FLOAT32:return wC(e);case _r.UNPACKED_FLOAT16:return SC(e);case _r.PACKED_4X1_UNSIGNED_BYTE:return TC(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function qoe(n){return de().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?_r.PACKED_2X2_FLOAT32:_r.UNPACKED_FLOAT32:n?_r.PACKED_2X2_FLOAT16:_r.UNPACKED_FLOAT16}function X3(n,e){if(n===js.UPLOAD)return _r.PACKED_2X2_FLOAT32;if(n===js.RENDER||n==null)return qoe(e);if(n===js.DOWNLOAD||n===js.PIXELS)return _r.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function U3(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ba=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Vr(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}};const Ci="if (isnan(x)) return x;",ele="return x;",Z3="return abs(x);",tle="return (x >= 0.0) ? x : (exp(x) - 1.0);",nle=Ci+`
  return (x < 0.0) ? 0.0 : x;
`,rle=Ci+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Xo="return x;",sle="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ile="return x;",ale=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,ole=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,lle=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,ule="return 1.0 / (1.0 + exp(-1.0 * x));";class jo{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Vr(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cle{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Vr(this.outputShape.length);const t=e.length,r=Jr("rc",t),s=rn(t),i=Hoe(t,r),a=r.slice(-2),o=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${i});

        setOutput(getChannel(packedInput, ${o}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dle=Ax,hle=1e-7,ple=1e-4,Jw={};function fle(n){return n in Jw||(Jw[n]={}),Jw[n]}const mle=de().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),gle=600;function yle(){return de().global.screen==null?1024:de().global.screen.height*de().global.screen.width*window.devicePixelRatio*gle/1024/1024}class hg extends q0{nextDataId(){return hg.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!de().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof c0)t=e;else{const r=Ki(de().getNumber("WEBGL_VERSION"),e);t=new c0(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const r=Ki(de().getNumber("WEBGL_VERSION"));t=new c0(r),this.binaryCache=fle(de().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new joe(this.gpgpu),this.numMBBeforeWarning=yle(),this.texData=new D2(this,on())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,r,s,i,a){const o=this.makeTensorInfo(t,r),l=this.texData.get(o.dataId);l.isPacked=!1,l.texture={texture:e,texShape:[s,i]},l.texShape=[s,i];const u=Yp(t),d=new $3(u,!1,a),h=this.runWebGLProgram(d,[o],r,[[s,i]]);return h.shape=t,l.texture=null,this.disposeIntermediateTensorInfo(o),h.dataId}write(e,t,r){if((de().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||de().getBool("DEBUG"))&&this.checkNumericalProblems(e),r==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:r,values:e,usage:js.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,r,s,i){if(de().getBool("DEBUG")&&this.checkNumericalProblems(t),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:s,values:t,usage:js.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:r,dtype:s,complexTensorInfos:i,slice:a,shape:o,isPacked:l}=t;if(a!=null){let f;l?f=new jo(o,Xo):f=new ba(o,Xo);const m=this.runWebGLProgram(f,[{dataId:e,shape:o,dtype:s}],s),x=this.readSync(m.dataId);return this.disposeIntermediateTensorInfo(m),x}if(r!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return r;const u=this.activeTimers!=null;let d;u&&(d=kr());let h;if(s==="complex64"){const f=this.readSync(i.real.dataId),m=this.readSync(i.imag.dataId);h=io(f,m)}else h=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=kr()-d),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const x=this.pendingRead.get(e);return new Promise(g=>x.push(g))}const t=this.texData.get(e),{values:r,shape:s,slice:i,dtype:a,complexTensorInfos:o,isPacked:l}=t;if(i!=null){let x;l?x=new jo(s,Xo):x=new ba(s,Xo);const g=this.runWebGLProgram(x,[{dataId:e,shape:s,dtype:a}],a),y=this.read(g.dataId);return this.disposeIntermediateTensorInfo(g),y}if(r!=null)return this.convertAndCacheOnCPU(e);if(de().getBool("DEBUG")&&!de().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&de().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,d;if(a!=="complex64"&&de().get("WEBGL_BUFFER_SUPPORTED")){d=this.decode(e);const x=this.texData.get(d.dataId);u=this.gpgpu.createBufferFromTexture(x.texture.texture,...Uy(s))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(a==="complex64"){const x=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),g=x[0],y=x[1];h=io(g,y)}else if(u==null)h=this.getValuesFromTexture(e);else{const x=be(s);h=this.gpgpu.downloadFloat32MatrixFromBuffer(u,x)}if(d!=null&&this.disposeIntermediateTensorInfo(d),u!=null){const x=this.gpgpu.gl;Be(x,()=>x.deleteBuffer(u))}const f=this.convertAndCacheOnCPU(e,h),m=this.pendingRead.get(e);return this.pendingRead.delete(e),m.forEach(x=>x(f)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&on().removeDataId(e,this),this.pendingDeletes--),f}readToGPU(e,t={}){const r=this.texData.get(e),{values:s,shape:i,slice:a,dtype:o,isPacked:l,texture:u}=r;if(o==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let m;l?m=new jo(i,Xo):m=new ba(i,Xo);const x=this.runWebGLProgram(m,[{dataId:e,shape:i,dtype:o}],o),g=this.readToGPU(x,t);return this.disposeIntermediateTensorInfo(x),g}if(u==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const d=this.decode(e,t.customTexShape),h=on().makeTensorFromTensorInfo(d),f=this.texData.get(d.dataId);return Object.assign({tensorRef:h},f.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const r=t.map(s=>eo(s));return Et(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Et(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const r=e[t];if(!PP(r))throw de().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:r,isPacked:s}=this.texData.get(e),i=be(t);if(de().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const f=this.decode(e),m=this.texData.get(f.dataId),x=this.gpgpu.downloadMatrixFromPackedTexture(m.texture.texture,...Uy(t)).subarray(0,i);return this.disposeIntermediateTensorInfo(f),x}const a=de().getBool("WEBGL_PACK")&&s===!0,o=a?Yp(t):t,l=a?new Qae(o):new jae(o),u=this.runWebGLProgram(l,[{shape:o,dtype:r,dataId:e}],"float32"),d=this.texData.get(u.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(d.texture.texture,d.texShape[0],d.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(u),h}timerAvailable(){return de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,r=[];let s=!1;this.programTimersStack==null?(this.programTimersStack=r,s=!0):this.activeTimers.push(r),this.activeTimers=r,e();const i=Ia(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=Ia(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,s&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(i);o.kernelMs=iL(l),o.getExtraProfileInfo=()=>l.map((u,d)=>({name:a[d],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:kr(),endMs:null}}endTimer(e){return de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=kr(),e)}async getQueryTime(e){if(de().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:r}=this.texData.get(e);return r!=null&&(this.disposeData(r.real.dataId,t),this.disposeData(r.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:r,texShape:s,usage:i,isPacked:a,slice:o}=this.texData.get(e),l=o&&o.origDataId||e,u=this.dataRefCount.get(l);u>1?this.dataRefCount.set(l,u-1):(this.dataRefCount.delete(l),t!=null&&(this.numBytesInGPU-=this.computeBytes(s,r),this.textureManager.releaseTexture(t,s,i,a)));const d=this.texData.get(e);d.texture=null,d.texShape=null,d.isPacked=!1,d.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=mle){return de().getBool("WEBGL_CPU_FORWARD")&&e.every(r=>this.texData.get(r.dataId).texture==null&&be(r.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Ks("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return dle(e.shape,t)}packedUnaryOp(e,t,r){const s=new jo(e.shape,t),i=this.compileAndRun(s,[e],r);return on().makeTensorFromTensorInfo(i)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const s=MF(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(de().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Z3,e.dtype);const t=new ba(e.shape,Z3),r=this.compileAndRun(t,[e]);return on().makeTensorFromTensorInfo(r)}makeTensorInfo(e,t,r){let s;if(t==="string"&&r!=null&&r.length>0&&ma(r[0])){const i=r.map(a=>va(a));s=this.write(i,e,t)}else s=this.write(r,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,r){return on().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,r),this)}unpackTensor(e){const t=new cle(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Koe(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const r=[Ru(e.shape),...Lu(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},i=[Ru(t),...Lu(t)],a=new RF(i,r),o=!0,l=[r],u=this.runWebGLProgram(a,[s],e.dtype,l,o);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e,t){const r=this.texData.get(e),{isPacked:s,shape:i,dtype:a}=r;if(t!=null){const f=be(i),m=t[0]*t[1]*4;P(f<=m,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const o=Yp(i);let l;s?l=new Yae(o):l=new Kae(o);const u=!0,d=[t??Uy(o)],h=this.runWebGLProgram(l,[{shape:o,dtype:a,dataId:e}],a,d,u,t);return{dtype:a,shape:i,dataId:h.dataId}}runWebGLProgram(e,t,r,s,i=!1,a){const o=this.makeTensorInfo(e.outputShape,r),l=this.texData.get(o.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===bf.DENSE){const v=a??Uy(e.outputShape);l.texShape=v.map(w=>w*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),be(o.shape)===0)return l.values=mr(o.dtype,0),o;const u=[],d=t.map(v=>{if(v.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let w=this.texData.get(v.dataId);if(w.texture==null){if(!e.packedInputs&&be(v.shape)<=de().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:v.shape,texData:null,isUniform:!0,uniformValues:w.values};e.packedInputs&&(w.isPacked=!0,w.shape=v.shape)}if(this.uploadToGPU(v.dataId),!!w.isPacked!=!!e.packedInputs)v=w.isPacked?this.unpackTensor(v):this.packTensor(v),u.push(v),w=this.texData.get(v.dataId);else if(w.isPacked&&!xf(w.shape,v.shape)){const I=v,T=v.shape;v.shape=w.shape,v=this.packedReshape(v,T),u.push(v),w=this.texData.get(v.dataId),I.shape=T}return{shape:v.shape,texData:w,isUniform:!1}});this.uploadToGPU(o.dataId);const h={shape:o.shape,texData:l,isUniform:!1},f=Hae(e,d,h),m=this.getAndSaveBinary(f,()=>Uae(this.gpgpu,e,d,h)),x=this.activeTimers!=null;let g;x&&(g=this.startTimer()),de().get("ENGINE_COMPILE_ONLY")||Zae(this.gpgpu,m,d,h,s),u.forEach(v=>this.disposeIntermediateTensorInfo(v)),x&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)}));const y=de().getNumber("WEBGL_FLUSH_THRESHOLD");if(y>0){const v=kr();v-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=v)}if(!de().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&i===!1){const v=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),v}return o}compileAndRun(e,t,r,s,i=!1){return r=r||t[0].dtype,this.runWebGLProgram(e,t,r,s,i)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(de().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=le(()=>{if(!de().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=de().getBool("DEBUG");de().set("DEBUG",!1);const t=this.abs(ct(1e-8)).dataSync()[0];if(de().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?hle:ple}uploadToGPU(e){const t=this.texData.get(e),{shape:r,dtype:s,values:i,texture:a,usage:o,isPacked:l}=t;if(a!=null)return;const u=this.activeTimers!=null;let d;u&&(d=kr());let h=t.texShape;if(h==null&&(h=qP(r,l),t.texShape=h),i!=null){const f=Yp(r);let m,x=h[1],g=h[0];const y=i instanceof Uint8Array||i instanceof Uint8ClampedArray;(l||!y)&&([x,g]=Lh(h[0],h[1])),l?m=new qae(f,y):m=new $3(f,y);const v=y?[g,x]:h,w=this.makeTensorInfo(v,s),I=this.texData.get(w.dataId);y?I.usage=js.PIXELS:I.usage=js.UPLOAD,I.texShape=v,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(w.dataId),x,g,i);const T=[[g,x]],C=this.runWebGLProgram(m,[w],s,T,!0),E=this.texData.get(C.dataId);t.texShape=E.texShape,t.isPacked=E.isPacked,t.usage=E.usage,de().get("ENGINE_COMPILE_ONLY")?this.disposeData(C.dataId):(t.texture=E.texture,t.values=null,this.texData.delete(C.dataId)),this.disposeIntermediateTensorInfo(w),u&&(this.uploadWaitMs+=kr()-d)}else{const f=this.acquireTexture(h,o,s,l);t.texture=f}}convertAndCacheOnCPU(e,t){const r=this.texData.get(e),{dtype:s}=r;return t!=null&&(r.values=ble(t,s)),r.values}acquireTexture(e,t,r,s){if(this.numBytesInGPU+=this.computeBytes(e,r),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const i=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${i} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*nf(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const r=new Promise(s=>{try{this.checkCompletion_(t),s(!0)}catch(i){throw i}});e.push(r)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Ym(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(yC(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:r,infLoc:s,nanLoc:i,outShapeLocation:a,outShapeStridesLocation:o,outTexShapeLocation:l}=cF(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=r,e.infLoc=s,e.nanLoc=i,e.outShapeLocation=a,e.outShapeStridesLocation=o,e.outTexShapeLocation=l}}createTensorFromGPUData(e,t,r){e.channels=e.channels||"RGBA";const{texture:s,height:i,width:a,channels:o}=e,l=on().backend;if(!l.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=l.writeTexture(s,t,r,i,a,o);return on().makeTensorFromDataId(u,t,r,l)}}hg.nextDataId=0;function ble(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let r=0;r<t.length;++r)t[r]=Math.round(n[r]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LF(){de().set("WEBGL_FORCE_F16_TEXTURES",!0)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */U2()&&H2("webgl",()=>new hg,2);const xle={forceHalfFloat:LF};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _C=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Au{constructor(e,t,r){this.variableNames=["A","B"],this.outputShape=Ct(t,r),this.enableShapeUniforms=Vr(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tc=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Gh{constructor(e,t,r,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ct(t,r);const i=this.outputShape.length;this.enableShapeUniforms=Vr(i);let a="";if(s)if(i===0||be(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${rn(i)} coords = getOutputCoords();
        `,i===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const o=Jr("coords",i);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${o[i-2]} + 1) >= outShape[${i} - 2];
            bool nextColOutOfBounds =
              (${o[i-1]} + 1) >= outShape[${i} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${o[i-2]} + 1) >= ${this.outputShape[i-2]};
            bool nextColOutOfBounds =
              (${o[i-1]} + 1) >= ${this.outputShape[i-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ps(n){const{inputs:e,backend:t}=n,{x:r}=e;return t.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const vle={kernelName:Bd,backendName:"webgl",kernelFunc:Ps};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Il(n){const{inputs:e,backend:t}=n,{real:r,imag:s}=e,i=t.makeTensorInfo(r.shape,"complex64"),a=t.texData.get(i.dataId),o=Ps({inputs:{x:r},backend:t}),l=Ps({inputs:{x:s},backend:t});return a.complexTensorInfos={real:o,imag:l},i}const wle={kernelName:lb,backendName:"webgl",kernelFunc:Il};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AF="return (a < 0.) ? b * a : a;",zF=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Sle(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{alpha:i}=r,a=t.makeTensorInfo([],"float32",uo(i,"float32")),o=de().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Gh(zF,s.shape,a.shape):new Au(AF,s.shape,a.shape),l=t.runWebGLProgram(o,[s,a],"float32");return t.disposeIntermediateTensorInfo(a),l}const Tle={kernelName:Kf,backendName:"webgl",kernelFunc:Sle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DF="return (a < 0.) ? b * a : a;",PF=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Ile(n){const{inputs:e,backend:t}=n,{x:r,alpha:s}=e,i=de().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Gh(PF,r.shape,s.shape):new Au(DF,r.shape,s.shape);return t.runWebGLProgram(i,[r,s],"float32")}const kle={kernelName:pm,backendName:"webgl",kernelFunc:Ile};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oh="if (isnan(x)) return x;";function Kt({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:r}){return({inputs:s,backend:i})=>{const{x:a}=s,o=i,l=r||a.dtype;if(o.shouldExecuteOnCPU([a])&&t!=null){const h=o.texData.get(a.dataId),f=t(h.values,l);return o.makeTensorInfo(a.shape,l,f)}const u=de().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let d;return u?d=new jo(a.shape,e):d=new ba(a.shape,n),o.runWebGLProgram(d,[a],l)}}function Dr({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:i}){return({inputs:a,backend:o})=>{const{a:l,b:u}=a,d=o;if(r&&l.dtype==="complex64"){const x=d.texData.get(l.dataId),g=d.texData.get(u.dataId),[y,v]=[[x.complexTensorInfos.real,g.complexTensorInfos.real],[x.complexTensorInfos.imag,g.complexTensorInfos.imag]].map(I=>{const[T,C]=I,E={dataId:T.dataId,dtype:T.dtype,shape:l.shape},L={dataId:C.dataId,dtype:C.dtype,shape:u.shape},M=new Au(n,l.shape,u.shape);return d.runWebGLProgram(M,[E,L],ps(T.dtype,C.dtype))}),w=Il({inputs:{real:y,imag:v},backend:d});return d.disposeIntermediateTensorInfo(y),d.disposeIntermediateTensorInfo(v),w}const h=i||ps(l.dtype,u.dtype);if((l.dtype==="string"||u.dtype==="string"||d.shouldExecuteOnCPU([l,u]))&&s!=null){const x=d.texData.get(l.dataId).values,g=d.texData.get(u.dataId).values,y=l.dtype==="string"?ao(x):x,v=l.dtype==="string"?ao(g):g,[w,I]=s(l.shape,u.shape,y,v,h),T=d.makeTensorInfo(I,h),C=d.texData.get(T.dataId);return C.values=w,T}const f=de().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let m;return f?m=new Gh(e,l.shape,u.shape,t):m=new Au(n,l.shape,u.shape),d.runWebGLProgram(m,[l,u],h)}}function vf(n,e=!1){if(n==="linear")return e?ile:ele;if(n==="relu")return e?ole:nle;if(n==="elu")return e?ale:tle;if(n==="relu6")return e?lle:rle;if(n==="prelu")return e?PF:DF;if(n==="leakyrelu")return e?zF:AF;if(n==="sigmoid")return e?ule:sle;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FF{constructor(e,t,r,s=!1,i=!1,a=!1,o=null,l=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=Vr(this.outputShape.length);const d=s?e[1]:e[2],h=Math.ceil(d/2),f=s?"i * 2, rc.y":"rc.y, i * 2",m=i?"rc.z, i * 2":"i * 2, rc.z",x=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],g=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let y="",v="";o&&(l?y=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${o}
        }`:u?y=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${o}
        }`:y=`vec4 activation(vec4 x) {
          ${o}
        }`,v="result = activation(result);");const w=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let I="rc.x",T="rc.x";e[0]<t[0]?I=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(T=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${y}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${I};
        int batchB = ${T};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${f});
          vec4 b = getMatrixB(batchB, ${m});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${x[0]} * ${g[0]});
          result += (${x[1]} * ${g[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${w}

        ${v}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H3={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};let K3=class{constructor(e,t,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ct(t,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y3="return a * b;";function MC(n){const{inputs:e,backend:t}=n,{a:r,b:s}=e,i=ps(r.dtype,s.dtype);if(r.dtype==="complex64"){const o=t.texData.get(r.dataId),l=t.texData.get(s.dataId),u=new K3(H3.REAL,r.shape,s.shape),d=new K3(H3.IMAG,r.shape,s.shape),h=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:r.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:s.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:s.shape}],f=t.runWebGLProgram(u,h,"float32"),m=t.runWebGLProgram(d,h,"float32"),x=Il({inputs:{real:f,imag:m},backend:t});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),x}if(t.shouldExecuteOnCPU([r,s])){const o=t.texData.get(r.dataId),l=t.texData.get(s.dataId),[u,d]=Toe(r.shape,s.shape,o.values,l.values,i),h=t.makeTensorInfo(d,i),f=t.texData.get(h.dataId);return f.values=u,h}let a;return de().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new Gh(Y3,r.shape,s.shape):a=new Au(Y3,r.shape,s.shape),t.runWebGLProgram(a,[r,s],i)}const Cle={kernelName:Jd,backendName:"webgl",kernelFunc:MC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _le(n,e,t){const r=[Ru(n.shape),...Lu(n.shape)],s={dtype:n.dtype,shape:r,dataId:n.dataId},i=[Ru(e),...Lu(e)],a=new RF(i,r),o=!0,l=[r],u=t.runWebGLProgram(a,[s],n.dtype,l,o);return{dataId:u.dataId,shape:e,dtype:u.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ve(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{shape:i}=r,a=t,o=be(s.shape),l=F2(i,o),u=be(l);P(o===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);const d=a.texData.get(s.dataId);return d.isPacked&&!xf(s.shape,l)&&!(d.texture!==null&&xf(d.shape,l))?_le(s,l,a):(a.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype})}const Mle={kernelName:mm,backendName:"webgl",kernelFunc:Ve};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let j3=class{constructor(e,t){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:i,outSize:a}=e;this.outputShape=[s,a];const o=Math.floor(r/4)*4,l=r%4;let u="sumValue += dot(values, ones);";if(t!=null){const h=1/t;u=`sumValue += dot(values * ${bu(h)?h.toPrecision(2):h}, ones);`}let d="";i%r>0&&(d=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${d}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${o}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${o};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nle{constructor(e,t){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:i,outSize:a}=e;this.outputShape=[s,a];let o="0.0",l="";t==="prod"?o="1.0":t==="min"?(o="1.0 / 1e-20",l="min"):t==="max"&&(o="-1.0 / 1e-20",l="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");const d=Math.floor(r/4)*4,h=r%4;let f=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,m="vec4";t==="all"?(o="1.0",f=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,m="bvec4"):t==="any"&&(o="0.0",f=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,m="bvec4");let x="";i%r>0&&(x=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${o};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${x}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${o});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${d}; i += 4) {
          int inIdx = inOffset + i;
          ${m} values = ${m}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${f}
        }

        int inIdx = inOffset + ${d};
        if (${h===1}) {
          ${m} values = ${m}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${f}
        } else if (${h===2}) {
          ${m} values = ${m}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${f}
        } else if (${h===3}) {
          ${m} values = ${m}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${f}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ele(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],r=Ux(t);e.push({inSize:t,windowSize:r,outSize:Math.ceil(t/r)})}return e}function nc(n,e,t,r){const s=Ele(n.shape);let i=n;for(let a=0;a<s.length;a++){const{inSize:o,windowSize:l,outSize:u}=s[a];let d,h;t==="mean"?d=a===0?new j3({windowSize:l,inSize:o,batchSize:n.shape[0],outSize:u},o):new j3({windowSize:l,inSize:o,batchSize:n.shape[0],outSize:u}):d=new Nle({windowSize:l,inSize:o,batchSize:n.shape[0],outSize:u},t),h=i,i=r.runWebGLProgram(d,[i],e),h.dataId!==n.dataId&&r.disposeIntermediateTensorInfo(h)}return i}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rle{constructor(e,t){this.variableNames=["A"];const r=new Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[t[a]];this.outputShape=r,this.rank=r.length;const s=rn(this.rank),i=Lle(t);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${i}));
    }
    `}}function Lle(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let s=0;s<n.length;s++)r[n[s]]=t[s];return r.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ale{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const r=new Array(e.length);for(let d=0;d<r.length;d++)r[d]=e[t[d]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=rn(this.rank),i=EF("rc",this.rank),a=new Array(this.rank);for(let d=0;d<t.length;d++)a[t[d]]=i[d];const o=`vec2(${a.slice(-2).join()})`,l=`++${i[this.rank-1]} < ${r[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${o})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${l}) {
        result[1] = ${u};
      }
      --${i[this.rank-1]};
      if(++${i[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${u};
        if(${l}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bv(n,e,t){const r=de().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ale(n.shape,e):new Rle(n.shape,e);return t.runWebGLProgram(r,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zle(n,e,t,r){const s=e,i=n.shape.length,a=At(s,n.shape);let o=a;const l=Rn(o,i),u=l!=null;let d=n;u&&(d=bv(n,l,r),o=Xn(o.length,i)),zr("sum",o,i);const[h,f]=br(d.shape,o);let m=h;t&&(m=Bn(h,a));const x=be(f),g=be(n.shape)/x,y=Ve({inputs:{x:d},attrs:{shape:[g,x]},backend:r}),v=ox(n.dtype),w=nc(y,v,"sum",r),I=Ve({inputs:{x:w},attrs:{shape:m},backend:r});return r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(w),u&&r.disposeIntermediateTensorInfo(d),I}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xv(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r;return zle(s,i,a,t)}const Dle={kernelName:wm,backendName:"webgl",kernelFunc:xv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qr(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{perm:i}=r,a=t,o=s.shape.length,l=new Array(o);for(let d=0;d<l.length;d++)l[d]=s.shape[i[d]];let u;if(a.shouldExecuteOnCPU([s])){const d=a.texData.get(s.dataId).values,h=CC(d,s.shape,s.dtype,i,l);u=a.makeTensorInfo(l,s.dtype);const f=a.texData.get(u.dataId);f.values=h}else u=bv(s,i,a);return u}const Ple={kernelName:cu,backendName:"webgl",kernelFunc:qr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GF=1e3;function W0({a:n,b:e,transposeA:t,transposeB:r,backend:s,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const u=n.shape.length,d=e.shape.length,h=t?n.shape[u-2]:n.shape[u-1],f=r?e.shape[d-1]:e.shape[d-2],m=t?n.shape[u-1]:n.shape[u-2],x=r?e.shape[d-2]:e.shape[d-1],g=n.shape.slice(0,-2),y=e.shape.slice(0,-2),v=be(g),w=be(y),I=Ct(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([m,x]);P(h===f,()=>`Error in matMul: inner shapes (${h}) and (${f}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${r} must match.`);const T=t?[v,h,m]:[v,m,h],C=r?[w,x,f]:[w,f,x],E=Ve({inputs:{x:n},backend:s,attrs:{shape:T}}),L=Ve({inputs:{x:e},backend:s,attrs:{shape:C}}),M=[E,L],R=Math.max(v,w),z=t?E.shape[1]:E.shape[2],X=i!=null,U=a!=null,G=l==="leakyrelu",V=l!=null?vf(l,!0):null,Z=X||U||G||V!=null;let J;if((m===1||x===1)&&z>GF&&Z===!1){let O=E,Q=L;t&&(O=qr({inputs:{x:E},backend:s,attrs:{perm:[0,2,1]}}),M.push(O)),r&&(Q=qr({inputs:{x:L},backend:s,attrs:{perm:[0,2,1]}}),M.push(Q));const A=x!==1,K=x===1;let $=O;A&&($=Ve({inputs:{x:O},backend:s,attrs:{shape:[R,z,1]}}),M.push($));const re=x===1?2:1;let oe=Q;K&&(oe=Ve({inputs:{x:Q},backend:s,attrs:{shape:[R,1,z]}}),M.push(oe));const Y=MC({inputs:{a:$,b:oe},backend:s});J=xv({inputs:{x:Y},backend:s,attrs:{axis:re,keepDims:!0}}),M.push(Y)}else{const O=ps(n.dtype,e.dtype),Q=new FF(T,C,[R,m,x],t,r,X,V,U,G),A=[E,L];if(i!=null&&A.push(i),U&&A.push(a),G){const K=s.makeTensorInfo([],"float32",uo(o,"float32"));A.push(K),M.push(K)}J=s.runWebGLProgram(Q,A,O)}const te=Ve({inputs:{x:J},backend:s,attrs:{shape:I}});M.push(J);for(const O of M)s.disposeIntermediateTensorInfo(O);return te}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fle(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:i,bias:a,preluActivationWeights:o}=e,{transposeA:l,transposeB:u,activation:d,leakyreluAlpha:h}=r;return W0({a:s,b:i,transposeA:l,transposeB:u,backend:t,bias:a,preluActivationWeights:o,leakyreluAlpha:h,activation:d})}const Gle={kernelName:rf,backendName:"webgl",kernelFunc:Fle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q3="return abs(x);";function Ole(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){const i=t.texData.get(r.dataId),a=MF(i.values);return t.makeTensorInfo(r.shape,r.dtype,a)}let s;return de().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new jo(r.shape,Q3):s=new ba(r.shape,Q3),t.runWebGLProgram(s,[r],r.dtype)}const Wle={kernelName:Cf,backendName:"webgl",kernelFunc:Ole};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vle=Ci+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,$le=Kt({opSnippet:Vle}),Ble={kernelName:Td,backendName:"webgl",kernelFunc:$le};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xle=Ci+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,Ule=Kt({opSnippet:Xle}),Zle={kernelName:Id,backendName:"webgl",kernelFunc:Ule};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J3="return a + b;",Hle=Dr({opSnippet:J3,packedOpSnippet:J3,supportsComplex:!0,cpuKernelImpl:noe}),Kle={kernelName:Vu,backendName:"webgl",kernelFunc:Hle};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yle{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((i,a)=>`T${a}`);const r=[];this.variableNames.forEach(i=>{r.push(`float v${i} = get${i}AtOutCoords();`)});const s=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jle{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((i,a)=>`T${a}`);const r=[];this.variableNames.forEach(i=>{r.push(`vec4 v${i} = get${i}AtOutCoords();`)});const s=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d0(n){const{inputs:e,backend:t}=n,r=e;if(r.length===1)return Ps({inputs:{x:r[0]},backend:t});if(r.length>de().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const o=Math.floor(r.length/2),l=d0({inputs:r.slice(0,o),backend:t}),u=d0({inputs:r.slice(o),backend:t});return d0({inputs:[l,u],backend:t})}const s=r.map(o=>o.dtype).reduce((o,l)=>ps(o,l)),i=r.map(o=>o.shape),a=de().getBool("WEBGL_PACK")?new jle(r[0].shape,i):new Yle(r[0].shape,i);return t.runWebGLProgram(a,r,s)}const Qle={kernelName:_f,backendName:"webgl",kernelFunc:d0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jle(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r,o=s.shape.length,l=At(i,s.shape);let u=l;const d=Rn(u,o);let h=s;d!=null&&(h=qr({inputs:{x:s},backend:t,attrs:{perm:d}}),u=Xn(u.length,o)),zr("all",u,o);const[f,m]=br(h.shape,u),x=be(m),g=Ve({inputs:{x:h},backend:t,attrs:{shape:[-1,x]}}),y=nc(g,g.dtype,"all",t);let v;if(a){const w=Bn(f,l);v=Ve({inputs:{x:y},backend:t,attrs:{shape:w}})}else v=Ve({inputs:{x:y},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),d!=null&&t.disposeIntermediateTensorInfo(h),v}const qle={kernelName:nb,backendName:"webgl",kernelFunc:Jle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eue(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r,o=s.shape.length,l=At(i,s.shape);let u=l;const d=Rn(u,o);let h=s;d!=null&&(h=qr({inputs:{x:s},backend:t,attrs:{perm:d}}),u=Xn(u.length,o)),zr("any",u,o);const[f,m]=br(h.shape,u),x=be(m),g=Ve({inputs:{x:h},backend:t,attrs:{shape:[-1,x]}}),y=nc(g,g.dtype,"any",t);let v;if(a){const w=Bn(f,l);v=Ve({inputs:{x:y},backend:t,attrs:{shape:w}})}else v=Ve({inputs:{x:y},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),d!=null&&t.disposeIntermediateTensorInfo(h),v}const tue={kernelName:rb,backendName:"webgl",kernelFunc:eue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nue{constructor(e,t,r){this.variableNames=["A"];const{windowSize:s,batchSize:i,outSize:a}=e;r||this.variableNames.push("bestIndicesA"),this.outputShape=[i,a];const o=t==="max"?">":"<",l=r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${o} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rue{constructor(e,t,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,P(e.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);const i=e[e.length-1],a=Math.ceil(i/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const o=this.outputShape,l=o.length,u=rn(l),d=Jr("coords",l);let h,f;if(a===1){f=l+1;const M=rn(f);h=`
        ${M} sourceLocR = ${M}(${d.join()}, 0);
        ++${d[l-1]};
        ${M} sourceLocG = ${M}(${d.join()}, 0);
        ++${d[l-2]};
        ${M} sourceLocA = ${M}(${d.join()}, 0);
        --${d[l-1]};
        ${M} sourceLocB = ${M}(${d.join()}, 0);
        --${d[l-2]};`}else f=l,h=`
        ${u} sourceLocR = coords;
        ++${d[l-1]};
        ${u} sourceLocG = coords;
        ++${d[l-2]};
        ${u} sourceLocA = coords;
        --${d[l-1]};
        ${u} sourceLocB = coords;
        --${d[l-2]};`;const m=["x","y","z","w","u","v"].slice(0,f),x="."+m[f-1],g=m.map(M=>"int "+M),y=Jr("sourceLocR",f-1).concat("inIdx.r"),v=Jr("sourceLocG",f-1).concat("inIdx.g"),w=Jr("sourceLocB",f-1).concat("inIdx.b"),I=Jr("sourceLocA",f-1).concat("inIdx.a"),T=r==="max"?"greaterThan":"lessThan",C=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${v.join()}),
                             getBestIndicesAChannel(${w.join()}),
                             getBestIndicesAChannel(${I.join()})));`,E=`vec4(
            getAChannel(${y.join()}),
            hasNextCol ? getAChannel(${v.join()}) : 0.,
            hasNextRow ? getAChannel(${w.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${I.join()}) : 0.)`,L=s?"":`
      float getBestIndicesAChannel(${g.join()}) {
        return getChannel(getBestIndicesA(${m.join()}),
                                          vec2(${m.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${g.join()}) {
        return getChannel(getA(${m.join()}),
                               vec2(${m.slice(-2).join()}));
      }
      ${L}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${d[l-1]} < ${o[l-1]-1};
        bool hasNextRow = ${d[l-2]} < ${o[l-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${x}, sourceLocG${x},
          sourceLocB${x}, sourceLocA${x}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${E};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${C}
          vec4 candidate = ${E};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${T}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OF(n,e,t,r=null){let s=e.shape[0],i=e.shape[1];r!=null&&(s=r.shape[0],i=r.shape[1]);const a=Ux(i),o={windowSize:a,inSize:i,batchSize:s,outSize:Math.ceil(i/a)},l=new nue(o,t,r==null),u=[e];r!=null&&u.push(r);const d=n.runWebGLProgram(l,u,"int32");if(d.shape[1]===1)return d;const h=OF(n,e,t,d);return n.disposeIntermediateTensorInfo(d),h}function WF(n,e,t,r=null){const s=r!=null?r.shape:e.shape,i=s[s.length-1],a=Ux(i),o=new rue(s,a,t,r==null),l=r==null?[e]:[e,r],u=n.runWebGLProgram(o,l,"int32");if(u.shape.length===e.shape.length){const d=WF(n,e,t,u);return n.disposeIntermediateTensorInfo(u),d}return u}function VF(n,e,t,r){const s=[t];if(zr("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,e.shape.length),!de().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const i=[],a=n.texData.get(e.dataId),o=a!==null&&a.isPacked;let l=e;o&&(l=n.unpackTensor(e),i.push(l));const[u,d]=br(l.shape,s),h=be(d),f=Ve({inputs:{x:l},backend:n,attrs:{shape:[-1,h]}});i.push(f);const m=OF(n,f,r);i.push(m);const x=Ve({inputs:{x:m},backend:n,attrs:{shape:u}});return i.forEach(g=>n.disposeIntermediateTensorInfo(g)),x}return WF(n,e,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sue(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i}=r;let a=At(i,s.shape);const o=Rn(a,s.shape.length);let l=s;const u=[];o!=null&&(l=qr({inputs:{x:s},backend:t,attrs:{perm:o}}),u.push(l),a=Xn(a.length,l.shape.length)),zr("argMax",[a[0]],l.shape.length);const d=VF(t,l,a[0],"max");return u.forEach(h=>t.disposeIntermediateTensorInfo(h)),d}const iue={kernelName:Mf,backendName:"webgl",kernelFunc:sue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aue(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i}=r;let a=At(i,s.shape);const o=Rn(a,s.shape.length);let l=s;const u=[];o!=null&&(l=qr({inputs:{x:s},backend:t,attrs:{perm:o}}),u.push(l),a=Xn(a.length,l.shape.length)),zr("argMin",[a[0]],l.shape.length);const d=VF(t,l,a[0],"min");return u.forEach(h=>t.disposeIntermediateTensorInfo(h)),d}const oue={kernelName:Nf,backendName:"webgl",kernelFunc:aue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lue=Ci+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,uue=Kt({opSnippet:lue}),cue={kernelName:kd,backendName:"webgl",kernelFunc:uue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const due=Ci+"return log(x + sqrt(x * x + 1.0));",hue=Kt({opSnippet:due}),pue={kernelName:Cd,backendName:"webgl",kernelFunc:hue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fue=Ci+`
  return atan(x);
`,mue=Kt({opSnippet:fue}),gue={kernelName:_d,backendName:"webgl",kernelFunc:mue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yue=_C+`
  return atan(a, b);
`,bue=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+tc+`
  return result;
`,xue=Dr({opSnippet:yue,packedOpSnippet:bue}),vue={kernelName:Nd,backendName:"webgl",kernelFunc:xue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wue=Ci+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Sue=Kt({opSnippet:wue}),Tue={kernelName:Md,backendName:"webgl",kernelFunc:Sue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wf{constructor(e,t,r,s=!1,i=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.top,x=e.padInfo.left;this.outputShape=e.outShape;const g=t==="avg",y=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,v=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let w="0.0";if(g||(w="-1.0 / 1e-20"),r){this.userCode=`
        const ivec2 strides = ivec2(${o}, ${l});
        const ivec2 pads = ivec2(${m}, ${x});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f};
                wC += ${d}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value >= currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?i?y:v:`wR * ${f} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const I="max";let T=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(T="avgValue / max(count, 1.0)");const C=Math.floor(a/4)*4,E=a%4,L=`
      if (${g}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${I}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${l});
      const ivec2 pads = ivec2(${m}, ${x});
      const float initializationValue = ${w};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${w});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${C}; wC += 4) {
            int xC = xCCorner + wC * ${d};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${d}, d),
              getValue(batch, xR, xC + 2 * ${d}, d),
              getValue(batch, xR, xC + 3 * ${d}, d)
            );

            ${L}
          }

          int xC = xCCorner + ${C};
          if (${E===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${L}
          } else if (${E===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${d}, d),
              initializationValue,
              initializationValue
            );

            ${L}
          } else if (${E===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${d}, d),
              getValue(batch, xR, xC + 2 * ${d}, d),
              initializationValue
            );

            ${L}
          }
        }
        setOutput(${T});
      }
    `}}class NC{constructor(e,t,r,s=!1,i=!1){if(this.variableNames=["x"],t==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,o=e.strideDepth,l=e.strideHeight,u=e.strideWidth,d=e.dilationDepth,h=e.dilationHeight,f=e.dilationWidth,m=e.effectiveFilterDepth,x=e.effectiveFilterHeight,g=e.effectiveFilterWidth,y=e.padInfo.front,v=e.padInfo.top,w=e.padInfo.left;this.outputShape=e.outShape;const I=t==="avg";let T="0.0";if(I||(T="-1.0 / 1e-20"),r){this.userCode=`
        const ivec3 strides =
            ivec3(${o}, ${l}, ${u});
        const ivec3 pads = ivec3(${y}, ${v}, ${w});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${m};
              wD += ${d}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${x};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${g};
                  wC += ${f}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value >= currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?i?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${x} * ${g} +
                      wR * ${g} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const C="max";let E=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(E="avgValue / max(count, 1.0)");const L=Math.floor(a/4)*4,M=a%4,R=`
      if (${I}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${C}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${o}, ${l}, ${u});
      const ivec3 pads = ivec3(${y}, ${v}, ${w});
      const float initializationValue = ${T};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${T});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${m};
            wD += ${d}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${x};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${L}; wC += 4) {
              int xC = xCCorner + wC * ${f};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${f}, ch),
                getValue(batch, xD, xR, xC + 2 * ${f}, ch),
                getValue(batch, xD, xR, xC + 3 * ${f}, ch)
              );

              ${R}
            }

            int xC = xCCorner + ${L};
            if (${M===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${R}
            } else if (${M===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${f}, ch),
                initializationValue,
                initializationValue
              );

              ${R}
            } else if (${M===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${f}, ch),
                getValue(batch, xD, xR, xC + 2 * ${f}, ch),
                initializationValue
              );

              ${R}
            }
          }
        }
        setOutput(${E});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iue(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;Ah(s,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r,u=1;P(Ar(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const d=Ii(s.shape,i,a,u,o,l);if(d.filterWidth===1&&d.filterHeight===1&&Ft(d.inShape,d.outShape))return Ps({inputs:{x:s},backend:t});const h=new wf(d,"avg",!1);return t.runWebGLProgram(h,[s],"float32")}const kue={kernelName:Ef,backendName:"webgl",kernelFunc:Iue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cue(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r,d=[1,1,1],h=co(s.shape,i,a,d,o,l,u),f=new NC(h,"avg",!1);return t.runWebGLProgram(f,[s],"float32")}const _ue={kernelName:Rf,backendName:"webgl",kernelFunc:Cue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mue{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,i=e.strideWidth,a=e.dilationHeight,o=e.dilationWidth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,d=l-1-e.padInfo.top,h=u-1-e.padInfo.left,f=1/(t*r);this.userCode=`
      const ivec2 pads = ivec2(${d}, ${h});
      const float avgMultiplier = float(${f});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${o}) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class Nue{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,r=e.filterHeight,s=e.filterWidth,i=e.strideDepth,a=e.strideHeight,o=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,f=e.effectiveFilterHeight,m=e.effectiveFilterWidth,x=h-1-e.padInfo.front,g=f-1-e.padInfo.top,y=m-1-e.padInfo.left,v=1/(t*r*s);this.userCode=`
      const ivec3 pads = ivec3(${x}, ${g}, ${y});
      const float avgMultiplier = float(${v});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${i}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${f};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${m};
                wC += ${d}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eue(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:i}=e,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=r,h=[1,1,1],f=co(a.shape,o,l,h,u,d),m=new Nue(f);return t.runWebGLProgram(m,[s],a.dtype)}const Rue={kernelName:ib,backendName:"webgl",kernelFunc:Eue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lue(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:i}=e,a=i;Ah([s,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,d=Ii(a.shape,o,l,1,u),h=new Mue(d);return t.runWebGLProgram(h,[s],a.dtype)}const Aue={kernelName:sb,backendName:"webgl",kernelFunc:Lue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zue(n){const{inputs:e,backend:t,attrs:r}=n,{a:s,b:i}=e,{transposeA:a,transposeB:o}=r;return W0({a:s,b:i,transposeA:a,transposeB:o,backend:t})}const Due={kernelName:Lf,backendName:"webgl",kernelFunc:zue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pue{constructor(e,t,r,s,i,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Ct(e,t),Ct(e,r);let o="0.0";s!=null&&(Ct(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="1.0";i!=null&&(Ct(e,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${o};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fue{constructor(e,t,r,s,i,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ct(e,t),Ct(e,r);let o="vec4(0.0)";s!=null&&(Ct(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="vec4(1.0)";i!=null&&(Ct(e,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${o};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gue=({inputs:n,backend:e,attrs:t})=>{const{x:r,mean:s,variance:i,offset:a,scale:o}=n;P(s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),P(a==null||s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),P(o==null||s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=t;l==null&&(l=.001);const u=[r,s,i];let d=null;a!=null&&(d=a.shape,u.push(a));let h=null;o!=null&&(h=o.shape,u.push(o));const f=de().getBool("WEBGL_PACK_NORMALIZATION")?new Fue(r.shape,s.shape,i.shape,d,h,l):new Pue(r.shape,s.shape,i.shape,d,h,l);return e.runWebGLProgram(f,u,u[0].dtype)},Oue={kernelName:Uf,backendName:"webgl",kernelFunc:Gue};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wue{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=rn(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const r=Vue(this.rank);let s;const i=e.map((a,o)=>`sourceLoc.${d2[o]} = start[${o}] + coords.${d2[o]};`);s=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${i.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${r}));
      }
    `}}const d2=["x","y","z","w","u","v"];function Vue(n){if(n===1)return"sourceLoc";if(n<=6)return d2.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $ue{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=rn(this.rank),r=Jr("coords",this.rank),s=Jr("sourceLoc",this.rank),i=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${i})`,o=`
      result.x = ${a};
      if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((d,h)=>`start[${h}]`).join()});`:e.map((d,h)=>`${s[h]} = ${r[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${o}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bue(n,e,t,r){const s=r.texData.get(n.dataId),i=r.makeTensorInfo(t,n.dtype),a=r.texData.get(i.dataId);Object.assign(a,s),a.refCount=1,a.shape=t,a.dtype=n.dtype;let o=pI(e,ut(n.shape));s.slice&&(o+=s.slice.flatOffset),a.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||n.dataId};const l=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,l+1),i}function Wh(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:i,size:a}=r,[o,l]=Xx(s,i,a);if(cI(s,o,l),be(l)===0)return t.makeTensorInfo(l,s.dtype,[]);if(t.shouldExecuteOnCPU([s])||s.dtype==="string"){const h=t.texData.get(s.dataId),f=zoe(h.values,o,l,s.shape,s.dtype);return t.makeTensorInfo(l,s.dtype,f)}const{isPacked:u}=t.texData.get(s.dataId),d=hI(s.shape,o,l);if(u||!d){const h=de().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $ue(l):new Wue(l),f=[o];return t.runWebGLProgram(h,[s],s.dtype,f)}return t.uploadToGPU(s.dataId),Bue(s,o,l,t)}const Xue={kernelName:vm,backendName:"webgl",kernelFunc:Wh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uue=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:i,crops:a}=r;P(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const o=i.reduce((w,I)=>w*I),l=jm(s.shape,i,o),u=Qm(l.length,i.length),d=Jm(s.shape,i,o),h=bI(a,i.length),f=xI(d,a,i.length),m=[],x=Ve({inputs:{x:s},backend:t,attrs:{shape:l}}),g=qr({inputs:{x},backend:t,attrs:{perm:u}}),y=Ve({inputs:{x:g},backend:t,attrs:{shape:d}}),v=Wh({inputs:{x:y},backend:t,attrs:{begin:h,size:f}});return m.push(x),m.push(g),m.push(y),m.forEach(w=>t.disposeIntermediateTensorInfo(w)),v},Zue={kernelName:Af,backendName:"webgl",kernelFunc:Uue};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hue(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:i}=e,{size:a}=r,o=t.readSync(s.dataId),l=t.readSync(i.dataId),u=_F(o,l,i.dtype,i.shape,a);return t.makeTensorInfo([a],i.dtype,u)}const Kue={kernelName:ab,backendName:"webgl",kernelFunc:Hue};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yue=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,jue=`
  return float(int(a.r) & int(b.r));
`;function Que(n){const{inputs:e,backend:t}=n,{a:r,b:s}=e,i=de().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=de().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([r,s])||a===1){const l=t.texData.get(r.dataId).values,u=t.texData.get(s.dataId).values,[d,h]=soe(r.shape,s.shape,l,u,r.dtype),f=t.makeTensorInfo(h,r.dtype),m=t.texData.get(f.dataId);return m.values=d,f}let o;return i?o=new Gh(Yue,r.shape,s.shape,!1):o=new Au(jue,r.shape,s.shape),t.runWebGLProgram(o,[r,s],r.dtype)}const Jue={kernelName:zf,backendName:"webgl",kernelFunc:Que};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function que(n){const{inputs:e,backend:t}=n,{s0:r,s1:s}=e,i=t.readSync(r.dataId),a=t.readSync(s.dataId),o=Ct(Array.from(i),Array.from(a));return t.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const ece={kernelName:ob,backendName:"webgl",kernelFunc:que};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tce="return float(a != b);",$F=Dr({opSnippet:tce,cpuKernelImpl:koe,dtype:"bool"}),nce={kernelName:lm,backendName:"webgl",kernelFunc:$F};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pg(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.texData.get(r.dataId);return Ps({inputs:{x:s.complexTensorInfos.real},backend:t})}const rce={kernelName:Vb,backendName:"webgl",kernelFunc:pg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sce="return float(int(x));";function ice(n,e){const t=new ba(n.shape,sce),r=e.runWebGLProgram(t,[n],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h2(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dtype:i}=r;if(i==="complex64"){if(s.dtype==="complex64")return Ps({inputs:{x:s},backend:t});const a=jn(s.shape),o=h2({inputs:{x:s},backend:t,attrs:{dtype:"float32"}}),l=Il({inputs:{real:o,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(o),l}if(s.dtype==="complex64"){const a=pg({inputs:{input:s},backend:t}),o=h2({inputs:{x:a},backend:t,attrs:{dtype:i}});return t.disposeIntermediateTensorInfo(a),o}if(!G2(s.dtype,i)){const a=Ps({inputs:{x:s},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:i}}if(t.shouldExecuteOnCPU([s])){const a=t.texData.get(s.dataId).values,[o,l,u]=ioe(a,s.shape,s.dtype,i);return t.makeTensorInfo(o,l,u)}if(i==="int32")return ice(s,t);if(i==="bool"){const a=t.makeTensorInfo([],"bool",mr("bool",1)),o=$F({inputs:{a:s,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),o}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}const ace={kernelName:Ed,backendName:"webgl",kernelFunc:h2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q3="return ceil(x);",oce=Kt({opSnippet:q3,packedOpSnippet:q3,cpuKernelImpl:aoe}),lce={kernelName:Rd,backendName:"webgl",kernelFunc:oce};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uce{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cce{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dce(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{clipValueMin:i,clipValueMax:a}=r;let o;de().getBool("WEBGL_PACK_CLIP")?o=new cce(s.shape):o=new uce(s.shape);const l=[[i],[a]];return t.runWebGLProgram(o,[s],s.dtype,l)}const hce={kernelName:Ld,backendName:"webgl",kernelFunc:dce};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pce{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eR(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function fce(n){const{inputs:e,backend:t}=n,{x:r}=e,s=t.texData.get(r.dataId),i=new pce(r.shape),a=[eR(r,s.complexTensorInfos.real),eR(r,s.complexTensorInfos.imag)];return t.runWebGLProgram(i,a,a[0].dtype)}const mce={kernelName:Df,backendName:"webgl",kernelFunc:fce};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gce{constructor(e){this.outputShape=[],this.outputShape=Sa(e,1),this.variableNames=e.map((a,o)=>`T${o}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const r=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const o=t[a-1];r.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${o}));`)}const s=t.length,i=t[t.length-1];r.push(`else setOutput(getT${s}(yR, yC-${i}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yce{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Sa(e,t);const r=this.outputShape,s=r.length,i=rn(s),a=Jr("coords",s),o=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((g,y)=>`T${y}`);const l=new Array(e.length-1);l[0]=e[0][t];for(let g=1;g<l.length;g++)l[g]=l[g-1]+e[g][t];const u=o[t],d=o.slice(-2),h=o.join();let f=`if (${u} < ${l[0]}) {
        return getChannel(
            getT0(${h}), vec2(${d.join()}));
        }`;for(let g=1;g<l.length;g++){const y=l[g-1];f+=`
        if (${u} < ${l[g]}  && ${u} >= ${l[g-1]}) {
          return getChannel(
            getT${g}(${Hy(o,u,y)}),
            vec2(${Hy(d,u,y)}));
        }`}const m=l.length,x=l[l.length-1];f+=`
        return getChannel(
          getT${m}(${Hy(o,u,x)}),
          vec2(${Hy(d,u,x)}));`,this.userCode=`
      float getValue(${o.map(g=>"int "+g)}) {
        ${f}
      }

      void main() {
        ${i} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${r[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${r[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${r[s-2]} &&
            ${a[s-1]} < ${r[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function Hy(n,e,t){const r=n.indexOf(e);return n.map((s,i)=>i===r?`${s} - ${t}`:s).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vv(n){const{inputs:e,backend:t}=n,{input:r}=e,s=t.texData.get(r.dataId);return Ps({inputs:{x:s.complexTensorInfos.imag},backend:t})}const bce={kernelName:_b,backendName:"webgl",kernelFunc:vv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jp(n,e,t){const r=n[0].dtype;if(r==="complex64"){const m=n.map(w=>pg({inputs:{input:w},backend:t})),x=n.map(w=>vv({inputs:{input:w},backend:t})),g=jp(m,e,t),y=jp(x,e,t),v=Il({inputs:{real:g,imag:y},backend:t});return m.forEach(w=>t.disposeIntermediateTensorInfo(w)),x.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),v}let s=t.shouldExecuteOnCPU(n);if(r==="string"&&(s=!0),s){const m=n.map(T=>{const C=[-1,be(T.shape.slice(e))];return Ve({inputs:{x:T},backend:t,attrs:{shape:C}})}),x=m.map(T=>({vals:t.readSync(T.dataId),shape:T.shape})),g=Sa(m.map(T=>T.shape),1),y=m[0].shape[0]===1,v=ooe(x,g,r,y),w=Sa(n.map(T=>T.shape),e),I=t.makeTensorInfo(w,r,v);return m.forEach(T=>t.disposeIntermediateTensorInfo(T)),I}const i=n.filter(m=>be(m.shape)>0),a=de().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(i.length===1){const m=a?new ba(n[0].shape,Xo):new jo(n[0].shape,Xo);return t.runWebGLProgram(m,n,r)}const o=de().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>o){const m=[];for(let g=0;g<i.length;g+=o){const y=i.slice(g,g+o);m.push(jp(y,e,t))}const x=jp(m,e,t);for(const g of m)t.disposeIntermediateTensorInfo(g);return x}if(a){const m=new yce(i.map(x=>x.shape),e);return t.runWebGLProgram(m,i,r)}const{tensors2D:l,outShape:u}=xce(i,e,t),d=new gce(l.map(m=>m.shape)),h=t.runWebGLProgram(d,l,r);l.forEach(m=>t.disposeIntermediateTensorInfo(m));const f=Ve({inputs:{x:h},attrs:{shape:u},backend:t});return t.disposeIntermediateTensorInfo(h),f}function xce(n,e,t){const r=Sa(n.map(s=>s.shape),e);return{tensors2D:n.map(s=>Ve({inputs:{x:s},attrs:{shape:[-1,be(s.shape.slice(e))]},backend:t})),outShape:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BF(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r,i=At(s,e[0].shape)[0],a=e.map(u=>u.shape);mI(a,i);const o=Sa(e.map(u=>u.shape),i);if(be(o)===0)return t.makeTensorInfo(o,e[0].dtype,[]);const l=e.filter(u=>be(u.shape)>0);return l.length===1?Ps({inputs:{x:l[0]},backend:t}):jp(l,i,t)}const vce={kernelName:Pf,backendName:"webgl",kernelFunc:BF};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class XF{constructor(e,t=!1,r=null,s=!1,i=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,o=e.padInfo.left,l=e.strideHeight,u=e.strideWidth,d=e.dilationHeight,h=e.dilationWidth,f=e.filterHeight,m=e.filterWidth,x=Math.floor(e.inChannels/4)*4,g=e.inChannels%4,y=e.dataFormat==="channelsLast",v=y?1:2,w=y?2:3,I=y?3:1;let T="",C="";r&&(s?T=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:i?T=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:T=`
          float activation(float x) {
            ${r}
          }
        `,C="result = activation(result);");const E=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${T}

      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${I}];

        ivec2 xRCCorner =
            ivec2(coords[${v}], coords[${w}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${f}; wR++) {
          int xR = xRCorner + wR * ${d};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${m}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${x}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${y}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${g===1}) {

              if (${y}) {
                dotProd +=
                    getX(batch, xR, xC, ${x}) *
                    getW(wR, wC, ${x}, d2);
              } else {
                dotProd +=
                    getX(batch, ${x}, xR, xC) *
                    getW(wR, wC, ${x}, d2);
              }

            } else if (${g===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${x}, d2),
                getW(wR, wC, ${x} + 1, d2)
              );

              if (${y}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${x}),
                  getX(batch, xR, xC, ${x} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${x}, xR, xC),
                  getX(batch, ${x} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${g===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${x}, d2),
                getW(wR, wC, ${x} + 1, d2),
                getW(wR, wC, ${x} + 2, d2)
              );

              if (${y}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${x}),
                  getX(batch, xR, xC, ${x} + 1),
                  getX(batch, xR, xC, ${x} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${x}, xR, xC),
                  getX(batch, ${x} + 1, xR, xC),
                  getX(batch, ${x} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${E}
        ${C}
        setOutput(result);
      }
    `}}class wce{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,r=e.padInfo.top,s=e.padInfo.left,i=e.strideDepth,a=e.strideHeight,o=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,d=e.dilationWidth,h=e.filterDepth,f=e.filterHeight,m=e.filterWidth,x=Math.floor(e.inChannels/4)*4,g=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${i}, ${a}, ${o});
      const ivec3 pads = ivec3(${t}, ${r}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m}; wC++) {
              int xC = xCCorner + wC * ${d};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${x}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${g===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${x}) *
                  getW(wF, wR, wC, ${x}, d2);
              } else if (${g===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${x}),
                  getX(batch, xF, xR, xC, ${x} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${x}, d2),
                  getW(wF, wR, wC, ${x} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${g===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${x}),
                  getX(batch, xF, xR, xC, ${x} + 1),
                  getX(batch, xF, xR, xC, ${x} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${x}, d2),
                  getW(wF, wR, wC, ${x} + 1, d2),
                  getW(wF, wR, wC, ${x} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UF{constructor(e,t=!1,r=null,s=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Vr(this.outputShape.length);const a=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,d=e.filterWidth,h=d;let f=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<d;y++)f+=`
           vec4 xTexelC${y*2};
           int xTexelC${y*2}Ready;
           vec4 xTexelC${y*2+1};
           int xTexelC${y*2+1}Ready;
           vec4 xC${y};`;f+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let y=0;y<d;y++)f+=`
           xTexelC${y*2} = vec4(0.0);
           xTexelC${y*2}Ready = 0;
           xTexelC${y*2+1} = vec4(0.0);
           xTexelC${y*2+1}Ready = 0;
           xC${y} = vec4(0.0);`;f+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let y=0;y<(h+1)/2;y++){const v=y*2;if(f+=`
           xC = xCCorner + ${v*l};
           `,o===1){if(v<d&&(a%2===1?(f+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v}Ready == 0) {
                   xTexelC${v} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${v}.zw = vec2(0.0);
                   }
                   xTexelC${v}Ready = 1;
                 }
               `,l===1&&v>0?f+=`
                 xC${v} = vec4(xTexelC${v-2}.zw, xTexelC${v}.xy);
                 `:f+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${v} = vec4(previous.zw, xTexelC${v}.xy);
                   } else {
                     xC${v} = vec4(0.0, 0.0, xTexelC${v}.xy);
                   }
                   `):f+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${v}Ready == 0) {
                   xTexelC${v} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${v}.zw = vec2(0.0);
                   }
                   xTexelC${v}Ready = 1;
                 }

                 xC${v} = xTexelC${v};
                 `,v+1<d)){const w=a%2===0?eb(l):l;l%2===0&&a%2===1||l%2!==0&&a%2!==1?(f+=`
                   xCOffset = xC + imod(pads[1], 2) + ${w};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                     xTexelC${v+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${v+1}.zw = vec2(0.0);
                     }
                     xTexelC${v+1}Ready = 1;
                   }
                   `,l>1?f+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${v+1} = vec4(previous.zw, xTexelC${v+1}.xy);
                     } else {
                      xC${v+1} = vec4(0.0, 0.0, xTexelC${v+1}.xy);
                     }
                     `:f+=`
                     xC${v+1} = vec4(xTexelC${v}.zw, xTexelC${v+1}.xy);
                     `):w===1?f+=`
                     xC${v+1} = xTexelC${v};
                     `:f+=`
                     xCOffset = xC + ${w};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                       xTexelC${v+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${v+1}.zw = vec2(0.0);
                       }
                       xTexelC${v+1}Ready = 1;
                     }

                     xC${v+1} = xTexelC${v+1};
                     `}}else v<d&&(a%2===1?(f+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v}Ready == 0) {
                   xTexelC${v} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${v}.zw = vec2(0.0);
                   }
                   xTexelC${v}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${v+1}Ready == 0) {
                   xTexelC${v+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${v+1}.zw = vec2(0.0);
                   }
                   xTexelC${v+1}Ready = 1;
                 }

                 xC${v} = vec4(xTexelC${v}.zw, xTexelC${v+1}.zw);
               `,v+1<d&&(f+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${v+1} = vec4(xTexelC${v+1}.xy, final.xy);
                 `)):(f+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${v}Ready == 0) {
                   xTexelC${v} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${v}.zw = vec2(0.0);
                   }
                   xTexelC${v}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${v+1}Ready == 0) {
                   xTexelC${v+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${v+1}.zw = vec2(0.);
                   }
                   xTexelC${v+1}Ready = 1;
                 }

                 xC${v} = vec4(
                   xTexelC${v}.xy, xTexelC${v+1}.xy);
               `,v+1<d&&(f+=`
                   xC${v+1} = vec4(xTexelC${v}.zw, xTexelC${v+1}.zw);
                 `)));v<d&&(f+=`
             wTexel = getW(r, ${v}, d1, d2);
             dotProd += xC${v}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${v}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,v+1<d&&(f+=`
               wTexel = getW(r, ${v+1}, d1, d2);
               dotProd += xC${v+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${v+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}f+=`
     }
   `,f+=`
     }
   `,f+=`
     }
   `;let m="",x="";r&&(s?m=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${r}
         }`:i?m=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${r}
         }`:m=`vec4 activation(vec4 x) {
           ${r}
         }`,x="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${m}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${f}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${g}
         ${x}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sce{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Vr(this.outputShape.length);const{dataFormat:r}=t,s=ns(),i=r==="channelsLast",a=i?1:2,o=i?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let d=0;d<=1;d++)for(let h=0;h<=1;h++)u+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${d};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${o}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${i}) {
                  innerDims = vec2(d1, ch);
                  result[${d*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${d*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${s.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V0(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function ZF({x:n,filter:e,convInfo:t,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const l=n.shape,u=r.texData.get(n.dataId),d=t.inChannels,h=l[0]*l[1]*l[2],f=t.outChannels,m=t.dataFormat==="channelsLast",x=!1,g=!1;let y;const v=[];if(i!=null){const w=V0(i.shape,m);w!=null&&(i=Ve({inputs:{x:i},backend:r,attrs:{shape:w}}),v.push(i))}if(s!=null){const w=V0(s.shape,m);w!=null&&(s=Ve({inputs:{x:s},backend:r,attrs:{shape:w}}),v.push(s))}if(!((h===1||f===1)&&d>GF)&&u.isPacked&&m&&u.texture!=null&&l[2]%2!==0&&Ft(u.shape.slice(-3),l.slice(-3))){const w=l[0]*l[1]*(l[2]+1),I={dataId:n.dataId,shape:[1,w,t.inChannels],dtype:n.dtype},T=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,P(xf(u.shape,I.shape),()=>`packed reshape ${u.shape} to ${I.shape} isn't free`);const C=Ve({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}});v.push(C);const E=W0({a:I,b:C,backend:r,transposeA:x,transposeB:g,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:a}),L=r.texData.get(E.dataId);P(L.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=T,L.shape=t.outShape,y=Ps({inputs:{x:E},backend:r}),y.shape=t.outShape,v.push(E)}else{const w=t.outHeight*t.outWidth,I=Ve({inputs:{x:n},backend:r,attrs:{shape:m?[t.batchSize,w,t.inChannels]:[t.batchSize,t.inChannels,w]}}),T=Ve({inputs:{x:e},backend:r,attrs:{shape:[1,t.inChannels,t.outChannels]}}),C=W0({a:m?I:T,b:m?T:I,transposeA:!m,transposeB:g,backend:r,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:a});y=Ve({inputs:{x:C},backend:r,attrs:{shape:t.outShape}}),v.push(I),v.push(T),v.push(C)}for(const w of v)r.disposeIntermediateTensorInfo(w);return y}function HF({x:n,filter:e,convInfo:t,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:d,outWidth:h,outHeight:f,dataFormat:m}=t,x=m==="channelsLast",g=l*u*d,y=f*h,v=[t.batchSize,g,y],w=!0,I=!1,T=[];if(i!=null){const O=V0(i.shape,x);O!=null&&(i=Ve({inputs:{x:i},backend:r,attrs:{shape:O}}),T.push(i))}if(s!=null){const O=V0(s.shape,x);O!=null&&(s=Ve({inputs:{x:s},backend:r,attrs:{shape:O}}),T.push(s))}const C=Ve({inputs:{x:e},backend:r,attrs:{shape:[1,g,be(e.shape)/g]}});T.push(C);const E=new Sce(v,t),L=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],M=r.runWebGLProgram(E,[n],"float32",L),R=Ve({inputs:{x:M},backend:r,attrs:{shape:v}});T.push(M),T.push(R);const z=s!=null,X=i!=null,U=o==="leakyrelu",G=o?vf(o,!0):null,V=new FF(x?R.shape:C.shape,x?C.shape:R.shape,x?[t.batchSize,y,t.outChannels]:[t.batchSize,t.outChannels,y],w,I,z,G,X,U),Z=x?[R,C]:[C,R];if(s&&Z.push(s),X&&Z.push(i),U){const O=r.makeTensorInfo([],"float32",uo(a,"float32"));Z.push(O),T.push(O)}const J=r.runWebGLProgram(V,Z,"float32"),te=Ve({inputs:{x:J},backend:r,attrs:{shape:t.outShape}});T.push(J);for(const O of T)r.disposeIntermediateTensorInfo(O);return te}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tce(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i}=e,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:d}=r,h=ho(l),f=yr(s.shape,i.shape,a,u,o,d,!1,h);let m;if(f.filterHeight===1&&f.filterWidth===1&&f.dilationHeight===1&&f.dilationWidth===1&&f.strideHeight===1&&f.strideWidth===1&&(f.padInfo.type==="SAME"||f.padInfo.type==="VALID"))m=ZF({x:s,filter:i,convInfo:f,backend:t});else if(f.strideWidth<=2&&h==="channelsLast"&&de().getBool("WEBGL_EXP_CONV")){const g=new UF(f),y=[[f.padInfo.top,f.padInfo.left],[f.strideHeight,f.strideWidth],[f.dilationHeight,f.dilationWidth],[f.inHeight,f.inWidth]];m=t.runWebGLProgram(g,[s,i],"float32",y)}else if(de().getBool("WEBGL_CONV_IM2COL"))m=HF({x:s,filter:i,convInfo:f,backend:t});else{const g=new XF(f);m=t.runWebGLProgram(g,[s,i],"float32")}const x=Ve({inputs:{x:m},backend:t,attrs:{shape:f.outShape}});return t.disposeIntermediateTensorInfo(m),x}const Ice={kernelName:Ff,backendName:"webgl",kernelFunc:Tce};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kce{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,i=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${i};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${a?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Cce{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,i=e.strideWidth,a=e.dataFormat==="channelsLast",o=t-1-e.padInfo.top,l=r-1-e.padInfo.left,u=a?1:2,d=a?2:3,h=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${d}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class _ce{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,r=e.strideHeight,s=e.strideWidth,i=e.padInfo.front,a=e.padInfo.top,o=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${i};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${o};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Mce{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,r=e.filterHeight,s=e.filterWidth,i=e.strideDepth,a=e.strideHeight,o=e.strideWidth,l=t-1-e.padInfo.front,u=r-1-e.padInfo.top,d=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${u}, ${d});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${i}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nce(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:i}=e,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:d}=r,h=ho(l),f=yr(s.shape,d,a,1,o,u,!1,h),m=new kce(f);return t.runWebGLProgram(m,[s,i],"float32")}const Ece={kernelName:ub,backendName:"webgl",kernelFunc:Nce};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rce{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=Vr(this.outputShape.length);const t=e.filterHeight,r=e.filterWidth,s=t-1-e.padInfo.top,i=r-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            int wCPerm = ${r} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lce(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:i}=e,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:d}=r,h=ho(u),f=yr(a,i.shape,o,1,l,d,!1,h);if(de().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&h==="channelsLast"){const m=[[f.strideHeight,f.strideWidth]],x=new Rce(f);return t.runWebGLProgram(x,[s,i],"float32",m)}else{const m=new Cce(f);return t.runWebGLProgram(m,[s,i],"float32")}}const Ace={kernelName:Gf,backendName:"webgl",kernelFunc:Lce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zce(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l}=r,u=yl(s.shape,i.shape,a,l,o),d=new wce(u);return t.runWebGLProgram(d,[s,i],"float32")}const Dce={kernelName:Of,backendName:"webgl",kernelFunc:zce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pce(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:i}=e,{strides:a,pad:o,filterShape:l}=r,u=yl(s.shape,l,a,1,o),d=new _ce(u);return t.runWebGLProgram(d,[s,i],"float32")}const Fce={kernelName:cb,backendName:"webgl",kernelFunc:Pce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gce(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:i}=e,{pad:a,strides:o,inputShape:l}=r,u=yl(l,i.shape,o,1,a),d=new Mce(u);return t.runWebGLProgram(d,[s,i],"float32")}const Oce={kernelName:db,backendName:"webgl",kernelFunc:Gce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wce=Oh+`
  return cos(x);
`,Vce=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${tc}
  return result;
`,$ce=Kt({opSnippet:Wce,packedOpSnippet:Vce}),Bce={kernelName:Ad,backendName:"webgl",kernelFunc:$ce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xce=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Uce=Kt({opSnippet:Xce}),Zce={kernelName:zd,backendName:"webgl",kernelFunc:Uce};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hce{constructor(e,t,r,s,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,o,l,u]=e,[d]=t,[h,f]=r;this.outputShape=[d,h,f,u];const m=s==="bilinear"?1:0,[x,g]=[`${o-1}.0`,`${l-1}.0`],[y,v,w]=h>1?[`${(o-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${x} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${x}`],[I,T,C]=f>1?[`${(l-1)/(f-1)}`,"(x2-x1) * width_ratio",`x1*${g} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${g}`];this.userCode=`
      const float height_ratio = float(${y});
      const float width_ratio = float(${I});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${v};
        float width_scale = ${T};

        float in_y = ${w};
        if( in_y < 0.0 || in_y > ${x} ) {
          setOutput(float(${i}));
          return;
        }
        float in_x = ${C};
        if( in_x < 0.0 || in_x > ${g} ) {
          setOutput(float(${i}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${m} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kce=n=>{const{inputs:e,backend:t,attrs:r}=n,{image:s,boxes:i,boxInd:a}=e,{cropSize:o,method:l,extrapolationValue:u}=r,d=new Hce(s.shape,i.shape,o,l,u);return t.runWebGLProgram(d,[s,i,a],"float32")},Yce={kernelName:pb,backendName:"webgl",kernelFunc:Kce};var Sf;(function(n){n.Prod="*",n.Sum="+"})(Sf||(Sf={}));let tR=class{constructor(e,t,r,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const i=this.outputShape.length,a=this.op===Sf.Prod?"1.0":"0.0",o=r?a:`getX(${nR(i,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let u="",d="";r?(u=s?`end != ${l-1}`:"end != 0",d=s?"end + 1":"end - 1"):(u=s?`end + pow2 < ${l}`:"end >= pow2",d=s?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${rn(i)} coords = getOutputCoords();
        int end = ${rR(i,"coords",this.op)};
        float val = ${o};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${d};
          ${rR(i,"coords",this.op)} = idx;
          val ${this.op}= getX(${nR(i,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function nR(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function rR(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KF(n,e,t,r,s,i){const a=e.shape.length,o=Rn([r],a);let l=e;o!=null&&(l=qr({inputs:{x:e},backend:t,attrs:{perm:o}}));const u=Xn(1,a)[0];if(u!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${r}`);const d=l.shape[u];let h=Ps({inputs:{x:l},backend:t});for(let f=0;f<=Math.ceil(Math.log2(d))-1;f++){const m=new tR(n,l.shape,!1,i),x=[[f]],g=h;h=t.runWebGLProgram(m,[h],h.dtype,x),t.disposeIntermediateTensorInfo(g)}if(s){const f=new tR(n,l.shape,s,i),m=h;h=t.runWebGLProgram(f,[h],h.dtype),t.disposeIntermediateTensorInfo(m)}if(o!=null){const f=bl(o),m=qr({inputs:{x:h},backend:t,attrs:{perm:f}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(l),m}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jce(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,exclusive:a,reverse:o}=r;return KF(Sf.Prod,s,t,i,a,o)}const Qce={kernelName:hb,backendName:"webgl",kernelFunc:jce};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jce(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,exclusive:a,reverse:o}=r;return KF(Sf.Sum,s,t,i,a,o)}const qce={kernelName:Wf,backendName:"webgl",kernelFunc:Jce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ede(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,weights:i}=e,{size:a,binaryOutput:o}=r;if(s.shape.length===1){const l=t.readSync(s.dataId),u=t.readSync(i.dataId),d=_F(l,u,i.dtype,i.shape,a);return t.makeTensorInfo([a],i.dtype,d)}else if(s.shape.length===2){const l=t.bufferSync(s),u=t.bufferSync(i),d=roe(l,u,a,o);return t.makeTensorInfo(d.shape,i.dtype,d.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const tde={kernelName:fb,backendName:"webgl",kernelFunc:ede};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nde{constructor(e,t,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rde(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockSize:i,dataFormat:a}=r,o=s.shape[0],l=a==="NHWC"?s.shape[1]:s.shape[2],u=a==="NHWC"?s.shape[2]:s.shape[3],d=a==="NHWC"?s.shape[3]:s.shape[1],h=l*i,f=u*i,m=d/(i*i),x=a==="NHWC"?[o,h,f,m]:[o,m,h,f],g=new nde(x,i,a);return t.runWebGLProgram(g,[s],s.dtype)}const sde={kernelName:mb,backendName:"webgl",kernelFunc:rde};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YF{constructor(e,t=!1,r=null,s=!1,i=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Vr(this.outputShape.length);const a=e.filterHeight,o=e.filterWidth,l=e.outChannels/e.inChannels;let u="",d="";r&&(s?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:i?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:u=`
          float activation(float x) {
            ${r}
          }
        `,d="result = activation(result);");const h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${o}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${d}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jF{constructor(e,t=!1,r=null,s=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Vr(this.outputShape.length);const a=e.outChannels/e.inChannels,o=e.padInfo.left,l=e.strideWidth,u=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,f=h;let m=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let v=0;v<h;v++)m+=`
          vec4 xTexelC${v*2};
          int xTexelC${v*2}Ready;
          vec4 xTexelC${v*2+1};
          int xTexelC${v*2+1}Ready;
          vec4 xC${v};`;m+=`
    for (int r = 0; r < ${d}; r++) {
      `;for(let v=0;v<h;v++)m+=`
          xTexelC${v*2} = vec4(0.0);
          xTexelC${v*2}Ready = 0;
          xTexelC${v*2+1} = vec4(0.0);
          xTexelC${v*2+1}Ready = 0;
          xC${v} = vec4(0.0);`;m+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let v=0;v<(f+1)/2;v++){const w=v*2;if(m+=`
          xC = xCCorner + ${w*u};
          `,l===1){if(w<h&&(o%2===1?(m+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }
              `,u===1&&w>0?m+=`
                xC${w} = vec4(xTexelC${w-2}.zw, xTexelC${w}.xy);
                `:m+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${w} = vec4(previous.zw, xTexelC${w}.xy);
                  } else {
                    xC${w} = vec4(0.0, 0.0, xTexelC${w}.xy);
                  }
                  `):m+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }

                xC${w} = xTexelC${w};
                `,w+1<h)){const I=o%2===0?eb(u):u;u%2===0&&o%2===1||u%2!==0&&o%2!==1?(m+=`
                  xCOffset = xC + imod(pads[1], 2) + ${I};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w+1}Ready == 0) {
                    xTexelC${w+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${w+1}.zw = vec2(0.0);
                    }
                    xTexelC${w+1}Ready = 1;
                  }
                  `,u>1?m+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${w+1} = vec4(previous.zw, xTexelC${w+1}.xy);
                    } else {
                     xC${w+1} = vec4(0.0, 0.0, xTexelC${w+1}.xy);
                    }
                    `:m+=`
                    xC${w+1} = vec4(xTexelC${w}.zw, xTexelC${w+1}.xy);
                    `):I===1?m+=`
                    xC${w+1} = xTexelC${w};
                    `:m+=`
                    xCOffset = xC + ${I};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w+1}Ready == 0) {
                      xTexelC${w+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${w+1}.zw = vec2(0.0);
                      }
                      xTexelC${w+1}Ready = 1;
                    }

                    xC${w+1} = xTexelC${w+1};
                    `}}else w<h&&(o%2===1?(m+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${w+1}Ready == 0) {
                  xTexelC${w+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${w+1}.zw = vec2(0.0);
                  }
                  xTexelC${w+1}Ready = 1;
                }

                xC${w} = vec4(xTexelC${w}.zw, xTexelC${w+1}.zw);
              `,w+1<h&&(m+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${w+1} = vec4(xTexelC${w+1}.xy, final.xy);
                `)):(m+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${w}Ready == 0) {
                  xTexelC${w} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${w}.zw = vec2(0.0);
                  }
                  xTexelC${w}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${w+1}Ready == 0) {
                  xTexelC${w+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${w+1}.zw = vec2(0.);
                  }
                  xTexelC${w+1}Ready = 1;
                }

                xC${w} = vec4(
                  xTexelC${w}.xy, xTexelC${w+1}.xy);
              `,w+1<h&&(m+=`
                  xC${w+1} = vec4(xTexelC${w}.zw, xTexelC${w+1}.zw);
                `)));w<h&&(m+=`
            wTexel = getW(r, ${w}, d1, q);
            dotProd += xC${w} * vec4(wTexel.xz, wTexel.xz);
          `,w+1<h&&(m+=`
              wTexel = getW(r, ${w+1}, d1, q);
              dotProd += xC${w+1} * vec4(wTexel.xz, wTexel.xz);
            `))}m+=`
    }
  `,m+=`
      }
    `;let x="",g="";r&&(s?x=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:i?x=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:x=`vec4 activation(vec4 x) {
          ${r}
        }`,g="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${m}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${y}
        ${g}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ide(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;let d=l;d==null&&(d=[1,1]),P(Ar(a,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`);const h=yr(s.shape,i.shape,a,d,o,u,!0);let f;de().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?f=new jF(h):f=new YF(h);const m=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return t.runWebGLProgram(f,[s,i],"float32",m)}const ade={kernelName:Vf,backendName:"webgl",kernelFunc:ide};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ode{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,i=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${i};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class lde{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,r=e.filterWidth,s=e.strideHeight,i=e.strideWidth,a=t-1-e.padInfo.top,o=r-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ude(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,dy:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:d}=r,h=yr(s.shape,d,a,o,l,u,!0),f=new ode(h);return t.runWebGLProgram(f,[s,i],"float32")}const cde={kernelName:gb,backendName:"webgl",kernelFunc:ude};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dde(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,filter:i}=e,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:d}=r,h=yr(d,i.shape,a,o,l,u,!0),f=new lde(h);return t.runWebGLProgram(f,[s,i],"float32")}const hde={kernelName:yb,backendName:"webgl",kernelFunc:dde};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pde{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fde(n){const{inputs:e,backend:t}=n,{x:r}=e,s=[...r.shape,...r.shape],i=be(r.shape),a=Ve({inputs:{x:r},backend:t,attrs:{shape:[i]}}),o=new pde(i),l=t.runWebGLProgram(o,[a],a.dtype),u=Ve({inputs:{x:l},backend:t,attrs:{shape:s}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),u}const mde={kernelName:bb,backendName:"webgl",kernelFunc:fde};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gde{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:r,padInfo:s,strideHeight:i,strideWidth:a,filterHeight:o,filterWidth:l,dilationHeight:u,dilationWidth:d}=e,{top:h,left:f}=s;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${a});
      const ivec2 pads = ivec2(${h}, ${f});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${o}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${d};

              if (wIn >= 0 && wIn < ${r}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yde(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i}=e,{strides:a,pad:o,dilations:l}=r,u=Rm(s.shape,i.shape,a,o,"NHWC",l);let d;const h=new gde(u);d=t.runWebGLProgram(h,[s,i],"float32");const f=Ve({inputs:{x:d},backend:t,attrs:{shape:u.outShape}});return t.disposeIntermediateTensorInfo(d),f}const bde={kernelName:$f,backendName:"webgl",kernelFunc:yde};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xde(n){const{inputs:e,backend:t,attrs:r}=n,{equation:s}=r,i=e,{allDims:a,summedDims:o,idDims:l}=_I(s,i.length);NI(a.length,l,i);const{path:u,steps:d}=EI(o,l),h=d.length;let f=null,m=a.length;const x=[];for(let g=0;g<h;++g){for(const y of d[g]){const{permutationIndices:v,expandDims:w}=MI(m,l[y]);let I;RI(v)?I=i[y]:(I=qr({inputs:{x:i[y]},backend:t,attrs:{perm:v}}),x.push(I));const T=I.shape.slice();for(let C=0;C<w.length;++C)T.splice(w[C],0,1);Ft(I.shape,T)||(I=Ve({inputs:{x:I},backend:t,attrs:{shape:T}}),x.push(I)),f===null?f=I:(f=MC({inputs:{a:I,b:f},backend:t}),x.push(f))}g<h-1&&(u[g]>=0&&(f=xv({inputs:{x:f},backend:t,attrs:{axis:u[g]-(a.length-m),keepDims:!1}}),x.push(f)),m--)}for(const g of x)g!==f&&t.disposeIntermediateTensorInfo(g);return f}const vde={kernelName:vb,backendName:"webgl",kernelFunc:xde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wde="return (x >= 0.0) ? x : (exp(x) - 1.0);",Sde=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Tde=Kt({opSnippet:wde,packedOpSnippet:Sde}),Ide={kernelName:Pd,backendName:"webgl",kernelFunc:Tde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kde="return (b >= 0.0) ? a : a * (b + 1.0);",Cde=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,_de=n=>{const{inputs:e,backend:t}=n,{dy:r,y:s}=e,i=de().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Gh(Cde,r.shape,s.shape):new Au(kde,r.shape,s.shape);return t.runWebGLProgram(i,[r,s],r.dtype)},Mde={kernelName:wb,backendName:"webgl",kernelFunc:_de};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nde=`
  return vec4(equal(a, b));
`,Ede="return float(a == b);",Rde=Dr({opSnippet:Ede,packedOpSnippet:Nde,dtype:"bool",cpuKernelImpl:loe}),Lde={kernelName:Bf,backendName:"webgl",kernelFunc:Rde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ade=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${vI};
  float a1 = ${wI};
  float a2 = ${SI};
  float a3 = ${TI};
  float a4 = ${II};
  float a5 = ${kI};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,zde=Kt({opSnippet:Ade}),Dde={kernelName:Fd,backendName:"webgl",kernelFunc:zde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pde=Oh+`
  return exp(x);
`,Fde=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,QF=Kt({opSnippet:Pde,packedOpSnippet:Fde,cpuKernelImpl:uoe,dtype:"float32"}),Gde={kernelName:Gd,backendName:"webgl",kernelFunc:QF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p2(n){const{inputs:e,attrs:t,backend:r}=n,{dim:s}=t,{input:i}=e,a=i.shape.length,o=i.shape.slice();let l=s;return s<0&&(P(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),l=a+s+1),o.splice(l,0,1),Ve({inputs:{x:i},backend:r,attrs:{shape:o}})}const Ode={kernelName:Xf,backendName:"webgl",kernelFunc:p2};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sR="return exp(x) - 1.0;",Wde=Kt({opSnippet:sR,packedOpSnippet:sR,cpuKernelImpl:coe}),Vde={kernelName:Od,backendName:"webgl",kernelFunc:Wde};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let iR=class{constructor(e,t,r){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const i=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=r?`${s}.0`:"1.0";let o;if(e==="real")o="return real * expR - imag * expI;";else if(e==="imag")o="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${i};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${o}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JF(n,e,t){const r=t.texData.get(n.dataId),s=be(n.shape),i=n.shape[n.shape.length-1],a=s/i,o=Ve({inputs:{x:n},backend:t,attrs:{shape:[a,i]}}),l=o.shape,u=new iR("real",l,e),d=new iR("imag",l,e),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l}],f=t.runWebGLProgram(u,h,"float32"),m=t.runWebGLProgram(d,h,"float32"),x=Il({inputs:{real:f,imag:m},backend:t});t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m);const g=Ve({inputs:{x},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(x),g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $de(n){const{inputs:e,backend:t}=n,{input:r}=e;return JF(r,!1,t)}const Bde={kernelName:Sb,backendName:"webgl",kernelFunc:$de};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xde{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fg(n){const{backend:e,attrs:t}=n,{shape:r,value:s}=t;let{dtype:i}=t;if(i=i||Ou(s),i==="string"){const a=Dn(i,be(r));return a.fill(s),e.makeTensorInfo(r,i,a)}else{const a=new Xde(r,s),o=[[s]];return e.runWebGLProgram(a,[],i,o)}}const Ude={kernelName:Tb,backendName:"webgl",kernelFunc:fg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zde{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hde={kernelName:Ib,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,r=e,s=new Zde(t.shape);return r.runWebGLProgram(s,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aR="return floor(x);",Kde=Kt({opSnippet:aR,packedOpSnippet:aR,cpuKernelImpl:doe}),Yde={kernelName:Wd,backendName:"webgl",kernelFunc:Kde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jde=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Qde=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Jde=Dr({opSnippet:jde,packedOpSnippet:Qde,dtype:"int32"}),qde={kernelName:Vd,backendName:"webgl",kernelFunc:Jde};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ehe{constructor(e){this.variableNames=["A"];const t=ns(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${r}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class the{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=ns(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${r}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nhe={kernelName:x0,backendName:"webgl",kernelFunc:rhe};let Wc,qw=de().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function rhe(n){const{inputs:e,backend:t,attrs:r}=n;let{pixels:s}=e;const{numChannels:i}=r,a=typeof HTMLVideoElement<"u"&&s instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement,[l,u]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],d=[u,l],h=[u,l,i];if(o||a){const g=de().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Wc==null||g!==qw)&&(qw=g,Wc=document.createElement("canvas").getContext("2d",{willReadFrequently:qw})),Wc.canvas.width=l,Wc.canvas.height=u,Wc.drawImage(s,0,0,l,u),s=Wc.canvas}const f=t.makeTensorInfo(d,"int32");t.texData.get(f.dataId).usage=js.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(f.dataId),s);const m=de().getBool("WEBGL_PACK")?new the(h):new ehe(h),x=t.runWebGLProgram(m,[f],"int32");return t.disposeData(f.dataId),x}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function she(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dataFormat:d,dilations:h,dimRoundingMode:f,activation:m,leakyreluAlpha:x}=r,g=ho(d),y=yr(s.shape,i.shape,l,h,u,f,!1,g);let v;const w=[],I=a!=null,T=o!=null,C=m==="leakyrelu",E=()=>{const M=[s,i],R=(z,X)=>{if(X==="NCHW"&&z.shape.length===1&&z.shape[0]!==1){const U=Ve({inputs:{x:z},backend:t,attrs:{shape:[z.shape[0],1,1]}});return w.push(U),U}return z};if(I&&M.push(R(a,d)),T&&M.push(R(o,d)),C){const z=t.makeTensorInfo([],"float32",uo(x,"float32"));M.push(z),w.push(z)}return M};if(y.filterHeight===1&&y.filterWidth===1&&y.dilationHeight===1&&y.dilationWidth===1&&y.strideHeight===1&&y.strideWidth===1&&(y.padInfo.type==="SAME"||y.padInfo.type==="VALID"))v=ZF({x:s,filter:i,convInfo:y,backend:t,bias:a,activation:m,preluActivationWeights:o,leakyreluAlpha:x});else if(y.strideWidth<=2&&g==="channelsLast"&&de().getBool("WEBGL_EXP_CONV")){const M=m?vf(m,!0):null,R=new UF(y,I,M,T,C),z=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],X=E();v=t.runWebGLProgram(R,X,"float32",z)}else if(de().getBool("WEBGL_CONV_IM2COL"))v=HF({x:s,filter:i,convInfo:y,backend:t,bias:a,activation:m,preluActivationWeights:o,leakyreluAlpha:x});else{const M=m?vf(m,!1):null,R=new XF(y,I,M,T,C),z=E();v=t.runWebGLProgram(R,z,"float32")}const L=Ve({inputs:{x:v},backend:t,attrs:{shape:y.outShape}});return w.push(v),w.forEach(M=>t.disposeIntermediateTensorInfo(M)),L}const ihe={kernelName:sf,backendName:"webgl",kernelFunc:she};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ahe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,filter:i,bias:a,preluActivationWeights:o}=e,{strides:l,pad:u,dilations:d,dimRoundingMode:h,activation:f,leakyreluAlpha:m}=r,x=[];let g=d;g==null&&(g=[1,1]),P(Ar(l,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`);const y=yr(s.shape,i.shape,l,g,u,h,!0),v=de().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,w=f?vf(f,v):null,I=[s,i],T=a!=null,C=o!=null,E=f==="leakyrelu";if(T&&I.push(a),C&&I.push(o),E){const z=t.makeTensorInfo([],"float32",uo(m,"float32"));I.push(z),x.push(z)}let L;v?L=new jF(y,T,w,C,E):L=new YF(y,T,w,C,E);const M=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],R=t.runWebGLProgram(L,I,"float32",M);return x.forEach(z=>t.disposeIntermediateTensorInfo(z)),R}const ohe={kernelName:af,backendName:"webgl",kernelFunc:ahe};class lhe{constructor(e,t,r,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=r;const i=rn(r.length);let a=`
    int index;`;for(let o=0;o<this.sliceDim;o++)a+=`
          index = round(getIndices(coords[0], ${o}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[o]};
          flattenIndex += index * ${this.strides[o]};`;this.userCode=`
         void main() {
          ${i} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uhe(n){const{inputs:e,backend:t}=n,{params:r,indices:s}=e,i=s.shape,a=i[i.length-1],o=be(r.shape),[l,u,d,h]=Bx(r,s),f=Ve({inputs:{x:s},backend:t,attrs:{shape:[u,a]}}),m=Ve({inputs:{x:r},backend:t,attrs:{shape:[be(r.shape)/d,d]}});if(t.shouldExecuteOnCPU([r,s])||r.dtype==="string"){const v=t.readSync(s.dataId),w=t.bufferSync(r),I=hoe(v,w,r.dtype,u,a,d,h,r.shape,o);return t.makeTensorInfo(l,r.dtype,I.values)}const x=new lhe(a,h,[u,d],r.shape),g=t.runWebGLProgram(x,[m,f],m.dtype),y=Ve({inputs:{x:g},backend:t,attrs:{shape:l}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),y}const che={kernelName:kb,backendName:"webgl",kernelFunc:uhe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dhe{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const r=rn(this.rank),s=hhe(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${s}));
      }
    `}}function hhe(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<n.length;s++)s===2?r.push("index"):r.push(`${t[s]}`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qF(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,indices:i}=e,{axis:a,batchDims:o}=r,l=At(a,s.shape)[0];if(de().get("DEBUG")){const w=t.readSync(i.dataId),I=s.shape[l];for(let T=0;T<w.length;++T){const C=w[T];P(C<=I-1&&C>=0,()=>`GatherV2: the index value ${C} is not in [0, ${I-1}]`)}}const u=AI(s,i,l,o),d=be(i.shape),h=[],f=Ve({inputs:{x:s},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),m=Ve({inputs:{x:i},backend:t,attrs:{shape:[u.batchSize,d/u.batchSize]}});h.push(f),h.push(m);const x=[u.batchSize,u.outerSize,d/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([s,i])||s.dtype==="string"){const w=t.bufferSync(m),I=t.bufferSync(f),T=poe(I,w,x);return h.forEach(C=>t.disposeIntermediateTensorInfo(C)),t.makeTensorInfo(u.outputShape,T.dtype,T.values)}const g=new dhe(f.shape,x),y=t.runWebGLProgram(g,[f,m],f.dtype);h.push(y);const v=Ve({inputs:{x:y},backend:t,attrs:{shape:u.outputShape}});return h.forEach(w=>t.disposeIntermediateTensorInfo(w)),v}const phe={kernelName:Zf,backendName:"webgl",kernelFunc:qF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fhe="return float(a > b);",mhe=`
  return vec4(greaterThan(a, b));
`,ghe=Dr({opSnippet:fhe,packedOpSnippet:mhe,cpuKernelImpl:foe,dtype:"bool"}),yhe={kernelName:Hf,backendName:"webgl",kernelFunc:ghe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bhe="return float(a >= b);",xhe=`
  return vec4(greaterThanEqual(a, b));
`,vhe=Dr({opSnippet:bhe,packedOpSnippet:xhe,dtype:"bool",cpuKernelImpl:moe}),whe={kernelName:$d,backendName:"webgl",kernelFunc:vhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function She(n){const{inputs:e,backend:t}=n,{input:r}=e;return JF(r,!0,t)}const The={kernelName:Cb,backendName:"webgl",kernelFunc:She};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ihe="return float(!isnan(x) && !isinf(x));",khe=Kt({opSnippet:Ihe,dtype:"bool"}),Che={kernelName:Xd,backendName:"webgl",kernelFunc:khe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _he="return float(isinf(x));",Mhe=Kt({opSnippet:_he,dtype:"bool"}),Nhe={kernelName:Ud,backendName:"webgl",kernelFunc:Mhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ehe="return float(isnan(x));",Rhe=Kt({opSnippet:Ehe,dtype:"bool"}),Lhe={kernelName:Zd,backendName:"webgl",kernelFunc:Rhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ahe="return float(a < b);",zhe=`
  return vec4(lessThan(a, b));
`,Dhe=Dr({opSnippet:Ahe,packedOpSnippet:zhe,cpuKernelImpl:goe,dtype:"bool"}),Phe={kernelName:Yf,backendName:"webgl",kernelFunc:Dhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fhe="return float(a <= b);",Ghe=`
  return vec4(lessThanEqual(a, b));
`,Ohe=Dr({opSnippet:Fhe,packedOpSnippet:Ghe,cpuKernelImpl:yoe,dtype:"bool"}),Whe={kernelName:jf,backendName:"webgl",kernelFunc:Ohe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vhe(n){const{backend:e,attrs:t}=n,{start:r,stop:s,num:i}=t,a=boe(r,s,i);return e.makeTensorInfo([a.length],"float32",a)}const $he={kernelName:Mb,backendName:"webgl",kernelFunc:Vhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bhe=Oh+`
  return x < 0.0 ? 0./0. : log(x);
`,Xhe=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Uhe=Kt({opSnippet:Bhe,packedOpSnippet:Xhe,cpuKernelImpl:xoe}),Zhe={kernelName:Hd,backendName:"webgl",kernelFunc:Uhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hhe=Oh+`
  return log(1.0 + x);
`,Khe=Kt({opSnippet:Hhe}),Yhe={kernelName:Kd,backendName:"webgl",kernelFunc:Khe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jhe="return float(a >= 1.0 && b >= 1.0);",Qhe=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Jhe=Dr({opSnippet:jhe,packedOpSnippet:Qhe,dtype:"bool"}),qhe={kernelName:Qf,backendName:"webgl",kernelFunc:Jhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const epe="return float(!(x >= 1.0));",tpe=Kt({opSnippet:epe}),npe={kernelName:Jf,backendName:"webgl",kernelFunc:tpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rpe="return float(a >= 1.0 || b >= 1.0);",spe=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,ipe=Dr({opSnippet:rpe,packedOpSnippet:spe,dtype:"bool"}),ape={kernelName:qf,backendName:"webgl",kernelFunc:ipe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ope{constructor(e,t,r,s,i){this.variableNames=["x"],this.outputShape=[];const a=t,o=e[3]-1;this.outputShape=e;let l;const u=`float(${r}) + float(${s}) * sum`;i===.5?l=`inversesqrt(${u})`:i===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${o}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lpe{constructor(e,t,r,s,i){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,o=e[3]-1;this.outputShape=e;let l;const u=`float(${r}) + float(${s}) * sum`;i===.5?l=`inversesqrt(${u})`:i===1?l=`1.0/(${u})`:l=`exp(log(${u}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const upe=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{depthRadius:i,bias:a,alpha:o,beta:l}=r,u=de().getBool("WEBGL_PACK_NORMALIZATION")?new lpe(s.shape,i,a,o,l):new ope(s.shape,i,a,o,l);return t.runWebGLProgram(u,[s],s.dtype)},cpe={kernelName:em,backendName:"webgl",kernelFunc:upe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dpe{constructor(e,t,r,s,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=r,this.alpha=s,this.beta=i,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${i})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${i});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hpe=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s,y:i,dy:a}=e,{depthRadius:o,bias:l,alpha:u,beta:d}=r,h=new dpe(s.shape,o,l,u,d);return t.runWebGLProgram(h,[s,i,a],s.dtype)},ppe={kernelName:Nb,backendName:"webgl",kernelFunc:hpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fpe(n,e,t,r){const s=be(e),i=be(n.shape)/s,a=Ve({inputs:{x:n},attrs:{shape:[i,s]},backend:r}),o=nc(a,n.dtype,"max",r),l=Ve({inputs:{x:o},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eG(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reductionIndices:i,keepDims:a}=r,o=s.shape.length,l=At(i,s.shape);let u=l;const d=Rn(u,o),h=d!=null,f=t.shouldExecuteOnCPU([s]);let m=s;if(h){if(f){const w=t.texData.get(m.dataId).values,I=new Array(o);for(let E=0;E<I.length;E++)I[E]=s.shape[d[E]];const T=CC(w,s.shape,s.dtype,d,I);m=t.makeTensorInfo(I,s.dtype);const C=t.texData.get(m.dataId);C.values=T}else m=bv(s,d,t);u=Xn(u.length,o)}zr("max",u,o);const[x,g]=br(m.shape,u);let y=x;a&&(y=Bn(x,l));let v;if(f){const w=t.texData.get(m.dataId).values,I=voe(w,be(g),y,s.dtype);v=t.makeTensorInfo(y,s.dtype);const T=t.texData.get(v.dataId);T.values=I}else v=fpe(m,g,y,t);return h&&t.disposeIntermediateTensorInfo(m),v}const mpe={kernelName:tm,backendName:"webgl",kernelFunc:eG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gpe=_C+`
  return max(a, b);
`,ype=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+tc+`
  return result;
`,bpe=Dr({opSnippet:gpe,packedOpSnippet:ype,cpuKernelImpl:woe}),xpe={kernelName:Yd,backendName:"webgl",kernelFunc:bpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vpe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;Ah(s,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r,u=1;P(Ar(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const d=Ii(s.shape,i,a,u,o,l);if(d.filterWidth===1&&d.filterHeight===1&&Ft(d.inShape,d.outShape))return Ps({inputs:{x:s},backend:t});const h=new wf(d,"max",!1);return t.runWebGLProgram(h,[s],s.dtype)}const wpe={kernelName:nm,backendName:"webgl",kernelFunc:vpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Spe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{filterSize:i,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=r,d=[1,1,1],h=co(s.shape,i,a,d,o,u,l),f=new NC(h,"max",!1);return t.runWebGLProgram(f,[s],s.dtype)}const Tpe={kernelName:rm,backendName:"webgl",kernelFunc:Spe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ipe{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,i=e.effectiveFilterHeight,a=e.effectiveFilterWidth,o=i-1-e.padInfo.top,l=a-1-e.padInfo.left,u=i*a-1;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class kpe{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,r=e.strideHeight,s=e.strideWidth,i=e.dilationDepth,a=e.dilationHeight,o=e.dilationWidth,l=e.effectiveFilterDepth,u=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=l-1-e.padInfo.front,f=u-1-e.padInfo.top,m=d-1-e.padInfo.left,x=l*u*d-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${f}, ${m});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${d};
                wC += ${o}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${x} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${d} +
                  wR * ${d} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cpe(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:i}=e,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:d}=r,h=[1,1,1],f=co(a.shape,o,l,h,u,d),m=new NC(f,"max",!0),x=t.runWebGLProgram(m,[a],a.dtype),g=new kpe(f),y=t.runWebGLProgram(g,[s,x],a.dtype);return t.disposeIntermediateTensorInfo(x),y}const _pe={kernelName:Rb,backendName:"webgl",kernelFunc:Cpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mpe(n){const{inputs:e,backend:t,attrs:r}=n,{dy:s,input:i,output:a}=e,o=i;Ah([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:d,dimRoundingMode:h}=r,f=Ii(o.shape,l,u,1,d,h),m=!0,x=new wf(f,"max",m),g=t.runWebGLProgram(x,[o],o.dtype),y=new Ipe(f),v=t.runWebGLProgram(y,[s,g],o.dtype);return t.disposeIntermediateTensorInfo(g),v}const Npe={kernelName:Eb,backendName:"webgl",kernelFunc:Mpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Epe(n,e,t,r){let s=new wf(t,"max",!1);const i=r.runWebGLProgram(s,[n],"float32");s=new wf(t,"max",!0,!0,e);const a=r.runWebGLProgram(s,[n],"float32");return[i,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rpe={kernelName:Lb,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=e,l=t;P(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const u=[1,1];P(Ar(i,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`);const d=Ii(r.shape,s,i,u,a),[h,f]=Epe(r,o,d,l);return[h,f]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lpe(n,e,t,r){const s=be(e),i=be(n.shape)/s,a=Ve({inputs:{x:n},attrs:{shape:[i,s]},backend:r}),o=nc(a,"float32","mean",r),l=Ve({inputs:{x:o},attrs:{shape:t},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(o),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ape={kernelName:sm,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:r}=n,{keepDims:s,axis:i}=e,a=t,o=r.shape.length,l=At(i,r.shape);let u=l;const d=Rn(u,o),h=d!=null,f=a.shouldExecuteOnCPU([r]),m=[];let x=r;if(h){if(f){const I=a.texData.get(x.dataId).values,T=new Array(o);for(let L=0;L<T.length;L++)T[L]=r.shape[d[L]];const C=CC(I,r.shape,r.dtype,d,T);x=a.makeTensorInfo(T,r.dtype);const E=a.texData.get(x.dataId);E.values=C}else x=bv(r,d,a);m.push(x),u=Xn(u.length,o)}zr("sum",u,o);const[g,y]=br(x.shape,u);let v=g;s&&(v=Bn(g,l));const w=Lpe(x,y,v,a);for(const I of m)a.disposeIntermediateTensorInfo(I);return w}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zpe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r,o=s.shape.length,l=At(i,s.shape);let u=l;const d=Rn(u,o);let h=s;d!=null&&(h=qr({inputs:{x:s},backend:t,attrs:{perm:d}}),u=Xn(u.length,s.shape.length)),zr("min",u,o);const[f,m]=br(h.shape,u),x=be(m),g=Ve({inputs:{x:h},backend:t,attrs:{shape:[-1,x]}}),y=nc(g,g.dtype,"min",t);let v;if(a){const w=Bn(f,l);v=Ve({inputs:{x:y},backend:t,attrs:{shape:w}})}else v=Ve({inputs:{x:y},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(y),d!=null&&t.disposeIntermediateTensorInfo(h),v}const Dpe={kernelName:im,backendName:"webgl",kernelFunc:zpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ppe=_C+`
  return min(a, b);
`,Fpe=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+tc+`
  return result;
`,Gpe=Dr({opSnippet:Ppe,packedOpSnippet:Fpe,cpuKernelImpl:Soe}),Ope={kernelName:jd,backendName:"webgl",kernelFunc:Gpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wpe{constructor(e,t,r){this.variableNames=["x"],this.outputShape=t.map((d,h)=>d[0]+e[h]+d[1]);const s=e.length,i=rn(s),a=t.map(d=>d[0]).join(","),o=t.map((d,h)=>d[0]+e[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),u=r==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${a});
      ${i} end = ${i}(${o});

      void main() {
        ${i} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${i} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vpe{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((x,g)=>x[0]+e[g]+x[1]);const s=e.length,i=rn(s),a=t.map(x=>x[0]).join(","),o=t.map((x,g)=>x[0]+e[g]).join(","),l=Jr("rc",s),u=Jr("source",s),d=`${l[s-1]} < ${this.outputShape[s-1]}`,h=s===1?"source":`vec2(${u.slice(-2).join()})`,f=r==="reflect"?0:1;let m="";if(s===1){const x=`
        ${i} source = rc;
        if (source < start) {
          source = start * 2 - source - ${f};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${f};
        }
        source -= start;
      `;m=`
        ${i} rc = outputLoc;
        ${x}
        result[0] = getChannel(getX(${u.join()}), ${h});
        ${l[s-1]} += 1;
        if(${d}) {
          ${x}
          result[1] = getChannel(getX(${u.join()}), ${h});
        }
      `}else{const x=`
        ${i} source = rc;
        ${i} lt = ${i}(lessThan(source, start));
        ${i} gte = ${i}(greaterThanEqual(source, end));
        ${i} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${f}) +
                gte * ((end - 1) * 2 - source + ${f});
        source -= start;
      `;m=`
        ${i} rc = outputLoc;
        ${x}
        result[0] = getChannel(getX(${u.join()}), ${h});
        ${l[s-1]} += 1;
        if(${d}) {
          ${x}
          result[1] = getChannel(getX(${u.join()}), ${h});
        }
        rc = outputLoc;
        ${l[s-2]} += 1;
        if(${l[s-2]} < ${this.outputShape[s-2]}) {
          ${x}
          result[2] = getChannel(getX(${u.join()}), ${h});
          ${l[s-1]} += 1;
          if(${d}) {
            ${x}
            result[3] = getChannel(getX(${u.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${i} start = ${i}(${a});
      const ${i} end = ${i}(${o});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $pe=({inputs:n,backend:e,attrs:t})=>{const{x:r}=n,{paddings:s,mode:i}=t,a=de().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Vpe(r.shape,s,i):new Wpe(r.shape,s,i);return e.runWebGLProgram(a,[r],r.dtype)},Bpe={kernelName:am,backendName:"webgl",kernelFunc:$pe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xpe=`if (b == 0.0) return NAN;
  return mod(a, b);`,Upe=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+tc+`
  return result;
`,Zpe=Dr({opSnippet:Xpe,packedOpSnippet:Upe}),Hpe={kernelName:Qd,backendName:"webgl",kernelFunc:Zpe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kpe{constructor(e,t,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,r],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ype=`
if (a == b) {
  return 1.0;
};
return a / b;`,jpe=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,tG=Dr({opSnippet:Ype,packedOpSnippet:jpe,checkOutOfBounds:!0}),Qpe={kernelName:Dd,backendName:"webgl",kernelFunc:tG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oR="return a - b;",nG=Dr({opSnippet:oR,packedOpSnippet:oR,supportsComplex:!0,cpuKernelImpl:Boe}),Jpe={kernelName:ph,backendName:"webgl",kernelFunc:nG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rG(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{dim:i}=r,a=At([i],s.shape),o=eG({inputs:{x:s},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),l=Bn(o.shape,a),u=Ve({inputs:{x:o},backend:t,attrs:{shape:l}}),d=nG({inputs:{a:s,b:u},backend:t}),h=QF({inputs:{x:d},backend:t}),f=xv({inputs:{x:h},backend:t,attrs:{axis:a,keepDims:!1}}),m=Ve({inputs:{x:f},backend:t,attrs:{shape:l}}),x=tG({inputs:{a:h,b:m},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),x}const qpe={kernelName:Im,backendName:"webgl",kernelFunc:rG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function efe(n){const{inputs:e,backend:t,attrs:r}=n,{logits:s}=e,{numSamples:i,seed:a,normalized:o}=r,l=o?s:rG({inputs:{logits:s},backend:t,attrs:{dim:s.shape.length-1}}),u=l.shape[0],d=l.shape[1],h=new Kpe(u,d,i),f=[[a]],m=t.runWebGLProgram(h,[l],"int32",f);return o||t.disposeIntermediateTensorInfo(l),m}const tfe={kernelName:Ab,backendName:"webgl",kernelFunc:efe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nfe=Ci+`
  return -x;
`,rfe=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function sfe(n){const{inputs:e,backend:t}=n,{x:r}=e;if(t.shouldExecuteOnCPU([r])){const i=t.texData.get(r.dataId),[a,o]=Ioe(i.values,r.shape,r.dtype);return t.makeTensorInfo(o,r.dtype,a)}let s;return de().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new jo(r.shape,rfe):s=new ba(r.shape,nfe),t.runWebGLProgram(s,[r],r.dtype)}const ife={kernelName:om,backendName:"webgl",kernelFunc:sfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const afe=Ox;function ofe(n){Ks("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r,u=t.readSync(s.dataId),d=t.readSync(i.dataId),{selectedIndices:h}=afe(u,d,a,o,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const lfe={kernelName:zb,backendName:"webgl",kernelFunc:ofe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ufe=Wx;function cfe(n){Ks("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,d=t.readSync(s.dataId),h=t.readSync(i.dataId),{selectedIndices:f,validOutputs:m}=ufe(d,h,a,o,l,u);return[t.makeTensorInfo([f.length],"int32",new Int32Array(f)),t.makeTensorInfo([],"int32",new Int32Array([m]))]}const dfe={kernelName:Db,backendName:"webgl",kernelFunc:cfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hfe=Vx;function pfe(n){Ks("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:r}=n,{boxes:s,scores:i}=e,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,d=t.readSync(s.dataId),h=t.readSync(i.dataId),f=a,m=o,x=l,g=u,{selectedIndices:y,selectedScores:v}=hfe(d,h,f,m,x,g);return[t.makeTensorInfo([y.length],"int32",new Int32Array(y)),t.makeTensorInfo([v.length],"float32",new Float32Array(v))]}const ffe={kernelName:Pb,backendName:"webgl",kernelFunc:pfe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mfe{constructor(e,t,r,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${r}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gfe=n=>{const{inputs:e,backend:t,attrs:r}=n,{indices:s}=e,{dtype:i,depth:a,onValue:o,offValue:l}=r,u=be(s.shape),d=new mfe(u,a,o,l),h=Ve({inputs:{x:s},backend:t,attrs:{shape:[u]}}),f=t.runWebGLProgram(d,[h],i);t.disposeIntermediateTensorInfo(h);const m=[...s.shape,a],x=Ve({inputs:{x:f},backend:t,attrs:{shape:m}});return t.disposeIntermediateTensorInfo(f),x},yfe={kernelName:cm,backendName:"webgl",kernelFunc:gfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $0(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="complex64"){const s=pg({inputs:{input:r},backend:t}),i=$0({inputs:{x:s},backend:t}),a=vv({inputs:{input:r},backend:t}),o=$0({inputs:{x:a},backend:t}),l=Il({inputs:{real:i,imag:o},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(o),l}else return fg({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:t})}const bfe={kernelName:Mm,backendName:"webgl",kernelFunc:$0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sG(n){const{inputs:e,backend:t}=n,{x:r}=e;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){const s=pg({inputs:{input:r},backend:t}),i=sG({inputs:{x:s},backend:t}),a=vv({inputs:{input:r},backend:t}),o=$0({inputs:{x:a},backend:t}),l=Il({inputs:{real:i,imag:o},backend:t});return t.disposeIntermediateTensorInfo(s),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(o),l}else return fg({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:t})}const xfe={kernelName:um,backendName:"webgl",kernelFunc:sG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vfe(n){const{inputs:e,backend:t,attrs:r}=n,{axis:s}=r;if(e.length===1)return p2({inputs:{input:e[0]},backend:t,attrs:{dim:s}});const i=e[0].shape,a=e[0].dtype;e.forEach(d=>{Lr(i,d.shape,"All tensors passed to stack must have matching shapes"),P(a===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],l=e.map(d=>{const h=p2({inputs:{input:d},backend:t,attrs:{dim:s}});return o.push(h),h}),u=BF({inputs:l,backend:t,attrs:{axis:s}});return o.forEach(d=>t.disposeIntermediateTensorInfo(d)),u}const wfe={kernelName:dm,backendName:"webgl",kernelFunc:vfe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sfe{constructor(e,t,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((u,d)=>u[0]+e[d]+u[1]);const s=e.length,i=rn(s),a=t.map(u=>u[0]).join(","),o=t.map((u,d)=>u[0]+e[d]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${o};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${a});
      ${i} end = ${i}(${o});

      void main() {
        ${i} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${i} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tfe{constructor(e,t,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((g,y)=>g[0]+e[y]+g[1]);const s=e.length,i=rn(s),a=t.map(g=>g[0]).join(","),o=t.map((g,y)=>g[0]+e[y]).join(","),l=Jr("rc",s),u=Jr("source",s),d=`${l[s-1]} < ${this.outputShape[s-1]}`,h=s===1?"source":`vec2(${u.slice(-2).join()})`,f=[`${i} rc = outputLoc;`,`${l[s-1]} += 1;
       if(${d}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${l[s-2]} += 1;
       if(${l[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${l[s-1]} += 1;
         if(${d}) {`],m=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let x="";for(let g=0,y=s===1?2:4;g<y;g++)x+=`
        ${f[g]}
        if (${m}) {
          result[${g}] = float(value);
        } else {
          ${i} source = rc - start;
          result[${g}] = getChannel(getX(${u.join()}), ${h});
        }
      `;x+=s===1?"} ":"}}",this.userCode=`
      const ${i} start = ${i}(${a});
      const ${i} end = ${i}(${o});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${x}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iG=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{paddings:i,constantValue:a}=r;if(be(s.shape)===0){const u=i.map((d,h)=>d[0]+s.shape[h]+d[1]);return fg({backend:t,attrs:{shape:u,value:a,dtype:s.dtype}})}const o=de().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Tfe(s.shape,i,a):new Sfe(s.shape,i,a),l=[[a]];return t.runWebGLProgram(o,[s],s.dtype,l)},Ife={kernelName:hm,backendName:"webgl",kernelFunc:iG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kfe=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,Cfe=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+tc+`
  return result;
`,_fe=Dr({opSnippet:kfe,packedOpSnippet:Cfe}),Mfe={kernelName:qd,backendName:"webgl",kernelFunc:_fe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nfe(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{axis:i,keepDims:a}=r,o=s.shape.length,l=[],u=At(i,s.shape);let d=u;const h=Rn(d,o);let f=s;h!=null&&(f=qr({inputs:{x:s},backend:t,attrs:{perm:h}}),d=Xn(d.length,o),l.push(f)),zr("prod",d,o);let m;if(t.shouldExecuteOnCPU([f])){const x=t.texData.get(f.dataId).values,{outVals:g,outShape:y,outDtype:v}=Coe(f.shape,f.dtype,x,d);m=t.makeTensorInfo(y,v,g)}else{const[x,g]=br(f.shape,d),y=be(g),v=Ve({inputs:{x:f},backend:t,attrs:{shape:[-1,y]}}),w=ox(s.dtype),I=nc(v,w,"prod",t);m=Ve({inputs:{x:I},backend:t,attrs:{shape:x}}),l.push(v),l.push(I)}if(a){l.push(m);const x=Bn(m.shape,u);m=Ve({inputs:{x:m},backend:t,attrs:{shape:x}})}return l.forEach(x=>t.disposeIntermediateTensorInfo(x)),m}const Efe={kernelName:fm,backendName:"webgl",kernelFunc:Nfe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rfe(n){const{inputs:e,backend:t,attrs:r}=n,{paramsNestedSplits:s,paramsDenseValues:i,indices:a}=e,{outputRaggedRank:o}=r,l=s.map(v=>t.readSync(v.dataId)),u=s.map(v=>v.shape),d=t.readSync(i.dataId),h=t.readSync(a.dataId),[f,m,x]=_oe(l,u,d,i.shape,i.dtype,h,a.shape,o),g=f.map(v=>t.makeTensorInfo([v.length],"int32",v)),y=t.makeTensorInfo(x,i.dtype,m);return g.concat([y])}const Lfe={kernelName:Fb,backendName:"webgl",kernelFunc:Rfe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Afe(n){const{inputs:e,backend:t}=n,{starts:r,limits:s,deltas:i}=e,a=t.readSync(r.dataId),o=t.readSync(s.dataId),l=t.readSync(i.dataId),[u,d]=Moe(a,r.shape,r.dtype,o,s.shape,l,i.shape),h=t.makeTensorInfo([u.length],"int32",u),f=t.makeTensorInfo([d.length],r.dtype,d);return[h,f]}const zfe={kernelName:Gb,backendName:"webgl",kernelFunc:Afe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dfe(n){const{inputs:e,backend:t,attrs:r}=n,{shape:s,values:i,defaultValue:a,rowPartitionTensors:o}=e,{rowPartitionTypes:l}=r,u=t.readSync(s.dataId),d=t.readSync(i.dataId),h=t.readSync(a.dataId),f=o.map(y=>t.readSync(y.dataId)),m=o.map(y=>y.shape),[x,g]=Noe(u,s.shape,d,i.shape,i.dtype,h,a.shape,f,m,l);return t.makeTensorInfo(x,i.dtype,g)}const Pfe={kernelName:Ob,backendName:"webgl",kernelFunc:Dfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aG=n=>{const{backend:e,attrs:t}=n,{start:r,stop:s,step:i,dtype:a}=t,o=Eoe(r,s,i,a);return e.makeTensorInfo([o.length],a,o)},Ffe={kernelName:Wb,backendName:"webgl",kernelFunc:aG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gfe="return 1.0 / x;",Ofe=Kt({opSnippet:Gfe}),Wfe={kernelName:eh,backendName:"webgl",kernelFunc:Ofe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vfe=Ci+`
  return (x < 0.0) ? 0.0 : x;
`,$fe=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Bfe=Kt({opSnippet:Vfe,packedOpSnippet:$fe}),Xfe={kernelName:th,backendName:"webgl",kernelFunc:Bfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ufe=Ci+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Zfe=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Hfe=Kt({opSnippet:Ufe,packedOpSnippet:Zfe}),Kfe={kernelName:nh,backendName:"webgl",kernelFunc:Hfe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yfe{constructor(e,t,r,s,i){this.variableNames=["A"],this.outputShape=[];const[a,o,l,u]=e;this.outputShape=[a,t,r,u];const d=[s&&t>1?o-1:o,s&&r>1?l-1:l],h=[s&&t>1?t-1:t,s&&r>1?r-1:r];let f;i?f="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${d[0]/h[0]},
          ${d[1]/h[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jfe{constructor(e,t,r,s,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,l,u]=e;this.outputShape=[a,t,r,u];const d=[s&&t>1?o-1:o,s&&r>1?l-1:l],h=[s&&t>1?t-1:t,s&&r>1?r-1:r];let f;i?f="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${d[0]/h[0]},
          ${d[1]/h[1]},
          ${d[1]/h[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qfe(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:i,halfPixelCenters:a,size:o}=r,[l,u]=o,d=de().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new jfe(s.shape,l,u,i,a):new Yfe(s.shape,l,u,i,a);return t.runWebGLProgram(d,[s],"float32")}const Jfe={kernelName:ym,backendName:"webgl",kernelFunc:Qfe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qfe{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,i]=t,[,a,o]=e,l=[r&&a>1?s-1:s,r&&o>1?i-1:i],u=[r&&a>1?a-1:a,r&&o>1?o-1:o],d=l[0]/u[0],h=l[1]/u[1],f=1/d,m=1/h,x=Math.ceil(f)*2+2,g=Math.ceil(m)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${d});
        const float widthScale = float(${h});

        const float invHeightScale = float(${f});
        const float invWidthScale = float(${m});

        const int winHeight = int(${x});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${i-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eme(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:i}=e,{alignCorners:a}=r,o=new qfe(i.shape,s.shape,a);return t.runWebGLProgram(o,[i],i.dtype)}const tme={kernelName:Bb,backendName:"webgl",kernelFunc:eme};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nme{constructor(e,t,r,s,i){this.variableNames=["A"],this.outputShape=[];const[a,o,l,u]=e;this.outputShape=[a,t,r,u];const d=[s&&t>1?o-1:o,s&&r>1?l-1:l],h=[s&&t>1?t-1:t,s&&r>1?r-1:r],f=s?"0.5":"0.0";let m;i?m="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${d[0]/h[0]},
          ${d[1]/h[1]});
      const vec2 inputShapeRC = vec2(${o}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${f})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rme{constructor(e,t,r,s,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,o,l,u]=e;this.outputShape=[a,t,r,u];const d=[s&&t>1?o-1:o,s&&r>1?l-1:l],h=[s&&t>1?t-1:t,s&&r>1?r-1:r],f=s?"0.5":"0.0";let m;i?m="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${d[0]/h[0]},
          ${d[1]/h[1]},
          ${d[1]/h[1]});
      const vec3 inputShapeRC = vec3(${o}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${f})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${r-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sme(n){const{inputs:e,backend:t,attrs:r}=n,{images:s}=e,{alignCorners:i,halfPixelCenters:a,size:o}=r,[l,u]=o,d=de().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new rme(s.shape,l,u,i,a):new nme(s.shape,l,u,i,a);return t.runWebGLProgram(d,[s],s.dtype)}const ime={kernelName:gm,backendName:"webgl",kernelFunc:sme};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ame{constructor(e,t,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,i]=t,[,a,o]=e,l=[r&&a>1?s-1:s,r&&o>1?i-1:i],u=[r&&a>1?a-1:a,r&&o>1?o-1:o],d=l[0]/u[0],h=l[1]/u[1],f=1/d,m=1/h,x=Math.ceil(f)*2+2,g=Math.ceil(m)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${d});
        const float widthScale = float(${h});

        const float invHeightScale = float(${f});
        const float invWidthScale = float(${m});

        const int winHeight = int(${x});
        const int winWidth = int(${g});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${o}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${i}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ome(n){const{inputs:e,backend:t,attrs:r}=n,{images:s,dy:i}=e,{alignCorners:a}=r,o=new ame(i.shape,s.shape,a);return t.runWebGLProgram(o,[i],i.dtype)}const lme={kernelName:$b,backendName:"webgl",kernelFunc:ome};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ume{constructor(e,t){this.variableNames=["x"];const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=e,r===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const s=o=>t.indexOf(o)!==-1&&e[o]!==1?`${e[o]} - coords[${o}] - 1`:`coords[${o}]`,i=e.map((o,l)=>s(l)).join(","),a=rn(r);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cme{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=e;const s=Jr("rc",r),i=`${s[r-1]} + 1 < ${this.outputShape[r-1]}`,a=`${s[r-2]} + 1 < ${this.outputShape[r-2]}`,o=rn(r);r===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${i}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${o} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(s.slice())};
          if(${i}){
            result.g = ${u(s.slice())};
          }
          if(${a}) {
            result.b = ${d(s.slice())};
            if(${i}) {
              result.a = ${h(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(x){return f(x)}function u(x){return x[r-1]="("+x[r-1]+" + 1)",f(x)}function d(x){return x[r-2]="("+x[r-2]+" + 1)",f(x)}function h(x){return x[r-1]="("+x[r-1]+" + 1)",x[r-2]="("+x[r-2]+" + 1)",f(x)}function f(x){const g=e.map((w,I)=>m(I,x)),y=g.join(","),v=g.slice(-2).join(",");return`getChannel(getX(${y}), vec2(${v}))`}function m(x,g){return t.indexOf(x)!==-1&&e[x]!==1?`${e[x]} - ${g[x]} - 1`:`${g[x]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dme(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{dims:i}=r,a=s.shape.length,o=At(i,s.shape);if(a===0)return Ps({inputs:{x:s},backend:t});const l=de().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new cme(s.shape,o):new ume(s.shape,o);return t.runWebGLProgram(l,[s],s.dtype)}const hme={kernelName:bm,backendName:"webgl",kernelFunc:dme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pme{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const r=e[1],s=e[2];this.outputShape=e;let i="";typeof t=="number"?i=`float outputValue = ${t.toFixed(2)};`:i=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${i}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fme={kernelName:ax,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:r}=n,{radians:s,fillValue:i,center:a}=e,o=t,l=new pme(r.shape,i),[u,d]=yI(a,r.shape[1],r.shape[2]),h=[[u,d,Math.sin(s),Math.cos(s)]];return o.runWebGLProgram(l,[r],r.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mme=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,gme=Kt({opSnippet:mme}),yme={kernelName:rh,backendName:"webgl",kernelFunc:gme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bme="return inversesqrt(x);",xme=Kt({opSnippet:bme,cpuKernelImpl:Roe}),vme={kernelName:sh,backendName:"webgl",kernelFunc:xme};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EC{constructor(e,t,r,s,i,a,o=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const u=rn(i.length),d=rn(a.length);let h="";r===1?h="i":r===2&&(h="i, j");const f=`getIndices(${h})`;let m="";s===1?m="i":s===2&&(m="i, coords[1]");const x=`getUpdates(${m})`;let g="";l&&(g="coords[0], coords[1]");const y=`getDefaultValue(${g})`,v=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${i});

        void main() {
          ${d} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${f});
              flattenedIndex += index * ${v};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${x};
              found = true;
            }
          }
          setOutput(mix(${y}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wme{constructor(e,t,r,s,i,a,o=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const u=rn(i.length),d=rn(a.length);let h="";r===1?h="i":r===2&&(h="i, j");const f=`getIndices(${h})`;let m="";s===1?m="i":s===2&&(m="i, coords[1]");const x=`getUpdates(${m})`;let g="";l&&(g="coords[0], coords[1]");const y=`getDefaultValue(${g})`,v=t>1?"strides[j]":"strides",w=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${i});

        void main() {
          ${d} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${f});
              flattenedIndex += index.xz * ${v};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${w};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${x};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${y}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sme(n){const{inputs:e,backend:t,attrs:r}=n,{indices:s,updates:i}=e,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=Sl(i,s,a),f=[h/u,u];if(h===0)return t.makeTensorInfo(a,s.dtype);const m=Ve({inputs:{x:s},backend:t,attrs:{shape:[l,o]}}),x=Ve({inputs:{x:i},backend:t,attrs:{shape:[l,u]}}),g=t.makeTensorInfo([],"float32",new Float32Array([0]));let y;de().getBool("WEBGL_PACK")?y=new wme(l,o,m.shape.length,x.shape.length,d,f):y=new EC(l,o,m.shape.length,x.shape.length,d,f);const v=t.runWebGLProgram(y,[x,m,g],x.dtype),w=Ve({inputs:{x:v},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(g),w}const Tme={kernelName:Xb,backendName:"webgl",kernelFunc:Sme};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ime{constructor(e,t,r,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,r];const i="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,o=de().getNumber("WEBGL_VERSION")===2?i:a,l=s==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${o}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kme(n){const{inputs:e,backend:t,attrs:r}=n,{sortedSequence:s,values:i}=e,{side:a}=r,o=new Ime(s.shape[0],s.shape[1],i.shape[1],a),l=[[s.shape[1]]];return t.runWebGLProgram(o,[s,i],"int32",l)}const Cme={kernelName:Zb,backendName:"webgl",kernelFunc:kme};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _me{constructor(e,t,r){this.variableNames=["c","a","b"],this.outputShape=t;let s,i;if(r>4)throw Error(`Where for rank ${r} is not yet supported`);if(r===1)i="resRC",s="resRC";else{const o=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],u=[];for(let d=0;d<t.length;d++)u.push(`${o[d]}`),d<e&&l.push(`${o[d]}`);s=l.join(),i=u.join()}const a=rn(r);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${i}));
        } else {
          setOutput(getB(${i}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mme(n){const{inputs:e,backend:t}=n,{condition:r,t:s,e:i}=e,a=new _me(r.shape.length,s.shape,s.shape.length);return t.runWebGLProgram(a,[r,s,i],ps(s.dtype,i.dtype))}const Nme={kernelName:xm,backendName:"webgl",kernelFunc:Mme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eme=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${Zx};
  float scale = ${Hx};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Rme=Kt({opSnippet:Eme}),Lme={kernelName:ih,backendName:"webgl",kernelFunc:Rme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ame=Oh+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,zme=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Dme=Kt({opSnippet:Ame,packedOpSnippet:zme,cpuKernelImpl:Aoe}),Pme={kernelName:uh,backendName:"webgl",kernelFunc:Dme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fme=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,Gme=Kt({opSnippet:Fme}),Ome={kernelName:lh,backendName:"webgl",kernelFunc:Gme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wme=Oh+`
  return sin(x);
`,Vme=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${tc}
  return result;
`,$me=Kt({opSnippet:Wme,packedOpSnippet:Vme}),Bme={kernelName:ah,backendName:"webgl",kernelFunc:$me};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xme=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,Ume=Kt({opSnippet:Xme}),Zme={kernelName:oh,backendName:"webgl",kernelFunc:Ume};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hme=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Kme=Kt({opSnippet:Hme}),Yme={kernelName:ch,backendName:"webgl",kernelFunc:Kme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jme=n=>{const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{blockShape:i,paddings:a}=r;P(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const o=i.reduce((v,w)=>v*w),l=[[0,0]];l.push(...a);for(let v=1+i.length;v<s.shape.length;++v)l.push([0,0]);const u=[],d=iG({inputs:{x:s},backend:t,attrs:{paddings:l,constantValue:0}}),h=jm(d.shape,i,o,!1),f=Qm(h.length,i.length,!1),m=Jm(d.shape,i,o,!1),x=Ve({inputs:{x:d},backend:t,attrs:{shape:h}}),g=qr({inputs:{x},backend:t,attrs:{perm:f}}),y=Ve({inputs:{x:g},backend:t,attrs:{shape:m}});return u.push(d),u.push(x),u.push(g),u.forEach(v=>t.disposeIntermediateTensorInfo(v)),y},Qme={kernelName:Sm,backendName:"webgl",kernelFunc:jme};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jme(n){const{inputs:e,backend:t}=n,{indices:r,values:s,denseShape:i,defaultValue:a}=e;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${i.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${s.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const o=t.readSync(r.dataId),l=t.readSync(s.dataId),u=t.readSync(i.dataId),d=t.readSync(a.dataId)[0],[h,f,m,x,g]=Doe(o,r.shape,r.dtype,l,s.dtype,u,d);return[t.makeTensorInfo(f,r.dtype,h),t.makeTensorInfo([f[0]],s.dtype,m),t.makeTensorInfo([x.length],"bool",new Uint8Array(x.map(y=>Number(y)))),t.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}const qme={kernelName:Hb,backendName:"webgl",kernelFunc:Jme};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ege(n){const{inputs:e,backend:t}=n,{inputIndices:r,inputShape:s,newShape:i}=e;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(t.readSync(s.dataId)),o=t.readSync(r.dataId),l=Array.from(t.readSync(i.dataId)),[u,d,h]=Poe(o,r.shape,r.dtype,a,l);return[t.makeTensorInfo(d,r.dtype,u),t.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}const tge={kernelName:Kb,backendName:"webgl",kernelFunc:ege};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nge(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:i}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${s.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${i.shape}`);const a=t.readSync(r.dataId),o=t.readSync(s.dataId),l=t.readSync(i.dataId),[u,d]=NF(a,r.shape,r.dtype,o,l,!0);return t.makeTensorInfo(d,r.dtype,u)}const rge={kernelName:Yb,backendName:"webgl",kernelFunc:nge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sge(n){const{inputs:e,backend:t}=n,{data:r,indices:s,segmentIds:i}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${s.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${i.shape}`);const a=t.readSync(r.dataId),o=t.readSync(s.dataId),l=t.readSync(i.dataId),[u,d]=NF(a,r.shape,r.dtype,o,l);return t.makeTensorInfo(d,r.dtype,u)}const ige={kernelName:jb,backendName:"webgl",kernelFunc:sge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function age(n){const{inputs:e,backend:t,attrs:r}=n,{sparseIndices:s,sparseValues:i,defaultValue:a}=e,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:d,strides:h,outputSize:f}=Sl(i,s,o),m=!1;if(i.dtype==="string"){const v=t.bufferSync(s),w=t.bufferSync(i),I=eo(t.readSync(a.dataId)[0]),T=Loe(v,w,o,f,d,u,l,h,I,m);return t.makeTensorInfo(o,T.dtype,T.values)}const x=new EC(u,l,s.shape.length,i.shape.length,h,[f,1],m),g=t.runWebGLProgram(x,[i,s,a],i.dtype),y=Ve({inputs:{x:g},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(g),y}const oge={kernelName:Qb,backendName:"webgl",kernelFunc:age};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lge(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{numOrSizeSplits:i,axis:a}=r,o=At(a,s.shape)[0],l=LI(s,i,o),u=s.shape.length,d=new Array(u).fill(0),h=s.shape.slice();return l.map(f=>{const m=[...h];m[o]=f;const x=Wh({inputs:{x:s},backend:t,attrs:{begin:d,size:m}});return d[o]+=f,x})}const uge={kernelName:Tm,backendName:"webgl",kernelFunc:lge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lR="return sqrt(x);",cge=Kt({opSnippet:lR,packedOpSnippet:lR,cpuKernelImpl:Foe}),dge={kernelName:dh,backendName:"webgl",kernelFunc:cge};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hge="return x * x;",pge=Kt({opSnippet:hge}),fge={kernelName:Jb,backendName:"webgl",kernelFunc:pge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uR="return (a - b) * (a - b);",mge=Dr({opSnippet:uR,packedOpSnippet:uR}),gge={kernelName:hh,backendName:"webgl",kernelFunc:mge};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yge(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");const i=t.readSync(s.dataId),a=ao(i),o=Goe(a,"string",r);return t.makeTensorInfo(s.shape,"string",o)}const bge={kernelName:km,backendName:"webgl",kernelFunc:yge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xge({inputs:n,attrs:e,backend:t}){const{x:r}=n,s=Ci+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,i=new ba(r.shape,s);return t.runWebGLProgram(i,[r],r.dtype)}const vge={kernelName:yh,backendName:"webgl",kernelFunc:xge};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wge{constructor(e,t,r){this.variableNames=["x"],this.outputShape=r;const s=r.length,i=rn(r.length),a=rn(r.length);let o="";if(s===1)o="coords * strides + begin";else{let l=0;o=r.map((u,d)=>(l++,r.length===1?`coords * strides[${d}] + begin[${d}]`:`coords[${l-1}] * strides[${d}] + begin[${d}]`)).join(",")}this.userCode=`
      ${i} begin = ${i}(${e});
      ${i} strides = ${i}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sge(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:f}=r,{finalShapeSparse:m,finalShape:x,isIdentity:g,sliceDim0:y,isSimpleSlice:v,begin:w,end:I,strides:T}=fI(s.shape,i,a,o,l,u,d,h,f);let C;if(g)C=Ve({inputs:{x:s},backend:t,attrs:{shape:x}});else if(y||v){P(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const L=dI(w,I,T),M=Wh({inputs:{x:s},backend:t,attrs:{begin:w,size:L}});C=Ve({inputs:{x:M},backend:t,attrs:{shape:x}}),t.disposeIntermediateTensorInfo(M)}else if(t.shouldExecuteOnCPU([s])){const L=t.readSync(s.dataId),M=Et(s.shape,s.dtype,L),R=Ooe(m,M,T,w);C=t.makeTensorInfo(x,s.dtype,R.values)}else{const L=new wge(w,T,m);C=t.runWebGLProgram(L,[s],s.dtype)}const E=Ve({inputs:{x:C},backend:t,attrs:{shape:x}});return t.disposeIntermediateTensorInfo(C),E}const Tge={kernelName:qb,backendName:"webgl",kernelFunc:Sge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ige(n){const{inputs:e,backend:t,attrs:r}=n,{separator:s,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:d,dataSplits:h}=e,f=t.readSync(d.dataId),m=t.readSync(h.dataId),[x,g]=Woe(f,m,s,i,a,o,l,u);return[t.makeTensorInfo([x.length],"string",x),t.makeTensorInfo(h.shape,"int32",g)]}const kge={kernelName:ex,backendName:"webgl",kernelFunc:Ige};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cge(n){const{inputs:e,backend:t,attrs:r}=n,{skipEmpty:s}=r,{input:i,delimiter:a}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=t.readSync(i.dataId),l=t.readSync(a.dataId)[0],[u,d,h]=Voe(o,l,s),f=d.length;return[t.makeTensorInfo([f,2],"int32",u),t.makeTensorInfo([f],"string",d),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const _ge={kernelName:tx,backendName:"webgl",kernelFunc:Cge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mge(n){const{inputs:e,backend:t,attrs:r}=n,{numBuckets:s}=r,{input:i}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=t.readSync(i.dataId),o=$oe(a,s);return t.makeTensorInfo(i.shape,"int32",o)}const Nge={kernelName:nx,backendName:"webgl",kernelFunc:Mge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ege="return tan(x);",Rge=Kt({opSnippet:Ege}),Lge={kernelName:fh,backendName:"webgl",kernelFunc:Rge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Age=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,zge=Kt({opSnippet:Age}),Dge={kernelName:mh,backendName:"webgl",kernelFunc:zge};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pge(n){const{inputs:e,backend:t,attrs:r}=n,{tensor:s,indices:i,updates:a}=e,{sliceRank:o,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=Sl(a,i,s.shape),f=[h/u,u];if(h===0)return t.makeTensorInfo(s.shape,i.dtype);const m=Ve({inputs:{x:i},backend:t,attrs:{shape:[l,o]}}),x=Ve({inputs:{x:a},backend:t,attrs:{shape:[l,u]}}),g=Ve({inputs:{x:s},backend:t,attrs:{shape:f}}),y=new EC(l,o,m.shape.length,x.shape.length,d,f,!1,!0),v=t.runWebGLProgram(y,[x,m,g],g.dtype),w=Ve({inputs:{x:v},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(v),w}const Fge={kernelName:Ub,backendName:"webgl",kernelFunc:Pge};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gge{constructor(e,t){this.variableNames=["A"];const r=new Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[a]*t[a];this.outputShape=r,this.rank=r.length;const s=rn(this.rank),i=Oge(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${i}));
      }
    `}}function Oge(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<n.length;s++)r.push(`imod(${t[s]}, ${n[s]})`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oG(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{reps:i}=r;if(s.dtype==="string"||s.shape.length>5){const o=t.readSync(s.dataId),l=s.dtype==="string"?o.map(h=>eo(h)):o,u=Et(s.shape,s.dtype,l),d=Xoe(u,i);return t.makeTensorInfo(d.shape,d.dtype,d.values)}const a=new Gge(s.shape,i);return t.runWebGLProgram(a,[s],s.dtype)}const Wge={kernelName:gh,backendName:"webgl",kernelFunc:oG};class Vge{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class $ge{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xl(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function cR(n){let e=1;for(;e<n;)e*=2;return e}function Bge(n){const{inputs:e,backend:t,attrs:r}=n,{x:s}=e,{k:i,sorted:a}=r,o=de().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=de().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=s.shape,d=u[u.length-1];if(t.shouldExecuteOnCPU([s])||d<o||i>l){const R=t.readSync(s.dataId),[z,X]=Uoe(R,u,s.dtype,i,a);return[t.makeTensorInfo(z.shape,z.dtype,z.values),t.makeTensorInfo(X.shape,X.dtype,X.values)]}if(i===0)return u[u.length-1]=0,[t.makeTensorInfo(u,s.dtype,[]),t.makeTensorInfo(u,"int32",[])];if(d===1)return[s,fg({attrs:{shape:u,dtype:"int32",value:0},backend:t})];const h=t.texData.get(s.dataId),f=h!==null&&h.isPacked,m=f?t.unpackTensor(s):s,x=be(u)/d,g=Ve({inputs:{x:m},attrs:{shape:[x,d]},backend:t});f&&Xl(t,m);const y=cR(i),v=cR(d);let w=null;const I=()=>w===null?[g,g]:[g,w],T=(R,z,X)=>{const U=I(),G=new Vge(X),V=[[d],[w===null?1:0],[Number.NEGATIVE_INFINITY],[R],[z]],Z=w;w=t.runWebGLProgram(G,U,"int32",V),Xl(t,Z)};for(let R=1;R<y;R*=2){const z=R*2;for(let X=R;X>=1;X/=2)T(z,X,[x,v])}for(let R=v;R>y;R/=2){const z=I(),X=new $ge([x,R/2]),U=[[d],[w===null?1:0],[y]],G=w;w=t.runWebGLProgram(X,z,"int32",U),Xl(t,G);const V=y/2,Z=V*2;for(let J=V;J>=1;J/=2)T(Z,J,w.shape)}let C=w;w=Wh({inputs:{x:w},backend:t,attrs:{begin:0,size:[x,i]}}),Xl(t,C);let E=qF({inputs:{x:g,indices:w},backend:t,attrs:{axis:1,batchDims:1}});Xl(t,g);const L=u.slice(0,-1);L.push(i),C=w,w=Ve({inputs:{x:w},attrs:{shape:L},backend:t}),Xl(t,C);const M=E;return E=Ve({inputs:{x:E},attrs:{shape:L},backend:t}),Xl(t,M),[E,w]}const Xge={kernelName:rx,backendName:"webgl",kernelFunc:Bge};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uge{constructor(e,t,r,s,i,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const o=r==="nearest"?1:2;let l;switch(s){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${i});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${i});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${o} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zge(n){const{inputs:e,backend:t,attrs:r}=n,{image:s,transforms:i}=e,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=r,[d,h,f,m]=s.shape,[x,g]=u??[h,f],y=[d,x,g,m],v=new Uge(h,f,a,o,l,y);return t.runWebGLProgram(v,[s,i],"float32")}const Hge={kernelName:sx,backendName:"webgl",kernelFunc:Zge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kge(n){const{inputs:e,attrs:t,backend:r}=n,{axis:s}=t,{x:i}=e;Ah(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(i.dataId),{outputValues:o,outputShape:l,indices:u}=Zoe(a,s,i.shape,i.dtype);return[r.makeTensorInfo(l,i.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}const Yge={kernelName:ix,backendName:"webgl",kernelFunc:Kge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jge(n){const{inputs:e,backend:t,attrs:r}=n,{value:s}=e;let{axis:i}=r;i<0&&(i+=s.shape.length);const a=s,o=a.shape.length,l=s.shape[i],u=new Array(o-1);let d=0;for(let g=0;g<o;g++)g!==i&&(u[d++]=a.shape[g]);const h=[],f=new Array(o).fill(0),m=a.shape.slice();m[i]=1;const x=new Array(l);for(let g=0;g<x.length;g++){f[i]=g;const y=Wh({inputs:{x:a},backend:t,attrs:{begin:f,size:m}}),v=Ve({inputs:{x:y},backend:t,attrs:{shape:u}});x[g]=v,h.push(y)}return h.forEach(g=>t.disposeIntermediateTensorInfo(g)),x}const Qge={kernelName:Cm,backendName:"webgl",kernelFunc:jge};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jge{constructor(e,t){this.variableNames=["x","segmentIds"];const r=e.windowSize,s=e.batchSize,i=e.inSize,a=e.numSegments,o=a*Math.ceil(i/r);this.outputShape=[s,o];const l="0.0",u="sumValue",d=Math.floor(r/4)*4,h=r%4,f=`
        sumValue += dot(values, segFilter);
    `;let m="";i%r>0&&(m=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `);let x="";i%r>0&&(x=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${m}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${x}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${d}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${f}
        }

        int inIdx = inOffset + ${d};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${f}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${f}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${f}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qge(n){const{inputs:e,backend:t,attrs:r}=n,{x:s,segmentIds:i}=e,{numSegments:a}=r,o=s.shape.length,l=[];let u=0;const d=Rn([u],o);let h=s;d!=null&&(h=qr({inputs:{x:s},backend:t,attrs:{perm:d}}),l.push(h),u=Xn(1,o)[0]);const f=sz(h.shape,u,a),m=be([h.shape[u]]),x=Ve({inputs:{x:h},backend:t,attrs:{shape:[-1,m]}});l.push(x);const g=ox(s.dtype),y=(T,C,E,L,M)=>{const R=T.shape[0],z=T.shape[1],X=rz(z,M),U={windowSize:X,inSize:z,batchSize:R,numSegments:M},G=new Jge(U,C),V=t.compileAndRun(G,[T,E],L);if(l.push(V),V.shape[1]===M)return V;const Z=aG({backend:t,attrs:{start:0,stop:M,step:1,dtype:"float32"}}),J=oG({inputs:{x:Z},backend:t,attrs:{reps:[z/X]}});return l.push(Z),l.push(J),y(V,C,J,L,M)},v=y(x,"unsortedSegmentSum",i,g,a),w=Ve({inputs:{x:v},backend:t,attrs:{shape:f}});let I=w;if(d!=null){l.push(w);const T=bl(d);I=qr({inputs:{x:I},backend:t,attrs:{perm:T}})}return l.forEach(T=>t.disposeIntermediateTensorInfo(T)),I}const eye={kernelName:_m,backendName:"webgl",kernelFunc:qge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tye=[Gle,Wle,Ble,Zle,Kle,Qle,qle,tue,iue,oue,cue,pue,gue,vue,Tue,kue,_ue,Rue,Aue,Due,Oue,Zue,Kue,Jue,ece,ace,lce,hce,wle,mce,vce,Ice,Ece,Ace,Dce,Fce,Oce,Bce,Zce,Yce,Qce,qce,tde,sde,ade,cde,hde,mde,bde,vde,Ide,Mde,Lde,Dde,Gde,Ode,Vde,Bde,Ude,Hde,Yde,qde,nhe,ihe,ohe,che,phe,yhe,whe,vle,The,bce,Che,Nhe,Lhe,Tle,Phe,Whe,$he,Zhe,Yhe,qhe,npe,ape,cpe,ppe,mpe,xpe,wpe,Tpe,_pe,Npe,Rpe,Ape,Dpe,Ope,Bpe,Hpe,tfe,Cle,ife,lfe,dfe,ffe,nce,yfe,xfe,wfe,Ife,Mfe,kle,Efe,Lfe,zfe,Pfe,Ffe,rce,Qpe,Wfe,Xfe,Kfe,Mle,Jfe,tme,ime,lme,hme,fme,yme,vme,Tme,Cme,Nme,Lme,Pme,Ome,Bme,Zme,Xue,qpe,Yme,Qme,qme,tge,rge,ige,oge,uge,dge,fge,gge,bge,vge,Tge,kge,_ge,Nge,Jpe,Dle,Lge,Dge,Fge,Wge,Xge,Hge,Ple,Yge,Qge,eye,bfe];for(const n of tye)xs(n);const lG="",dR=typeof window<"u"&&window.Blob&&new Blob([atob(lG)],{type:"text/javascript;charset=utf-8"});function nye(n){let e;try{if(e=dR&&(window.URL||window.webkitURL).createObjectURL(dR),!e)throw"";const t=new Worker(e,{name:n?.name});return t.addEventListener("error",()=>{(window.URL||window.webkitURL).revokeObjectURL(e)}),t}catch{return new Worker("data:application/javascript;base64,"+lG,{name:n?.name})}finally{e&&(window.URL||window.webkitURL).revokeObjectURL(e)}}const rye=(n,e)=>[[n[0][0]*e[0][0]+n[0][2]*e[2][0],n[0][0]*e[0][1]+n[0][2]*e[2][1],n[0][0]*e[0][2]+n[0][2]*e[2][2],n[0][0]*e[0][3]+n[0][2]*e[2][3]],[n[1][1]*e[1][0]+n[1][2]*e[2][0],n[1][1]*e[1][1]+n[1][2]*e[2][1],n[1][1]*e[1][2]+n[1][2]*e[2][2],n[1][1]*e[1][3]+n[1][2]*e[2][3]],[e[2][0],e[2][1],e[2][2],e[2][3]]],sye=(n,e,t,r)=>{const s=n[0][0]*e+n[0][1]*t+n[0][3],i=n[1][0]*e+n[1][1]*t+n[1][3],a=n[2][0]*e+n[2][1]*t+n[2][3];return{x:s,y:i,z:a}},iye=(n,e,t,r)=>{const{x:s,y:i,z:a}=sye(n,e,t);return{x:s/a,y:i/a}},aye=6,oye=1,lye=10,uye=1,cye=.8,dye=1,aa=1e3;class hye{constructor(e,t,r,s,i,a=!1){this.markerDimensions=e,this.trackingDataList=t,this.projectionTransform=r,this.debugMode=a,this.trackingKeyframeList=[];for(let l=0;l<t.length;l++)this.trackingKeyframeList.push(t[l][dye]);let o=0;for(let l=0;l<this.trackingKeyframeList.length;l++)o=Math.max(o,this.trackingKeyframeList[l].points.length);this.featurePointsListT=[],this.imagePixelsListT=[],this.imagePropertiesListT=[];for(let l=0;l<this.trackingKeyframeList.length;l++){const{featurePoints:u,imagePixels:d,imageProperties:h}=this._prebuild(this.trackingKeyframeList[l],o);this.featurePointsListT[l]=u,this.imagePixelsListT[l]=d,this.imagePropertiesListT[l]=h}this.kernelCaches={}}dummyRun(e){let t=[[1,1,1,1],[1,1,1,1],[1,1,1,1]];for(let r=0;r<this.featurePointsListT.length;r++)this.track(e,t,r)}track(e,t,r){let s={};const i=rye(this.projectionTransform,t),a=this._buildAdjustedModelViewTransform(i);this.markerDimensions[r][0],this.markerDimensions[r][1],this.trackingKeyframeList[r].width,this.trackingKeyframeList[r].height;const o=this.featurePointsListT[r],l=this.imagePixelsListT[r],u=this.imagePropertiesListT[r],d=this._computeProjection(a,e,r),{matchingPointsT:h,simT:f}=this._computeMatching(o,l,u,d),m=h.arraySync(),x=f.arraySync(),g=this.trackingKeyframeList[r],y=[],v=[],w=[];for(let I=0;I<m.length;I++)if(x[I]>cye&&I<g.points.length){w.push(I);const T=iye(i,m[I][0],m[I][1]);v.push(T),y.push({x:g.points[I].x/g.scale,y:g.points[I].y/g.scale,z:0})}return this.debugMode&&(s={projectedImage:d.arraySync(),matchingPoints:h.arraySync(),goodTrack:w,trackedPoints:v}),a.dispose(),d.dispose(),h.dispose(),f.dispose(),{worldCoords:y,screenCoords:v,debugExtra:s}}_computeMatching(e,t,r,s){const i=aye,a=i*2+1,o=lye*oye,l=uye,u=o*2+1,d=s.shape[0],h=s.shape[1],f=e.shape[0];if(!this.kernelCaches.computeMatching){const m={variableNames:["features","markerPixels","markerProperties","targetPixels"],outputShape:[f,u*u],userCode:`
	  void main() {
	    ivec2 coords = getOutputCoords();

	    int featureIndex = coords[0];
	    int searchOffsetIndex = coords[1];

	    int markerWidth = int(getMarkerProperties(0));
	    int markerHeight = int(getMarkerProperties(1));
	    float markerScale = getMarkerProperties(2);

	    int searchOffsetX = imod(searchOffsetIndex, ${u}) * ${l};
	    int searchOffsetY = searchOffsetIndex / ${u} * ${l};

	    int sCenterX = int(getFeatures(featureIndex, 0) * markerScale);
	    int sCenterY = int(getFeatures(featureIndex, 1) * markerScale);

	    int sx = sCenterX + searchOffsetX - ${o};
	    int sy = sCenterY + searchOffsetY - ${o};

	    if (sx < ${i} || sx >= (${h} - ${i}) || sy < ${i} || sy >= (${d} - ${i})) {
	      setOutput(-2.);
	    } 
	    else {
	      float sumPoint = 0.;
	      float sumPointSquare = 0.;
	      float sumTemplate = 0.;
	      float sumTemplateSquare = 0.;
	      float sumPointTemplate = 0.;

	      for (int templateOffsetY = 0; templateOffsetY < ${a}; templateOffsetY++) {
		for (int templateOffsetX = 0; templateOffsetX < ${a}; templateOffsetX++) {
		  int fx2 = sCenterX + templateOffsetX - ${i};
		  int fy2 = sCenterY + templateOffsetY - ${i};

		  int sx2 = sx + templateOffsetX - ${i};
		  int sy2 = sy + templateOffsetY - ${i};

		  int markerPixelIndex = fy2 * markerWidth + fx2;
		  float markerPixel = getMarkerPixels(markerPixelIndex);
		  float targetPixel = getTargetPixels(sy2, sx2);

		  sumTemplate += markerPixel;
		  sumTemplateSquare += markerPixel * markerPixel;
		  sumPoint += targetPixel;
		  sumPointSquare += targetPixel * targetPixel;
		  sumPointTemplate += targetPixel * markerPixel;
		}
	      }

	      // Normalized cross-correlation
	      // !important divide first avoid overflow (e.g. sumPoint / count * sumPoint)
	      float count = float(${a} * ${a});
	      float pointVariance = sqrt(sumPointSquare - sumPoint / count * sumPoint);
	      float templateVariance = sqrt(sumTemplateSquare - sumTemplate / count * sumTemplate);

	      if (pointVariance < 0.0000001) {
		setOutput(-3.);
	      } else if (templateVariance < 0.0000001) {
		//setOutput(sumTemplate);
		setOutput(-4.);
	      } else {
		sumPointTemplate -= sumPoint / count * sumTemplate;
		float sim = sumPointTemplate / pointVariance / templateVariance;  
		setOutput(sim);
	      }
	    }
	  }
	`},x={variableNames:["featurePoints","markerProperties","maxIndex"],outputShape:[f,2],userCode:`
	  void main() {
	    ivec2 coords = getOutputCoords();

	    float markerScale = getMarkerProperties(2);

	    int featureIndex = coords[0];

	    int maxIndex = int(getMaxIndex(featureIndex));
	    int searchLocationIndex = maxIndex / ${u*u};
	    int searchOffsetIndex = imod(maxIndex, ${u*u});

	    if (coords[1] == 0) {
	      int searchOffsetX = imod(searchOffsetIndex, ${u}) * ${l};
	      setOutput(getFeaturePoints(featureIndex, 0) + float(searchOffsetX - ${o}) / markerScale);
	    }
	    else if (coords[1] == 1) {
	      int searchOffsetY = searchOffsetIndex / ${u} * ${l};
	      setOutput(getFeaturePoints(featureIndex, 1) + float(searchOffsetY - ${o}) / markerScale);
	    }
	  }
	`},g={variableNames:["sims","maxIndex"],outputShape:[f],userCode:`
	  void main() {
	    int featureIndex = getOutputCoords();
	    int maxIndex = int(getMaxIndex(featureIndex));
	    setOutput(getSims(featureIndex, maxIndex));
	  }
	`};this.kernelCaches.computeMatching=[m,x,g]}return le(()=>{const m=this.kernelCaches.computeMatching,x=this._compileAndRun(m[0],[e,t,r,s]),g=x.argMax(1),y=this._compileAndRun(m[1],[e,r,g]),v=this._compileAndRun(m[2],[x,g]);return{matchingPointsT:y,simT:v}})}_computeProjection(e,t,r){const s=this.trackingKeyframeList[r].width,i=this.trackingKeyframeList[r].height,a=this.trackingKeyframeList[r].scale,o=s+"-"+i+"-"+a;if(this.kernelCaches.computeProjection||(this.kernelCaches.computeProjection={}),!this.kernelCaches.computeProjection[o]){const l={variableNames:["M","pixel"],outputShape:[i,s],userCode:`
	  void main() {
	      ivec2 coords = getOutputCoords();

	      float m00 = getM(0, 0) * ${aa}.;
	      float m01 = getM(0, 1) * ${aa}.;
	      float m03 = getM(0, 3) * ${aa}.;
	      float m10 = getM(1, 0) * ${aa}.;
	      float m11 = getM(1, 1) * ${aa}.;
	      float m13 = getM(1, 3) * ${aa}.;
	      float m20 = getM(2, 0) * ${aa}.;
	      float m21 = getM(2, 1) * ${aa}.;
	      float m23 = getM(2, 3) * ${aa}.;

	      float y = float(coords[0]) / float(${a});
	      float x = float(coords[1]) / float(${a});
	      float uz = (x * m20) + (y * m21) + m23;
	      float oneOverUz = 1. / uz;

	      float ux = (x * m00) + (y * m01) + m03;
	      float uy = (x * m10) + (y * m11) + m13;

	      ux = floor(ux * oneOverUz + 0.5);
	      uy = floor(uy * oneOverUz + 0.5);
	      setOutput(getPixel(int(uy), int(ux)));
	    }
	`};this.kernelCaches.computeProjection[o]=l}return le(()=>{const l=this.kernelCaches.computeProjection[o];return this._compileAndRun(l,[e,t])})}_buildAdjustedModelViewTransform(e){return le(()=>{let t=[];for(let r=0;r<e.length;r++){t.push([]);for(let s=0;s<e[r].length;s++)t[r].push(e[r][s]/aa)}return wn(t,[3,4])})}_prebuild(e,t){return le(()=>{const r=e.scale,s=[];for(let o=0;o<t;o++)o<e.points.length?s.push([e.points[o].x/r,e.points[o].y/r]):s.push([-1,-1]);const i=wn(e.data,[e.width*e.height]),a=wn([e.width,e.height,e.scale],[3]);return{featurePoints:wn(s,[s.length,2],"float32"),imagePixels:i,imageProperties:a}})}_compileAndRun(e,t){const r=ga().compileAndRun(e,t);return on().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}}const Ky=[{sigma:.55,points:[[-1,0],[-.5,-.866025],[.5,-.866025],[1,-0],[.5,.866025],[-.5,.866025]]},{sigma:.475,points:[[0,.930969],[-.806243,.465485],[-.806243,-.465485],[-0,-.930969],[.806243,-.465485],[.806243,.465485]]},{sigma:.4,points:[[.847306,-0],[.423653,.733789],[-.423653,.733789],[-.847306,0],[-.423653,-.733789],[.423653,-.733789]]},{sigma:.325,points:[[-0,-.741094],[.641806,-.370547],[.641806,.370547],[0,.741094],[-.641806,.370547],[-.641806,-.370547]]},{sigma:.25,points:[[-.595502,0],[-.297751,-.51572],[.297751,-.51572],[.595502,-0],[.297751,.51572],[-.297751,.51572]]},{sigma:.175,points:[[0,.362783],[-.314179,.181391],[-.314179,-.181391],[-0,-.362783],[.314179,-.181391],[.314179,.181391]]},{sigma:.1,points:[[0,0]]}],zu=[];for(let n=0;n<Ky.length;n++){const e=Ky[n].sigma;for(let t=0;t<Ky[n].points.length;t++){const r=Ky[n].points[t];zu.push([e,r[0],r[1]])}}const eS={};function pye(n){const e=n.shape[1],t=n.shape[0],r="w"+e+"h"+t;if(!eS.hasOwnProperty(r)){const s={variableNames:["p"],outputShape:[t,e],userCode:`
        void main() {
          ivec2 coords = getOutputCoords();

          float sum = getP(coords[0], coords[1]-2);
          sum += getP(coords[0], coords[1]-1) * 4.;
          sum += getP(coords[0], coords[1]) * 6.;
          sum += getP(coords[0], coords[1]+1) * 4.;
          sum += getP(coords[0], coords[1]+2);
          setOutput(sum);
        }
      `},i={variableNames:["p"],outputShape:[t,e],userCode:`
        void main() {
          ivec2 coords = getOutputCoords();

          float sum = getP(coords[0]-2, coords[1]);
          sum += getP(coords[0]-1, coords[1]) * 4.;
          sum += getP(coords[0], coords[1]) * 6.;
          sum += getP(coords[0]+1, coords[1]) * 4.;
          sum += getP(coords[0]+2, coords[1]);
          sum /= 256.;
          setOutput(sum);
        }
      `};eS[r]=[s,i]}return eS[r]}const fye=n=>{const e=n.inputs.image,t=n.backend,[r,s]=pye(e),i=t.runWebGLProgram(r,[e],e.dtype),a=t.runWebGLProgram(s,[i],e.dtype);return t.disposeIntermediateTensorInfo(i),a},mye={kernelName:"BinomialFilter",backendName:"webgl",kernelFunc:fye},Yy=7,hR=3,gye=hR*hR,tS=4,yye=(tS+1)*(tS+1)/tS,nS={};function bye(n){const e=n.shape[1],t=n.shape[0],r="w"+e+"h"+t;if(!nS.hasOwnProperty(r)){const s={variableNames:["image0","image1","image2"],outputShape:[t,e],userCode:`
        void main() {
          ivec2 coords = getOutputCoords();
    
          int y = coords[0];
          int x = coords[1];
    
          float value = getImage1(y, x);
    
          // Step 1: find local maxima/minima
          if (value * value < ${gye}.) {
            setOutput(0.);
            return;
          }
          if (y < ${Yy} || y > ${t-1-Yy}) {
            setOutput(0.);
            return;
          }
          if (x < ${Yy} || x > ${e-1-Yy}) {
            setOutput(0.);
            return;
          }
    
          bool isMax = true;
          bool isMin = true;
          for (int dy = -1; dy <= 1; dy++) {
            for (int dx = -1; dx <= 1; dx++) {
              float value0 = getImage0(y+dy, x+dx);
              float value1 = getImage1(y+dy, x+dx);
              float value2 = getImage2(y+dy, x+dx);
    
        if (value < value0 || value < value1 || value < value2) {
          isMax = false;
        }
        if (value > value0 || value > value1 || value > value2) {
          isMin = false;
        }
            }
          }
    
          if (!isMax && !isMin) {
            setOutput(0.);
            return;
          }
    
          // compute edge score and reject based on threshold
          float dxx = getImage1(y, x+1) + getImage1(y, x-1) - 2. * getImage1(y, x);
          float dyy = getImage1(y+1, x) + getImage1(y-1, x) - 2. * getImage1(y, x);
          float dxy = 0.25 * (getImage1(y-1,x-1) + getImage1(y+1,x+1) - getImage1(y-1,x+1) - getImage1(y+1,x-1));
    
          float det = (dxx * dyy) - (dxy * dxy);
    
          if (abs(det) < 0.0001) { // determinant undefined. no solution
            setOutput(0.);
            return;
          }
    
          float edgeScore = (dxx + dyy) * (dxx + dyy) / det;
    
          if (abs(edgeScore) >= ${yye} ) {
            setOutput(0.);
            return;
          }
          setOutput(getImage1(y,x));
        }
      `};nS[r]=s}return nS[r]}const xye=n=>{let{image0:e,image1:t,image2:r}=n.inputs;const s=n.backend,i=bye(t);return e=on().runKernel("DownsampleBilinear",{image:e}),r=on().runKernel("UpsampleBilinear",{image:r,targetImage:t}),s.runWebGLProgram(i,[e,t,r],t.dtype)},vye={kernelName:"BuildExtremas",backendName:"webgl",kernelFunc:xye},Dp=36,rS={};function wye(n){const e=n.shape[0];if(!rS.hasOwnProperty(e)){const t={variableNames:["histogram"],outputShape:[n.shape[0]],userCode:`
            void main() {
                int featureIndex = getOutputCoords();

                int maxIndex = 0;
                for (int i = 1; i < ${Dp}; i++) {
                    if (getHistogram(featureIndex, i) > getHistogram(featureIndex, maxIndex)) {
                        maxIndex = i;
                    }
                }

                int prev = imod(maxIndex - 1 + ${Dp}, ${Dp});
                int next = imod(maxIndex + 1, ${Dp});

                /**
                 * Fit a quatratic to 3 points. The system of equations is:
                 *
                 * y0 = A*x0^2 + B*x0 + C
                 * y1 = A*x1^2 + B*x1 + C
                 * y2 = A*x2^2 + B*x2 + C
                 *
                 * This system of equations is solved for A,B,C.
                 */
                float p10 = float(maxIndex - 1);
                float p11 = getHistogram(featureIndex, prev); 
                float p20 = float(maxIndex);
                float p21 = getHistogram(featureIndex, maxIndex); 
                float p30 = float(maxIndex + 1);
                float p31 = getHistogram(featureIndex, next); 

                float d1 = (p30-p20)*(p30-p10);
                float d2 = (p10-p20)*(p30-p10);
                float d3 = p10-p20;

                // If any of the denominators are zero then, just use maxIndex.
                    float fbin = float(maxIndex);
                if ( abs(d1) > 0.00001 && abs(d2) > 0.00001 && abs(d3) > 0.00001) {
                float a = p10*p10;
                float b = p20*p20;

                // Solve for the coefficients A,B,C
                float A = ((p31-p21)/d1)-((p11-p21)/d2);
                float B = ((p11-p21)+(A*(b-a)))/d3;
                float C = p11-(A*a)-(B*p10);
                fbin = -B / (2. * A);
                }

                float an = 2.0 *${Math.PI} * (fbin + 0.5) / ${Dp}. - ${Math.PI};
                setOutput(an);
            }
            `};rS[e]=t}return rS[e]}const Sye=n=>{const{histograms:e}=n.inputs,t=n.backend,r=wye(e);return t.runWebGLProgram(r,[e],e.dtype)},Tye={kernelName:"ComputeExtremaAngles",backendName:"webgl",kernelFunc:Sye},pR=7,sS={};function Iye(n,e){const t=`${n}|${e.shape[0]}`;if(!sS.hasOwnProperty(t)){const r=[];for(let a=1;a<n;a++)r.push("image"+a);let s="float getPixel(int octave, int y, int x) {";for(let a=1;a<n;a++)s+=`
  if (octave == ${a}) {
	return getImage${a}(y, x);
  }
`;s+="}";const i={variableNames:[...r,"extrema","angles","freakPoints"],outputShape:[e.shape[0],zu.length],userCode:`
  ${s}
  void main() {
	ivec2 coords = getOutputCoords();
	int featureIndex = coords[0];
	int freakIndex = coords[1];

	float freakSigma = getFreakPoints(freakIndex, 0);
	float freakX = getFreakPoints(freakIndex, 1);
	float freakY = getFreakPoints(freakIndex, 2);

	int octave = int(getExtrema(featureIndex, 1));
	float inputY = getExtrema(featureIndex, 2);
	float inputX = getExtrema(featureIndex, 3);
	float inputAngle = getAngles(featureIndex);
	float cos = ${pR}. * cos(inputAngle);
	float sin = ${pR}. * sin(inputAngle);

	float yp = inputY + freakX * sin + freakY * cos;
	float xp = inputX + freakX * cos + freakY * -sin;

	int x0 = int(floor(xp));
	int x1 = x0 + 1;
	int y0 = int(floor(yp));
	int y1 = y0 + 1;

	float f1 = getPixel(octave, y0, x0);
	float f2 = getPixel(octave, y0, x1);
	float f3 = getPixel(octave, y1, x0);
	float f4 = getPixel(octave, y1, x1);

	float x1f = float(x1);
	float y1f = float(y1);
	float x0f = float(x0);
	float y0f = float(y0);

	// ratio for interpolation between four neighbouring points
	float value = (x1f - xp) * (y1f - yp) * f1
		+ (xp - x0f) * (y1f - yp) * f2
		+ (x1f - xp) * (yp - y0f) * f3
		+ (xp - x0f) * (yp - y0f) * f4;

	setOutput(value);
  }
`};sS[t]=i}return sS[t]}const kye=n=>{const{gaussianImagesT:e,prunedExtremas:t,prunedExtremasAngles:r,freakPointsT:s,pyramidImagesLength:i}=n.inputs,a=n.backend,o=Iye(i,t);return a.runWebGLProgram(o,[...e,t,r,s],"float32")},Cye={kernelName:"ComputeExtremaFreak",backendName:"webgl",kernelFunc:kye},uG=(zu.length-1)*zu.length/2,_ye=Math.ceil(uG/8),iS={};function Mye(n){const e=`${n.shape[0]}`;if(!iS.hasOwnProperty(e)){const t={variableNames:["freak","p"],outputShape:[n.shape[0],_ye],userCode:`
  void main() {
    ivec2 coords = getOutputCoords();
    int featureIndex = coords[0];
    int descIndex = coords[1] * 8;

    int sum = 0;
    for (int i = 0; i < 8; i++) {
      if (descIndex + i >= ${uG}) {
        continue;
      }

      int p1 = int(getP(descIndex + i, 0));
      int p2 = int(getP(descIndex + i, 1));

      float v1 = getFreak(featureIndex, p1);
      float v2 = getFreak(featureIndex, p2);

      if (v1 < v2 + 0.01) {
        sum += int(pow(2.0, float(7 - i)));
      }
    }
    setOutput(float(sum));
  }
`};iS[e]=t}return iS[e]}const Nye=n=>{const{extremaFreaks:e,positionT:t}=n.inputs,{backend:r}=n,s=Mye(e);return r.runWebGLProgram(s,[e,t],"int32")},Eye={kernelName:"ComputeFreakDescriptors",backendName:"webgl",kernelFunc:Nye},aS={};function Rye(n,e){const t=`${n}|${e}`;if(!aS.hasOwnProperty(t)){const r=[];let s="float getPixel(int octave, int y, int x) {";for(let i=1;i<n;i++)r.push("image"+i),s+=`
				if (octave == ${i}) {
					return getImage${i}(y, x);
				}
			`;s+="}",aS[t]={variableNames:[...r,"extrema"],outputShape:[e,3,3],userCode:`
			${s}
		
			void main() {
				ivec3 coords = getOutputCoords();
				int featureIndex = coords[0];
				float score = getExtrema(featureIndex, 0);
				if (score == 0.0) {
					return;
				}
		
				int dy = coords[1]-1;
				int dx = coords[2]-1;
				int octave = int(getExtrema(featureIndex, 1));
				int y = int(getExtrema(featureIndex, 2));
				int x = int(getExtrema(featureIndex, 3));
				setOutput(getPixel(octave, y+dy, x+dx));
			}
			`}}return aS[t]}const Lye=n=>{const{prunedExtremasList:e,dogPyramidImagesT:t}=n.inputs,r=n.backend,s=Rye(t.length,e.length),i=wn(e,[e.length,e[0].length],"int32");return r.runWebGLProgram(s,[...t.slice(1),i],t[0].dtype)},Aye={kernelName:"ComputeLocalization",backendName:"webgl",kernelFunc:Lye},zye=.159154943091895,Vc=36,oS={};function Dye(n,e,t){const r=`${t}|${n.shape[0]}|${e.shape[0]}`;if(!oS.hasOwnProperty(r)){const s=[];for(let l=1;l<t;l++)s.push("image"+l);let i="float getPixel(int octave, int y, int x) {";for(let l=1;l<t;l++)i+=`
            if (octave == ${l}) {
                return getImage${l}(y, x);
            }
            `;i+="}";const a={variableNames:[...s,"extrema","radial"],outputShape:[n.shape[0],e.shape[0],2],userCode:`
                ${i}

                void main() {
                    ivec3 coords = getOutputCoords();
                    int featureIndex = coords[0];
                    int radialIndex = coords[1];
                    int propertyIndex = coords[2];

                    int radialY = int(getRadial(radialIndex, 0));
                    int radialX = int(getRadial(radialIndex, 1));
                    float radialW = getRadial(radialIndex, 2);

                    int octave = int(getExtrema(featureIndex, 1));
                    int y = int(getExtrema(featureIndex, 2));
                    int x = int(getExtrema(featureIndex, 3));

                    int xp = x + radialX;
                    int yp = y + radialY;

                    float dy = getPixel(octave, yp+1, xp) - getPixel(octave, yp-1, xp);
                    float dx = getPixel(octave, yp, xp+1) - getPixel(octave, yp, xp-1);

                    if (propertyIndex == 0) {
                    // be careful that atan(0, 0) gives 1.57 instead of 0 (different from js), but doesn't matter here, coz magnitude is 0
                    
                    float angle = atan(dy, dx) + ${Math.PI};
                    float fbin = angle * ${Vc}. * ${zye};
                    setOutput(fbin);
                    return;
                    }

                    if (propertyIndex == 1) {
                        float mag = sqrt(dx * dx + dy * dy);
                        float magnitude = radialW * mag;
                        setOutput(magnitude);
                        return;
                    }
                }

                `},o={variableNames:["fbinMag"],outputShape:[n.shape[0],Vc],userCode:`
            void main() {
                ivec2 coords = getOutputCoords();
                int featureIndex = coords[0];
                int binIndex = coords[1];

                float sum = 0.;
                for (int i = 0; i < ${e.shape[0]}; i++) {
                    float fbin = getFbinMag(featureIndex, i, 0);
                    int bin = int(floor(fbin - 0.5));
                    int b1 = imod(bin + ${Vc}, ${Vc});
                    int b2 = imod(bin + 1 + ${Vc}, ${Vc});

                    if (b1 == binIndex || b2 == binIndex) {
                        float magnitude = getFbinMag(featureIndex, i, 1);
                        float w2 = fbin - float(bin) - 0.5;
                        float w1 = w2 * -1. + 1.;

                        if (b1 == binIndex) {
                            sum += w1 * magnitude;
                        }
                        if (b2 == binIndex) {
                            sum += w2 * magnitude;
                        }
                    }
                }
                setOutput(sum);
            }
            `};oS[r]=[a,o]}return oS[r]}const Pye=n=>{const{gaussianImagesT:e,prunedExtremasT:t,radialPropertiesT:r,pyramidImagesLength:s}=n.inputs,i=n.backend,[a,o]=Dye(t,r,s),l=i.runWebGLProgram(a,[...e,t,r],r.dtype),u=i.runWebGLProgram(o,[l],r.dtype);return i.disposeIntermediateTensorInfo(l),u},Fye={kernelName:"ComputeOrientationHistograms",backendName:"webgl",kernelFunc:Pye},lS={};function Gye(n){const e=n.shape[1],t=n.shape[0],r="w"+e+"h"+t;if(!lS.hasOwnProperty(r)){const s={variableNames:["p"],outputShape:[Math.floor(t/2),Math.floor(e/2)],userCode:`
            void main() {
                ivec2 coords = getOutputCoords();
                int y = coords[0] * 2;
                int x = coords[1] * 2;
        
                float sum = getP(y, x) * 0.25;
                sum += getP(y+1,x) * 0.25; 
                sum += getP(y, x+1) * 0.25; 
                sum += getP(y+1,x+1) * 0.25;
                setOutput(sum);
            }
            `};lS[r]=s}return lS[r]}const Oye=n=>{const e=n.inputs.image,t=n.backend,r=Gye(e);return t.runWebGLProgram(r,[e],e.dtype)},Wye={kernelName:"DownsampleBilinear",backendName:"webgl",kernelFunc:Oye},Vye=n=>{const{extremasResultT:e}=n.inputs,t=n.backend,r=e.shape[0],s=e.shape[1],i={variableNames:["extrema"],outputShape:[Math.floor(r/2),Math.floor(s/2)],userCode:`
		  void main() {
			ivec2 coords = getOutputCoords();
			int y = coords[0] * 2;
			int x = coords[1] * 2;
  
			float location = 0.0;
			float values = getExtrema(y, x);
  
			if (getExtrema(y+1, x) != 0.0) {
			  location = 1.0;
		  values = getExtrema(y+1, x);
			}
			else if (getExtrema(y, x+1) != 0.0) {
			  location = 2.0;
		  values = getExtrema(y, x+1);
			}
			else if (getExtrema(y+1, x+1) != 0.0) {
			  location = 3.0;
		  values = getExtrema(y+1, x+1);
			}
  
			if (values < 0.0) {
			  setOutput(location * -1000.0 + values);
			} else {
			  setOutput(location * 1000.0 + values);
			}
		  }
		`};return t.runWebGLProgram(i,[e],e.dtype)},$ye={kernelName:"ExtremaReduction",backendName:"webgl",kernelFunc:Vye},jy=36,Bye=5,uS={};function Xye(n){const e=`h${n.shape[0]}`;if(!uS.hasOwnProperty(e)){const t={variableNames:["histogram"],outputShape:[n.shape[0],jy],userCode:`
            void main() {
                ivec2 coords = getOutputCoords();

                int featureIndex = coords[0];
                int binIndex = coords[1];

                int prevBin = imod(binIndex - 1 + ${jy}, ${jy});
                int nextBin = imod(binIndex + 1, ${jy});
                float result = 0.274068619061197 * getHistogram(featureIndex, prevBin) + 0.451862761877606 * getHistogram(featureIndex, binIndex) + 0.274068619061197 * getHistogram(featureIndex, nextBin);

                setOutput(result);
            }
            `};uS[e]=t}return uS[e]}const Uye=n=>{let{histograms:e}=n.inputs;const t=n.backend,r=Xye(e);for(let s=0;s<Bye;s++){const i=e;e=t.runWebGLProgram(r,[e],e.dtype),s>0&&t.disposeIntermediateTensorInfo(i)}return e},Zye={kernelName:"SmoothHistograms",backendName:"webgl",kernelFunc:Uye},cS={};function Hye(n,e){const t=e.shape[1],r=e.shape[0],s="w"+t+"h"+r;if(!cS.hasOwnProperty(s)){const i={variableNames:["p"],outputShape:[r,t],userCode:`
              void main() {
                ivec2 coords = getOutputCoords();
                int j = coords[0];
                int i = coords[1];
        
                float sj = 0.5 * float(j) - 0.25; 
                float si = 0.5 * float(i) - 0.25;
        
                float sj0 = floor(sj);
                float sj1 = ceil(sj);
                float si0 = floor(si);
                float si1 = ceil(si);
        
                int sj0I = int(sj0);
                int sj1I = int(sj1);
                int si0I = int(si0);
                int si1I = int(si1);
        
                float sum = 0.0;
                sum += getP(sj0I, si0I) * (si1 - si) * (sj1 - sj);
                sum += getP(sj1I, si0I) * (si1 - si) * (sj - sj0);
                sum += getP(sj0I, si1I) * (si - si0) * (sj1 - sj);
                sum += getP(sj1I, si1I) * (si - si0) * (sj - sj0);
                setOutput(sum);
              }
            `};cS[s]=i}return cS[s]}const Kye=n=>{const{image:e,targetImage:t}=n.inputs,r=n.backend,s=Hye(e,t);return r.runWebGLProgram(s,[e],e.dtype)},Yye={kernelName:"UpsampleBilinear",backendName:"webgl",kernelFunc:Kye};xs(mye);xs(vye);xs(Tye);xs(Cye);xs(Eye);xs(Aye);xs(Fye);xs(Wye);xs($ye);xs(Zye);xs(Yye);const fR=8,jye=5,Pp=10,Qye=5,dS=3,Jye=1.5;(zu.length-1)*zu.length/2;class cG{constructor(e,t,r=!1){this.debugMode=r,this.width=e,this.height=t;let s=0;for(;e>=fR&&t>=fR&&(e/=2,t/=2,s++,s!==jye););this.numOctaves=s,this.tensorCaches={},this.kernelCaches={}}detectImageData(e){const t=new Uint8ClampedArray(4*e.length);for(let s=0;s<e.length;s++)t[4*s]=e[s],t[4*s+1]=e[s],t[4*s+2]=e[s],t[4*s+3]=255;const r=new ImageData(t,this.width,this.height);return this.detect(r)}detect(e){let t=null;const r=[];for(let v=0;v<this.numOctaves;v++){let w,I;v===0?w=this._applyFilter(e):w=this._downsampleBilinear(r[v-1][r[v-1].length-1]),I=this._applyFilter(w),r.push([w,I])}const s=[];for(let v=0;v<this.numOctaves;v++){let w=this._differenceImageBinomial(r[v][0],r[v][1]);s.push(w)}const i=[];for(let v=1;v<this.numOctaves-1;v++){const w=this._buildExtremas(s[v-1],s[v],s[v+1]);i.push(w)}const a=this._applyPrune(i),o=this._computeLocalization(a,s),l=this._computeOrientationHistograms(o,r),u=this._smoothHistograms(l),d=this._computeExtremaAngles(u),h=this._computeExtremaFreak(r,o,d),f=this._computeFreakDescriptors(h),m=o.arraySync(),x=d.arraySync(),g=f.arraySync();this.debugMode&&(t={pyramidImages:r.map(v=>v.map(w=>w.arraySync())),dogPyramidImages:s.map(v=>v?v.arraySync():null),extremasResults:i.map(v=>v.arraySync()),extremaAngles:d.arraySync(),prunedExtremas:a,localizedExtremas:o.arraySync()}),r.forEach(v=>v.forEach(w=>w.dispose())),s.forEach(v=>v&&v.dispose()),i.forEach(v=>v.dispose()),o.dispose(),l.dispose(),u.dispose(),d.dispose(),h.dispose(),f.dispose();const y=[];for(let v=0;v<m.length;v++){if(m[v][0]==0)continue;const w=[];for(let M=0;M<g[v].length;M+=4){const R=g[v][M],z=g[v][M+1],X=g[v][M+2],U=g[v][M+3];let G=R*16777216+z*65536+X*256+U;w.push(G)}const I=m[v][1],T=m[v][2],C=m[v][3]*Math.pow(2,I)+Math.pow(2,I-1)-.5,E=T*Math.pow(2,I)+Math.pow(2,I-1)-.5,L=Math.pow(2,I);y.push({maxima:m[v][0]>0,x:C,y:E,scale:L,angle:x[v],descriptors:w})}return{featurePoints:y,debugExtra:t}}_computeFreakDescriptors(e){if(!this.tensorCaches.computeFreakDescriptors){const r=[],s=[];for(let o=0;o<e.shape[1];o++)for(let l=o+1;l<e.shape[1];l++)r.push(o),s.push(l);const i=wn(r,[r.length]).cast("int32"),a=wn(s,[s.length]).cast("int32");this.tensorCaches.computeFreakDescriptors={positionT:Pn(Wr([i,a],1))}}const{positionT:t}=this.tensorCaches.computeFreakDescriptors;return le(()=>on().runKernel("ComputeFreakDescriptors",{extremaFreaks:e,positionT:t}))}_computeExtremaFreak(e,t,r){this.tensorCaches._computeExtremaFreak||le(()=>{const a=wn(zu);this.tensorCaches._computeExtremaFreak={freakPointsT:Pn(a)}});const{freakPointsT:s}=this.tensorCaches._computeExtremaFreak,i=[];for(let a=1;a<e.length;a++)i.push(e[a][1]);return le(()=>on().runKernel("ComputeExtremaFreak",{gaussianImagesT:i,prunedExtremas:t,prunedExtremasAngles:r,freakPointsT:s,pyramidImagesLength:e.length}))}_computeExtremaAngles(e){return le(()=>on().runKernel("ComputeExtremaAngles",{histograms:e}))}_computeOrientationHistograms(e,t){const r=[];for(let i=1;i<t.length;i++)r.push(t[i][1]);this.tensorCaches.orientationHistograms||le(()=>{const i=-1/(2*dS*dS),a=dS*Jye,o=Math.ceil(a),l=[];for(let u=-o;u<=o;u++)for(let d=-o;d<=o;d++){const h=d*d+u*u;if(h<=a*a){const f=h*i;let m=(720+f*(720+f*(360+f*(120+f*(30+f*(6+f))))))*.0013888888;l.push([u,d,m])}}this.tensorCaches.orientationHistograms={radialPropertiesT:Pn(wn(l,[l.length,3]))}});const{radialPropertiesT:s}=this.tensorCaches.orientationHistograms;return le(()=>on().runKernel("ComputeOrientationHistograms",{gaussianImagesT:r,prunedExtremasT:e,radialPropertiesT:s,pyramidImagesLength:t.length}))}_smoothHistograms(e){return le(()=>on().runKernel("SmoothHistograms",{histograms:e}))}_computeLocalization(e,t){return le(()=>{const r=on().runKernel("ComputeLocalization",{prunedExtremasList:e,dogPyramidImagesT:t}).arraySync(),s=[];for(let a=0;a<r.length;a++){s.push([]);for(let o=0;o<r[a].length;o++)s[a].push([])}const i=[];for(let a=0;a<e.length;a++)i[a]=[e[a][0],e[a][1],e[a][2],e[a][3]];for(let a=0;a<i.length;a++){if(i[a][0]===0)continue;const o=r[a],l=.5*(o[1][2]-o[1][0]),u=.5*(o[2][1]-o[0][1]),d=o[1][2]+o[1][0]-2*o[1][1],h=o[2][1]+o[0][1]-2*o[1][1],f=.25*(o[0][0]+o[2][2]-o[0][2]-o[2][0]),m=d*h-f*f,x=(h*-l+-f*-u)/m,g=(-f*-l+d*-u)/m,y=i[a][2]+g,v=i[a][3]+x;Math.abs(m)<1e-4||(i[a][2]=y,i[a][3]=v)}return wn(i,[i.length,i[0].length],"float32")})}_applyPrune(e){const t=Pp*Pp,r=Qye,s=[],i=[];for(let o=0;o<t;o++){i.push([]),s.push([]);for(let l=0;l<r;l++)i[o].push([0,0,0,0]),s[o].push(0)}le(()=>{for(let o=0;o<e.length;o++){const l=on().runKernel("ExtremaReduction",{extremasResultT:e[o]}),u=o+1,d=l.arraySync(),h=l.shape[0],f=l.shape[1],m=f*2/Pp,x=h*2/Pp;for(let g=0;g<h;g++)for(let y=0;y<f;y++){const v=d[g][y];if(v==0)continue;const w=v%1e3,I=Math.floor(Math.abs(v)/1e3),T=y*2+(I===2||I===3?1:0),C=g*2+(I===1||I===3?1:0),E=Math.floor(T/m),L=Math.floor(C/x)*Pp+E,M=Math.abs(w);let R=r;for(;R>=1&&M>s[L][R-1];)R-=1;if(R<r){for(let z=r-1;z>=R+1;z--)s[L][z]=s[L][z-1],i[L][z][0]=i[L][z-1][0],i[L][z][1]=i[L][z-1][1],i[L][z][2]=i[L][z-1][2],i[L][z][3]=i[L][z-1][3];s[L][R]=M,i[L][R][0]=w,i[L][R][1]=u,i[L][R][2]=C,i[L][R][3]=T}}}});const a=[];for(let o=0;o<t;o++)for(let l=0;l<r;l++)a.push(i[o][l]);return a}_buildExtremas(e,t,r){return le(()=>on().runKernel("BuildExtremas",{image0:e,image1:t,image2:r}))}_differenceImageBinomial(e,t){return le(()=>e.sub(t))}_applyFilter(e){return le(()=>on().runKernel("BinomialFilter",{image:e}))}_downsampleBilinear(e){return le(()=>on().runKernel("DownsampleBilinear",{image:e}))}_compileAndRun(e,t){const r=ga().compileAndRun(e,t);return on().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}_runWebGLProgram(e,t,r){const s=ga().runWebGLProgram(e,t,r);return on().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}}class qye{constructor(e,t,r=!1){this.debugMode=r,this.width=e,this.height=t;let s=Math.min(e,t)/2,i=Math.pow(2,Math.round(Math.log(s)/Math.log(2)));this.cropSize=i,this.detector=new cG(i,i,r),this.kernelCaches={},this.lastRandomIndex=4}detect(e){const t=Math.floor(this.height/2-this.cropSize/2),r=Math.floor(this.width/2-this.cropSize/2),s=this._detect(e,r,t);return this.debugMode&&(s.debugExtra.crop={startX:r,startY:t,cropSize:this.cropSize}),s}detectMoving(e){const t=this.lastRandomIndex%3,r=Math.floor(this.lastRandomIndex/3);let s=Math.floor(this.height/2-this.cropSize+r*this.cropSize/2),i=Math.floor(this.width/2-this.cropSize+t*this.cropSize/2);return i<0&&(i=0),s<0&&(s=0),i>=this.width-this.cropSize&&(i=this.width-this.cropSize-1),s>=this.height-this.cropSize&&(s=this.height-this.cropSize-1),this.lastRandomIndex=(this.lastRandomIndex+1)%9,this._detect(e,i,s)}_detect(e,t,r){const s=e.slice([r,t],[this.cropSize,this.cropSize]),{featurePoints:i,debugExtra:a}=this.detector.detect(s);return i.forEach(o=>{o.x+=t,o.y+=r}),this.debugMode&&(a.projectedImage=s.arraySync()),s.dispose(),{featurePoints:i,debugExtra:a}}}const dG=({image:n,ratio:e})=>{const t=Math.round(n.width*e),r=Math.round(n.height*e),s=new Uint8Array(t*r);for(let i=0;i<t;i++){let a=Math.round(1*i/e),o=Math.round(1*(i+1)/e)-1;o>=n.width&&(o=n.width-1);for(let l=0;l<r;l++){let u=Math.round(1*l/e),d=Math.round(1*(l+1)/e)-1;d>=n.height&&(d=n.height-1);let h=0,f=0;for(let m=a;m<=o;m++)for(let x=u;x<=d;x++)h+=1*n.data[x*n.width+m],f+=1;s[l*t+i]=Math.floor(h/f)}}return{data:s,width:t,height:r}},e0e=100,t0e=n=>{const e=e0e/Math.min(n.width,n.height),t=[];let r=e;for(;;)if(t.push(r),r*=Math.pow(2,1/3),r>=.95){r=1;break}t.push(r),t.reverse();const s=[];for(let i=0;i<t.length;i++)n.width*t[i],n.height*t[i],s.push(Object.assign(dG({image:n,ratio:t[i]}),{scale:t[i]}));return s},n0e=n=>{const e=Math.min(n.width,n.height),t=[],r=[];t.push(256/e),t.push(128/e);for(let s=0;s<t.length;s++)r.push(Object.assign(dG({image:n,ratio:t[s]}),{scale:t[s]}));return r},r0e=n=>{const{v1:e,v2:t}=n;let r=0;for(let s=0;s<e.length;s++){let i=(e[s]^t[s])>>>0;r+=s0e(i)}return r},s0e=n=>{var e=n-(n>>1&1431655765);return e=(e>>2&858993459)+(e&858993459),e=(e>>4)+e&252645135,e=(e>>8)+e&16711935,e=(e>>16)+e&65535,e},i0e=1234,a0e=()=>({seed:i0e,arrayShuffle(n){const{arr:e,sampleSize:t}=n;for(let r=0;r<t;r++){this.seed=(214013*this.seed+2531011)%-2147483648;let s=this.seed>>16&32767;s=s%e.length;let i=e[r];e[r]=e[s],e[s]=i}},nextInt(n){this.seed=(214013*this.seed+2531011)%-2147483648;let e=this.seed>>16&32767;return e=e%n,e}}),o0e=16,l0e=128,f2=8,u0e=n=>{const{points:e,pointIndexes:t,randomizer:r}=n,s=[];for(let l=0;l<t.length;l++)s.push(l);let i=Number.MAX_SAFE_INTEGER,a=-1;const o=[];for(let l=0;l<l0e;l++){r.arrayShuffle({arr:s,sampleSize:f2});let u=0;const d=[];for(let h=0;h<t.length;h++){let f=Number.MAX_SAFE_INTEGER;for(let m=0;m<f2;m++){const x=t[s[m]],g=r0e({v1:e[t[h]].descriptors,v2:e[x].descriptors});g<f&&(d[h]=s[m],f=g)}u+=f}o.push(d),u<i&&(i=u,a=l)}return o[a]},mR=({points:n})=>{const e=[];for(let r=0;r<n.length;r++)e.push(r);const t=a0e();return{rootNode:hG({points:n,pointIndexes:e,centerPointIndex:null,randomizer:t})}},hG=n=>{const{points:e,pointIndexes:t,centerPointIndex:r,randomizer:s}=n;let i=!1;(t.length<=f2||t.length<=o0e)&&(i=!0);const a={};if(!i){const l=u0e({points:e,pointIndexes:t,randomizer:s});for(let u=0;u<l.length;u++)a[t[l[u]]]===void 0&&(a[t[l[u]]]=[]),a[t[l[u]]].push(t[u])}Object.keys(a).length===1&&(i=!0);const o={centerPointIndex:r};if(i){o.leaf=!0,o.pointIndexes=[];for(let l=0;l<t.length;l++)o.pointIndexes.push(t[l]);return o}return o.leaf=!1,o.children=[],Object.keys(a).forEach(l=>{o.children.push(hG({points:e,pointIndexes:a[l],centerPointIndex:l,randomizer:s}))}),o};var eu=4294967295;function c0e(n,e,t){var r=t/4294967296,s=t;n.setUint32(e,r),n.setUint32(e+4,s)}function pG(n,e,t){var r=Math.floor(t/4294967296),s=t;n.setUint32(e,r),n.setUint32(e+4,s)}function fG(n,e){var t=n.getInt32(e),r=n.getUint32(e+4);return t*4294967296+r}function d0e(n,e){var t=n.getUint32(e),r=n.getUint32(e+4);return t*4294967296+r}var hS,pS,fS,wv=(typeof process>"u"||((hS=process==null?void 0:z2)===null||hS===void 0?void 0:hS.TEXT_ENCODING)!=="never")&&typeof TextEncoder<"u"&&typeof TextDecoder<"u";function gR(n){for(var e=n.length,t=0,r=0;r<e;){var s=n.charCodeAt(r++);if(s&4294967168)if(!(s&4294965248))t+=2;else{if(s>=55296&&s<=56319&&r<e){var i=n.charCodeAt(r);(i&64512)===56320&&(++r,s=((s&1023)<<10)+(i&1023)+65536)}s&4294901760?t+=4:t+=3}else{t++;continue}}return t}function h0e(n,e,t){for(var r=n.length,s=t,i=0;i<r;){var a=n.charCodeAt(i++);if(a&4294967168)if(!(a&4294965248))e[s++]=a>>6&31|192;else{if(a>=55296&&a<=56319&&i<r){var o=n.charCodeAt(i);(o&64512)===56320&&(++i,a=((a&1023)<<10)+(o&1023)+65536)}a&4294901760?(e[s++]=a>>18&7|240,e[s++]=a>>12&63|128,e[s++]=a>>6&63|128):(e[s++]=a>>12&15|224,e[s++]=a>>6&63|128)}else{e[s++]=a;continue}e[s++]=a&63|128}}var B0=wv?new TextEncoder:void 0,p0e=wv?typeof process<"u"&&((pS=process==null?void 0:z2)===null||pS===void 0?void 0:pS.TEXT_ENCODING)!=="force"?200:0:eu;function f0e(n,e,t){e.set(B0.encode(n),t)}function m0e(n,e,t){B0.encodeInto(n,e.subarray(t))}var g0e=B0!=null&&B0.encodeInto?m0e:f0e,y0e=4096;function mG(n,e,t){for(var r=e,s=r+t,i=[],a="";r<s;){var o=n[r++];if(!(o&128))i.push(o);else if((o&224)===192){var l=n[r++]&63;i.push((o&31)<<6|l)}else if((o&240)===224){var l=n[r++]&63,u=n[r++]&63;i.push((o&31)<<12|l<<6|u)}else if((o&248)===240){var l=n[r++]&63,u=n[r++]&63,d=n[r++]&63,h=(o&7)<<18|l<<12|u<<6|d;h>65535&&(h-=65536,i.push(h>>>10&1023|55296),h=56320|h&1023),i.push(h)}else i.push(o);i.length>=y0e&&(a+=String.fromCharCode.apply(String,i),i.length=0)}return i.length>0&&(a+=String.fromCharCode.apply(String,i)),a}var b0e=wv?new TextDecoder:null,x0e=wv?typeof process<"u"&&((fS=process==null?void 0:z2)===null||fS===void 0?void 0:fS.TEXT_DECODER)!=="force"?200:0:eu;function v0e(n,e,t){var r=n.subarray(e,e+t);return b0e.decode(r)}var Qy=(function(){function n(e,t){this.type=e,this.data=t}return n})(),w0e=(function(){var n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,s){r.__proto__=s}||function(r,s){for(var i in s)Object.prototype.hasOwnProperty.call(s,i)&&(r[i]=s[i])},n(e,t)};return function(e,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");n(e,t);function r(){this.constructor=e}e.prototype=t===null?Object.create(t):(r.prototype=t.prototype,new r)}})(),ca=(function(n){w0e(e,n);function e(t){var r=n.call(this,t)||this,s=Object.create(e.prototype);return Object.setPrototypeOf(r,s),Object.defineProperty(r,"name",{configurable:!0,enumerable:!1,value:e.name}),r}return e})(Error),S0e=-1,T0e=4294967296-1,I0e=17179869184-1;function k0e(n){var e=n.sec,t=n.nsec;if(e>=0&&t>=0&&e<=I0e)if(t===0&&e<=T0e){var r=new Uint8Array(4),s=new DataView(r.buffer);return s.setUint32(0,e),r}else{var i=e/4294967296,a=e&4294967295,r=new Uint8Array(8),s=new DataView(r.buffer);return s.setUint32(0,t<<2|i&3),s.setUint32(4,a),r}else{var r=new Uint8Array(12),s=new DataView(r.buffer);return s.setUint32(0,t),pG(s,4,e),r}}function C0e(n){var e=n.getTime(),t=Math.floor(e/1e3),r=(e-t*1e3)*1e6,s=Math.floor(r/1e9);return{sec:t+s,nsec:r-s*1e9}}function _0e(n){if(n instanceof Date){var e=C0e(n);return k0e(e)}else return null}function M0e(n){var e=new DataView(n.buffer,n.byteOffset,n.byteLength);switch(n.byteLength){case 4:{var t=e.getUint32(0),r=0;return{sec:t,nsec:r}}case 8:{var s=e.getUint32(0),i=e.getUint32(4),t=(s&3)*4294967296+i,r=s>>>2;return{sec:t,nsec:r}}case 12:{var t=fG(e,4),r=e.getUint32(0);return{sec:t,nsec:r}}default:throw new ca("Unrecognized data size for timestamp (expected 4, 8, or 12): ".concat(n.length))}}function N0e(n){var e=M0e(n);return new Date(e.sec*1e3+e.nsec/1e6)}var E0e={type:S0e,encode:_0e,decode:N0e},gG=(function(){function n(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(E0e)}return n.prototype.register=function(e){var t=e.type,r=e.encode,s=e.decode;if(t>=0)this.encoders[t]=r,this.decoders[t]=s;else{var i=1+t;this.builtInEncoders[i]=r,this.builtInDecoders[i]=s}},n.prototype.tryToEncode=function(e,t){for(var r=0;r<this.builtInEncoders.length;r++){var s=this.builtInEncoders[r];if(s!=null){var i=s(e,t);if(i!=null){var a=-1-r;return new Qy(a,i)}}}for(var r=0;r<this.encoders.length;r++){var s=this.encoders[r];if(s!=null){var i=s(e,t);if(i!=null){var a=r;return new Qy(a,i)}}}return e instanceof Qy?e:null},n.prototype.decode=function(e,t,r){var s=t<0?this.builtInDecoders[-1-t]:this.decoders[t];return s?s(e,t,r):new Qy(t,e)},n.defaultCodec=new n,n})();function X0(n){return n instanceof Uint8Array?n:ArrayBuffer.isView(n)?new Uint8Array(n.buffer,n.byteOffset,n.byteLength):n instanceof ArrayBuffer?new Uint8Array(n):Uint8Array.from(n)}function R0e(n){if(n instanceof ArrayBuffer)return new DataView(n);var e=X0(n);return new DataView(e.buffer,e.byteOffset,e.byteLength)}var L0e=100,A0e=2048,z0e=(function(){function n(e,t,r,s,i,a,o,l){e===void 0&&(e=gG.defaultCodec),t===void 0&&(t=void 0),r===void 0&&(r=L0e),s===void 0&&(s=A0e),i===void 0&&(i=!1),a===void 0&&(a=!1),o===void 0&&(o=!1),l===void 0&&(l=!1),this.extensionCodec=e,this.context=t,this.maxDepth=r,this.initialBufferSize=s,this.sortKeys=i,this.forceFloat32=a,this.ignoreUndefined=o,this.forceIntegerToFloat=l,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return n.prototype.reinitializeState=function(){this.pos=0},n.prototype.encodeSharedRef=function(e){return this.reinitializeState(),this.doEncode(e,1),this.bytes.subarray(0,this.pos)},n.prototype.encode=function(e){return this.reinitializeState(),this.doEncode(e,1),this.bytes.slice(0,this.pos)},n.prototype.doEncode=function(e,t){if(t>this.maxDepth)throw new Error("Too deep objects in depth ".concat(t));e==null?this.encodeNil():typeof e=="boolean"?this.encodeBoolean(e):typeof e=="number"?this.encodeNumber(e):typeof e=="string"?this.encodeString(e):this.encodeObject(e,t)},n.prototype.ensureBufferSizeToWrite=function(e){var t=this.pos+e;this.view.byteLength<t&&this.resizeBuffer(t*2)},n.prototype.resizeBuffer=function(e){var t=new ArrayBuffer(e),r=new Uint8Array(t),s=new DataView(t);r.set(this.bytes),this.view=s,this.bytes=r},n.prototype.encodeNil=function(){this.writeU8(192)},n.prototype.encodeBoolean=function(e){e===!1?this.writeU8(194):this.writeU8(195)},n.prototype.encodeNumber=function(e){Number.isSafeInteger(e)&&!this.forceIntegerToFloat?e>=0?e<128?this.writeU8(e):e<256?(this.writeU8(204),this.writeU8(e)):e<65536?(this.writeU8(205),this.writeU16(e)):e<4294967296?(this.writeU8(206),this.writeU32(e)):(this.writeU8(207),this.writeU64(e)):e>=-32?this.writeU8(224|e+32):e>=-128?(this.writeU8(208),this.writeI8(e)):e>=-32768?(this.writeU8(209),this.writeI16(e)):e>=-2147483648?(this.writeU8(210),this.writeI32(e)):(this.writeU8(211),this.writeI64(e)):this.forceFloat32?(this.writeU8(202),this.writeF32(e)):(this.writeU8(203),this.writeF64(e))},n.prototype.writeStringHeader=function(e){if(e<32)this.writeU8(160+e);else if(e<256)this.writeU8(217),this.writeU8(e);else if(e<65536)this.writeU8(218),this.writeU16(e);else if(e<4294967296)this.writeU8(219),this.writeU32(e);else throw new Error("Too long string: ".concat(e," bytes in UTF-8"))},n.prototype.encodeString=function(e){var t=5,r=e.length;if(r>p0e){var s=gR(e);this.ensureBufferSizeToWrite(t+s),this.writeStringHeader(s),g0e(e,this.bytes,this.pos),this.pos+=s}else{var s=gR(e);this.ensureBufferSizeToWrite(t+s),this.writeStringHeader(s),h0e(e,this.bytes,this.pos),this.pos+=s}},n.prototype.encodeObject=function(e,t){var r=this.extensionCodec.tryToEncode(e,this.context);if(r!=null)this.encodeExtension(r);else if(Array.isArray(e))this.encodeArray(e,t);else if(ArrayBuffer.isView(e))this.encodeBinary(e);else if(typeof e=="object")this.encodeMap(e,t);else throw new Error("Unrecognized object: ".concat(Object.prototype.toString.apply(e)))},n.prototype.encodeBinary=function(e){var t=e.byteLength;if(t<256)this.writeU8(196),this.writeU8(t);else if(t<65536)this.writeU8(197),this.writeU16(t);else if(t<4294967296)this.writeU8(198),this.writeU32(t);else throw new Error("Too large binary: ".concat(t));var r=X0(e);this.writeU8a(r)},n.prototype.encodeArray=function(e,t){var r=e.length;if(r<16)this.writeU8(144+r);else if(r<65536)this.writeU8(220),this.writeU16(r);else if(r<4294967296)this.writeU8(221),this.writeU32(r);else throw new Error("Too large array: ".concat(r));for(var s=0,i=e;s<i.length;s++){var a=i[s];this.doEncode(a,t+1)}},n.prototype.countWithoutUndefined=function(e,t){for(var r=0,s=0,i=t;s<i.length;s++){var a=i[s];e[a]!==void 0&&r++}return r},n.prototype.encodeMap=function(e,t){var r=Object.keys(e);this.sortKeys&&r.sort();var s=this.ignoreUndefined?this.countWithoutUndefined(e,r):r.length;if(s<16)this.writeU8(128+s);else if(s<65536)this.writeU8(222),this.writeU16(s);else if(s<4294967296)this.writeU8(223),this.writeU32(s);else throw new Error("Too large map object: ".concat(s));for(var i=0,a=r;i<a.length;i++){var o=a[i],l=e[o];this.ignoreUndefined&&l===void 0||(this.encodeString(o),this.doEncode(l,t+1))}},n.prototype.encodeExtension=function(e){var t=e.data.length;if(t===1)this.writeU8(212);else if(t===2)this.writeU8(213);else if(t===4)this.writeU8(214);else if(t===8)this.writeU8(215);else if(t===16)this.writeU8(216);else if(t<256)this.writeU8(199),this.writeU8(t);else if(t<65536)this.writeU8(200),this.writeU16(t);else if(t<4294967296)this.writeU8(201),this.writeU32(t);else throw new Error("Too large extension object: ".concat(t));this.writeI8(e.type),this.writeU8a(e.data)},n.prototype.writeU8=function(e){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,e),this.pos++},n.prototype.writeU8a=function(e){var t=e.length;this.ensureBufferSizeToWrite(t),this.bytes.set(e,this.pos),this.pos+=t},n.prototype.writeI8=function(e){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,e),this.pos++},n.prototype.writeU16=function(e){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,e),this.pos+=2},n.prototype.writeI16=function(e){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,e),this.pos+=2},n.prototype.writeU32=function(e){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,e),this.pos+=4},n.prototype.writeI32=function(e){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,e),this.pos+=4},n.prototype.writeF32=function(e){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,e),this.pos+=4},n.prototype.writeF64=function(e){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,e),this.pos+=8},n.prototype.writeU64=function(e){this.ensureBufferSizeToWrite(8),c0e(this.view,this.pos,e),this.pos+=8},n.prototype.writeI64=function(e){this.ensureBufferSizeToWrite(8),pG(this.view,this.pos,e),this.pos+=8},n})(),D0e={};function P0e(n,e){e===void 0&&(e=D0e);var t=new z0e(e.extensionCodec,e.context,e.maxDepth,e.initialBufferSize,e.sortKeys,e.forceFloat32,e.ignoreUndefined,e.forceIntegerToFloat);return t.encodeSharedRef(n)}function mS(n){return"".concat(n<0?"-":"","0x").concat(Math.abs(n).toString(16).padStart(2,"0"))}var F0e=16,G0e=16,O0e=(function(){function n(e,t){e===void 0&&(e=F0e),t===void 0&&(t=G0e),this.maxKeyLength=e,this.maxLengthPerKey=t,this.hit=0,this.miss=0,this.caches=[];for(var r=0;r<this.maxKeyLength;r++)this.caches.push([])}return n.prototype.canBeCached=function(e){return e>0&&e<=this.maxKeyLength},n.prototype.find=function(e,t,r){var s=this.caches[r-1];e:for(var i=0,a=s;i<a.length;i++){for(var o=a[i],l=o.bytes,u=0;u<r;u++)if(l[u]!==e[t+u])continue e;return o.str}return null},n.prototype.store=function(e,t){var r=this.caches[e.length-1],s={bytes:e,str:t};r.length>=this.maxLengthPerKey?r[Math.random()*r.length|0]=s:r.push(s)},n.prototype.decode=function(e,t,r){var s=this.find(e,t,r);if(s!=null)return this.hit++,s;this.miss++;var i=mG(e,t,r),a=Uint8Array.prototype.slice.call(e,t,t+r);return this.store(a,i),i},n})(),W0e=function(n,e,t,r){function s(i){return i instanceof t?i:new t(function(a){a(i)})}return new(t||(t=Promise))(function(i,a){function o(d){try{u(r.next(d))}catch(h){a(h)}}function l(d){try{u(r.throw(d))}catch(h){a(h)}}function u(d){d.done?i(d.value):s(d.value).then(o,l)}u((r=r.apply(n,[])).next())})},gS=function(n,e){var t={label:0,sent:function(){if(i[0]&1)throw i[1];return i[1]},trys:[],ops:[]},r,s,i,a;return a={next:o(0),throw:o(1),return:o(2)},typeof Symbol=="function"&&(a[Symbol.iterator]=function(){return this}),a;function o(u){return function(d){return l([u,d])}}function l(u){if(r)throw new TypeError("Generator is already executing.");for(;t;)try{if(r=1,s&&(i=u[0]&2?s.return:u[0]?s.throw||((i=s.return)&&i.call(s),0):s.next)&&!(i=i.call(s,u[1])).done)return i;switch(s=0,i&&(u=[u[0]&2,i.value]),u[0]){case 0:case 1:i=u;break;case 4:return t.label++,{value:u[1],done:!1};case 5:t.label++,s=u[1],u=[0];continue;case 7:u=t.ops.pop(),t.trys.pop();continue;default:if(i=t.trys,!(i=i.length>0&&i[i.length-1])&&(u[0]===6||u[0]===2)){t=0;continue}if(u[0]===3&&(!i||u[1]>i[0]&&u[1]<i[3])){t.label=u[1];break}if(u[0]===6&&t.label<i[1]){t.label=i[1],i=u;break}if(i&&t.label<i[2]){t.label=i[2],t.ops.push(u);break}i[2]&&t.ops.pop(),t.trys.pop();continue}u=e.call(n,t)}catch(d){u=[6,d],s=0}finally{r=i=0}if(u[0]&5)throw u[1];return{value:u[0]?u[1]:void 0,done:!0}}},yR=function(n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var e=n[Symbol.asyncIterator],t;return e?e.call(n):(n=typeof __values=="function"?__values(n):n[Symbol.iterator](),t={},r("next"),r("throw"),r("return"),t[Symbol.asyncIterator]=function(){return this},t);function r(i){t[i]=n[i]&&function(a){return new Promise(function(o,l){a=n[i](a),s(o,l,a.done,a.value)})}}function s(i,a,o,l){Promise.resolve(l).then(function(u){i({value:u,done:o})},a)}},td=function(n){return this instanceof td?(this.v=n,this):new td(n)},V0e=function(n,e,t){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r=t.apply(n,e||[]),s,i=[];return s={},a("next"),a("throw"),a("return"),s[Symbol.asyncIterator]=function(){return this},s;function a(f){r[f]&&(s[f]=function(m){return new Promise(function(x,g){i.push([f,m,x,g])>1||o(f,m)})})}function o(f,m){try{l(r[f](m))}catch(x){h(i[0][3],x)}}function l(f){f.value instanceof td?Promise.resolve(f.value.v).then(u,d):h(i[0][2],f)}function u(f){o("next",f)}function d(f){o("throw",f)}function h(f,m){f(m),i.shift(),i.length&&o(i[0][0],i[0][1])}},$0e=function(n){var e=typeof n;return e==="string"||e==="number"},Fp=-1,RC=new DataView(new ArrayBuffer(0)),B0e=new Uint8Array(RC.buffer),m2=(function(){try{RC.getInt8(0)}catch(n){return n.constructor}throw new Error("never reached")})(),bR=new m2("Insufficient data"),X0e=new O0e,U0e=(function(){function n(e,t,r,s,i,a,o,l){e===void 0&&(e=gG.defaultCodec),t===void 0&&(t=void 0),r===void 0&&(r=eu),s===void 0&&(s=eu),i===void 0&&(i=eu),a===void 0&&(a=eu),o===void 0&&(o=eu),l===void 0&&(l=X0e),this.extensionCodec=e,this.context=t,this.maxStrLength=r,this.maxBinLength=s,this.maxArrayLength=i,this.maxMapLength=a,this.maxExtLength=o,this.keyDecoder=l,this.totalPos=0,this.pos=0,this.view=RC,this.bytes=B0e,this.headByte=Fp,this.stack=[]}return n.prototype.reinitializeState=function(){this.totalPos=0,this.headByte=Fp,this.stack.length=0},n.prototype.setBuffer=function(e){this.bytes=X0(e),this.view=R0e(this.bytes),this.pos=0},n.prototype.appendBuffer=function(e){if(this.headByte===Fp&&!this.hasRemaining(1))this.setBuffer(e);else{var t=this.bytes.subarray(this.pos),r=X0(e),s=new Uint8Array(t.length+r.length);s.set(t),s.set(r,t.length),this.setBuffer(s)}},n.prototype.hasRemaining=function(e){return this.view.byteLength-this.pos>=e},n.prototype.createExtraByteError=function(e){var t=this,r=t.view,s=t.pos;return new RangeError("Extra ".concat(r.byteLength-s," of ").concat(r.byteLength," byte(s) found at buffer[").concat(e,"]"))},n.prototype.decode=function(e){this.reinitializeState(),this.setBuffer(e);var t=this.doDecodeSync();if(this.hasRemaining(1))throw this.createExtraByteError(this.pos);return t},n.prototype.decodeMulti=function(e){return gS(this,function(t){switch(t.label){case 0:this.reinitializeState(),this.setBuffer(e),t.label=1;case 1:return this.hasRemaining(1)?[4,this.doDecodeSync()]:[3,3];case 2:return t.sent(),[3,1];case 3:return[2]}})},n.prototype.decodeAsync=function(e){var t,r,s,i;return W0e(this,void 0,void 0,function(){var a,o,l,u,d,h,f,m;return gS(this,function(x){switch(x.label){case 0:a=!1,x.label=1;case 1:x.trys.push([1,6,7,12]),t=yR(e),x.label=2;case 2:return[4,t.next()];case 3:if(r=x.sent(),!!r.done)return[3,5];if(l=r.value,a)throw this.createExtraByteError(this.totalPos);this.appendBuffer(l);try{o=this.doDecodeSync(),a=!0}catch(g){if(!(g instanceof m2))throw g}this.totalPos+=this.pos,x.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return u=x.sent(),s={error:u},[3,12];case 7:return x.trys.push([7,,10,11]),r&&!r.done&&(i=t.return)?[4,i.call(t)]:[3,9];case 8:x.sent(),x.label=9;case 9:return[3,11];case 10:if(s)throw s.error;return[7];case 11:return[7];case 12:if(a){if(this.hasRemaining(1))throw this.createExtraByteError(this.totalPos);return[2,o]}throw d=this,h=d.headByte,f=d.pos,m=d.totalPos,new RangeError("Insufficient data in parsing ".concat(mS(h)," at ").concat(m," (").concat(f," in the current buffer)"))}})})},n.prototype.decodeArrayStream=function(e){return this.decodeMultiAsync(e,!0)},n.prototype.decodeStream=function(e){return this.decodeMultiAsync(e,!1)},n.prototype.decodeMultiAsync=function(e,t){return V0e(this,arguments,function(){var r,s,i,a,o,l,u,d,h;return gS(this,function(f){switch(f.label){case 0:r=t,s=-1,f.label=1;case 1:f.trys.push([1,13,14,19]),i=yR(e),f.label=2;case 2:return[4,td(i.next())];case 3:if(a=f.sent(),!!a.done)return[3,12];if(o=a.value,t&&s===0)throw this.createExtraByteError(this.totalPos);this.appendBuffer(o),r&&(s=this.readArraySize(),r=!1,this.complete()),f.label=4;case 4:f.trys.push([4,9,,10]),f.label=5;case 5:return[4,td(this.doDecodeSync())];case 6:return[4,f.sent()];case 7:return f.sent(),--s===0?[3,8]:[3,5];case 8:return[3,10];case 9:if(l=f.sent(),!(l instanceof m2))throw l;return[3,10];case 10:this.totalPos+=this.pos,f.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return u=f.sent(),d={error:u},[3,19];case 14:return f.trys.push([14,,17,18]),a&&!a.done&&(h=i.return)?[4,td(h.call(i))]:[3,16];case 15:f.sent(),f.label=16;case 16:return[3,18];case 17:if(d)throw d.error;return[7];case 18:return[7];case 19:return[2]}})})},n.prototype.doDecodeSync=function(){e:for(;;){var e=this.readHeadByte(),t=void 0;if(e>=224)t=e-256;else if(e<192)if(e<128)t=e;else if(e<144){var r=e-128;if(r!==0){this.pushMapState(r),this.complete();continue e}else t={}}else if(e<160){var r=e-144;if(r!==0){this.pushArrayState(r),this.complete();continue e}else t=[]}else{var s=e-160;t=this.decodeUtf8String(s,0)}else if(e===192)t=null;else if(e===194)t=!1;else if(e===195)t=!0;else if(e===202)t=this.readF32();else if(e===203)t=this.readF64();else if(e===204)t=this.readU8();else if(e===205)t=this.readU16();else if(e===206)t=this.readU32();else if(e===207)t=this.readU64();else if(e===208)t=this.readI8();else if(e===209)t=this.readI16();else if(e===210)t=this.readI32();else if(e===211)t=this.readI64();else if(e===217){var s=this.lookU8();t=this.decodeUtf8String(s,1)}else if(e===218){var s=this.lookU16();t=this.decodeUtf8String(s,2)}else if(e===219){var s=this.lookU32();t=this.decodeUtf8String(s,4)}else if(e===220){var r=this.readU16();if(r!==0){this.pushArrayState(r),this.complete();continue e}else t=[]}else if(e===221){var r=this.readU32();if(r!==0){this.pushArrayState(r),this.complete();continue e}else t=[]}else if(e===222){var r=this.readU16();if(r!==0){this.pushMapState(r),this.complete();continue e}else t={}}else if(e===223){var r=this.readU32();if(r!==0){this.pushMapState(r),this.complete();continue e}else t={}}else if(e===196){var r=this.lookU8();t=this.decodeBinary(r,1)}else if(e===197){var r=this.lookU16();t=this.decodeBinary(r,2)}else if(e===198){var r=this.lookU32();t=this.decodeBinary(r,4)}else if(e===212)t=this.decodeExtension(1,0);else if(e===213)t=this.decodeExtension(2,0);else if(e===214)t=this.decodeExtension(4,0);else if(e===215)t=this.decodeExtension(8,0);else if(e===216)t=this.decodeExtension(16,0);else if(e===199){var r=this.lookU8();t=this.decodeExtension(r,1)}else if(e===200){var r=this.lookU16();t=this.decodeExtension(r,2)}else if(e===201){var r=this.lookU32();t=this.decodeExtension(r,4)}else throw new ca("Unrecognized type byte: ".concat(mS(e)));this.complete();for(var i=this.stack;i.length>0;){var a=i[i.length-1];if(a.type===0)if(a.array[a.position]=t,a.position++,a.position===a.size)i.pop(),t=a.array;else continue e;else if(a.type===1){if(!$0e(t))throw new ca("The type of key must be string or number but "+typeof t);if(t==="__proto__")throw new ca("The key __proto__ is not allowed");a.key=t,a.type=2;continue e}else if(a.map[a.key]=t,a.readCount++,a.readCount===a.size)i.pop(),t=a.map;else{a.key=null,a.type=1;continue e}}return t}},n.prototype.readHeadByte=function(){return this.headByte===Fp&&(this.headByte=this.readU8()),this.headByte},n.prototype.complete=function(){this.headByte=Fp},n.prototype.readArraySize=function(){var e=this.readHeadByte();switch(e){case 220:return this.readU16();case 221:return this.readU32();default:{if(e<160)return e-144;throw new ca("Unrecognized array type byte: ".concat(mS(e)))}}},n.prototype.pushMapState=function(e){if(e>this.maxMapLength)throw new ca("Max length exceeded: map length (".concat(e,") > maxMapLengthLength (").concat(this.maxMapLength,")"));this.stack.push({type:1,size:e,key:null,readCount:0,map:{}})},n.prototype.pushArrayState=function(e){if(e>this.maxArrayLength)throw new ca("Max length exceeded: array length (".concat(e,") > maxArrayLength (").concat(this.maxArrayLength,")"));this.stack.push({type:0,size:e,array:new Array(e),position:0})},n.prototype.decodeUtf8String=function(e,t){var r;if(e>this.maxStrLength)throw new ca("Max length exceeded: UTF-8 byte length (".concat(e,") > maxStrLength (").concat(this.maxStrLength,")"));if(this.bytes.byteLength<this.pos+t+e)throw bR;var s=this.pos+t,i;return this.stateIsMapKey()&&!((r=this.keyDecoder)===null||r===void 0)&&r.canBeCached(e)?i=this.keyDecoder.decode(this.bytes,s,e):e>x0e?i=v0e(this.bytes,s,e):i=mG(this.bytes,s,e),this.pos+=t+e,i},n.prototype.stateIsMapKey=function(){if(this.stack.length>0){var e=this.stack[this.stack.length-1];return e.type===1}return!1},n.prototype.decodeBinary=function(e,t){if(e>this.maxBinLength)throw new ca("Max length exceeded: bin length (".concat(e,") > maxBinLength (").concat(this.maxBinLength,")"));if(!this.hasRemaining(e+t))throw bR;var r=this.pos+t,s=this.bytes.subarray(r,r+e);return this.pos+=t+e,s},n.prototype.decodeExtension=function(e,t){if(e>this.maxExtLength)throw new ca("Max length exceeded: ext length (".concat(e,") > maxExtLength (").concat(this.maxExtLength,")"));var r=this.view.getInt8(this.pos+t),s=this.decodeBinary(e,t+1);return this.extensionCodec.decode(s,r,this.context)},n.prototype.lookU8=function(){return this.view.getUint8(this.pos)},n.prototype.lookU16=function(){return this.view.getUint16(this.pos)},n.prototype.lookU32=function(){return this.view.getUint32(this.pos)},n.prototype.readU8=function(){var e=this.view.getUint8(this.pos);return this.pos++,e},n.prototype.readI8=function(){var e=this.view.getInt8(this.pos);return this.pos++,e},n.prototype.readU16=function(){var e=this.view.getUint16(this.pos);return this.pos+=2,e},n.prototype.readI16=function(){var e=this.view.getInt16(this.pos);return this.pos+=2,e},n.prototype.readU32=function(){var e=this.view.getUint32(this.pos);return this.pos+=4,e},n.prototype.readI32=function(){var e=this.view.getInt32(this.pos);return this.pos+=4,e},n.prototype.readU64=function(){var e=d0e(this.view,this.pos);return this.pos+=8,e},n.prototype.readI64=function(){var e=fG(this.view,this.pos);return this.pos+=8,e},n.prototype.readF32=function(){var e=this.view.getFloat32(this.pos);return this.pos+=4,e},n.prototype.readF64=function(){var e=this.view.getFloat64(this.pos);return this.pos+=8,e},n})(),Z0e={};function H0e(n,e){e===void 0&&(e=Z0e);var t=new U0e(e.extensionCodec,e.context,e.maxStrLength,e.maxBinLength,e.maxArrayLength,e.maxMapLength,e.maxExtLength);return t.decode(n)}const xR=2;class K0e{constructor(){this.data=null}compileImageTargets(e,t){return new Promise(async(r,s)=>{const i=[];for(let u=0;u<e.length;u++){const d=e[u],h=this.createProcessCanvas(d).getContext("2d");h.drawImage(d,0,0,d.width,d.height);const f=h.getImageData(0,0,d.width,d.height),m=new Uint8Array(d.width*d.height);for(let g=0;g<m.length;g++){const y=g*4;m[g]=Math.floor((f.data[y]+f.data[y+1]+f.data[y+2])/3)}const x={data:m,height:d.height,width:d.width};i.push(x)}const a=50/i.length;let o=0;this.data=[];for(let u=0;u<i.length;u++){const d=i[u],h=t0e(d),f=a/h.length,m=await Y0e(h,()=>{o+=f,t(o)});this.data.push({targetImage:d,imageList:h,matchingData:m})}for(let u=0;u<i.length;u++){const d=n0e(i[u]);this.data[u].trackingImageList=d}const l=await this.compileTrack({progressCallback:t,targetImages:i,basePercent:50});for(let u=0;u<i.length;u++)this.data[u].trackingData=l[u];r(this.data)})}exportData(){const e=[];for(let t=0;t<this.data.length;t++)e.push({targetImage:{width:this.data[t].targetImage.width,height:this.data[t].targetImage.height},trackingData:this.data[t].trackingData,matchingData:this.data[t].matchingData});return P0e({v:xR,dataList:e})}importData(e){const t=H0e(new Uint8Array(e));if(!t.v||t.v!==xR)return console.error("Your compiled .mind might be outdated. Please recompile"),[];const{dataList:r}=t;this.data=[];for(let s=0;s<r.length;s++)this.data.push({targetImage:r[s].targetImage,trackingData:r[s].trackingData,matchingData:r[s].matchingData});return this.data}createProcessCanvas(e){console.warn("missing createProcessCanvas implementation")}compileTrack({progressCallback:e,targetImages:t,basePercent:r}){console.warn("missing compileTrack implementation")}}const Y0e=async(n,e)=>{const t=[];for(let r=0;r<n.length;r++){const s=n[r],i=new cG(s.width,s.height);await Ym(),le(()=>{const a=wn(s.data,[s.data.length],"float32").reshape([s.height,s.width]),{featurePoints:o}=i.detect(a),l=o.filter(f=>f.maxima),u=o.filter(f=>!f.maxima),d=mR({points:l}),h=mR({points:u});t.push({maximaPoints:l,minimaPoints:u,maximaPointsCluster:d,minimaPointsCluster:h,width:s.width,height:s.height,scale:s.scale}),e(r)})}return t},yG="KGZ1bmN0aW9uKCl7InVzZSBzdHJpY3QiO2NsYXNzIHp7Y29uc3RydWN0b3Iocyx0LG8pe3RoaXMuY3Vtc3VtPVtdO2ZvcihsZXQgZT0wO2U8bztlKyspe3RoaXMuY3Vtc3VtLnB1c2goW10pO2ZvcihsZXQgbj0wO248dDtuKyspdGhpcy5jdW1zdW1bZV0ucHVzaCgwKX10aGlzLmN1bXN1bVswXVswXT1zWzBdO2ZvcihsZXQgZT0xO2U8dDtlKyspdGhpcy5jdW1zdW1bMF1bZV09dGhpcy5jdW1zdW1bMF1bZS0xXStzW2VdO2ZvcihsZXQgZT0xO2U8bztlKyspdGhpcy5jdW1zdW1bZV1bMF09dGhpcy5jdW1zdW1bZS0xXVswXStzW2UqdF07Zm9yKGxldCBlPTE7ZTxvO2UrKylmb3IobGV0IG49MTtuPHQ7bisrKXRoaXMuY3Vtc3VtW2VdW25dPXNbZSp0K25dK3RoaXMuY3Vtc3VtW2UtMV1bbl0rdGhpcy5jdW1zdW1bZV1bbi0xXS10aGlzLmN1bXN1bVtlLTFdW24tMV19cXVlcnkocyx0LG8sZSl7bGV0IG49dGhpcy5jdW1zdW1bZV1bb107cmV0dXJuIHQ+MCYmKG4tPXRoaXMuY3Vtc3VtW3QtMV1bb10pLHM+MCYmKG4tPXRoaXMuY3Vtc3VtW2VdW3MtMV0pLHM+MCYmdD4wJiYobis9dGhpcy5jdW1zdW1bdC0xXVtzLTFdKSxufX1jb25zdCBDPTEwLGI9MixNPTYsRj01LEk9Ljk1LEw9LjksTz0uMixaPTgsTj0yNCoyLzMsVT1yPT57Y29uc3R7ZGF0YTpzLHdpZHRoOnQsaGVpZ2h0Om8sc2NhbGU6ZX09cixuPVt0Km9dO2ZvcihsZXQgaT0wO2k8bi5sZW5ndGg7aSsrKW5baV09ITE7Y29uc3QgYT1uZXcgRmxvYXQzMkFycmF5KHMubGVuZ3RoKTtmb3IobGV0IGk9MDtpPHQ7aSsrKWFbaV09LTEsYVt0KihvLTEpK2ldPS0xO2ZvcihsZXQgaT0wO2k8bztpKyspYVtpKnRdPS0xLGFbaSp0K3QtMV09LTE7Zm9yKGxldCBpPTE7aTx0LTE7aSsrKWZvcihsZXQgcD0xO3A8by0xO3ArKyl7bGV0IGY9aSt0KnAsaD0wLGM9MDtmb3IobGV0IHU9LTE7dTw9MTt1KyspaCs9c1tmK3QqdSsxXS1zW2YrdCp1LTFdLGMrPXNbZit0K3VdLXNbZi10K3VdO2gvPTMqMjU2LGMvPTMqMjU2LGFbZl09TWF0aC5zcXJ0KChoKmgrYypjKS8yKX1jb25zdCBnPW5ldyBVaW50MzJBcnJheSgxZTMpO2ZvcihsZXQgaT0wO2k8MWUzO2krKylnW2ldPTA7Y29uc3QgZD1bLTEsMSwtdCx0XTtmb3IobGV0IGk9MTtpPHQtMTtpKyspZm9yKGxldCBwPTE7cDxvLTE7cCsrKXtsZXQgZj1pK3QqcCxoPSEwO2ZvcihsZXQgYz0wO2M8ZC5sZW5ndGg7YysrKWlmKGFbZl08PWFbZitkW2NdXSl7aD0hMTticmVha31pZihoKXtsZXQgYz1NYXRoLmZsb29yKGFbZl0qMWUzKTtjPjk5OSYmKGM9OTk5KSxjPDAmJihjPTApLGdbY10rPTEsbltmXT0hMH19Y29uc3Qgdz0uMDIqdCpvO2xldCBqPTk5OSxFPTA7Zm9yKDtqPj0wJiYoRSs9Z1tqXSwhKEU+dykpOylqLS07Zm9yKGxldCBpPTA7aTxuLmxlbmd0aDtpKyspbltpXSYmYVtpXSoxZTM8aiYmKG5baV09ITEpO2NvbnN0IGw9W107Zm9yKGxldCBpPTA7aTxzLmxlbmd0aDtpKyspbFtpXT1zW2ldKnNbaV07Y29uc3QgUz1uZXcgeihzLHQsbyksRD1uZXcgeihsLHQsbyksaz1uZXcgRmxvYXQzMkFycmF5KHMubGVuZ3RoKTtmb3IobGV0IGk9MDtpPHQ7aSsrKWZvcihsZXQgcD0wO3A8bztwKyspe2NvbnN0IGY9cCp0K2k7aWYoIW5bZl0pe2tbZl09MTtjb250aW51ZX1jb25zdCBoPVAoe2ltYWdlOnIsY3g6aSxjeTpwLHNkVGhyZXNoOkYsaW1hZ2VEYXRhQ3Vtc3VtOlMsaW1hZ2VEYXRhU3FyQ3Vtc3VtOkR9KTtpZihoPT09bnVsbCl7a1tmXT0xO2NvbnRpbnVlfWxldCBjPS0xO2ZvcihsZXQgdT0tQzt1PD1DO3UrKyl7Zm9yKGxldCBtPS1DO208PUM7bSsrKXtpZihtKm0rdSp1PD1iKmIpY29udGludWU7Y29uc3QgeD1SKHtpbWFnZTpyLGN4OmkrbSxjeTpwK3UsdmxlbjpoLHR4OmksdHk6cCxpbWFnZURhdGFDdW1zdW06UyxpbWFnZURhdGFTcXJDdW1zdW06RH0pO2lmKHghPT1udWxsJiZ4PmMmJihjPXgsYz5JKSlicmVha31pZihjPkkpYnJlYWt9a1tmXT1jfXJldHVybiBWKHtpbWFnZTpyLGZlYXR1cmVNYXA6ayx0ZW1wbGF0ZVNpemU6TSxzZWFyY2hTaXplOmIsb2NjU2l6ZTpOLG1heFNpbVRocmVzaDpMLG1pblNpbVRocmVzaDpPLHNkVGhyZXNoOlosaW1hZ2VEYXRhQ3Vtc3VtOlMsaW1hZ2VEYXRhU3FyQ3Vtc3VtOkR9KX0sVj1yPT57bGV0e2ltYWdlOnMsZmVhdHVyZU1hcDp0LHRlbXBsYXRlU2l6ZTpvLHNlYXJjaFNpemU6ZSxvY2NTaXplOm4sbWF4U2ltVGhyZXNoOmEsbWluU2ltVGhyZXNoOmcsc2RUaHJlc2g6ZCxpbWFnZURhdGFDdW1zdW06dyxpbWFnZURhdGFTcXJDdW1zdW06an09cjtjb25zdHtkYXRhOkUsd2lkdGg6bCxoZWlnaHQ6UyxzY2FsZTpEfT1zO249TWF0aC5mbG9vcihNYXRoLm1pbihzLndpZHRoLHMuaGVpZ2h0KS8xMCk7Y29uc3Qgaz0obyoyKzEpKjMsQT1NYXRoLmZsb29yKGwvayksaT1NYXRoLmZsb29yKFMvayk7bGV0IHA9TWF0aC5mbG9vcihsL24pKk1hdGguZmxvb3IoUy9uKStBKmk7Y29uc3QgZj1bXSxoPW5ldyBGbG9hdDMyQXJyYXkoRS5sZW5ndGgpO2ZvcihsZXQgdT0wO3U8aC5sZW5ndGg7dSsrKWhbdV09dFt1XTtsZXQgYz0wO2Zvcig7YzxwOyl7bGV0IHU9YSxtPS0xLHg9LTE7Zm9yKGxldCB5PTA7eTxTO3krKylmb3IobGV0IFQ9MDtUPGw7VCsrKWhbeSpsK1RdPHUmJih1PWhbeSpsK1RdLG09VCx4PXkpO2lmKG09PT0tMSlicmVhaztjb25zdCB2PVAoe2ltYWdlOnMsY3g6bSxjeTp4LHNkVGhyZXNoOjAsaW1hZ2VEYXRhQ3Vtc3VtOncsaW1hZ2VEYXRhU3FyQ3Vtc3VtOmp9KTtpZih2PT09bnVsbCl7aFt4KmwrbV09MTtjb250aW51ZX1pZih2LyhvKjIrMSk8ZCl7aFt4KmwrbV09MTtjb250aW51ZX1sZXQgcT0xLF89LTE7Zm9yKGxldCB5PS1lO3k8PWU7eSsrKXtmb3IobGV0IFQ9LWU7VDw9ZTtUKyspe2lmKFQqVCt5Knk+ZSplfHxUPT09MCYmeT09PTApY29udGludWU7Y29uc3QgSD1SKHtpbWFnZTpzLHZsZW46dixjeDptK1QsY3k6eCt5LHR4Om0sdHk6eCxpbWFnZURhdGFDdW1zdW06dyxpbWFnZURhdGFTcXJDdW1zdW06an0pO2lmKEghPT1udWxsJiYoSDxxJiYocT1ILHE8ZyYmcTx1KXx8SD5fJiYoXz1ILF8+Ljk5KSkpYnJlYWt9aWYocTxnJiZxPHV8fF8+Ljk5KWJyZWFrfWlmKHE8ZyYmcTx1fHxfPi45OSl7aFt4KmwrbV09MTtjb250aW51ZX1mLnB1c2goe3g6bSx5Onh9KSxjKz0xO2ZvcihsZXQgeT0tbjt5PD1uO3krKylmb3IobGV0IFQ9LW47VDw9bjtUKyspeCt5PDB8fHgreT49U3x8bStUPDB8fG0rVD49bHx8KGhbKHgreSkqbCsobStUKV09MSl9cmV0dXJuIGZ9LFA9KHtpbWFnZTpyLGN4OnMsY3k6dCxzZFRocmVzaDpvLGltYWdlRGF0YUN1bXN1bTplLGltYWdlRGF0YVNxckN1bXN1bTpufSk9PntpZihzLU08MHx8cytNPj1yLndpZHRofHx0LU08MHx8dCtNPj1yLmhlaWdodClyZXR1cm4gbnVsbDtjb25zdCBhPTIqTSsxLGc9YSphO2xldCBkPWUucXVlcnkocy1NLHQtTSxzK00sdCtNKTtkLz1nO2xldCB3PW4ucXVlcnkocy1NLHQtTSxzK00sdCtNKTtyZXR1cm4gdy09MipkKmUucXVlcnkocy1NLHQtTSxzK00sdCtNKSx3Kz1nKmQqZCx3L2c8bypvP251bGw6KHc9TWF0aC5zcXJ0KHcpLHcpfSxSPXI9Pntjb25zdHtpbWFnZTpzLGN4OnQsY3k6byx2bGVuOmUsdHg6bix0eTphLGltYWdlRGF0YUN1bXN1bTpnLGltYWdlRGF0YVNxckN1bXN1bTpkfT1yLHtkYXRhOncsd2lkdGg6aixoZWlnaHQ6RX09cyxsPU07aWYodC1sPDB8fHQrbD49anx8by1sPDB8fG8rbD49RSlyZXR1cm4gbnVsbDtjb25zdCBTPTIqbCsxO2xldCBEPWcucXVlcnkodC1sLG8tbCx0K2wsbytsKSxrPWQucXVlcnkodC1sLG8tbCx0K2wsbytsKSxBPTAsaT0oby1sKSpqKyh0LWwpLHA9KGEtbCkqaisobi1sKSxmPWotUztmb3IobGV0IG09MDttPFM7bSsrKXtmb3IobGV0IHg9MDt4PFM7eCsrKUErPXdbaV0qd1twXSxpKz0xLHArPTE7aSs9ZixwKz1mfWxldCBoPWcucXVlcnkobi1sLGEtbCxuK2wsYStsKTtoLz1TKlMsQS09aCpEO2xldCBjPWstRCpELyhTKlMpO3JldHVybiBjPT0wP251bGw6KGM9TWF0aC5zcXJ0KGMpLDEqQS8oZSpjKSl9LFc9KHIscyk9Pntjb25zdCB0PVtdO2ZvcihsZXQgbz0wO288ci5sZW5ndGg7bysrKXtjb25zdCBlPXJbb10sbj1VKGUpLGE9e2RhdGE6ZS5kYXRhLHNjYWxlOmUuc2NhbGUsd2lkdGg6ZS53aWR0aCxoZWlnaHQ6ZS5oZWlnaHQscG9pbnRzOm59O3QucHVzaChhKSxzKG8pfXJldHVybiB0fSxYPSh7aW1hZ2U6cixyYXRpbzpzfSk9Pntjb25zdCB0PU1hdGgucm91bmQoci53aWR0aCpzKSxvPU1hdGgucm91bmQoci5oZWlnaHQqcyksZT1uZXcgVWludDhBcnJheSh0Km8pO2ZvcihsZXQgbj0wO248dDtuKyspe2xldCBhPU1hdGgucm91bmQoMSpuL3MpLGc9TWF0aC5yb3VuZCgxKihuKzEpL3MpLTE7Zz49ci53aWR0aCYmKGc9ci53aWR0aC0xKTtmb3IobGV0IGQ9MDtkPG87ZCsrKXtsZXQgdz1NYXRoLnJvdW5kKDEqZC9zKSxqPU1hdGgucm91bmQoMSooZCsxKS9zKS0xO2o+PXIuaGVpZ2h0JiYoaj1yLmhlaWdodC0xKTtsZXQgRT0wLGw9MDtmb3IobGV0IFM9YTtTPD1nO1MrKylmb3IobGV0IEQ9dztEPD1qO0QrKylFKz0xKnIuZGF0YVtEKnIud2lkdGgrU10sbCs9MTtlW2QqdCtuXT1NYXRoLmZsb29yKEUvbCl9fXJldHVybntkYXRhOmUsd2lkdGg6dCxoZWlnaHQ6b319LFk9cj0+e2NvbnN0IHM9TWF0aC5taW4oci53aWR0aCxyLmhlaWdodCksdD1bXSxvPVtdO3QucHVzaCgyNTYvcyksdC5wdXNoKDEyOC9zKTtmb3IobGV0IGU9MDtlPHQubGVuZ3RoO2UrKylvLnB1c2goT2JqZWN0LmFzc2lnbihYKHtpbWFnZTpyLHJhdGlvOnRbZV19KSx7c2NhbGU6dFtlXX0pKTtyZXR1cm4gb307b25tZXNzYWdlPXI9Pntjb25zdHtkYXRhOnN9PXI7aWYocy50eXBlPT09ImNvbXBpbGUiKXtjb25zdHt0YXJnZXRJbWFnZXM6dH09cyxvPTEwMC90Lmxlbmd0aDtsZXQgZT0wO2NvbnN0IG49W107Zm9yKGxldCBhPTA7YTx0Lmxlbmd0aDthKyspe2NvbnN0IGc9dFthXSxkPVkoZyksdz1vL2QubGVuZ3RoLGo9VyhkLEU9PntlKz13LHBvc3RNZXNzYWdlKHt0eXBlOiJwcm9ncmVzcyIscGVyY2VudDplfSl9KTtuLnB1c2goail9cG9zdE1lc3NhZ2Uoe3R5cGU6ImNvbXBpbGVEb25lIixsaXN0Om59KX19fSkoKTsK",vR=typeof window<"u"&&window.Blob&&new Blob([atob(yG)],{type:"text/javascript;charset=utf-8"});function j0e(n){let e;try{if(e=vR&&(window.URL||window.webkitURL).createObjectURL(vR),!e)throw"";const t=new Worker(e,{name:n?.name});return t.addEventListener("error",()=>{(window.URL||window.webkitURL).revokeObjectURL(e)}),t}catch{return new Worker("data:application/javascript;base64,"+yG,{name:n?.name})}finally{e&&(window.URL||window.webkitURL).revokeObjectURL(e)}}class Q0e extends K0e{createProcessCanvas(e){const t=document.createElement("canvas");return t.width=e.width,t.height=e.height,t}compileTrack({progressCallback:e,targetImages:t,basePercent:r}){return new Promise((s,i)=>{const a=new j0e;a.onmessage=o=>{o.data.type==="progress"?e(r+o.data.percent*r/100):o.data.type==="compileDone"&&s(o.data.list)},a.postMessage({type:"compile",targetImages:t})})}}class J0e{constructor(e,t){this.width=e,this.height=t,this.texShape=[t,e];const r=document.createElement("canvas").getContext("2d");r.canvas.width=e,r.canvas.height=t,this.context=r,this.program=this.buildProgram(e,t);const s=ga();this.tempPixelHandle=s.makeTensorInfo(this.texShape,"float32"),s.texData.get(this.tempPixelHandle.dataId).usage=2}_loadInput(e){return le(()=>{let t=uI(e);return t=t.mean(2),t})}loadInput(e){const t=this.context;if(t.clearRect(0,0,this.context.canvas.width,this.context.canvas.height),e.width===this.height&&e.height===this.width){let s=this.context.canvas.width/2,i=this.context.canvas.height/2;t.save(),t.translate(s,i),t.rotate(90*Math.PI/180),t.drawImage(e,-e.width/2,-e.height/2),t.restore()}else this.context.drawImage(e,0,0,e.width,e.height);const r=ga();return r.gpgpu.uploadPixelDataToTexture(r.getTexture(this.tempPixelHandle.dataId),this.context.canvas),this._compileAndRun(this.program,[this.tempPixelHandle])}buildProgram(e,t){const r=de().getNumber("WEBGL_VERSION")===2?"texture":"texture2D";return{variableNames:["A"],outputShape:this.texShape,userCode:`
	void main() {
	  ivec2 coords = getOutputCoords();
	  int texR = coords[0];
	  int texC = coords[1];
	  vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${e}.0, ${t}.0);

	  vec4 values = ${r}(A, uv);
	  setOutput((0.299 * values.r + 0.587 * values.g + 0.114 * values.b) * 255.0);
	}
      `}}_compileAndRun(e,t){const r=ga().compileAndRun(e,t);return on().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}_runWebGLProgram(e,t,r){const s=ga().runWebGLProgram(e,t,r);return on().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}}const yS={memory:S0,nextFrame:Ym},q0e=.001,ebe=1e3,tbe=5,nbe=5;class rbe{constructor({inputWidth:e,inputHeight:t,onUpdate:r=null,debugMode:s=!1,maxTrack:i=1,warmupTolerance:a=null,missTolerance:o=null,filterMinCF:l=null,filterBeta:u=null}){this.inputWidth=e,this.inputHeight=t,this.maxTrack=i,this.filterMinCF=l===null?q0e:l,this.filterBeta=u===null?ebe:u,this.warmupTolerance=a===null?tbe:a,this.missTolerance=o===null?nbe:o,this.cropDetector=new qye(this.inputWidth,this.inputHeight,s),this.inputLoader=new J0e(this.inputWidth,this.inputHeight),this.markerDimensions=null,this.onUpdate=r,this.debugMode=s,this.processingVideo=!1,this.interestedTargetIndex=-1,this.trackingStates=[];const d=10,h=1e5,f=45*Math.PI/180,m=this.inputHeight/2/Math.tan(f/2);this.projectionTransform=[[m,0,this.inputWidth/2],[0,m,this.inputHeight/2],[0,0,1]],this.projectionMatrix=this._glProjectionMatrix({projectionTransform:this.projectionTransform,width:this.inputWidth,height:this.inputHeight,near:d,far:h}),this.worker=new nye,this.workerMatchDone=null,this.workerTrackDone=null,this.worker.onmessage=x=>{x.data.type==="matchDone"&&this.workerMatchDone!==null&&this.workerMatchDone(x.data),x.data.type==="trackUpdateDone"&&this.workerTrackDone!==null&&this.workerTrackDone(x.data)}}showTFStats(){console.log(yS.memory().numTensors),console.table(yS.memory())}addImageTargets(e){return new Promise(async(t,r)=>{const s=await(await fetch(e)).arrayBuffer(),i=this.addImageTargetsFromBuffer(s);t(i)})}addImageTargetsFromBuffer(e){const t=new Q0e().importData(e),r=[],s=[],i=[];for(let a=0;a<t.length;a++)s.push(t[a].matchingData),r.push(t[a].trackingData),i.push([t[a].targetImage.width,t[a].targetImage.height]);return this.tracker=new hye(i,r,this.projectionTransform,this.inputWidth,this.inputHeight,this.debugMode),this.worker.postMessage({type:"setup",inputWidth:this.inputWidth,inputHeight:this.inputHeight,projectionTransform:this.projectionTransform,debugMode:this.debugMode,matchingDataList:s}),this.markerDimensions=i,{dimensions:i,matchingDataList:s,trackingDataList:r}}dispose(){this.stopProcessVideo(),this.worker.postMessage({type:"dispose"})}dummyRun(e){const t=this.inputLoader.loadInput(e);this.cropDetector.detect(t),this.tracker.dummyRun(t),t.dispose()}getProjectionMatrix(){return this.projectionMatrix}getRotatedZ90Matrix(e){return[-e[1],e[0],e[2],e[3],-e[5],e[4],e[6],e[7],-e[9],e[8],e[10],e[11],-e[13],e[12],e[14],e[15]]}getWorldMatrix(e,t){return this._glModelViewMatrix(e,t)}async _detectAndMatch(e,t){const{featurePoints:r}=this.cropDetector.detectMoving(e),{targetIndex:s,modelViewTransform:i}=await this._workerMatch(r,t);return{targetIndex:s,modelViewTransform:i}}async _trackAndUpdate(e,t,r){const{worldCoords:s,screenCoords:i}=this.tracker.track(e,t,r);return s.length<4?null:await this._workerTrackUpdate(t,{worldCoords:s,screenCoords:i})}processVideo(e){if(!this.processingVideo){this.processingVideo=!0,this.trackingStates=[];for(let t=0;t<this.markerDimensions.length;t++)this.trackingStates.push({showing:!1,isTracking:!1,currentModelViewTransform:null,trackCount:0,trackMiss:0,filter:new M5({minCutOff:this.filterMinCF,beta:this.filterBeta})});(async()=>{for(;this.processingVideo;){const t=this.inputLoader.loadInput(e);if(this.trackingStates.reduce((r,s)=>r+(s.isTracking?1:0),0)<this.maxTrack){const r=[];for(let a=0;a<this.trackingStates.length;a++)this.trackingStates[a].isTracking!==!0&&(this.interestedTargetIndex!==-1&&this.interestedTargetIndex!==a||r.push(a));const{targetIndex:s,modelViewTransform:i}=await this._detectAndMatch(t,r);s!==-1&&(this.trackingStates[s].isTracking=!0,this.trackingStates[s].currentModelViewTransform=i)}for(let r=0;r<this.trackingStates.length;r++){const s=this.trackingStates[r];if(s.isTracking){let i=await this._trackAndUpdate(t,s.currentModelViewTransform,r);i===null?s.isTracking=!1:s.currentModelViewTransform=i}if(s.showing||s.isTracking&&(s.trackMiss=0,s.trackCount+=1,s.trackCount>this.warmupTolerance&&(s.showing=!0,s.trackingMatrix=null,s.filter.reset())),s.showing&&(s.isTracking?s.trackMiss=0:(s.trackCount=0,s.trackMiss+=1,s.trackMiss>this.missTolerance&&(s.showing=!1,s.trackingMatrix=null,this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:r,worldMatrix:null})))),s.showing){const i=this._glModelViewMatrix(s.currentModelViewTransform,r);s.trackingMatrix=s.filter.filter(Date.now(),i);let a=[];for(let o=0;o<s.trackingMatrix.length;o++)a[o]=s.trackingMatrix[o];e.width===this.inputHeight&&e.height===this.inputWidth&&(a=this.getRotatedZ90Matrix(a)),this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:r,worldMatrix:a})}}t.dispose(),this.onUpdate&&this.onUpdate({type:"processDone"}),await yS.nextFrame()}})()}}stopProcessVideo(){this.processingVideo=!1}async detect(e){const t=this.inputLoader.loadInput(e),{featurePoints:r,debugExtra:s}=await this.cropDetector.detect(t);return t.dispose(),{featurePoints:r,debugExtra:s}}async match(e,t){const{modelViewTransform:r,debugExtra:s}=await this._workerMatch(e,[t]);return{modelViewTransform:r,debugExtra:s}}async track(e,t,r){const s=this.inputLoader.loadInput(e),i=this.tracker.track(s,t,r);return s.dispose(),i}async trackUpdate(e,t){return t.worldCoords.length<4?null:await this._workerTrackUpdate(e,t)}_workerMatch(e,t){return new Promise(async(r,s)=>{this.workerMatchDone=i=>{r({targetIndex:i.targetIndex,modelViewTransform:i.modelViewTransform,debugExtra:i.debugExtra})},this.worker.postMessage({type:"match",featurePoints:e,targetIndexes:t})})}_workerTrackUpdate(e,t){return new Promise(async(r,s)=>{this.workerTrackDone=o=>{r(o.modelViewTransform)};const{worldCoords:i,screenCoords:a}=t;this.worker.postMessage({type:"trackUpdate",modelViewTransform:e,worldCoords:i,screenCoords:a})})}_glModelViewMatrix(e,t){const r=this.markerDimensions[t][1];return[e[0][0],-e[1][0],-e[2][0],0,-e[0][1],e[1][1],e[2][1],0,-e[0][2],e[1][2],e[2][2],0,e[0][1]*r+e[0][3],-(e[1][1]*r+e[1][3]),-(e[2][1]*r+e[2][3]),1]}_glProjectionMatrix({projectionTransform:e,width:t,height:r,near:s,far:i}){const a=[[2*e[0][0]/t,0,-(2*e[0][2]/t-1),0],[0,2*e[1][1]/r,-(2*e[1][2]/r-1),0],[0,0,-(i+s)/(i-s),-2*i*s/(i-s)],[0,0,-1,0]],o=[];for(let l=0;l<4;l++)for(let u=0;u<4;u++)o.push(a[u][l]);return o}}const wR=new we,sbe=new fl,SR=new we,oa=new Fn,ibe=new Fn;class abe{constructor(e={}){const t=this;let r,s,i,a;const o={camera:{fov:0,style:""},objects:new WeakMap},l=e.element!==void 0?e.element:document.createElement("div");l.style.overflow="hidden",this.domElement=l;const u=document.createElement("div");u.style.transformOrigin="0 0",u.style.pointerEvents="none",l.appendChild(u);const d=document.createElement("div");d.style.transformStyle="preserve-3d",u.appendChild(d),this.getSize=function(){return{width:r,height:s}},this.render=function(g,y){const v=y.projectionMatrix.elements[5]*a;o.camera.fov!==v&&(u.style.perspective=y.isPerspectiveCamera?v+"px":"",o.camera.fov=v),y.view&&y.view.enabled?(u.style.transform=`translate( ${-y.view.offsetX*(r/y.view.width)}px, ${-y.view.offsetY*(s/y.view.height)}px )`,u.style.transform+=`scale( ${y.view.fullWidth/y.view.width}, ${y.view.fullHeight/y.view.height} )`):u.style.transform="",g.matrixWorldAutoUpdate===!0&&g.updateMatrixWorld(),y.parent===null&&y.matrixWorldAutoUpdate===!0&&y.updateMatrixWorld();let w,I;y.isOrthographicCamera&&(w=-(y.right+y.left)/2,I=(y.top+y.bottom)/2);const T=y.view&&y.view.enabled?y.view.height/y.view.fullHeight:1,E=(y.isOrthographicCamera?`scale( ${T} )scale(`+v+")translate("+h(w)+"px,"+h(I)+"px)"+f(y.matrixWorldInverse):`scale( ${T} )translateZ(`+v+"px)"+f(y.matrixWorldInverse))+"translate("+i+"px,"+a+"px)";o.camera.style!==E&&(d.style.transform=E,o.camera.style=E),x(g,g,y)},this.setSize=function(g,y){r=g,s=y,i=r/2,a=s/2,l.style.width=g+"px",l.style.height=y+"px",u.style.width=g+"px",u.style.height=y+"px",d.style.width=g+"px",d.style.height=y+"px"};function h(g){return Math.abs(g)<1e-10?0:g}function f(g){const y=g.elements;return"matrix3d("+h(y[0])+","+h(-y[1])+","+h(y[2])+","+h(y[3])+","+h(y[4])+","+h(-y[5])+","+h(y[6])+","+h(y[7])+","+h(y[8])+","+h(-y[9])+","+h(y[10])+","+h(y[11])+","+h(y[12])+","+h(-y[13])+","+h(y[14])+","+h(y[15])+")"}function m(g){const y=g.elements;return"translate(-50%,-50%)"+("matrix3d("+h(y[0])+","+h(y[1])+","+h(y[2])+","+h(y[3])+","+h(-y[4])+","+h(-y[5])+","+h(-y[6])+","+h(-y[7])+","+h(y[8])+","+h(y[9])+","+h(y[10])+","+h(y[11])+","+h(y[12])+","+h(y[13])+","+h(y[14])+","+h(y[15])+")")}function x(g,y,v,w){if(g.isCSS3DObject){const I=g.visible===!0&&g.layers.test(v.layers)===!0;if(g.element.style.display=I===!0?"":"none",I===!0){g.onBeforeRender(t,y,v);let T;g.isCSS3DSprite?(oa.copy(v.matrixWorldInverse),oa.transpose(),g.rotation2D!==0&&oa.multiply(ibe.makeRotationZ(g.rotation2D)),g.matrixWorld.decompose(wR,sbe,SR),oa.setPosition(wR),oa.scale(SR),oa.elements[3]=0,oa.elements[7]=0,oa.elements[11]=0,oa.elements[15]=1,T=m(oa)):T=m(g.matrixWorld);const C=g.element,E=o.objects.get(g);if(E===void 0||E.style!==T){C.style.transform=T;const L={style:T};o.objects.set(g,L)}C.parentNode!==d&&d.appendChild(C),g.onAfterRender(t,y,v)}}for(let I=0,T=g.children.length;I<T;I++)x(g.children[I],y,v)}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function obe(n){P(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),P(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((s,i)=>F(s,`tensors${i}`,"addN")),t=e[0];e.forEach(s=>{if(s.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(s=>{if(!Ft(s.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=e;return q.runKernel(_f,r)}const bG=ee({addN_:obe});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lbe(n,e,t,r,s,i){const a=F(n,"forgetBias","basicLSTMCell"),o=F(e,"lstmKernel","basicLSTMCell"),l=F(t,"lstmBias","basicLSTMCell"),u=F(r,"data","basicLSTMCell"),d=F(s,"c","basicLSTMCell"),h=F(i,"h","basicLSTMCell"),f=$n([u,h],1),m=Lt(f,o),x=Ne(m,l),g=x.shape[0],y=x.shape[1]/4,v=[g,y],w=$t(x,[0,0],v),I=$t(x,[0,y],v),T=$t(x,[0,y*2],v),C=$t(x,[0,y*3],v),E=Ne(ne($i(w),Iu(I)),ne(d,$i(Ne(a,T)))),L=ne(Iu(E),$i(C));return[E,L]}const xG=ee({basicLSTMCell_:lbe});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ube(n,e){const t=F(n,"x","bitwiseAnd"),r=F(e,"y","bitwiseAnd");if(!Ft(t.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${t.shape}, y: ${r.shape}`);if(t.dtype!=="int32"||r.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${t.dtype} and type of y: ${r.dtype}`);const s={a:t,b:r};return q.runKernel(zf,s)}const vG=ee({bitwiseAnd_:ube});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cbe(n,e){const t=F(n,"s0","broadcastArgs","int32"),r=F(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:t,s1:r};return q.runKernel(ob,s)}const wG=ee({broadcastArgs_:cbe});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dbe(n){const e={x:F(n,"x","diag")};return q.runKernel(bb,e)}const SG=ee({diag_:dbe});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hbe(n,e){const t=F(n,"x","ensureShape","string_or_numeric");if(!aL(t.shape,e))throw new Error(`EnsureShape: Shape of tensor ${t.shape} is not compatible with expected shape ${e}`);return n}const TG=ee({ensureShape_:hbe});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IG(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const r={start:n,stop:e,num:t};return q.runKernel(Mb,{},r)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jy=2147483648;function pbe(n,e,t="left"){const r=F(n,"sortedSequence","searchSorted"),s=F(e,"values","searchSorted"),i=r.shape[r.shape.length-1],a=s.shape[s.shape.length-1],o=se(r,[-1,i]),l=se(s,[-1,a]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(be(l.shape)>=Jy)throw new Error(`values tensor size must less than ${Jy}`);if(o.shape[1]>=Jy)throw new Error(`trailing dim_size must less than ${Jy} for int32 output type, was ${o.shape[1]}`);const u={sortedSequence:o,values:l},d={side:t};return q.runKernel(Zb,u,d)}const Sv=ee({searchSorted_:pbe});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kG(n,e){return Sv(n,e,"left")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fbe(n,e,t,r,s=!1){const i={x:F(n,"x","maxPoolWithArgmax")},a={filterSize:e,strides:t,pad:r,includeBatchInIndex:s},o=q.runKernel(Lb,i,a);return{result:o[0],indexes:o[1]}}const CG=ee({maxPoolWithArgmax_:fbe});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _G(n,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(n===void 0)return[];let r=F(n,"x","meshgrid",n instanceof Ht?n.dtype:"float32");if(e===void 0)return[r];let s=F(e,"y","meshgrid",e instanceof Ht?e.dtype:"float32");const i=be(r.shape),a=be(s.shape);return t==="xy"?(r=se(r,[1,-1]),s=se(s,[-1,1]),[Lt(ds([a,1],r.dtype),r),Lt(s,ds([1,i],s.dtype))]):(r=se(r,[-1,1]),s=se(s,[1,-1]),[Lt(r,ds([1,a],r.dtype)),Lt(ds([i,1],s.dtype),s)])}function mbe(n,e,t,r){const s=F(e,"data","multiRNNCell"),i=cf(t,"c","multiRNNCell"),a=cf(r,"h","multiRNNCell");let o=s;const l=[];for(let h=0;h<n.length;h++){const f=n[h](o,i[h],a[h]);l.push(f[0]),l.push(f[1]),o=f[1]}const u=[],d=[];for(let h=0;h<l.length;h+=2)u.push(l[h]),d.push(l[h+1]);return[u,d]}const MG=ee({multiRNNCell_:mbe});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gbe(n,e,t,r=!1){const s=F(n,"logits","multinomial"),i=s.size,a=s.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);t=t||Math.random();const o={logits:a===1?se(s,[1,-1]):s},l={numSamples:e,seed:t,normalized:r},u=q.runKernel(Ab,o,l);return a===1?se(u,[u.size]):u}const NG=ee({multinomial_:gbe});function ybe(n,e){const t=F(n,"v1","outerProduct"),r=F(e,"v2","outerProduct");P(t.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${r.rank}.`);const s=se(t,[-1,1]),i=se(r,[1,-1]);return Lt(s,i)}const EG=ee({outerProduct_:ybe});function bbe(n,e,t=0){return P(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),fo(n,[e],t)}const RG=ee({pad1d_:bbe});function xbe(n,e,t=0){return P(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),fo(n,e,t)}const LG=ee({pad2d_:xbe});function vbe(n,e,t=0){return P(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),fo(n,e,t)}const AG=ee({pad3d_:vbe});function wbe(n,e,t=0){return P(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),fo(n,e,t)}const zG=ee({pad4d_:wbe});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sbe(n,e,t,r){const s=n.map((d,h)=>F(d,`tensors${h}`,"raggedGather","int32")),i=F(e,"paramsDenseValues","raggedGather"),a=F(t,"indices","raggedGather","int32"),o={paramsNestedSplits:s,paramsDenseValues:i,indices:a},l={outputRaggedRank:r},u=q.runKernel(Fb,o,l);return{outputNestedSplits:u.slice(0,u.length-1),outputDenseValues:u[u.length-1]}}const DG=ee({raggedGather_:Sbe});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tbe(n,e,t){const r=F(n,"starts","raggedRange"),s=F(e,"limits","raggedRange",r.dtype),i=F(t,"deltas","raggedRange",r.dtype),a={starts:r,limits:s,deltas:i},o=q.runKernel(Gb,a);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}const PG=ee({raggedRange_:Tbe});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ibe(n,e,t,r,s){const i=F(n,"shape","raggedTensorToTensor","int32"),a=F(e,"values","raggedTensorToTensor"),o=F(t,"defaultValue","raggedTensorToTensor",a.dtype),l=r.map((h,f)=>F(h,`tensors${f}`,"raggedTensorToTensor","int32")),u={shape:i,values:a,defaultValue:o,rowPartitionTensors:l},d={rowPartitionTypes:s};return q.runKernel(Ob,u,d)}const FG=ee({raggedTensorToTensor_:Ibe});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kbe(n,e,t){Fs(n);const r=be(n);let s=null;if(t==null||t==="float32")s=new Float32Array(r);else if(t==="int32")s=new Int32Array(r);else if(t==="bool")s=new Uint8Array(r);else throw new Error(`Unknown data type ${t}`);for(let i=0;i<r;i++)s[i]=e();return q.makeTensor(s,n,t)}const GG=ee({rand_:kbe});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cbe=.001,OG=.1;function _be(n,e,t){return t==null&&(t=LC()),g2(n,e,(r,s)=>AC(r,s,t))}function LC(){return q.backend.floatPrecision()===32?Cbe:OG}function g2(n,e,t){let r=!0;if((rr(n)||rr(e))&&(r=!1),rr(n)&&rr(e)&&(r=!0),r){const a=n.constructor.name,o=e.constructor.name;if(a!==o)throw new Error(`Arrays are of different type. Actual: ${a}. Expected: ${o}`)}if(Array.isArray(n)&&Array.isArray(e)){const a=ka(n),o=ka(e);if(!Ft(a,o))throw new Error(`Arrays have different shapes. Actual: [${a}]. Expected: [${o}]`)}const s=rr(n)?n:Ia(n),i=rr(e)?e:Ia(e);if(s.length!==i.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${i.length}.
Actual:   ${s}.
Expected: ${i}.`);for(let a=0;a<i.length;++a){const o=s[a],l=i[a];if(!t(o,l))throw new Error(`Arrays differ: actual[${a}] = ${o}, expected[${a}] = ${l}.
Actual:   ${s}.
Expected: ${i}.`)}typeof expect<"u"&&expect().nothing()}function Mbe(n,e){n().then(()=>e.fail(),()=>e()),typeof expect<"u"&&expect().nothing()}function Nbe(n,e){const t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return ma(n)||ma(n[0])||ma(e)||ma(e[0])?g2(n,t,(r,s)=>r==s):g2(n,e,(r,s)=>AC(r,s,0))}function Ebe(n,e,t){if(t==null&&(t=LC()),!AC(n,e,t))throw new Error(`Numbers differ: actual === ${n}, expected === ${e}`);typeof expect<"u"&&expect().nothing()}function AC(n,e,t){return!isFinite(n)&&!isFinite(e)?!0:!(isNaN(n)||isNaN(e)||Math.abs(n-e)>t)}function Rbe(n,e,t){for(let r=0;r<n.length;r++)if(n[r]<e||n[r]>t)throw new Error(`Value out of range:${n[r]} low: ${e}, high: ${t}`)}function Lbe(n,e){const t=new Float32Array(n),r=new Float32Array(e);if(t.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${t.length}`);for(let s=0;s<r.length;s++)if(t[s]!==r[s])throw new Error(`Expected ArrayBuffer value at ${s} to be ${r[s]} but got ${t[s]} instead`)}function WG(n){for(let e=0;e<n.length;e++){const t=n[e];Array.isArray(t)?WG(t):n[e]=va(t)}return n}function Abe(n){const e=document.createElement("video");return"playsInline"in e&&(e.playsInline=!0),e.muted=!0,e.loop=!0,e.style.position="fixed",e.style.left="0px",e.style.top="0px",e.preload="auto",e.appendChild(n),new Promise(t=>{e.addEventListener("loadeddata",r=>t(e)),e.load()})}async function zbe(n){await n.play(),"requestVideoFrameCallback"in n&&await new Promise(e=>{n.requestVideoFrameCallback(e)})}const Dbe=Object.freeze(Object.defineProperty({__proto__:null,TEST_EPSILON_FLOAT16:OG,createVideoElement:Abe,encodeStrings:WG,expectArrayBuffersEqual:Lbe,expectArraysClose:_be,expectArraysEqual:Nbe,expectNumbersClose:Ebe,expectPromiseToFail:Mbe,expectValuesInRange:Rbe,play:zbe,testEpsilon:LC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pbe(n,e,t=1,r="float32",s){if(Fs(n),t==null&&(t=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);const i=new n6(e,t,r,s),a=Et(n,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const VG=ee({randomGamma_:Pbe});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fbe(n,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return xx(n,0,1,e,t)}const $G=ee({randomStandardNormal_:Fbe});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gbe(n,e,t,r){return vl(n,e,t,"int32",r)}const BG=ee({randomUniformInt_:Gbe});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Obe(n){const e=F(n,"x","reverse");return P(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),ri(e,0)}const XG=ee({reverse1d_:Obe});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wbe(n,e){const t=F(n,"x","reverse");return P(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),ri(t,e)}const UG=ee({reverse2d_:Wbe});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vbe(n,e){const t=F(n,"x","reverse");return P(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),ri(t,e)}const ZG=ee({reverse3d_:Vbe});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $be(n,e){const t=F(n,"x","reverse");return P(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),ri(t,e)}const HG=ee({reverse4d_:$be});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Bbe(n,e){const t=F(n,"x","setdiff1d"),r=F(e,"y","setdiff1d");P(t.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${r.dtype}).`),P(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),P(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=await t.data(),i=await r.data(),a=new Set(i);let o=0;for(let d=0;d<s.length;d++)a.has(s[d])||o++;const l=new Jn([o],t.dtype),u=new Jn([o],"int32");for(let d=0,h=0;d<s.length;d++)a.has(s[d])||(l.values[h]=s[d],u.values[h]=d,h++);return[l.toTensor(),u.toTensor()]}const KG=Bbe;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YG(n,e,t){if(Gu(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const r=ka(n,t);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return gl(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jG(n,e,t){if(Gu(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const r=ka(n,t);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return gl(n,e,r,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QG(n,e,t){if(Gu(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const r=ka(n,t);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||r,gl(n,e,r,t)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xbe(n,e,t){const r=F(n,"tensor","tensorScatterupdate"),s=F(e,"indices","tensorScatterupdate","int32"),i=F(t,"updates","tensorScatterupdate");if(Ex(i,s,r.shape),r.dtype!==i.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${i.dtype}.`);const a={tensor:r,indices:s,updates:i},o={};return q.runKernel(Ub,a,o)}const JG=ee({tensorScatterUpdate_:Xbe});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qG(n,e){return Sv(n,e,"right")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Ube(n){const e=F(n,"condition","whereAsync","bool"),t=await e.data(),r=Ax(e.shape,t);return n!==e&&e.dispose(),r}const zC=Ube;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Zbe(n,e,t){const r=F(n,"tensor","boolMask"),s=F(e,"mask","boolMask","bool"),i=t??0,a=s.rank,o=r.shape;P(a>0,()=>"mask cannot be scalar"),Lr(o.slice(i,i+a),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let g=i;g<i+a;g++)l*=o[g];const u=o.slice(0,i).concat([l],o.slice(i+a)),d=se(r,u),h=se(s,[-1]),f=await zC(h),m=wl(f,[1]),x=Th(d,m,i);return n!==r&&r.dispose(),e!==s&&s.dispose(),m.dispose(),d.dispose(),h.dispose(),f.dispose(),x}const eO=Zbe;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hbe(n,e,t,r,s=!0){const i=F(n,"v","movingAverage"),a=F(e,"x","movingAverage"),o=F(t,"decay","movingAverage");LL(i,a),P(Ft(i.shape,a.shape),()=>"Shape mismatch in v and x");const l=ct(1),u=Ye(l,o);let d=ne(Ye(a,i),u);if(s){P(r!=null,()=>"When using zeroDebias: true, step is required.");const h=F(r,"step","movingAverage");d=at(d,Ye(l,so(o,h)))}return Ne(i,d)}const tO=ee({movingAverage_:Hbe});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kbe(n,e,t){Fs(t);const r=F(n,"indices","scatterND","int32"),s=F(e,"updates","scatterND");Ex(s,r,t);const i={indices:r,updates:s},a={shape:t};return q.runKernel(Xb,i,a)}const nO=ee({scatterND_:Kbe});function Ybe(n,e,t,r){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const s=n.rank>0?n.shape[0]:1,i=n.rank>1?n.shape[1]:1;if(t.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${i}.`);const a=e.size;if(!(e.rank===0||e.rank===1&&a===s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jbe(n,e,t,r=0){Fs(t);const s=F(n,"sparseIndices","sparseToDense","int32"),i=F(e,"sparseValues","sparseToDense","string_or_numeric"),a=F(r,"defaultValue","sparseToDense",i.dtype);Ybe(s,i,t,a);const o={sparseIndices:s,sparseValues:i,defaultValue:a},l={outputShape:t};return q.runKernel(Qb,o,l)}const rO=ee({sparseToDense_:jbe});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qbe(n,e){const t=F(e,"indices","gatherND","int32"),r={params:F(n,"x","gatherND","string_or_numeric"),indices:t};return q.runKernel(kb,r)}const sO=ee({gatherND_:Qbe});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Jbe(n,e,t=1){const r=F(n,"predictions","inTopK"),s=F(e,"targets","inTopK");P(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),P(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),Lr(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const i=r.shape[r.shape.length-1];P(t>0&&t<=i,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${i}), but got ${t}`);const a=await r.data(),o=await s.data(),[l,u]=[a.length/i,i],d=mr("bool",l);for(let h=0;h<l;h++){const f=h*u,m=a.subarray(f,f+u),x=[];for(let g=0;g<m.length;g++)x.push({value:m[g],index:g});x.sort((g,y)=>y.value-g.value),d[h]=0;for(let g=0;g<t;g++)if(x[g].index===o[h]){d[h]=1;break}}return n!==r&&r.dispose(),e!==s&&s.dispose(),wn(d,s.shape,"bool")}const iO=Jbe;/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qbe({x:n,filter:e,strides:t,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:d}){if(Gx(q.state.gradientDepth,l)===!1){let C=xh(n,e,t,r,s,i,a);return o!=null&&(C=Ne(C,o)),Fx(C,l,u,d)}const h=F(n,"x","depthwiseConv2d","float32"),f=F(e,"filter","depthwiseConv2d","float32");let m=h,x=!1;h.rank===3&&(x=!0,m=se(h,[1,h.shape[0],h.shape[1],h.shape[2]])),P(m.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`),P(f.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`),P(m.shape[3]===f.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${m.shape[3]}) must match the inChannels dimension in filter ${f.shape[2]}.`),i==null&&(i=[1,1]),P(Ar(t,i),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),es("fused depthwiseConv2d",r,a);const g=yr(m.shape,f.shape,t,i,r,a,!0);let y;o!=null&&(y=F(o,"bias","fused conv2d"),[y]=En(y,h),Ct(g.outShape,y.shape));let v;u!=null&&(v=F(u,"prelu weights","fused depthwiseConv2d"));const w=(C,E)=>{P(ol(i),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[L,M,R,z]=E,X=Dx(C,R,l),U=uA(M.shape,X,L,t,r,i,a),G=lA(M,X,L.shape,t,r,i,a);if(z!=null){const V=Px(y,X);return[U,G,V]}return[U,G]},I={x:m,filter:f,bias:y,preluActivationWeights:v},T={strides:t,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:d};return o==null?Ca((C,E,L)=>{let M=q.runKernel(af,I,T);return L([E,C,M]),x&&(M=se(M,[M.shape[1],M.shape[2],M.shape[3]])),{value:M,gradFunc:w}})(m,f):Ca((C,E,L,M)=>{let R=q.runKernel(af,I,T);return M([E,C,R,L]),x&&(R=se(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:w}})(m,f,y)}const exe=ee({fusedDepthwiseConv2d_:qbe});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aO=Object.freeze(Object.defineProperty({__proto__:null,conv2d:oA,depthwiseConv2d:exe,matMul:XS},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const txe="model",nxe=".json",rxe=".weights.bin";function TR(n){return new Promise(e=>setTimeout(e)).then(n)}class Du{constructor(e){if(!de().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Du.URL_SCHEME)&&(e=e.slice(Du.URL_SCHEME.length)),(e==null||e.length===0)&&(e=txe),this.modelJsonFileName=e+nxe,this.weightDataFileName=e+rxe}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=ji.join(e.weightData),r=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const s=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],i=WL(e,s),a=window.URL.createObjectURL(new Blob([JSON.stringify(i)],{type:"application/json"})),o=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=a,await TR(()=>o.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=r,await TR(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Em(e)}}}}Du.URL_SCHEME="downloads://";class sxe{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const r=new FileReader;r.onload=s=>{const i=JSON.parse(s.target.result),a=i.modelTopology;if(a==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(i.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}const o=Q2(i,l=>this.loadWeights(l));e(o)},r.onerror=s=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(this.jsonFile)})}loadWeights(e){const t=[],r=[];for(const a of e)t.push(...a.weights),r.push(...a.paths);const s=this.checkManifestAndWeightFiles(e),i=r.map(a=>this.loadWeightsFile(a,s[a]));return Promise.all(i).then(a=>[t,a])}loadWeightsFile(e,t){return new Promise((r,s)=>{const i=new FileReader;i.onload=a=>{const o=a.target.result;r(o)},i.onerror=a=>s(`Failed to weights data from file of path '${e}'.`),i.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],r=this.weightsFiles.map(i=>QE(i.name)),s={};for(const i of e)i.paths.forEach(a=>{const o=QE(a);if(t.indexOf(o)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(t.push(o),r.indexOf(o)===-1)throw new Error(`Weight file with basename '${o}' is not provided.`);s[a]=this.weightsFiles[r.indexOf(o)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}}const ixe=n=>de().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Du.URL_SCHEME)?axe(n.slice(Du.URL_SCHEME.length)):null;Cn.registerSaveRouter(ixe);function axe(n="model"){return new Du(n)}function oxe(n){return new sxe(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bS{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class oO{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class lxe{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function uxe(n,e,t,r){const s=arguments;return new lxe(U0(...s))}function U0(n,e,t,r){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new bS(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new bS({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new bS({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:r}))}function cxe(n){return new oO(n)}function dxe(n){return new oO(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DC=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:ji,browserFiles:oxe,browserHTTPRequest:TA,concatenateArrayBuffers:OL,copyModel:mH,decodeWeights:K2,decodeWeightsStream:GL,encodeWeights:OS,fromMemory:uxe,fromMemorySync:U0,getLoadHandlers:$L,getModelArtifactsForJSON:Q2,getModelArtifactsForJSONSync:j2,getModelArtifactsInfoForJSON:Em,getSaveHandlers:VL,getWeightSpecs:T0,http:lI,isHTTPScheme:ZS,listModels:pH,loadWeights:vA,moveModel:gH,registerLoadRouter:tH,registerSaveRouter:eH,removeModel:fH,weightsLoaderFactory:wA,withSaveHandler:cxe,withSaveHandlerSync:dxe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hxe(n,e,t){const r=F(n,"labels","confusionMatrix"),s=F(e,"predictions","confusionMatrix");P(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),P(r.rank===1,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),P(s.rank===1,()=>`Expected the rank of predictions to be 1, but got ${s.rank}`),P(r.shape[0]===s.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`),P(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);const i=dd(Oe(r,"int32"),t),a=dd(Oe(s,"int32"),t),o=Gt(i),l=Lt(o,a);return Oe(l,"int32")}const pxe=ee({confusionMatrix_:hxe});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fxe=Object.freeze(Object.defineProperty({__proto__:null,confusionMatrix:pxe},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. */const lO="4.16.0";/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mxe=Object.freeze(Object.defineProperty({__proto__:null,nonMaxSuppressionV3Impl:Ox,nonMaxSuppressionV4Impl:Wx,nonMaxSuppressionV5Impl:Vx,whereImpl:Ax},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gxe(n){return new ZI(n)}function yxe(n){return new HI(n)}function bxe(){return new KI}function xxe(n){return new YI(n)}const vxe=Object.freeze(Object.defineProperty({__proto__:null,maxNorm:gxe,minMaxNorm:xxe,nonNeg:bxe,unitNorm:yxe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wxe(){return new FI}function Sxe(){return new jx}function Txe(n){return new GI(n)}function Ixe(n){return new OI(n)}function kxe(n){return new WI(n)}function Cxe(n){return new VI(n)}function _xe(n){return new $I(n)}function Mxe(n){return new ys(n)}function Nxe(n){return new Qx(n)}function Exe(n){return new Jx(n)}function Rxe(n){return new qx(n)}function Lxe(n){return new ev(n)}function Axe(n){return new tv(n)}function zxe(n){return new nv(n)}function Dxe(n){return new BI(n)}const Pxe=Object.freeze(Object.defineProperty({__proto__:null,constant:Txe,glorotNormal:Exe,glorotUniform:Nxe,heNormal:Rxe,heUniform:Lxe,identity:_xe,leCunNormal:Axe,leCunUniform:zxe,ones:Sxe,orthogonal:Dxe,randomNormal:kxe,randomUniform:Ixe,truncatedNormal:Cxe,varianceScaling:Mxe,zeros:wxe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Fxe(n){return new Ja(n)}function Gxe(n){return new ov(n)}function uO(n){return kz(n)}function Oxe(n,e){jI.registerCallbackConstructor(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Wxe(n){return new Ch(n)}function Vxe(n){return new ak(n)}function $xe(n){return new rk(n)}function Bxe(n){return new sk(n)}function Xxe(n){return new ik(n)}function Uxe(n){return new lk(n)}function Zxe(n){return new ok(n)}function Hxe(n){return new ig(n)}function Kxe(n){return new Nh(n)}function Yxe(n){return new ck(n)}function jxe(n){return new Eh(n)}function Qxe(n){return new dk(n)}function Jxe(n){return new hk(n)}function qxe(n){return new pk(n)}function eve(n){return new fk(n)}function tve(n){return new mk(n)}function nve(n){return new Tk(n)}function rve(n){return new wk(n)}function sve(n){return new pv(n)}function ive(n){return new vk(n)}function ave(n){return new Sk(n)}function ove(n){return new Ik(n)}function lve(n){return new kk(n)}function uve(n){return new Ck(n)}function cve(n){return new Mk(n)}function dve(n){return new Nk(n)}function hve(n){return new Rk(n)}function pve(n){return new zk(n)}function fve(n){return new Lk(n)}function mve(n){return new Ak(n)}function gve(n){return new Ek(n)}function yve(n){return new Dk(n)}function bve(n){return new Ok(n)}function xve(n){return new Wk(n)}function vve(n){return new Vk(n)}function PC(n){return new Bk(n)}function wve(n){return PC(n)}function Sve(n){return PC(n)}function FC(n){return new Uk(n)}function Tve(n){return FC(n)}function Ive(n){return FC(n)}function GC(n){return new Hk(n)}function kve(n){return GC(n)}function Cve(n){return GC(n)}function _ve(n){return new Kk(n)}function Mve(n){return new jk(n)}function cO(n){return new Yk(n)}function dO(n){return new Qk(n)}function hO(n){return new $k(n)}function pO(n){return new Xk(n)}function Nve(n){return new Zk(n)}function Eve(n){return new yk(n)}function Rve(n){return new cv(n)}function Lve(n){return new bk(n)}function Ave(n){return new og(n)}function zve(n){return new gk(n)}function Dve(n){return new uv(n)}function Pve(n){return new xk(n)}function Fve(n){return new hv(n)}function Gve(n){return new qi(n)}function Ove(n){return new dv(n)}function Wve(n){return new qk(n)}function Vve(n){return new Jk(n)}const $ve=cO,Bve=dO,Xve=hO,Uve=pO;function Zve(n){return new Pk(n)}function Hve(n){return new Fk(n)}function Kve(n){return new Gk(n)}function Yve(n){return new _k(n)}function jve(n){return new eC(n)}function Qve(n){return new tC(n)}function Jve(n){return new rC(n)}function qve(n){return new nC(n)}function e1e(n){return new sC(n)}const t1e=Object.freeze(Object.defineProperty({__proto__:null,Layer:zt,RNN:qi,RNNCell:ag,activation:nve,add:dve,alphaDropout:Kve,average:hve,averagePooling1d:PC,averagePooling2d:FC,averagePooling3d:GC,avgPool1d:wve,avgPool2d:Tve,avgPool3d:kve,avgPooling1d:Sve,avgPooling2d:Ive,avgPooling3d:Cve,batchNormalization:bve,bidirectional:Wve,categoryEncoding:qve,centerCrop:Qve,concatenate:pve,conv1d:Hxe,conv2d:Kxe,conv2dTranspose:Yxe,conv3d:jxe,conv3dTranspose:Qxe,convLstm2d:Pve,convLstm2dCell:Fve,cropping2D:qxe,dense:rve,depthwiseConv2d:tve,dot:yve,dropout:sve,elu:Vxe,embedding:cve,flatten:ave,gaussianDropout:Hve,gaussianNoise:Zve,globalAveragePooling1d:_ve,globalAveragePooling2d:Mve,globalMaxPool1d:$ve,globalMaxPool2d:Bve,globalMaxPooling1d:cO,globalMaxPooling2d:dO,gru:Eve,gruCell:Rve,input:uO,inputLayer:Wxe,layerNormalization:xve,leakyReLU:Bxe,lstm:Lve,lstmCell:Ave,masking:Yve,maxPool1d:Xve,maxPool2d:Uve,maxPooling1d:hO,maxPooling2d:pO,maxPooling3d:Nve,maximum:fve,minimum:mve,multiply:gve,permute:uve,prelu:Xxe,randomWidth:e1e,reLU:$xe,repeatVector:ove,rescaling:jve,reshape:lve,resizing:Jve,rnn:Gve,separableConv2d:Jxe,simpleRNN:zve,simpleRNNCell:Dve,softmax:Uxe,spatialDropout1d:ive,stackedRNNCells:Ove,thresholdedReLU:Zxe,timeDistributed:Vve,upSampling2d:eve,zeroPadding2d:vve},Symbol.toStringTag,{value:"Module"}));function n1e(n,e){return JI(n,e)}function r1e(n,e){return zz(n,e)}function s1e(n,e){return Dz(n,e)}function i1e(n,e){return qI(n,e)}function a1e(n,e){return ek(n,e)}function o1e(n,e){return Az(n,e)}function l1e(n,e){return YQ(n,e)}function u1e(n,e){return QI(n,e)}function c1e(n,e){return sv(n,e)}function d1e(n,e){return _h(n,e)}function h1e(n,e){return _h(n,e)}function p1e(n,e){return _h(n,e)}function f1e(n,e){return Qu(n,e)}function m1e(n,e){return Qu(n,e)}function g1e(n,e){return Qu(n,e)}const y1e=Object.freeze(Object.defineProperty({__proto__:null,MAPE:h1e,MSE:m1e,binaryAccuracy:n1e,binaryCrossentropy:r1e,categoricalAccuracy:i1e,categoricalCrossentropy:a1e,cosineProximity:u1e,mape:p1e,meanAbsoluteError:c1e,meanAbsolutePercentageError:d1e,meanSquaredError:f1e,mse:g1e,precision:o1e,recall:l1e,sparseCategoricalAccuracy:s1e},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const b1e=Object.freeze(Object.defineProperty({__proto__:null,modelFromJSON:kJ},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function x1e(n){return new sg(n)}function v1e(n){return NJ(n)}function w1e(n){return EJ(n)}const S1e=Object.freeze(Object.defineProperty({__proto__:null,l1:v1e,l1l2:x1e,l2:w1e},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class fO extends gd{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Ja))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function qy(n,e){return n<e}function IR(n,e){return n>e}class mO extends fO{constructor(e){if(super(),e==null&&(e={}),e.restoreBestWeights)throw new Nt("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=qy:this.mode==="max"?this.monitorFunc=IR:this.monitor.indexOf("acc")!==-1?this.monitorFunc=IR:this.monitorFunc=qy,this.monitorFunc===qy&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===qy?1/0:-1/0}async onEpochEnd(e,t){await $o(t);const r=this.getMonitorValue(t);r!=null&&(this.monitorFunc(r-this.minDelta,this.best)?(this.best=r,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});const t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}function T1e(n){return new mO(n)}const I1e={earlyStopping:T1e};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OC={};function k1e(n,e){const t={tfOpName:n,category:"custom",inputs:[],attrs:[],customExecutor:e};OC[n]=t}function gO(n){return OC[n]}function C1e(n){delete OC[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N(n,e,t,r,s){const i=e.inputParams[n];if(i&&i.inputIndexStart!==void 0){const o=i.inputIndexStart,l=i.inputIndexEnd===0?void 0:i.inputIndexEnd===void 0?o+1:i.inputIndexEnd,u=o<0?e.inputNames.length+o:o;if(i.type==="tensor")return Mr(e.inputNames[u],t,r,s);if(i.type==="tensors"){const f=e.inputs.slice(o,l);return e.inputNames.slice(o,l).filter((m,x)=>{var g;return((g=f[x])===null||g===void 0?void 0:g.op)!=="NoOp"}).map(m=>Mr(m,t,r,s))}const d=Mr(e.inputNames[u],t,r,s),h=d.dataSync();return i.type==="number"?h[0]:ti(d.shape,h)}const a=e.attrParams[n];return a&&a.value}function Mr(n,e,t,r){const[s,i]=Es(n,t);if(r!=null){const o=r.getHashTableHandleByName(s);if(o!=null)return o}const a=t.currentContextIds.find(o=>!!e[Z0(s,o)]);return a!==void 0?e[Z0(s,a)][i]:void 0}function kR(n,e,t){return e[Z0(n,t.currentContextId)]}function Ua(n,e){const[t,r,s]=Es(n,e);return[Z0(t,e&&e.currentContextId),r,s]}function Z0(n,e){return e?`${n}-${e}`:n}function Es(n,e){if(n==="")return["",0,void 0];const t=e!=null&&e.parseNodeNameCache!=null;if(t){const i=e.parseNodeNameCache.get(n);if(i!=null)return i}const r=n.split(":");let s;if(r.length===1)s=[n,0,void 0];else{const i=r[0],a=r.length===3?r[1]:void 0,o=Number(r[r.length-1]);s=[i,o,a]}return t&&e.parseNodeNameCache.set(n,s),s}function h0(n,e,t){let r=N("pad",n,e,t);if(r==="explicit"){r=N("explicitPaddings",n,e,t);const s=[[0,0],[0,0],[0,0],[0,0]];for(let i=0;i<4;i++)s[i][0]=r[i*2],s[i][1]=r[i*2+1];return s}return r}function Za(n){return n.kept?n:wa(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _1e=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],M1e=Object.freeze(Object.defineProperty({__proto__:null,json:_1e},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N1e=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],E1e=Object.freeze(Object.defineProperty({__proto__:null,json:N1e},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R1e=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],L1e=Object.freeze(Object.defineProperty({__proto__:null,json:R1e},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A1e=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],z1e=Object.freeze(Object.defineProperty({__proto__:null,json:A1e},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D1e=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],P1e=Object.freeze(Object.defineProperty({__proto__:null,json:D1e},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F1e=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],G1e=Object.freeze(Object.defineProperty({__proto__:null,json:F1e},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O1e=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],W1e=Object.freeze(Object.defineProperty({__proto__:null,json:O1e},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V1e=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],$1e=Object.freeze(Object.defineProperty({__proto__:null,json:V1e},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B1e=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],X1e=Object.freeze(Object.defineProperty({__proto__:null,json:B1e},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U1e=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],Z1e=Object.freeze(Object.defineProperty({__proto__:null,json:U1e},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H1e=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],K1e=Object.freeze(Object.defineProperty({__proto__:null,json:H1e},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y1e=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],j1e=Object.freeze(Object.defineProperty({__proto__:null,json:Y1e},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q1e=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],J1e=Object.freeze(Object.defineProperty({__proto__:null,json:Q1e},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q1e=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],ewe=Object.freeze(Object.defineProperty({__proto__:null,json:q1e},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const twe=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],nwe=Object.freeze(Object.defineProperty({__proto__:null,json:twe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rwe=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],swe=Object.freeze(Object.defineProperty({__proto__:null,json:rwe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iwe=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],awe=Object.freeze(Object.defineProperty({__proto__:null,json:iwe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const owe=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],lwe=Object.freeze(Object.defineProperty({__proto__:null,json:owe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uwe=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],cwe=Object.freeze(Object.defineProperty({__proto__:null,json:uwe},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CR{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[M1e,E1e,L1e,z1e,P1e,G1e,W1e,$1e,X1e,Z1e,K1e,j1e,J1e,ewe,nwe,swe,awe,lwe,cwe],t=[].concat(...e.map(r=>r.json));this.opMappers=t.reduce((r,s)=>(r[s.tfOpName]=s,r),{})}transformGraph(e,t={}){const r=e.node,s=[],i=[],a=[],o=r.reduce((g,y)=>(g[y.name]=this.mapNode(y),y.op.startsWith("Placeholder")?s.push(g[y.name]):y.op==="Const"?i.push(g[y.name]):(y.input==null||y.input.length===0)&&a.push(g[y.name]),g),{});let l=[];const u=[];let d={},h={};t!=null&&(d=this.mapSignatureEntries(t.inputs),h=this.mapSignatureEntries(t.outputs));const f=Object.keys(o);f.forEach(g=>{const y=o[g];y.inputNames.forEach((v,w)=>{const[I,,T]=Ua(v),C=o[I];if(C.outputs!=null){const E=C.outputs.indexOf(T);if(E!==-1){const L=`${I}:${E}`;y.inputNames[w]=L}}y.inputs.push(C),C.children.push(y)})}),Object.keys(h).length===0?f.forEach(g=>{const y=o[g];y.children.length===0&&u.push(y)}):Object.keys(h).forEach(g=>{const[y]=Ua(g),v=o[y];v!=null&&(v.signatureKey=h[g],u.push(v))}),Object.keys(d).length>0?Object.keys(d).forEach(g=>{const[y]=Ua(g),v=o[y];v&&(v.signatureKey=d[g],l.push(v))}):l=s;let m={};e.library!=null&&e.library.function!=null&&(m=e.library.function.reduce((g,y)=>(g[y.signature.name]=this.mapFunction(y),g),{}));const x={nodes:o,inputs:l,outputs:u,weights:i,placeholders:s,signature:t,functions:m};return a.length>0&&(x.initNodes=a),x}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,r)=>(t[e[r].name]=r,t),{})}mapNode(e){const t=gO(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const r={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.slice(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(r.inputParams=t.inputs.reduce((s,i)=>(s[i.name]={type:i.type,inputIndexStart:i.start,inputIndexEnd:i.end},s),{})),t.attrs!=null&&(r.attrParams=t.attrs.reduce((s,i)=>{const a=i.type;let o;switch(i.type){case"string":o=y2(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=y2(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"string[]":o=I2(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=I2(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"number":o=x2(e.attr,i.tfName,i.defaultValue||0),o===void 0&&i.tfDeprecatedName&&(o=x2(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"number[]":o=T2(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=T2(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool":o=b2(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=b2(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool[]":o=C2(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=C2(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape":o=S2(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=S2(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape[]":o=k2(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=k2(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype":o=v2(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=v2(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype[]":o=w2(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=w2(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"func":o=_R(e.attr,i.tfName,i.defaultValue),o===void 0&&i.tfDeprecatedName&&(o=_R(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${i.type} for op: ${e.op}`)}return s[i.name]={value:o,type:a},s},{})),r}mapFunction(e){const t=e.nodeDef,r=[],s=[];let i={};t!=null&&(i=t.reduce((d,h)=>(d[h.name]=this.mapNode(h),h.op==="Const"&&s.push(d[h.name]),d),{}));const a=[],o=[];e.signature.inputArg.forEach(d=>{const[h]=Ua(d.name),f={name:h,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:WC(d.type),type:"dtype"}},children:[]};f.signatureKey=d.name,a.push(f),i[h]=f}),Object.keys(i).forEach(d=>{const h=i[d];h.inputNames.forEach((f,m)=>{const[x,,g]=Ua(f),y=i[x];if(y.outputs!=null){const v=y.outputs.indexOf(g);if(v!==-1){const w=`${x}:${v}`;h.inputNames[m]=w}}h.inputs.push(y),y.children.push(h)})});const l=e.ret;e.signature.outputArg.forEach(d=>{const[h,f]=Ua(l[d.name]),m=i[h];m!=null&&(m.defaultOutput=f,o.push(m))});const u=this.mapArgsToSignature(e);return{nodes:i,inputs:a,outputs:o,weights:s,placeholders:r,signature:u}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r),t),{}),outputs:e.signature.outputArg.reduce((t,r)=>(t[r.name]=this.mapArgToTensorInfo(r,e.ret),t),{})}}mapArgToTensorInfo(e,t){let r=e.name;return t!=null&&(r=t[r]),{name:r,dtype:e.type}}}function dwe(n){const e=de().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function yO(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):dwe(n);return e?t:t.toLowerCase()}function y2(n,e,t,r=!1){const s=n[e];return s!=null?yO(s.s,r):t}function b2(n,e,t){const r=n[e];return r?r.b:t}function x2(n,e,t){const r=n[e]||{},s=r.i!=null?r.i:r.f!=null?r.f:t;return typeof s=="number"?s:parseInt(s,10)}function WC(n){switch(typeof n=="string"&&(n=Ms[n]),n){case Ms.DT_FLOAT:case Ms.DT_HALF:return"float32";case Ms.DT_INT32:case Ms.DT_INT64:case Ms.DT_INT8:case Ms.DT_UINT8:return"int32";case Ms.DT_BOOL:return"bool";case Ms.DT_DOUBLE:return"float32";case Ms.DT_STRING:return"string";case Ms.DT_COMPLEX64:case Ms.DT_COMPLEX128:return"complex64";default:return null}}function _R(n,e,t){const r=n[e];return r&&r.func?r.func.name:t}function v2(n,e,t){const r=n[e];return r&&r.type?WC(r.type):t}function w2(n,e,t){const r=n[e];return r&&r.list&&r.list.type?r.list.type.map(s=>WC(s)):t}function bO(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function S2(n,e,t){const r=n[e];return r&&r.shape?bO(r.shape):t}function T2(n,e,t){const r=n[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(s=>typeof s=="number"?s:parseInt(s,10)):t}function I2(n,e,t,r=!1){const s=n[e];return s&&s.list&&s.list.s?s.list.s.map(i=>yO(i,r)):t}function k2(n,e,t){const r=n[e];return r&&r.list&&r.list.shape?r.list.shape.map(s=>bO(s)):t}function C2(n,e,t){const r=n[e];return r&&r.list&&r.list.b?r.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hwe{constructor(e,t,r){this.node=e,this.tensorMap=t,this.context=r,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,i)=>(s[i]=this.getAttr(i),s),{}))}getInput(e){return Mr(e,this.tensorMap,this.context)}getAttr(e,t){const r=this.node.rawAttrs[e];if(r.tensor!=null)return Mr(e,this.tensorMap,this.context);if(r.i!=null||r.f!=null)return x2(this.node.rawAttrs,e,t);if(r.s!=null)return y2(this.node.rawAttrs,e,t);if(r.b!=null)return b2(this.node.rawAttrs,e,t);if(r.shape!=null)return S2(this.node.rawAttrs,e,t);if(r.type!=null)return v2(this.node.rawAttrs,e,t);if(r.list!=null){if(r.list.i!=null||r.list.f!=null)return T2(this.node.rawAttrs,e,t);if(r.list.s!=null)return I2(this.node.rawAttrs,e,t);if(r.list.shape!=null)return k2(this.node.rawAttrs,e,t);if(r.list.b!=null)return C2(this.node.rawAttrs,e,t);if(r.list.type!=null)return w2(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pr=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:Z2,abs:Yn,acos:q2,acosh:eT,add:Ne,addN:bG,all:cx,any:df,argMax:Su,argMin:tT,asin:nT,asinh:rT,atan:sT,atan2:iT,atanh:aT,avgPool:Lm,avgPool3d:lT,basicLSTMCell:xG,batchNorm:bh,batchNorm2d:uT,batchNorm3d:cT,batchNorm4d:dT,batchToSpaceND:Am,bincount:hT,bitwiseAnd:vG,booleanMaskAsync:eO,broadcastArgs:wG,broadcastTo:du,buffer:Et,cast:Oe,ceil:pT,clipByValue:ms,clone:wa,complex:no,concat:$n,concat1d:fT,concat2d:mT,concat3d:gT,concat4d:yT,conv1d:dx,conv2d:ro,conv2dTranspose:hx,conv3d:xT,conv3dTranspose:vT,cos:zm,cosh:px,cosineWindow:zx,cumprod:ff,cumsum:fx,denseBincount:I0,depthToSpace:wT,depthwiseConv2d:xh,diag:SG,dilation2d:ST,div:at,divNoNan:TT,dot:IT,dropout:jT,einsum:Ql,elu:vh,enclosingPowerOfTwo:QT,ensureShape:TG,equal:As,erf:kT,euclideanNorm:_T,exp:gs,expandDims:Cr,expm1:MT,eye:mx,fft:Hm,fill:Xu,floor:Sh,floorDiv:ux,fused:aO,gather:Th,gatherND:sO,greater:ts,greaterEqual:po,ifft:fd,imag:Dm,image:Si,inTopKAsync:iO,irfft:Mx,isFinite:NT,isInf:ET,isNaN:RT,leakyRelu:Pm,less:cd,lessEqual:xl,linalg:eI,linspace:IG,localResponseNormalization:LT,log:zs,log1p:Fm,logSigmoid:AT,logSoftmax:yx,logSumExp:Gm,logicalAnd:Ti,logicalNot:Om,logicalOr:bx,logicalXor:zT,losses:gA,lowerBound:kG,matMul:Lt,max:ni,maxPool:Wm,maxPool3d:DT,maxPoolWithArgmax:CG,maximum:Ma,mean:Mn,meshgrid:_G,min:ud,minimum:ll,mirrorPad:PT,mod:FT,moments:Vm,movingAverage:tO,mul:ne,multiRNNCell:MG,multinomial:NG,neg:dn,norm:wh,notEqual:Cu,oneHot:dd,ones:ds,onesLike:Ds,op:ee,outerProduct:EG,pad:fo,pad1d:RG,pad2d:LG,pad3d:AG,pad4d:zG,pool:GT,pow:so,prelu:Bm,print:J2,prod:OT,raggedGather:DG,raggedRange:PG,raggedTensorToTensor:FG,rand:GG,randomGamma:VG,randomNormal:xx,randomStandardNormal:$G,randomUniform:vl,randomUniformInt:BG,range:_u,real:hd,reciprocal:VT,relu:Qi,relu6:vx,reshape:se,reverse:ri,reverse1d:XG,reverse2d:UG,reverse3d:ZG,reverse4d:HG,rfft:Km,round:wx,rsqrt:Sx,scalar:ct,scatterND:nO,searchSorted:Sv,selu:Tx,separableConv2d:Ix,setdiff1dAsync:KG,sigmoid:$i,sign:$T,signal:mA,sin:kx,sinh:Cx,slice:$t,slice1d:Xm,slice2d:_x,slice3d:Um,slice4d:pd,softmax:Zm,softplus:Uu,spaceToBatchND:$m,sparse:yA,sparseToDense:rO,spectral:fA,split:hs,sqrt:Rr,square:nn,squaredDifference:Nx,squeeze:wl,stack:Wr,step:Hu,stridedSlice:BT,string:bA,sub:Ye,sum:Qe,tan:XT,tanh:Iu,tensor:wn,tensor1d:Nr,tensor2d:qo,tensor3d:UT,tensor4d:YG,tensor5d:jG,tensor6d:QG,tensorScatterUpdate:JG,tile:Ys,topk:HT,transpose:Gt,truncatedNormal:Rx,unique:KT,unsortedSegmentSum:Lx,unstack:si,upperBound:qG,variable:YT,where:hr,whereAsync:zC,zeros:jn,zerosLike:Bt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pwe=(n,e,t,r=Pr)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(N("a",n,e,t),N("b",n,e,t))];case"AddN":return[r.addN(N("tensors",n,e,t))];case"FloorMod":case"Mod":return[r.mod(N("a",n,e,t),N("b",n,e,t))];case"Mul":return[r.mul(N("a",n,e,t),N("b",n,e,t))];case"RealDiv":case"Div":return[r.div(N("a",n,e,t),N("b",n,e,t))];case"DivNoNan":return[r.divNoNan(N("a",n,e,t),N("b",n,e,t))];case"FloorDiv":return[r.floorDiv(N("a",n,e,t),N("b",n,e,t))];case"Sub":return[r.sub(N("a",n,e,t),N("b",n,e,t))];case"Minimum":return[r.minimum(N("a",n,e,t),N("b",n,e,t))];case"Maximum":return[r.maximum(N("a",n,e,t),N("b",n,e,t))];case"Pow":return[r.pow(N("a",n,e,t),N("b",n,e,t))];case"SquaredDifference":return[r.squaredDifference(N("a",n,e,t),N("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fwe=(n,e,t,r=Pr)=>{switch(n.op){case"Abs":case"ComplexAbs":return[r.abs(N("x",n,e,t))];case"Acos":return[r.acos(N("x",n,e,t))];case"Acosh":return[r.acosh(N("x",n,e,t))];case"Asin":return[r.asin(N("x",n,e,t))];case"Asinh":return[r.asinh(N("x",n,e,t))];case"Atan":return[r.atan(N("x",n,e,t))];case"Atan2":return[r.atan2(N("x",n,e,t),N("y",n,e,t))];case"Atanh":return[r.atanh(N("x",n,e,t))];case"Ceil":return[r.ceil(N("x",n,e,t))];case"Complex":return[r.complex(N("real",n,e,t),N("imag",n,e,t))];case"Cos":return[r.cos(N("x",n,e,t))];case"Cosh":return[r.cosh(N("x",n,e,t))];case"Elu":return[r.elu(N("x",n,e,t))];case"Erf":return[r.erf(N("x",n,e,t))];case"Exp":return[r.exp(N("x",n,e,t))];case"Expm1":return[r.expm1(N("x",n,e,t))];case"Floor":return[r.floor(N("x",n,e,t))];case"Log":return[r.log(N("x",n,e,t))];case"Log1p":return[r.log1p(N("x",n,e,t))];case"Imag":return[r.imag(N("x",n,e,t))];case"Neg":return[r.neg(N("x",n,e,t))];case"Reciprocal":return[r.reciprocal(N("x",n,e,t))];case"Real":return[r.real(N("x",n,e,t))];case"Relu":return[r.relu(N("x",n,e,t))];case"Round":return[r.round(N("x",n,e,t))];case"Selu":return[r.selu(N("x",n,e,t))];case"Sigmoid":return[r.sigmoid(N("x",n,e,t))];case"Sin":return[r.sin(N("x",n,e,t))];case"Sign":return[r.sign(N("x",n,e,t))];case"Sinh":return[r.sinh(N("x",n,e,t))];case"Softplus":return[r.softplus(N("x",n,e,t))];case"Sqrt":return[r.sqrt(N("x",n,e,t))];case"Square":return[r.square(N("x",n,e,t))];case"Tanh":return[r.tanh(N("x",n,e,t))];case"Tan":return[r.tan(N("x",n,e,t))];case"ClipByValue":return[r.clipByValue(N("x",n,e,t),N("clipValueMin",n,e,t),N("clipValueMax",n,e,t))];case"Relu6":return[r.relu6(N("x",n,e,t))];case"Rsqrt":return[r.rsqrt(Mr(n.inputNames[0],e,t))];case"LeakyRelu":return[r.leakyRelu(N("x",n,e,t),N("alpha",n,e,t))];case"Prelu":return[r.prelu(N("x",n,e,t),N("alpha",n,e,t))];case"IsNan":return[r.isNaN(Mr(n.inputNames[0],e,t))];case"IsInf":return[r.isInf(Mr(n.inputNames[0],e,t))];case"IsFinite":return[r.isFinite(Mr(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gi(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){P(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let r=0;r<n.length;r++){const s=n[r],i=e[r];P(s<0||i<0||s===i,()=>t+` Shapes ${n} and ${e} must match`)}}}function MR(n){return!(typeof n=="number"||n.some(e=>e<0))}function Gp(n,e,t){let r=_2(n,t);const s=!MR(r);if(s&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&e.forEach(i=>{r=_2(i.shape,r)}),!MR(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function _2(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let r=0;r<n.length;++r){const s=n[r],i=e[r];if(s>=0&&i>=0&&s!==i)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[r]=s>=0?s:i}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mwe{constructor(e,t,r,s,i,a,o){this.name=e,this.dtype=t,this.maxSize=r,this.elementShape=s,this.identicalElementShapes=i,this.dynamicSize=a,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=ct(0),Pn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const r=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),gi(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),r.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(r.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);r.tensor=t,Pn(t),r.written=!0,this.tensors[e]=r}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((r,s)=>this.write(r,t[s]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return wn([],[0].concat(this.elementShape));const r=this.readMany(e);return gi(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),Wr(r,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return wn([],[0].concat(this.elementShape));const t=[];for(let s=0;s<this.size();s++)t.push(s);const r=this.readMany(t);return gi(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),$n(r,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const r=Math.max(...e);if(!this.dynamicSize&&r>=this.maxSize)throw new Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(e,si(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let r=0;const s=e.map(l=>(r+=l,r));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const i=r===0?0:t.size/r,a=[];le(()=>{t=se(t,[1,r,i]);for(let l=0;l<e.length;++l){const u=[0,l===0?0:s[l-1],0],d=[1,e[l],i];a[l]=se($t(t,u,d),this.elementShape)}return a});const o=[];for(let l=0;l<e.length;l++)o[l]=l;this.writeMany(o,a)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pu{get id(){return this.idTensor.id}constructor(e,t,r,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=r,e?.forEach(i=>{if(r!==i.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${i.dtype}`);gi(t,i.shape,"TensorList shape mismatch: "),Pn(i)}),this.idTensor=ct(0),this.maxNumElements=s,Pn(this.idTensor)}copy(){return new Pu([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,r=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(r!==-1&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);gi(e,this.elementShape,"TensorList shape mismatch: ");const s=Gp(this.elementShape,this.tensors,e);return le(()=>{const i=this.tensors.map(a=>se(a,s));return Wr(i,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const r=Gp(this.elementShape,this.tensors,e),s=this.tensors.pop();return s.kept=!1,gi(s.shape,e,"TensorList shape mismatch: "),se(s,r)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(gi(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Pn(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new Pu([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let r=0;r<Math.min(this.tensors.length,e);++r)t.tensors[r]=this.tensors[r];return t}getItem(e,t,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);gi(this.tensors[e].shape,t,"TensorList shape mismatch: ");const s=Gp(this.elementShape,this.tensors,t);return se(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);gi(this.elementShape,t.shape,"TensorList shape mismatch: "),Pn(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,r){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);gi(this.elementShape,r,"TensorList shape mismatch: "),e=e.slice(0,this.size());const s=Gp(this.elementShape,this.tensors,r);return e.length===0?wn([],[0].concat(s)):le(()=>{const i=e.map(a=>se(this.tensors[a],s));return Wr(i,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);gi(this.elementShape,t,"TensorList shape mismatch: ");const r=Gp(this.elementShape,this.tensors,t);return this.size()===0?wn([],[0].concat(r)):le(()=>{const s=this.tensors.map(i=>se(i,r));return $n(s,0)})}}function gwe(n,e,t){const r=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const s=n.shape.slice(1);gi(s,e,"TensorList shape mismatch: ");const i=si(n);return new Pu(i,e,r)}function ywe(n,e,t,r){return new Pu([],n,e,r)}function bwe(n,e,t,r){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const s=Math.max(...e);if(r!=null&&r!==-1&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const i=new Pu([],t,n.dtype,r),a=si(n,0);return e.forEach((o,l)=>{i.setItem(o,a[l])}),i}function xwe(n,e,t){let r=0;const s=e.map(d=>(r+=d,r));if(r!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${n.shape}`);const i=n.shape.slice(1),a=_2(i,t),o=r===0?0:n.size/r,l=le(()=>{const d=[];n=se(n,[1,r,o]);for(let h=0;h<e.length;++h){const f=[0,h===0?0:s[h-1],0],m=[1,e[h],o];d[h]=se($t(n,f,m),a)}return n.dispose(),d}),u=new Pu([],t,n.dtype,e.length);for(let d=0;d<l.length;d++)u.setItem(d,l[d]);return u}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vwe=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const r=N("thenBranch",n,e,t),s=N("elseBranch",n,e,t),i=N("cond",n,e,t),a=N("args",n,e,t);return(await i.data())[0]?t.functionMap[r].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap):t.functionMap[s].executeFunctionAsync(a,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const r=N("body",n,e,t),s=N("cond",n,e,t),i=N("args",n,e,t),a=await t.functionMap[s].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap),o=i.map(d=>d.id);let l=await a[0].data();a.forEach(d=>{!d.kept&&o.indexOf(d.id)===-1&&d.dispose()});let u=i;for(;l[0];){const d=u;u=await t.functionMap[r].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);const h=u.map(m=>m.id);d.forEach(m=>{!m.kept&&o.indexOf(m.id)===-1&&h.indexOf(m.id)===-1&&m.dispose()});const f=await t.functionMap[s].executeFunctionAsync(u,t.tensorArrayMap,t.tensorListMap);l=await f[0].data(),f.forEach(m=>{!m.kept&&o.indexOf(m.id)===-1&&h.indexOf(m.id)===-1&&m.dispose()})}return u}case"LoopCond":{const r=N("pred",n,e,t);return[Za(r)]}case"Switch":{const r=N("pred",n,e,t);let s=N("data",n,e,t);return s.kept||(s=Za(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=n.inputNames.find(s=>Mr(s,e,t)!==void 0);if(r){const s=Mr(r,e,t);return[Za(s)]}return}case"Enter":{const r=N("frameName",n,e,t),s=N("tensor",n,e,t);return t.enterFrame(r),[Za(s)]}case"Exit":{const r=N("tensor",n,e,t);return t.exitFrame(),[Za(r)]}case"NextIteration":{const r=N("tensor",n,e,t);return t.nextIteration(),[Za(r)]}case"TensorArrayV3":{const r=N("size",n,e,t),s=N("dtype",n,e,t),i=N("elementShape",n,e,t),a=N("dynamicSize",n,e,t),o=N("clearAfterRead",n,e,t),l=N("identicalElementShapes",n,e,t),u=N("name",n,e,t),d=new mwe(u,s,r,i,l,a,o);return t.addTensorArray(d),[d.idTensor,ct(1)]}case"TensorArrayWriteV3":{const r=N("tensorArrayId",n,e,t),s=N("index",n,e,t),i=N("tensor",n,e,t),a=t.getTensorArray(r.id);return a.write(s,i),[a.idTensor]}case"TensorArrayReadV3":{const r=N("tensorArrayId",n,e,t),s=N("index",n,e,t);return[t.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=N("tensorArrayId",n,e,t),s=N("indices",n,e,t),i=N("dtype",n,e,t);return[t.getTensorArray(r.id).gather(s,i)]}case"TensorArrayScatterV3":{const r=N("tensorArrayId",n,e,t),s=N("indices",n,e,t),i=N("tensor",n,e,t),a=t.getTensorArray(r.id);return a.scatter(s,i),[a.idTensor]}case"TensorArrayConcatV3":{const r=N("tensorArrayId",n,e,t),s=t.getTensorArray(r.id),i=N("dtype",n,e,t);return[s.concat(i)]}case"TensorArraySplitV3":{const r=N("tensorArrayId",n,e,t),s=N("tensor",n,e,t),i=N("lengths",n,e,t),a=t.getTensorArray(r.id);return a.split(i,s),[a.idTensor]}case"TensorArraySizeV3":{const r=N("tensorArrayId",n,e,t),s=t.getTensorArray(r.id);return[ct(s.size(),"int32")]}case"TensorArrayCloseV3":{const r=N("tensorArrayId",n,e,t),s=t.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=N("tensorListId",n,e,t),s=N("index",n,e,t),i=N("tensor",n,e,t),a=t.getTensorList(r.id);return a.setItem(s,i),[a.idTensor]}case"TensorListGetItem":{const r=N("tensorListId",n,e,t),s=N("index",n,e,t),i=N("elementShape",n,e,t),a=N("elementDType",n,e,t);return[t.getTensorList(r.id).getItem(s,i,a)]}case"TensorListScatterV2":case"TensorListScatter":{const r=N("indices",n,e,t),s=N("tensor",n,e,t),i=N("elementShape",n,e,t),a=N("numElements",n,e,t),o=bwe(s,r,i,a);return t.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=N("elementShape",n,e,t),s=N("elementDType",n,e,t);let i;n.op==="TensorListReserve"?i="numElements":i="maxNumElements";const a=N(i,n,e,t),o=n.op==="TensorListReserve"?-1:a,l=ywe(r,s,a,o);return t.addTensorList(l),[l.idTensor]}case"TensorListGather":{const r=N("tensorListId",n,e,t),s=N("indices",n,e,t),i=N("elementShape",n,e,t),a=N("elementDType",n,e,t);return[t.getTensorList(r.id).gather(s,a,i)]}case"TensorListStack":{const r=N("tensorListId",n,e,t),s=N("elementShape",n,e,t),i=N("elementDType",n,e,t),a=N("numElements",n,e,t);return[t.getTensorList(r.id).stack(s,i,a)]}case"TensorListFromTensor":{const r=N("tensor",n,e,t),s=N("elementShape",n,e,t),i=N("elementDType",n,e,t),a=gwe(r,s,i);return t.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=N("tensorListId",n,e,t),s=t.getTensorList(r.id),i=N("dtype",n,e,t),a=N("elementShape",n,e,t);return[s.concat(i,a)]}case"TensorListPushBack":{const r=N("tensorListId",n,e,t),s=N("tensor",n,e,t),i=t.getTensorList(r.id);return i.pushBack(s),[i.idTensor]}case"TensorListPopBack":{const r=N("tensorListId",n,e,t),s=N("elementShape",n,e,t),i=N("elementDType",n,e,t);return[t.getTensorList(r.id).popBack(s,i)]}case"TensorListSplit":{const r=N("tensor",n,e,t),s=N("elementShape",n,e,t),i=N("lengths",n,e,t),a=xwe(r,i,s);return t.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=N("tensorListId",n,e,t),s=t.getTensorList(r.id);return[ct(s.size(),"int32")]}case"TensorListResize":{const r=N("tensorListId",n,e,t),s=N("size",n,e,t),i=t.getTensorList(r.id).resize(s);return t.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NR(n,e,t){const[r,s]=N("fusedOps",n,e,t),i=r==="biasadd",a=!i,o=s==="prelu",l=r==="fusedbatchnorm",u=N("numArgs",n,e,t);if(i){if(o&&u!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&i&&u!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const d=N("strides",n,e,t),h=h0(n,e,t),f=N("dataFormat",n,e,t).toUpperCase(),m=N("dilations",n,e,t);let[x,g]=N("args",n,e,t);a&&(g=x,x=void 0);const y=N("leakyreluAlpha",n,e,t);return{stride:d,pad:h,dataFormat:f,dilations:m,biasArg:x,preluArg:g,activationFunc:s,leakyreluAlpha:y}}const wwe=(n,e,t,r=Pr)=>{switch(n.op){case"Conv1D":{const s=N("stride",n,e,t),i=N("pad",n,e,t),a=N("dataFormat",n,e,t).toUpperCase(),o=N("dilation",n,e,t);return[r.conv1d(N("x",n,e,t),N("filter",n,e,t),s,i,a,o)]}case"Conv2D":{const s=N("strides",n,e,t),i=h0(n,e,t),a=N("dataFormat",n,e,t).toUpperCase(),o=N("dilations",n,e,t);return[r.conv2d(N("x",n,e,t),N("filter",n,e,t),[s[1],s[2]],i,a,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:s,pad:i,dataFormat:a,dilations:o,biasArg:l,preluArg:u,activationFunc:d,leakyreluAlpha:h}=NR(n,e,t);return[r.fused.conv2d({x:N("x",n,e,t),filter:N("filter",n,e,t),strides:[s[1],s[2]],pad:i,dataFormat:a,dilations:[o[1],o[2]],bias:l,activation:d,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:i,dataFormat:a,dilations:o,biasArg:l,preluArg:u,activationFunc:d,leakyreluAlpha:h}=NR(n,e,t);return[r.fused.depthwiseConv2d({x:N("x",n,e,t),filter:N("filter",n,e,t),strides:[s[1],s[2]],pad:i,dataFormat:a,dilations:[o[1],o[2]],bias:l,activation:d,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=N("outputShape",n,e,t),i=N("strides",n,e,t),a=h0(n,e,t);return[r.conv2dTranspose(N("x",n,e,t),N("filter",n,e,t),s,[i[1],i[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=N("strides",n,e,t),i=h0(n,e,t),a=N("dilations",n,e,t),o=N("dataFormat",n,e,t).toUpperCase();return[r.depthwiseConv2d(N("input",n,e,t),N("filter",n,e,t),[s[1],s[2]],i,o,[a[1],a[2]])]}case"Conv3D":{const s=N("strides",n,e,t),i=N("pad",n,e,t),a=N("dataFormat",n,e,t).toUpperCase(),o=N("dilations",n,e,t);return[r.conv3d(N("x",n,e,t),N("filter",n,e,t),[s[1],s[2],s[3]],i,a,[o[1],o[2],o[3]])]}case"AvgPool":{const s=N("strides",n,e,t),i=N("pad",n,e,t),a=N("kernelSize",n,e,t);return[r.avgPool(N("x",n,e,t),[a[1],a[2]],[s[1],s[2]],i)]}case"MaxPool":{const s=N("strides",n,e,t),i=N("pad",n,e,t),a=N("kernelSize",n,e,t);return[r.maxPool(N("x",n,e,t),[a[1],a[2]],[s[1],s[2]],i)]}case"MaxPoolWithArgmax":{const s=N("strides",n,e,t),i=N("pad",n,e,t),a=N("kernelSize",n,e,t),o=N("includeBatchInIndex",n,e,t),{result:l,indexes:u}=r.maxPoolWithArgmax(N("x",n,e,t),[a[1],a[2]],[s[1],s[2]],i,o);return[l,u]}case"AvgPool3D":{const s=N("strides",n,e,t),i=N("pad",n,e,t),a=N("kernelSize",n,e,t);return[r.avgPool3d(N("x",n,e,t),[a[1],a[2],a[3]],[s[1],s[2],s[3]],i)]}case"MaxPool3D":{const s=N("strides",n,e,t),i=N("pad",n,e,t),a=N("kernelSize",n,e,t);return[r.maxPool3d(N("x",n,e,t),[a[1],a[2],a[3]],[s[1],s[2],s[3]],i)]}case"Dilation2D":{const s=N("strides",n,e,t),i=N("pad",n,e,t),a=N("dilations",n,e,t),o=s[1],l=s[2],u=a[1],d=a[2];return[r.dilation2d(N("x",n,e,t),N("filter",n,e,t),[o,l],i,[u,d],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Swe=(n,e,t,r=Pr)=>{switch(n.op){case"Fill":{const s=N("shape",n,e,t),i=N("dtype",n,e,t),a=N("value",n,e,t);return[r.fill(s,a,i)]}case"LinSpace":{const s=N("start",n,e,t),i=N("stop",n,e,t),a=N("num",n,e,t);return[r.linspace(s,i,a)]}case"Multinomial":{const s=N("logits",n,e,t),i=N("numSamples",n,e,t),a=N("seed",n,e,t);return[r.multinomial(s,i,a)]}case"OneHot":{const s=N("indices",n,e,t),i=N("depth",n,e,t),a=N("onValue",n,e,t),o=N("offValue",n,e,t),l=N("dtype",n,e,t);return[r.oneHot(s,i,a,o,l)]}case"Ones":return[r.ones(N("shape",n,e,t),N("dtype",n,e,t))];case"OnesLike":return[r.onesLike(N("x",n,e,t))];case"RandomStandardNormal":return[r.randomStandardNormal(N("shape",n,e,t),N("dtype",n,e,t),N("seed",n,e,t))];case"RandomUniform":return[r.randomUniform(N("shape",n,e,t),N("minval",n,e,t),N("maxval",n,e,t),N("dtype",n,e,t))];case"RandomUniformInt":return[r.randomUniformInt(N("shape",n,e,t),N("minval",n,e,t),N("maxval",n,e,t),N("seed",n,e,t))];case"Range":{const s=N("start",n,e,t),i=N("stop",n,e,t),a=N("step",n,e,t);return[r.range(s,i,a,N("dtype",n,e,t))]}case"TruncatedNormal":{const s=N("shape",n,e,t),i=N("mean",n,e,t),a=N("stdDev",n,e,t),o=N("seed",n,e,t);return[r.truncatedNormal(s,i,a,N("dtype",n,e,t),o)]}case"Zeros":return[r.zeros(N("shape",n,e,t),N("dtype",n,e,t))];case"ZerosLike":return[r.zerosLike(N("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xS(n,e,t){const r=N("boxes",n,e,t),s=N("scores",n,e,t),i=N("maxOutputSize",n,e,t),a=N("iouThreshold",n,e,t),o=N("scoreThreshold",n,e,t),l=N("softNmsSigma",n,e,t);return{boxes:r,scores:s,maxOutputSize:i,iouThreshold:a,scoreThreshold:o,softNmsSigma:l}}const Twe=async(n,e,t,r,s=Pr)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:i,scores:a,maxOutputSize:o,iouThreshold:l,scoreThreshold:u,softNmsSigma:d}=xS(n,e,t),h=await s.image.nonMaxSuppressionWithScoreAsync(i,a,o,l,u,d);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:i,scores:a,maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=xS(n,e,t),d=N("padToMaxOutputSize",n,e,t),h=await s.image.nonMaxSuppressionPaddedAsync(i,a,o,l,u,d);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:i,scores:a,maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=xS(n,e,t);return[await s.image.nonMaxSuppressionAsync(i,a,o,l,u)]}case"Where":{const i=s.cast(N("condition",n,e,t),"bool"),a=[await s.whereAsync(i)];return i.dispose(),a}case"ListDiff":return s.setdiff1dAsync(N("x",n,e,t),N("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iwe=(n,e,t,r=Pr)=>{switch(n.op){case"LowerBound":{const s=N("sortedSequence",n,e,t),i=N("values",n,e,t);return[r.lowerBound(s,i)]}case"TopKV2":{const s=N("x",n,e,t),i=N("k",n,e,t),a=N("sorted",n,e,t),o=r.topk(s,i,a);return[o.values,o.indices]}case"UpperBound":{const s=N("sortedSequence",n,e,t),i=N("values",n,e,t);return[r.upperBound(s,i)]}case"Unique":{const s=N("x",n,e,t),i=r.unique(s);return[i.values,i.indices]}case"UniqueV2":{const s=N("x",n,e,t),i=N("axis",n,e,t),a=r.unique(s,i);return[a.values,a.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kwe=(n,e,t,r=Pr)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const s=N("default",n,e,t);return[Mr(n.name,e,t)||s];case"Placeholder":return[Mr(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const d=N("x",n,e,t);return[Za(d)]}case"IdentityN":return N("x",n,e,t).map(d=>Za(d));case"Snapshot":const i=N("x",n,e,t);return[Za(i)];case"Shape":return[r.tensor1d(N("x",n,e,t).shape,"int32")];case"ShapeN":return N("x",n,e,t).map(d=>r.tensor1d(d.shape));case"Size":return[r.scalar(N("x",n,e,t).size,"int32")];case"Rank":return[r.scalar(N("x",n,e,t).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=N("x",n,e,t),o=N("data",n,e,t),l=N("message",n,e,t),u=N("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let d=0;d<o.length;d++)console.log(Array.prototype.slice.call(o[d].dataSync()).slice(0,u));return[a];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cwe{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ct(0),this.tensorMap=new Map,Pn(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ct(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const r=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),le(()=>{const s=si(t),i=r.length,a=s.length;P(i===a,()=>`The number of elements doesn't match, keys has ${i} elements, the values has ${a} elements.`);for(let o=0;o<i;o++){const l=r[o],u=s[o];Pn(u),this.tensorMap.set(l,u)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const r=await e.data();return le(()=>{const s=[];for(let i=0;i<r.length;i++){const a=r[i],o=this.findWithDefault(a,t);s.push(o)}return Wr(s)})}findWithDefault(e,t){return this.tensorMap.get(e)??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _we=async(n,e,t,r)=>{switch(n.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(n.name);if(s!=null)return[s];{const i=N("keyDType",n,e,t),a=N("valueDType",n,e,t),o=new Cwe(i,a);return r.addHashTable(n.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=N("tableHandle",n,e,t,r),i=N("keys",n,e,t),a=N("values",n,e,t);return[await r.getHashTableById(s.id).import(i,a)]}case"LookupTableFind":case"LookupTableFindV2":{const s=N("tableHandle",n,e,t,r),i=N("keys",n,e,t),a=N("defaultValue",n,e,t);return[await r.getHashTableById(s.id).find(i,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=N("tableHandle",n,e,t,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mwe=(n,e,t,r=Pr)=>{switch(n.op){case"ResizeBilinear":{const s=N("images",n,e,t),i=N("size",n,e,t),a=N("alignCorners",n,e,t),o=N("halfPixelCenters",n,e,t);return[r.image.resizeBilinear(s,[i[0],i[1]],a,o)]}case"ResizeNearestNeighbor":{const s=N("images",n,e,t),i=N("size",n,e,t),a=N("alignCorners",n,e,t),o=N("halfPixelCenters",n,e,t);return[r.image.resizeNearestNeighbor(s,[i[0],i[1]],a,o)]}case"CropAndResize":{const s=N("image",n,e,t),i=N("boxes",n,e,t),a=N("boxInd",n,e,t),o=N("cropSize",n,e,t),l=N("method",n,e,t),u=N("extrapolationValue",n,e,t);return[r.image.cropAndResize(s,i,a,o,l,u)]}case"ImageProjectiveTransformV3":{const s=N("images",n,e,t),i=N("transforms",n,e,t),a=N("outputShape",n,e,t),o=N("fillValue",n,e,t),l=N("interpolation",n,e,t),u=N("fillMode",n,e,t);return[r.image.transform(s,i,l.toLowerCase(),u.toLowerCase(),o,a)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nwe=(n,e,t,r=Pr)=>{switch(n.op){case"Equal":return[r.equal(N("a",n,e,t),N("b",n,e,t))];case"NotEqual":return[r.notEqual(N("a",n,e,t),N("b",n,e,t))];case"Greater":return[r.greater(N("a",n,e,t),N("b",n,e,t))];case"GreaterEqual":return[r.greaterEqual(N("a",n,e,t),N("b",n,e,t))];case"Less":return[r.less(N("a",n,e,t),N("b",n,e,t))];case"LessEqual":return[r.lessEqual(N("a",n,e,t),N("b",n,e,t))];case"LogicalAnd":return[r.logicalAnd(N("a",n,e,t),N("b",n,e,t))];case"LogicalNot":return[r.logicalNot(N("a",n,e,t))];case"LogicalOr":return[r.logicalOr(N("a",n,e,t),N("b",n,e,t))];case"Select":case"SelectV2":return[r.where(N("condition",n,e,t),N("a",n,e,t),N("b",n,e,t))];case"BitwiseAnd":return[r.bitwiseAnd(N("a",n,e,t),N("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ewe=(n,e,t,r=Pr)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(N("a",n,e,t),N("b",n,e,t),N("transposeA",n,e,t),N("transposeB",n,e,t))];case"Einsum":return[r.einsum(N("equation",n,e,t),...N("tensors",n,e,t))];case"Transpose":return[r.transpose(N("x",n,e,t),N("perm",n,e,t))];case"_FusedMatMul":const[s,i]=N("fusedOps",n,e,t),a=s==="biasadd",o=i==="prelu",l=N("numArgs",n,e,t),u=N("leakyreluAlpha",n,e,t);if(a){if(o&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[d,h]=N("args",n,e,t);return[r.fused.matMul({a:N("a",n,e,t),b:N("b",n,e,t),transposeA:N("transposeA",n,e,t),transposeB:N("transposeB",n,e,t),bias:d,activation:i,preluActivationWeights:h,leakyreluAlpha:u})];case"MatrixBandPart":return[r.linalg.bandPart(N("a",n,e,t),N("numLower",n,e,t),N("numUpper",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rwe=(n,e,t,r=Pr)=>{switch(n.op){case"EuclideanNorm":return[r.euclideanNorm(N("x",n,e,t),N("axis",n,e,t),N("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[r.batchNorm(N("x",n,e,t),N("mean",n,e,t),N("variance",n,e,t),N("offset",n,e,t),N("scale",n,e,t),N("epsilon",n,e,t))];case"FusedBatchNormV3":return[r.batchNorm(N("x",n,e,t),N("mean",n,e,t),N("variance",n,e,t),N("offset",n,e,t),N("scale",n,e,t),N("epsilon",n,e,t))];case"LRN":return[r.localResponseNormalization(N("x",n,e,t),N("radius",n,e,t),N("bias",n,e,t),N("alpha",n,e,t),N("beta",n,e,t))];case"Softmax":return[r.softmax(N("x",n,e,t))];case"LogSoftmax":return[r.logSoftmax(N("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lwe=(n,e,t,r=Pr)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:i}=r.raggedGather(N("paramsNestedSplits",n,e,t),N("paramsDenseValues",n,e,t),N("indices",n,e,t),N("outputRaggedRank",n,e,t));return s.concat(i)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:i}=r.raggedRange(N("starts",n,e,t),N("limits",n,e,t),N("splits",n,e,t));return[s,i]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(N("shape",n,e,t),N("values",n,e,t),N("defaultValue",n,e,t),N("rowPartitionTensors",n,e,t),N("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Awe=(n,e,t,r=Pr)=>{switch(n.op){case"Max":{const o=N("axis",n,e,t),l=N("keepDims",n,e,t);return[r.max(N("x",n,e,t),o,l)]}case"Mean":{const o=N("axis",n,e,t),l=N("keepDims",n,e,t);return[r.mean(N("x",n,e,t),o,l)]}case"Min":{const o=N("axis",n,e,t),l=N("keepDims",n,e,t);return[r.min(N("x",n,e,t),o,l)]}case"Sum":{const o=N("axis",n,e,t),l=N("keepDims",n,e,t);return[r.sum(N("x",n,e,t),o,l)]}case"All":{const o=N("axis",n,e,t),l=N("keepDims",n,e,t);return[r.all(N("x",n,e,t),o,l)]}case"Any":{const o=N("axis",n,e,t),l=N("keepDims",n,e,t);return[r.any(N("x",n,e,t),o,l)]}case"ArgMax":{const o=N("axis",n,e,t);return[r.argMax(N("x",n,e,t),o)]}case"ArgMin":{const o=N("axis",n,e,t);return[r.argMin(N("x",n,e,t),o)]}case"Prod":{const o=N("axis",n,e,t),l=N("keepDims",n,e,t);return[r.prod(N("x",n,e,t),o,l)]}case"Cumprod":{const o=N("axis",n,e,t),l=N("exclusive",n,e,t),u=N("reverse",n,e,t);return[r.cumprod(N("x",n,e,t),o,l,u)]}case"Cumsum":{const o=N("axis",n,e,t),l=N("exclusive",n,e,t),u=N("reverse",n,e,t);return[r.cumsum(N("x",n,e,t),o,l,u)]}case"Bincount":const s=N("x",n,e,t),i=N("weights",n,e,t),a=N("size",n,e,t);return[r.bincount(s,i,a)];case"DenseBincount":{const o=N("x",n,e,t),l=N("weights",n,e,t),u=N("size",n,e,t),d=N("binaryOutput",n,e,t);return[r.denseBincount(o,l,u,d)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zwe=(n,e,t,r=Pr)=>{switch(n.op){case"ConcatV2":case"Concat":{const s=N("n",n,e,t),i=N("axis",n,e,t);let a=N("tensors",n,e,t);return a=a.slice(0,s),[r.concat(a,i)]}case"Gather":{const s=N("x",n,e,t),i=N("indices",n,e,t);return[r.gather(s,r.cast(i,"int32"),0)]}case"GatherV2":{const s=N("axis",n,e,t),i=N("batchDims",n,e,t),a=N("x",n,e,t),o=N("indices",n,e,t);return[r.gather(a,r.cast(o,"int32"),s,i)]}case"Reverse":{const s=N("dims",n,e,t),i=[];for(let o=0;o<s.length;o++)s[o]&&i.push(o);const a=N("x",n,e,t);return[r.reverse(a,i)]}case"ReverseV2":{const s=N("axis",n,e,t),i=N("x",n,e,t);return[r.reverse(i,s)]}case"Slice":{const s=N("begin",n,e,t),i=N("size",n,e,t);return[r.slice(N("x",n,e,t),s,i)]}case"StridedSlice":{const s=N("begin",n,e,t),i=N("end",n,e,t),a=N("strides",n,e,t),o=N("beginMask",n,e,t),l=N("endMask",n,e,t),u=N("ellipsisMask",n,e,t),d=N("newAxisMask",n,e,t),h=N("shrinkAxisMask",n,e,t),f=N("x",n,e,t);return[r.stridedSlice(f,s,i,a,o,l,u,d,h)]}case"Pack":return le(()=>{const s=N("axis",n,e,t),i=N("tensors",n,e,t),a=i[0].shape,o=r.squeeze(i[0]).shape,l=i.map(u=>{const d=Ft(u.shape,a);if(!d&&!Ft(r.squeeze(u).shape,o))throw new Error("the input tensors shape does not match");return d?u:r.reshape(u,a)});return[r.stack(l,s)]});case"Unpack":{const s=N("axis",n,e,t),i=N("tensor",n,e,t);return r.unstack(i,s)}case"Tile":{const s=N("reps",n,e,t);return[r.tile(N("x",n,e,t),s)]}case"Split":case"SplitV":{const s=N("axis",n,e,t),i=N("numOrSizeSplits",n,e,t),a=N("x",n,e,t);return r.split(a,i,s)}case"ScatterNd":{const s=N("indices",n,e,t),i=N("values",n,e,t),a=N("shape",n,e,t);return[r.scatterND(s,i,a)]}case"GatherNd":{const s=N("x",n,e,t),i=N("indices",n,e,t);return[r.gatherND(s,i)]}case"SparseToDense":{const s=N("sparseIndices",n,e,t),i=N("outputShape",n,e,t),a=N("sparseValues",n,e,t),o=N("defaultValue",n,e,t);return[r.sparseToDense(s,a,i,a.dtype===o.dtype?o:r.cast(o,a.dtype))]}case"TensorScatterUpdate":{const s=N("indices",n,e,t),i=N("values",n,e,t),a=N("tensor",n,e,t);return[r.tensorScatterUpdate(a,s,i)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dwe=(n,e,t,r=Pr)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:i,emptyRowIndicator:a,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(N("indices",n,e,t),N("values",n,e,t),N("denseShape",n,e,t),N("defaultValue",n,e,t));return[s,i,a,o]}case"SparseReshape":{const{outputIndices:s,outputShape:i}=r.sparse.sparseReshape(N("inputIndices",n,e,t),N("inputShape",n,e,t),N("newShape",n,e,t));return[s,i]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(N("data",n,e,t),N("indices",n,e,t),N("segmentIds",n,e,t))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(N("data",n,e,t),N("indices",n,e,t),N("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pwe=(n,e,t,r=Pr)=>{switch(n.op){case"FFT":return[r.fft(N("x",n,e,t))];case"IFFT":return[r.ifft(N("x",n,e,t))];case"RFFT":return[r.rfft(N("x",n,e,t))];case"IRFFT":return[r.irfft(N("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fwe=(n,e,t,r=Pr)=>{switch(n.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(N("input",n,e,t),N("pattern",n,e,t),N("rewrite",n,e,t),N("replaceGlobal",n,e,t))];case"StringNGrams":{const{nGrams:s,nGramsSplits:i}=r.string.stringNGrams(N("data",n,e,t),N("dataSplits",n,e,t),N("separator",n,e,t),N("nGramWidths",n,e,t),N("leftPad",n,e,t),N("rightPad",n,e,t),N("padWidth",n,e,t),N("preserveShortSequences",n,e,t));return[s,i]}case"StringSplit":{const{indices:s,values:i,shape:a}=r.string.stringSplit(N("input",n,e,t),N("delimiter",n,e,t),N("skipEmpty",n,e,t));return[s,i,a]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(N("input",n,e,t),N("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gwe=(n,e,t,r=Pr)=>{switch(n.op){case"Cast":return[r.cast(N("x",n,e,t),N("dtype",n,e,t))];case"ExpandDims":{const s=N("axis",n,e,t);return[r.expandDims(N("x",n,e,t),s)]}case"Squeeze":{const s=N("axis",n,e,t);return[r.squeeze(N("x",n,e,t),s)]}case"Reshape":return[r.reshape(N("x",n,e,t),N("shape",n,e,t))];case"EnsureShape":return[r.ensureShape(N("x",n,e,t),N("shape",n,e,t))];case"MirrorPad":return[r.mirrorPad(N("x",n,e,t),N("padding",n,e,t),N("mode",n,e,t))];case"PadV2":case"Pad":return[r.pad(N("x",n,e,t),N("padding",n,e,t),N("constantValue",n,e,t))];case"SpaceToBatchND":{const s=N("blockShape",n,e,t),i=N("paddings",n,e,t);return[r.spaceToBatchND(N("x",n,e,t),s,i)]}case"BatchToSpaceND":{const s=N("blockShape",n,e,t),i=N("crops",n,e,t);return[r.batchToSpaceND(N("x",n,e,t),s,i)]}case"DepthToSpace":{const s=N("blockSize",n,e,t),i=N("dataFormat",n,e,t).toUpperCase();return[r.depthToSpace(N("x",n,e,t),s,i)]}case"BroadcastTo":return[r.broadcastTo(N("x",n,e,t),N("shape",n,e,t))];case"BroadcastArgs":return[r.broadcastArgs(N("s0",n,e,t),N("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ER(n,e,t,r,s=le){const i=((a,o,l)=>{switch(a.category){case"arithmetic":return s(()=>pwe(a,o,l));case"basic_math":return s(()=>fwe(a,o,l));case"control":return vwe(a,o,l);case"convolution":return s(()=>wwe(a,o,l));case"creation":return s(()=>Swe(a,o,l));case"dynamic":return Twe(a,o,l);case"evaluation":return s(()=>Iwe(a,o,l));case"image":return s(()=>Mwe(a,o,l));case"graph":return s(()=>kwe(a,o,l));case"logical":return s(()=>Nwe(a,o,l));case"matrices":return s(()=>Ewe(a,o,l));case"normalization":return s(()=>Rwe(a,o,l));case"ragged":return s(()=>Lwe(a,o,l));case"reduction":return s(()=>Awe(a,o,l));case"slice_join":return s(()=>zwe(a,o,l));case"sparse":return s(()=>Dwe(a,o,l));case"spectral":return s(()=>Pwe(a,o,l));case"string":return s(()=>Fwe(a,o,l));case"transformation":return s(()=>Gwe(a,o,l));case"hash_table":return _we(a,o,l,r);case"custom":const u=gO(a.op);if(u&&u.customExecutor)return u.customExecutor(new hwe(a,o,l));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return qa(i)?i.then(a=>[].concat(a)):[].concat(i)}class RR{constructor(e={},t={},r={},s={},i){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=r,this.functionMap=s,this.parseNodeNameCache=i,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const r=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(r))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LR(n,e,t,r){const s=new Set,i=[];let a=null,o=null;const l=new Set,u=new Set(Object.keys(n).map(f=>Es(f)[0]));r=r||[];const d=new Set(r.map(f=>Es(f.name)[0])),h=[...e];for(;h.length>0;){const f=h.pop();if((tu(f)||Zwe(f)||Hwe(f))&&a==null&&(a=f,o=a.children.map(m=>m.name).filter(m=>s.has(m))),s.add(f.name),t[f.name]==null&&!u.has(f.name)&&!d.has(f.name)){if(f.inputs.length===0){i.push(f.name);continue}f.inputs.forEach(m=>{l.has(m.name)||(l.add(m.name),h.push(m))})}}return{inputs:n,outputs:e,usedNodes:s,missingInputs:i,dynamicNode:a,syncInputs:o}}function Owe(n,e){const{usedNodes:t,inputs:r}=e,s=Object.keys(r).map(y=>Es(y)[0]).map(y=>n.nodes[y]),i=n.initNodes||[],a=y=>t.has(typeof y=="string"?y:y.name);function o(y){return[...new Map(y.map(v=>[v.name,v])).values()]}const l=o([...s,...n.weights,...i]).filter(a),u=o([...l,...Object.values(n.nodes)]).filter(a),d=new Map(u.map(y=>[y.name,y])),h={};for(const y of u){h[y.name]=h[y.name]||0;for(const v of y.children)a(v)||(h[v.name]=Number.POSITIVE_INFINITY),h[v.name]=(h[v.name]||0)+1}const f=Object.entries(h).filter(([,y])=>y===0).map(([y])=>y),m=[...f];for(;f.length>0;){const y=f.pop(),v=d.get(y);for(const w of v.children.filter(a))--h[w.name]===0&&(m.push(w.name),f.push(w.name))}const x=m.map(y=>d.get(y)),g=Wwe(x,l);return Vwe(g,l),g}function Wwe(n,e){const t=new Map(n.map(i=>[i.name,i])),r=e.map(i=>i.name),s=new Set(r);for(;r.length>0;){const i=r.pop(),a=t.get(i);for(const o of a.children)!t.has(o.name)||s.has(o.name)||(s.add(o.name),r.push(o.name))}return n.filter(i=>s.has(i.name))}class e0 extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function Vwe(n,e){const t=new Map(n.map((o,l)=>[o.name,l])),r=new Set(e.map(o=>o.name)),s=o=>r.has(typeof o=="string"?o:o.name),i=new Set(n.map(o=>o.name)),a=o=>i.has(typeof o=="string"?o:o.name);for(const o of n){for(const l of o.children.filter(a)){if(!t.has(l.name))throw new e0(`Child ${l.name} of node ${o.name} is unreachable.`);if(t.get(o.name)>t.get(l.name))throw new e0(`Node ${o.name} is scheduled to run after its child ${l.name}.`)}if(!s(o))for(const l of o.inputs){if(!t.has(l.name))throw new e0(`Input ${l.name} of node ${o.name} is unreachable.`);if(t.get(l.name)>t.get(o.name))throw new e0(`Node ${o.name} is scheduled to run before its input ${l.name}.`)}}}function $we(n){const e=new Map(n.map((o,l)=>[o.name,l])),t=Number.MAX_SAFE_INTEGER,r=n.map((o,l)=>tu(o)?t:l),s=o=>r[e.get(o.name)]??-1,i=n.map((o,l)=>o.children.map(s).reduce((u,d)=>Math.max(u,d),r[l])),a=new Map;for(let o=0;o<n.length;++o){const l=i[o];if(l===t)continue;const u=n[o],d=n[l];a.has(d.name)||a.set(d.name,[]),a.get(d.name).push(u)}return a}const Bwe=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Xwe=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Uwe=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function tu(n){return Bwe.has(n.op)}function Zwe(n){return Xwe.has(n.op)}function Hwe(n){return Uwe.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H0{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(r=>e[r].map(s=>s.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(r=>{this._functionExecutorMap[r]=new H0(e.functions[r],this)})}getCompilationKey(e,t){const r=e.map(i=>i.name).sort(),s=t.map(i=>i.name).sort();return r.join(this.SEPARATOR)+"--"+s.join(this.SEPARATOR)}compile(e,t){const r=LR(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:i,syncInputs:a}=r;if(i!=null)throw new Error(`This execution contains the node '${i.name}', which has the dynamic op '${i.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){const u=t.map(h=>h.name),d=Object.keys(e);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${d}]. Missing the following inputs: [${s}]`)}const o=Owe(this.graph,r),l=$we(o);return{orderedNodes:o,nodeLiveUntilMap:l}}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return Pn(t),t}cloneTensorList(e){return e?e.map(t=>this.cloneAndKeepTensor(t)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,r])=>[t,this.cloneTensorList(r)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const r=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const s=r.map(f=>this.graph.nodes[Es(f)[0]]),i=t.map(f=>Es(f)[0]),a=new Set(i);let o=i.map(f=>this.graph.nodes[f]);o.length===0&&(o=this._outputs);const l=this.getCompilationKey(s,o);let u=this.compiledMap.get(l);u==null&&(u=this.compile(e,o),this.compiledMap.set(l,u));try{this.keepIntermediateTensors=de().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(f){this.keepIntermediateTensors=!1,console.warn(f.message)}const d={},h={};return le(()=>{const f=new RR(this.weightMap,d,h,this.functionExecutorMap,this.parseNodeNameCache),m=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(v=>{const[w,I]=Es(v,f),T=[];T[I]=e[v],m[w]=T,this.keepIntermediateTensors&&(this.clonedTensorsMap[w]=this.cloneTensorList(T))});const x=this.getFrozenTensorIds(m),{orderedNodes:g,nodeLiveUntilMap:y}=u;for(const v of g){if(m[v.name])continue;const w=ER(v,m,f,this._resourceManager);if(qa(w))throw new Error(`The execution of the op '${v.op}' returned a promise. Please use model.executeAsync() instead.`);m[v.name]=w,this.keepIntermediateTensors&&(this.clonedTensorsMap[v.name]=this.cloneTensorList(w)),this.checkTensorForDisposalWithNodeLiveUntilInfo(v,m,f,x,a,y.get(v.name))}return this.parent==null&&f.dispose(x),t.map(v=>Mr(v,m,f))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(r=>e[r]).map(r=>r.map(s=>s.id)));return new Set(t)}checkTensorForDisposal(e,t,r,s,i,a,o){if(!(tu(t)||a.has(e))){for(const l of r[e])l!=null&&(o[l.id]=(o[l.id]||0)+t.children.length);for(const l of t.inputs){if(tu(l))continue;const u=kR(l.name,r,s);if(u!=null)for(const d of u){if(!d||d.kept||i.has(d.id))continue;const h=o[d.id];h===1?(d.dispose(),delete o[d.id]):h!=null&&o[d.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,r,s,i,a){function o(l){return tu(l)||i.has(l.name)}if(!(tu(e)||a==null))for(const l of a){if(o(l))continue;const u=kR(l.name,t,r);for(const d of u)!d||d.kept||s.has(d.id)||d.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,r=!1,s={},i={}){this.disposeIntermediateTensors(),r||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=de().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(f){this.keepIntermediateTensors=!1,console.warn(f.message)}const a=new RR(this.weightMap,s,i,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,a,t,r),l=t.map(f=>Mr(f,o,a)),u=l.map(f=>f.id),d=Object.keys(e).map(f=>e[f].id),h=new Set([...u,...d,...this.weightIds]);return Object.values(o).forEach(f=>{f.forEach(m=>{m&&!m.isDisposed&&!h.has(m.id)&&m.dispose()})}),this.parent==null&&a.dispose(h),l}async executeFunctionAsync(e,t,r){const s=e.reduce((i,a,o)=>(i[this.inputs[o].name]=a,i),{});return this._executeAsync(s,this.outputNodes,!0,t,r)}async executeWithControlFlow(e,t,r,s){const i=Object.keys(e),a=i.map(T=>this.graph.nodes[Es(T)[0]]),o=r.map(T=>Es(T)[0]),l=new Set(o);let u=o.map(T=>this.graph.nodes[T]);u.length===0&&(u=this._outputs);const{usedNodes:d,missingInputs:h,dynamicNode:f,syncInputs:m}=LR(e,u,this.weightMap,this._initNodes),x=[...a,...this.graph.weights,...this._initNodes||[]].map(T=>({node:T,contexts:t.currentContext})),g=Object.assign({},this.weightMap);Object.keys(e).forEach(T=>{const[C,E]=Es(T),L=[];L[E]=e[T],g[C]=L});const y={},v=this.getFrozenTensorIds(g),w={};for(;x.length>0;){const T=this.processStack(a,x,t,g,w,v,l,y,d);await Promise.all(T)}f==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const I=u.filter(T=>!tu(T)&&!Mr(T.name,g,t)).map(T=>T.name);if(I.length>0){let T="";throw f!=null&&(T=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${m}]`),new Error(`Cannot compute the outputs [${I}] from the provided inputs [${i}]. Consider providing the following inputs: [${h}]. ${T}`)}return g}processStack(e,t,r,s,i,a,o,l,u){const d=[];for(;t.length>0;){const h=t.pop();r.currentContext=h.contexts;let f="";if(h.node.op==="Enter"&&N("isConstant",h.node,s,r)&&([f]=Ua(h.node.name,r)),s[h.node.name]==null){const m=ER(h.node,s,r,this._resourceManager);f||([f]=Ua(h.node.name,r));const x=r.currentContext;qa(m)?d.push(m.then(g=>(s[f]=g,this.keepIntermediateTensors&&(this.clonedTensorsMap[f]=this.cloneTensorList(g)),r.currentContext=x,this.checkTensorForDisposal(f,h.node,s,r,a,o,l),this.processChildNodes(h.node,t,r,s,i,u),g))):(s[f]=m,this.keepIntermediateTensors&&(this.clonedTensorsMap[f]=this.cloneTensorList(m)),this.checkTensorForDisposal(f,h.node,s,r,a,o,l),this.processChildNodes(h.node,t,r,s,i,u))}else this.processChildNodes(h.node,t,r,s,i,u)}return d}processChildNodes(e,t,r,s,i,a){e.children.forEach(o=>{const[l]=Ua(o.name,r);i[l]||!a.has(o.name)||(o.op==="Merge"?o.inputNames.some(u=>!!Mr(u,s,r))&&(i[l]=!0,t.push({contexts:r.currentContext,node:o})):o.inputNames.every(u=>!!Mr(u,s,r))&&(i[l]=!0,t.push({contexts:r.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const r=e[t],[s]=Es(t),i=this.graph.nodes[s];if(i.attrParams.shape&&i.attrParams.shape.value){const a=i.attrParams.shape.value,o=a.length===r.shape.length&&r.shape.every((l,u)=>a[u]===-1||a[u]===l);P(o,()=>`The shape of dict['${i.name}'] provided in model.execute(dict) must be [${a}], but was [${r.shape}]`)}i.attrParams.dtype&&i.attrParams.dtype.value&&P(r.dtype===i.attrParams.dtype.value,()=>`The dtype of dict['${i.name}'] provided in model.execute(dict) must be ${i.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(e){var t,r;const s={};for(const i in e){const a=(r=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||r===void 0?void 0:r[i];a!=null?s[a.name]=e[i]:s[i]=e[i]}return s}checkInputs(e){const t=Object.keys(e).filter(r=>{const[s]=Es(r);return this.graph.nodes[s]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var r,s;const i=(s=(r=this._signature)===null||r===void 0?void 0:r.outputs)===null||s===void 0?void 0:s[t];return i!=null?i.name:t},{})}checkOutputs(e){e.forEach(t=>{const[r]=Es(t);if(!this.graph.nodes[r])throw new Error(`The output '${t}' is not found in the graph`)})}}class Kwe{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ywe="?tfjs-format=file",jwe="model.json";class VC{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},r=DC){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=r,t==null&&(this.loadOptions={}),this.resourceManager=new Kwe}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return qa(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const t=await GL(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const r=this.artifacts.modelTopology;let s=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const i=this.artifacts.userDefinedMetadata;i.signature!=null&&(s=i.signature),i.structuredOutputKeys!=null&&(this.structuredOutputKeys=i.structuredOutputKeys)}if(this.signature=s,this.version=`${r.versions.producer}.${r.versions.minConsumer}`,this.executor=new H0(CR.Instance.transformGraph(r,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const i=CR.Instance.transformGraph(e.modelInitializer);this.initializer=new H0(i),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const r=this.io.getSaveHandlers(e);if(r.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(r.length>1)throw new Error(`Found more than one (${r.length}) save handlers for URL '${e}'`);e=r[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof Ht?[e]:e,r={};return t.forEach((s,i)=>r[this.structuredOutputKeys[i]]=s),r}return e}predict(e,t){const r=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(r)}async predictAsync(e,t){const r=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(r)}normalizeInputs(e){var t;if(!(e instanceof Ht)&&!Array.isArray(e)){const i=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(i!=null)for(const a in i){const o=i[a];o.resourceId!=null&&(e[a]=this.resourceIdToCapturedInput[o.resourceId])}return e}e=Array.isArray(e)?e:[e];const r=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+r!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-r} non-resource placeholders, while there are ${e.length} input tensors provided.`);let s=0;return this.inputNodes.reduce((i,a)=>{var o,l,u;const d=(u=(l=(o=this.signature)===null||o===void 0?void 0:o.inputs)===null||l===void 0?void 0:l[a])===null||u===void 0?void 0:u.resourceId;return d!=null?i[a]=this.resourceIdToCapturedInput[d]:i[a]=e[s++],i},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,r=Object.keys(t);for(let s=0;s<r.length;s++){const i=r[s],a=t[i];this.resourceIdToCapturedInput[a.resourceId]=e[s]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const r=this.executor.execute(e,t);return r.length>1?r:r[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const r=await this.executor.executeAsync(e,t);return r.length>1?r:r[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,r)=>(t[r]=[e[r]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&kt(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Qwe(n,e={},t=DC){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=qwe(n));const r=new VC(n,e,t);return await r.load(),r}function Jwe(n){if(n==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let e;if(n instanceof Array){const[r,s]=n;if(!r)throw new Error("modelJSON must be the first element of the array");if(!s||!(s instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in r))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in r))throw new Error("Model JSON is missing 'weightsManifest'");const i=T0(r.weightsManifest),a=j2(r,i,s);e=U0(a)}else if("load"in n)e=n;else if("modelTopology"in n&&"weightSpecs"in n&&"weightData"in n)e=U0(n);else throw new Error("Unknown model format");const t=new VC(e);return t.load(),t}function qwe(n){return n.endsWith("/")||(n=n+"/"),`${n}${jwe}${Ywe}`}/** @license See the LICENSE file. */const xO="4.16.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class vO extends Rh{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */const t0='"',Op=Symbol("out"),AR=Symbol("field"),n0=Symbol("quote"),vS=Symbol("quoteafterquote"),zR=Symbol("quoteinquote");class wO extends Rh{async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&P(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce((s,i)=>(s[i]=s[i]+1||1,s),{}),r=Object.keys(t).filter(s=>t[s]>1);if(P(r.length===0,()=>"Duplicate column names found: "+r.toString()),this.columnConfigs){for(const s of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(s)===-1)throw new Error('The key "'+s+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");const t=e.value;return this.parseRow(t,!1)}else return null}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new vO(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(P(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){const t=this.parseRow(e),r={},s={};for(let i=0;i<this.fullColumnNames.length;i++){const a=this.fullColumnNames[i],o=this.columnConfigs?this.columnConfigs[a]:null;if(!(this.configuredColumnsOnly&&!o)){const l=t[i];let u=null;if(l==="")if(o&&o.default!==void 0)u=o.default;else{if(o&&(o.required||o.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);u=void 0}else{const d=Number(l);if(isNaN(d))o&&o.dtype==="bool"?u=this.getBoolean(l):u=l;else if(!o||!o.dtype)u=d;else switch(o.dtype){case"float32":u=d;break;case"int32":u=Math.floor(d);break;case"bool":u=this.getBoolean(l);break;default:u=d}}o&&o.isLabel?s[a]=u:r[a]=u}}return Object.keys(s).length===0?r:{xs:r,ys:s}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){const r=[];let s=0;const i=e.length;let a=Op;for(let o=0;o<i;o++)switch(a){case Op:switch(e.charAt(o)){case t0:s=o+1,a=n0;break;case this.delimiter:if(s=o+1,this.delimiter===" "&&this.delimWhitespace)break;r.push(""),a=Op;break;default:a=AR,s=o;break}break;case AR:switch(e.charAt(o)){case this.delimiter:r.push(e.substring(s,o)),a=Op,s=o+1;break}break;case n0:switch(e.charAt(o)){case t0:a=vS;break}break;case vS:switch(e.charAt(o)){case this.delimiter:r.push(e.substring(s,o-1)),a=Op,s=o+1;break;case t0:a=n0;break;default:a=zR;break}break;case zR:switch(e.charAt(o)){case t0:a=n0;break}break}if(a===vS?r.push(e.substring(s,i-1)):r.push(e.substring(s)),t&&r.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${r}`);return r}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class $C extends gr{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!de().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");const t=new $C(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(r){throw new Error(`Error thrown while initializing video stream: ${r.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const r=await this.getAudioData();if(this.includeSpectrogram){const s=this.flattenQueue(r.freqDataQueue);e=this.getTensorFromAudioDataArray(s,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const s=this.flattenQueue(r.timeDataQueue);t=this.getTensorFromAudioDataArray(s,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let r=0;return new Promise(s=>{const i=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++r===this.numFrames&&(clearInterval(i),s({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,r=new Float32Array(e.length*t);return e.forEach((s,i)=>r.set(s,i*t)),r}getTensorFromAudioDataArray(e,t){const r=new Float32Array(be(t));return r.set(e,r.length-e.length),wn(r,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class BC extends gr{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Nr([0],"int32"),this.webcamConfig.centerCrop){const r=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,s=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,i=(1-r)/2,a=(1-s)/2,o=i+r,l=s+a;this.cropBox=qo([a,i,l,o],[1,4])}else this.cropBox=qo([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!de().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const r=new BC(e,t);return await r.start(),r}async start(){this.webcamConfig.facingMode&&P(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=uI(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return le(()=>{const t=Cr(Oe(e,"float32"),0);let r;r=Si.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const s=r.shape;return se(r,s.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class SO{}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class TO extends gr{split(e){return new eSe(this,e)}}class eSe extends TO{constructor(e,t){super(),this.upstream=e,this.impl=new tSe(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class tSe extends aC{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const r of t.slice(0,-1))this.outputQueue.push(r);return this.carryover=t[t.length-1],!0}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class nSe extends gr{decodeUTF8(){return new rSe(this)}}class rSe extends TO{constructor(e){super(),this.upstream=e,this.impl=new sSe(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class sSe extends aC{constructor(e){if(super(),this.upstream=e,de().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=require("string_decoder");this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t;if(e.done)return!1;t=e.value;let r;return de().get("IS_BROWSER")?r=this.decoder.decode(t,{stream:!0}):r=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(r),!0}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class IO extends nSe{constructor(e,t={}){super(),this.file=e,this.options=t,P(e instanceof Uint8Array||(de().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((e,t)=>{const r=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,r)));else{const s=new FileReader;s.onload=a=>{let o=s.result;if(o instanceof ArrayBuffer&&(o=new Uint8Array(o)),!(o instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(o)},s.onabort=a=>t(new Error("Aborted")),s.onerror=a=>t(new Error(a.type));const i=this.file.slice(this.offset,r);s.readAsArrayBuffer(i)}this.offset=r}),done:!1}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */async function iSe(n,e={},t){let r,s;typeof n=="string"?r=n:(r=n.url,s=aSe(n));const i=await ML(r,s);if(i.ok){const a=new Uint8Array(await i.arrayBuffer());return new IO(a,e)}else throw new Error(i.statusText)}const aSe=n=>({method:n.method,headers:n.headers,body:n.body,mode:n.mode,credentials:n.credentials,cache:n.cache,redirect:n.redirect,referrer:n.referrer,integrity:n.integrity});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function kO(n){return typeof n=="string"&&n.slice(0,7)==="file://"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class CO extends SO{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(kO(this.input)&&de().get("IS_NODE")){const e=require("fs");this.input=e.readFileSync(this.input.slice(7))}return new IO(this.input,this.options)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */class _O extends SO{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return kO(this.url)?new CO(this.url,this.fileOptions).iterator():iSe(this.url,this.fileOptions)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */function oSe(n,e={}){return new wO(new _O(n),e)}function lSe(n){const e=iC(n);return Ns(async()=>e)}function uSe(n){return Ns(async()=>{const e=await n();return iC(()=>e.next())})}async function cSe(n,e){return BC.create(n,e)}async function dSe(n){return $C.create(n)}/** @license See the LICENSE file. */const MO="4.16.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hSe=Object.freeze(Object.defineProperty({__proto__:null,CSVDataset:wO,Dataset:Rh,FileDataSource:CO,TextLineDataset:vO,URLDataSource:_O,array:fq,csv:oSe,func:lSe,generator:uSe,microphone:dSe,version_data:MO,webcam:cSe,zip:mq},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. */const NO="4.16.0";/** @license See the LICENSE file. */const EO="4.16.0";/** @license See the LICENSE file. */const pSe="4.16.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fSe={"tfjs-core":lO,"tfjs-backend-cpu":NO,"tfjs-backend-webgl":EO,"tfjs-data":MO,"tfjs-layers":av,"tfjs-converter":xO,tfjs:pSe},mSe=Object.freeze(Object.defineProperty({__proto__:null,Abs:Cf,Acos:Td,Acosh:Id,AdadeltaOptimizer:tI,AdagradOptimizer:nI,AdamOptimizer:rI,AdamaxOptimizer:sI,Add:Vu,AddN:_f,All:nb,Any:rb,ArgMax:Mf,ArgMin:Nf,Asin:kd,Asinh:Cd,Atan:_d,Atan2:Nd,Atanh:Md,AvgPool:Ef,AvgPool3D:Rf,AvgPool3DGrad:ib,AvgPoolGrad:sb,BatchMatMul:Lf,BatchToSpaceND:Af,Bincount:ab,BitwiseAnd:zf,BroadcastArgs:ob,BroadcastTo:mL,Callback:fO,CallbackList:_z,Cast:Ed,Ceil:Rd,ClipByValue:Ld,Complex:lb,ComplexAbs:Df,Concat:Pf,Conv2D:Ff,Conv2DBackpropFilter:ub,Conv2DBackpropInput:Gf,Conv3D:Of,Conv3DBackpropFilterV2:cb,Conv3DBackpropInputV2:db,Cos:Ad,Cosh:zd,CropAndResize:pb,Cumprod:hb,Cumsum:Wf,CustomCallback:Nz,DataStorage:D2,DenseBincount:fb,DepthToSpace:mb,DepthwiseConv2dNative:Vf,DepthwiseConv2dNativeBackpropFilter:gb,DepthwiseConv2dNativeBackpropInput:yb,Diag:bb,Dilation2D:$f,Dilation2DBackpropFilter:b0,Dilation2DBackpropInput:y0,Draw:xb,get ENV(){return W2},EarlyStopping:mO,Einsum:vb,Elu:Pd,EluGrad:wb,Environment:pL,Equal:Bf,Erf:Fd,Exp:Gd,ExpandDims:Xf,Expm1:Od,FFT:Sb,Fill:Tb,FlipLeftRight:Ib,Floor:Wd,FloorDiv:Vd,FromPixels:x0,FusedBatchNorm:Uf,FusedConv2D:sf,FusedDepthwiseConv2D:af,GPGPUContext:c0,GatherNd:kb,GatherV2:Zf,GraphModel:VC,Greater:Hf,GreaterEqual:$d,History:Mz,IFFT:Cb,Identity:Bd,Imag:_b,InputSpec:Qn,IsFinite:Xd,IsInf:Ud,IsNan:Zd,KernelBackend:q0,LRN:em,LRNGrad:Nb,LayerVariable:Tz,LayersModel:Ja,LeakyRelu:Kf,Less:Yf,LessEqual:jf,LinSpace:Mb,Log:Hd,Log1p:Kd,LogSoftmax:gL,LogicalAnd:Qf,LogicalNot:Jf,LogicalOr:qf,LogicalXor:K5,LowerBound:Y5,MathBackendCPU:lg,MathBackendWebGL:hg,MatrixBandPart:j5,Max:tm,MaxPool:nm,MaxPool3D:rm,MaxPool3DGrad:Rb,MaxPoolGrad:Eb,MaxPoolWithArgmax:Lb,Maximum:Yd,Mean:sm,Min:im,Minimum:jd,MirrorPad:am,Mod:Qd,MomentumOptimizer:iI,Multinomial:Ab,Multiply:Jd,Neg:om,NonMaxSuppressionV3:zb,NonMaxSuppressionV4:Db,NonMaxSuppressionV5:Pb,NotEqual:lm,OP_SCOPE_SUFFIX:Z2,OneHot:cm,OnesLike:um,Optimizer:go,OptimizerConstructors:DA,Pack:dm,PadV2:hm,Pool:Q5,Pow:qd,Prelu:pm,Prod:fm,RMSPropOptimizer:aI,RNN:qi,RaggedGather:Fb,RaggedRange:Gb,RaggedTensorToTensor:Ob,Range:Wb,get Rank(){return AS},Real:Vb,RealDiv:Dd,Reciprocal:eh,get Reduction(){return Qr},Relu:th,Relu6:nh,Reshape:mm,ResizeBilinear:ym,ResizeBilinearGrad:Bb,ResizeNearestNeighbor:gm,ResizeNearestNeighborGrad:$b,Reverse:bm,RotateWithOffset:ax,Round:rh,Rsqrt:sh,SGDOptimizer:$x,ScatterNd:Xb,SearchSorted:Zb,Select:xm,Selu:ih,Sequential:ov,Sigmoid:uh,Sign:lh,Sin:ah,Sinh:oh,Slice:vm,Softmax:Im,Softplus:ch,SpaceToBatchND:Sm,SparseFillEmptyRows:Hb,SparseReshape:Kb,SparseSegmentMean:Yb,SparseSegmentSum:jb,SparseToDense:Qb,SplitV:Tm,Sqrt:dh,Square:Jb,SquaredDifference:hh,StaticRegexReplace:km,Step:yh,StridedSlice:qb,StringNGrams:ex,StringSplit:tx,StringToHashBucketFast:nx,Sub:ph,Sum:wm,SymbolicTensor:Hi,Tan:fh,Tanh:mh,Tensor:Ht,TensorBuffer:Jn,TensorScatterUpdate:Ub,Tile:gh,TopK:rx,Transform:sx,Transpose:cu,Unique:ix,Unpack:Cm,UnsortedSegmentSum:_m,UpperBound:J5,Variable:uf,ZerosLike:Mm,_FusedMatMul:rf,abs:Yn,acos:q2,acosh:eT,add:Ne,addN:bG,all:cx,any:df,argMax:Su,argMin:tT,asin:nT,asinh:rT,atan:sT,atan2:iT,atanh:aT,avgPool:Lm,avgPool3d:lT,backend:ga,backend_util:az,basicLSTMCell:xG,batchNorm:bh,batchNorm2d:uT,batchNorm3d:cT,batchNorm4d:dT,batchToSpaceND:Am,bincount:hT,bitwiseAnd:vG,booleanMaskAsync:eO,broadcastArgs:wG,broadcastTo:du,broadcast_util:CK,browser:Oj,buffer:Et,callbacks:I1e,cast:Oe,ceil:pT,clipByValue:ms,clone:wa,complex:no,concat:$n,concat1d:fT,concat2d:mT,concat3d:gT,concat4d:yT,constraints:vxe,conv1d:dx,conv2d:ro,conv2dTranspose:hx,conv3d:xT,conv3dTranspose:vT,copyRegisteredKernels:nZ,cos:zm,cosh:px,cosineWindow:zx,cumprod:ff,cumsum:fx,customGrad:Ca,data:hSe,denseBincount:I0,deprecationWarn:DZ,depthToSpace:wT,depthwiseConv2d:xh,deregisterOp:C1e,device_util:NZ,diag:SG,dilation2d:ST,disableDeprecationWarnings:zZ,dispose:kt,disposeVariables:PZ,div:at,divNoNan:TT,dot:IT,dropout:jT,einsum:Ql,elu:vh,enableDebugMode:AZ,enableProdMode:LZ,enclosingPowerOfTwo:QT,engine:on,ensureShape:TG,env:de,equal:As,erf:kT,euclideanNorm:_T,exp:gs,expandDims:Cr,expm1:MT,eye:mx,fft:Hm,fill:Xu,findBackend:$Z,findBackendFactory:BZ,floor:Sh,floorDiv:ux,forceHalfFloat:LF,fused:aO,gather:Th,gatherND:sO,gather_util:Wj,getBackend:PL,getGradient:ES,getKernel:lf,getKernelsForBackend:v0,gpgpu_util:eoe,grad:l9,grads:u9,greater:ts,greaterEqual:po,ifft:fd,imag:Dm,image:Si,inTopKAsync:iO,initializers:Pxe,input:uO,io:DC,irfft:Mx,isFinite:NT,isInf:ET,isNaN:RT,keep:Pn,kernel_impls:mxe,layers:t1e,leakyRelu:Pm,less:cd,lessEqual:xl,linalg:eI,linspace:IG,loadGraphModel:Qwe,loadGraphModelSync:Jwe,loadLayersModel:CJ,localResponseNormalization:LT,log:zs,log1p:Fm,logSigmoid:AT,logSoftmax:yx,logSumExp:Gm,logicalAnd:Ti,logicalNot:Om,logicalOr:bx,logicalXor:zT,losses:gA,lowerBound:kG,matMul:Lt,math:fxe,max:ni,maxPool:Wm,maxPool3d:DT,maxPoolWithArgmax:CG,maximum:Ma,mean:Mn,memory:S0,meshgrid:_G,metrics:y1e,min:ud,minimum:ll,mirrorPad:PT,mod:FT,model:Fxe,models:b1e,moments:Vm,movingAverage:tO,mul:ne,multiRNNCell:MG,multinomial:NG,neg:dn,nextFrame:Ym,norm:wh,notEqual:Cu,oneHot:dd,ones:ds,onesLike:Ds,op:ee,outerProduct:EG,pad:fo,pad1d:RG,pad2d:LG,pad3d:AG,pad4d:zG,pool:GT,pow:so,prelu:Bm,print:J2,prod:OT,profile:FZ,raggedGather:DG,raggedRange:PG,raggedTensorToTensor:FG,rand:GG,randomGamma:VG,randomNormal:xx,randomStandardNormal:$G,randomUniform:vl,randomUniformInt:BG,range:_u,ready:WZ,real:hd,reciprocal:VT,registerBackend:H2,registerCallbackConstructor:Oxe,registerGradient:yL,registerKernel:xs,registerOp:k1e,regularizers:S1e,relu:Qi,relu6:vx,removeBackend:VZ,reshape:se,reverse:ri,reverse1d:XG,reverse2d:UG,reverse3d:ZG,reverse4d:HG,rfft:Km,round:wx,rsqrt:Sx,scalar:ct,scatterND:nO,scatter_util:z6,searchSorted:Sv,selu:Tx,separableConv2d:Ix,sequential:Gxe,serialization:Ij,setBackend:OZ,setPlatform:XZ,setWebGLContext:DP,setdiff1dAsync:KG,shared:bP,sigmoid:$i,sign:$T,signal:mA,sin:kx,sinh:Cx,slice:$t,slice1d:Xm,slice2d:_x,slice3d:Um,slice4d:pd,slice_util:zA,softmax:Zm,softplus:Uu,spaceToBatchND:$m,sparse:yA,sparseToDense:rO,spectral:fA,split:hs,sqrt:Rr,square:nn,squaredDifference:Nx,squeeze:wl,stack:Wr,step:Hu,stridedSlice:BT,string:bA,sub:Ye,sum:Qe,sumOutType:ox,tan:XT,tanh:Iu,tensor:wn,tensor1d:Nr,tensor2d:qo,tensor3d:UT,tensor4d:YG,tensor5d:jG,tensor6d:QG,tensorScatterUpdate:JG,tensor_util:IZ,test_util:Dbe,tidy:le,tile:Ys,time:GZ,topk:HT,train:Kl,transpose:Gt,truncatedNormal:Rx,unique:KT,unregisterGradient:tZ,unregisterKernel:eZ,unsortedSegmentSum:Lx,unstack:si,upcastType:ps,upperBound:qG,util:hZ,valueAndGrad:c9,valueAndGrads:d9,variable:YT,variableGrads:qL,version:fSe,version_converter:xO,version_core:lO,version_cpu:NO,version_layers:av,version_webgl:EO,webgl:xle,webgl_util:aae,where:hr,whereAsync:zC,zeros:jn,zerosLike:Bt},Symbol.toStringTag,{value:"Module"})),RO=new Fn;RO.compose(new we,new fl,new we(.001,.001,.001));const gSe=new Fn().set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1);class LO{constructor({container:e,imageTargetSrc:t,maxTrack:r,uiLoading:s="yes",uiScanning:i="yes",uiError:a="yes",filterMinCF:o=null,filterBeta:l=null,warmupTolerance:u=null,missTolerance:d=null,userDeviceId:h=null,environmentDeviceId:f=null}){this.container=e,this.imageTargetSrc=t,this.maxTrack=r,this.filterMinCF=o,this.filterBeta=l,this.warmupTolerance=u,this.missTolerance=d,this.ui=new A5({uiLoading:s,uiScanning:i,uiError:a}),this.userDeviceId=h,this.environmentDeviceId=f,this.shouldFaceUser=!1,this.scene=new PE,this.cssScene=new PE,this.renderer=new A2({antialias:!0,alpha:!0}),this.cssRenderer=new abe({antialias:!0}),this.renderer.outputEncoding=fn,this.renderer.setPixelRatio(window.devicePixelRatio),this.camera=new bi,this.anchors=[],this.renderer.domElement.style.position="absolute",this.cssRenderer.domElement.style.position="absolute",this.container.appendChild(this.renderer.domElement),this.container.appendChild(this.cssRenderer.domElement),window.addEventListener("resize",this.resize.bind(this))}async start(){this.ui.showLoading(),await this._startVideo(),await this._startAR()}stop(){this.controller.stopProcessVideo(),this.video.srcObject.getTracks().forEach(function(e){e.stop()}),this.video.remove()}switchCamera(){this.shouldFaceUser=!this.shouldFaceUser,this.stop(),this.start()}addAnchor(e){const t=new Hc;t.visible=!1,t.matrixAutoUpdate=!1;const r={group:t,targetIndex:e,onTargetFound:null,onTargetLost:null,onTargetUpdate:null,css:!1,visible:!1};return this.anchors.push(r),this.scene.add(t),r}addCSSAnchor(e){const t=new Hc;t.visible=!1,t.matrixAutoUpdate=!1;const r={group:t,targetIndex:e,onTargetFound:null,onTargetLost:null,onTargetUpdate:null,css:!0,visible:!1};return this.anchors.push(r),this.cssScene.add(t),r}_startVideo(){return new Promise((e,t)=>{if(this.video=document.createElement("video"),this.video.setAttribute("autoplay",""),this.video.setAttribute("muted",""),this.video.setAttribute("playsinline",""),this.video.style.position="absolute",this.video.style.top="0px",this.video.style.left="0px",this.video.style.zIndex="-2",this.container.appendChild(this.video),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia){this.ui.showCompatibility(),t();return}const r={audio:!1,video:{}};this.shouldFaceUser?this.userDeviceId?r.video.deviceId={exact:this.userDeviceId}:r.video.facingMode="user":this.environmentDeviceId?r.video.deviceId={exact:this.environmentDeviceId}:r.video.facingMode="environment",navigator.mediaDevices.getUserMedia(r).then(s=>{this.video.addEventListener("loadedmetadata",()=>{this.video.setAttribute("width",this.video.videoWidth),this.video.setAttribute("height",this.video.videoHeight),e()}),this.video.srcObject=s}).catch(s=>{console.log("getUserMedia error",s),t()})})}_startAR(){return new Promise(async(e,t)=>{const r=this.video;this.container,this.controller=new rbe({inputWidth:r.videoWidth,inputHeight:r.videoHeight,filterMinCF:this.filterMinCF,filterBeta:this.filterBeta,warmupTolerance:this.warmupTolerance,missTolerance:this.missTolerance,maxTrack:this.maxTrack,onUpdate:i=>{if(i.type==="updateMatrix"){const{targetIndex:a,worldMatrix:o}=i;for(let l=0;l<this.anchors.length;l++)if(this.anchors[l].targetIndex===a){if(this.anchors[l].css?this.anchors[l].group.children.forEach(u=>{u.element.style.visibility=o===null?"hidden":"visible"}):this.anchors[l].group.visible=o!==null,o!==null){let u=new Fn;u.elements=[...o],u.multiply(this.postMatrixs[a]),this.anchors[l].css&&u.multiply(RO),this.anchors[l].group.matrix=u}else this.anchors[l].group.matrix=gSe;this.anchors[l].visible&&o===null&&(this.anchors[l].visible=!1,this.anchors[l].onTargetLost&&this.anchors[l].onTargetLost()),!this.anchors[l].visible&&o!==null&&(this.anchors[l].visible=!0,this.anchors[l].onTargetFound&&this.anchors[l].onTargetFound()),this.anchors[l].onTargetUpdate&&this.anchors[l].onTargetUpdate()}this.anchors.reduce((l,u)=>l||u.visible,!1)?this.ui.hideScanning():this.ui.showScanning()}}}),this.resize();const{dimensions:s}=await this.controller.addImageTargets(this.imageTargetSrc);this.postMatrixs=[];for(let i=0;i<s.length;i++){const a=new we,o=new fl,l=new we,[u,d]=s[i];a.x=u/2,a.y=u/2+(d-u)/2,l.x=u,l.y=u,l.z=u;const h=new Fn;h.compose(a,o,l),this.postMatrixs.push(h)}await this.controller.dummyRun(this.video),this.ui.hideLoading(),this.ui.showScanning(),this.controller.processVideo(this.video),e()})}resize(){const{renderer:e,cssRenderer:t,camera:r,container:s,video:i}=this;if(!i)return;this.video.setAttribute("width",this.video.videoWidth),this.video.setAttribute("height",this.video.videoHeight);let a,o;const l=i.videoWidth/i.videoHeight,u=s.clientWidth/s.clientHeight;l>u?(o=s.clientHeight,a=o*l):(a=s.clientWidth,o=a/l);const d=this.controller.getProjectionMatrix(),h=this.controller.inputWidth/this.controller.inputHeight;let f;h>u?f=this.video.width/this.controller.inputWidth:f=this.video.height/this.controller.inputHeight;let m,x;h>u?(m=s.clientHeight,m*=f):(x=s.clientWidth,m=x/this.controller.inputWidth*this.controller.inputHeight,m*=f);let g=s.clientHeight/m;const y=2*Math.atan(1/d[5]*g)*180/Math.PI,v=d[14]/(d[10]-1),w=d[14]/(d[10]+1);d[5]/d[0],r.fov=y,r.near=v,r.far=w,r.aspect=s.clientWidth/s.clientHeight,r.updateProjectionMatrix(),i.style.top=-(o-s.clientHeight)/2+"px",i.style.left=-(a-s.clientWidth)/2+"px",i.style.width=a+"px",i.style.height=o+"px";const I=e.domElement,T=t.domElement;I.style.position="absolute",I.style.left=0,I.style.top=0,I.style.width=s.clientWidth+"px",I.style.height=s.clientHeight+"px",T.style.position="absolute",T.style.left=0,T.style.top=0,T.style.width=s.clientWidth+"px",T.style.height=s.clientHeight+"px",e.setSize(s.clientWidth,s.clientHeight),t.setSize(s.clientWidth,s.clientHeight)}}window.MINDAR||(window.MINDAR={});window.MINDAR.IMAGE||(window.MINDAR.IMAGE={});window.MINDAR.IMAGE.MindARThree=LO;window.MINDAR.IMAGE.tf=mSe;const ySe=()=>{const n=wS.useRef(null);return wS.useEffect(()=>{const e=new LO({container:n.current,maxTrack:1,imageTargetSrc:"/targets.mind"}),{renderer:t,scene:r,camera:s}=e,i=e.addAnchor(0),a=new Q0(1,.55),o=new R2({color:65535,transparent:!0,opacity:.5}),l=new ja(a,o);return i.group.add(l),e.start(),t.setAnimationLoop(()=>{t.render(r,s)}),()=>{t.setAnimationLoop(null),e.stop()}},[]),Qp.jsx("div",{style:{width:"100%",height:"100%"},ref:n})};function bSe(){const[n,e]=wS.useState(null);return Qp.jsx("div",{className:"App",children:Qp.jsx("div",{className:"container",children:Qp.jsx(ySe,{})})})}const xSe=document.getElementById("root"),vSe=SV.createRoot(xSe);vSe.render(Qp.jsx(bSe,{}));
